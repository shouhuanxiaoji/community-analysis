{"go": [{"commit_oid": "cbd86285d2592a1d1d3915b75a14d54d3b241bb1", "commit_date": "2023-09-27T00:43:50Z", "commit_message": "Merge release-20230920.0-23-g759466750 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7594667507d7114e142d8c19810cbfe53088be46", "commit_date": "2023-09-27T00:35:33Z", "commit_message": "Internal change.\n\nPiperOrigin-RevId: 568695436", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4af66e670562801ebbb7ecd8ae5b387c4f27e3bb", "commit_date": "2023-09-26T03:00:33Z", "commit_message": "Merge release-20230920.0-22-g485de2f6a (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "485de2f6a71bace2eca4b9cc9268ad00f167f409", "commit_date": "2023-09-26T02:53:38Z", "commit_message": "test/syscalls: run tests in the single thread mode\n\nIt allows us to avoid side effects on forking new processes.\n\nPiperOrigin-RevId: 568391853", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fd6ec8f5963051f1c958d17632bdd1b0f9599d3", "commit_date": "2023-09-23T07:54:56Z", "commit_message": "Merge release-20230920.0-21-ge81e0c72a (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e81e0c72a70b0ffe31dba1e5b5b3a12e18f21cad", "commit_date": "2023-09-23T07:47:37Z", "commit_message": "Add NV_MEMORY_FABRIC to nvproxy.\n\nFixes #9372\n\nPiperOrigin-RevId: 567816690", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d73e1ef579b4d232a17de43c5130262788ab73c2", "commit_date": "2023-09-23T02:57:26Z", "commit_message": "Merge release-20230920.0-20-gb5dea0ea0 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5dea0ea0972850900b47f63655a3c0f7e033a6d", "commit_date": "2023-09-23T02:51:10Z", "commit_message": "bazel: update bazel_gazelle to v0.33.0\n\nThis has to fix the error:\nexternal/bazel_gazelle/repo/BUILD.bazel:3:11:\n  no such package '@org_golang_x_tools//go/vcs\n\nPiperOrigin-RevId: 567774709", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3f36d574a7fc27631d1f41dd694abfe997f6b75", "commit_date": "2023-09-22T20:43:49Z", "commit_message": "Merge release-20230920.0-19-g853c80007 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "853c80007fc42ee037da7901b227ad9732d2a322", "commit_date": "2023-09-22T20:38:04Z", "commit_message": "Add library to benchmark gVisor's `seccomp-bpf` filters.\n\nThe first step to optimizing something is to measure it.\n\nThis creates a `secbench` library which can benchmark the time it takes to\nrun an application \"Profile\", which is a weighted-random set of syscall\nsequences, under a given `seccomp-bpf` filter.\n\nThe `secbench` library runs two subprocesses which run the same set of system\ncalls using this application profile. One of the subprocesses runs with the\nseccomp-bpf filter, and the other one runs without it. The library computes\nthe difference, and reports this duration as the time it takes to run the\nseccomp-bpf filter for that system call. It also reports the overall time it\ntakes to run the weighted-random set of system calls, useful as a general\nmeasure of the overhead that the application will see.\n\nPiperOrigin-RevId: 567704927", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "26f5f0232cf38370ce4b93c8dd7aaa6a42b545b4", "commit_date": "2023-09-22T19:12:04Z", "commit_message": "Merge release-20230920.0-18-g81b7b4aa1 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81b7b4aa14c2f425ce1885aa8185a1f34bbdfd24", "commit_date": "2023-09-22T19:05:49Z", "commit_message": "Merge pull request #9416 from avagin:bazel-update\n\nPiperOrigin-RevId: 567682759", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0752759e7e4c675359b9fd1f23a37217823c3b5", "commit_date": "2023-09-22T17:54:30Z", "commit_message": "Merge release-20230920.0-16-gde5271b36 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de5271b36007f28f113db82b16d03cdb7efa0e5e", "commit_date": "2023-09-22T17:48:35Z", "commit_message": "Fix small data race in mount.\n\nReported-by: syzbot+eaf165c341800b20949c@syzkaller.appspotmail.com\nPiperOrigin-RevId: 567662206", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "569768c28f5832283d51e546d60d911ae15f908e", "commit_date": "2023-09-22T17:43:30Z", "commit_message": "Merge release-20230920.0-15-ga277f53f2 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a277f53f250910d23534a3fc4401840008296f4d", "commit_date": "2023-09-22T17:35:43Z", "commit_message": "Fix atomicOTrunc implementation in fusefs.\n\nIf FUSE connection does not support atomic O_TRUNC and application calls\nopen(O_TRUNC), FUSE should truncate the file *first* (without a file handle)\nand then subsequently open the file with O_TRUNC filtered out.\n\nWe were truncating the file after open(). There were 2 issues with it:\n1. We were using the inode's file handle, which may be invalid at this point\n   because it is donated to the first FD (to save an open(2) RPC I believe)\n   and that FD can close it.\n2. The truncate() was being done with fhOptions.useFh = true. However,\n   sometimes the file handle might be read-only causing truncate to fail.\n\nFixed both issues by moving the truncate above open() and making it not use any\nfile handles.\n\nPiperOrigin-RevId: 567658664", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9794276875d1e8ebadfb6d97760c2847e36ef7b0", "commit_date": "2023-09-22T05:33:21Z", "commit_message": "bazel: update golang to 1.21.1\n\nand update a few other packages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dee5570e44bd10a007c7322b3402e721c7acac79", "commit_date": "2023-09-22T02:01:08Z", "commit_message": "Merge release-20230920.0-14-g19250b87e (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19250b87ede7311b70238dcd7329e3096a1b49d5", "commit_date": "2023-09-22T01:54:59Z", "commit_message": "Use the last NVIDIA_VISIBLE_DEVICES value from spec.\n\nAs described in #9401, we should use the last value of NVIDIA_VISIBLE_DEVICES\nfrom the container spec to emulate nvidia-container-runtime-hook correctly.\n\nFixes #9401\n\nPiperOrigin-RevId: 567480580", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58fd67408c42a9c437fa8a5fba1fdfccfbb6dab2", "commit_date": "2023-09-22T01:35:21Z", "commit_message": "Merge release-20230920.0-13-gfcacbf17c (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcacbf17c6171bcc3d406bb378b95b7c18dc82ce", "commit_date": "2023-09-22T01:29:12Z", "commit_message": "buildkite: build arm64 docker images on arm64 agents\n\nPiperOrigin-RevId: 567476463", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6917e2906c4ad3b987be2345296f289b672fbdf4", "commit_date": "2023-09-21T23:13:32Z", "commit_message": "Merge release-20230920.0-12-g05b7c55c1 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05b7c55c13204f3a3b42ccf17e8252015b40353d", "commit_date": "2023-09-21T23:07:04Z", "commit_message": "Do not interpret GPU index as GPU device minor.\n\nThere are 3 ways to identify a GPU device that are relevant:\n1. GPU Index: This is the index of the GPU in PCIe ordering.\n2. GPU Device Minor: This is the minor device number. The GPU device number\n   on the system is 195:minor.\n3. /dev/nvidia#: The GPU can be accessed via the device mounted at this path.\n\nnvproxy incorrectly assumed that all 3 identifiers are the same. In reality,\nonly (2) and (3) are always the same. (1) can differ, as demonstrated in #9389.\n\nSo passthrough the value of `NVIDIA_VISIBLE_DEVICES` to `nvidia-container-cli`\nwhile invoking the `configure` command via the `--devices` flag. The CLI uses\nNVML to figure out the GPU Index -> GPU Device mapping and mounts the right\ndevices into the containers root filesystem at /container/rootfs/dev/. We\nsubsequently scan this directory to *infer* the GPU devices exposed to the\ncontainer. This information in plumbed through various places and appropriate\nvirtualized gVisor devices are created.\n\nAn unintended benefit of this is that identifying GPUs via GPU UUIDs now works!\nEarlier we only accepted GPU index. Now we can just pass through GPU UUID to\nthe CLI and it will deal with it. So `docker run --gpus=\"device=GPU-4e716e7d\"\nworks now.\n\nAlternatives considered:\n1. Parsing `nvidia-container-cli info` output to figure out index -> minor\n   mapping. However, this is a costly operation (as reported in #9215) which\n   can take 2-3 seconds.\n2. Using NVML in runsc via nvidia/go-nvml library. Apart from the downsides of\n   adding another third party dependency, this entails that we duplicate logic\n   from nvidia-container-cli into runsc (mainly logic around\n   src/cli/common.c:select_devices()). This is technical debt and won't age\n   well (will require us to mimic updates to CLI into runsc).\n\nFixes #9389\n\nPiperOrigin-RevId: 567443164", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4236a15a8922131c732f70eecc146318be8ec471", "commit_date": "2023-09-21T18:48:20Z", "commit_message": "Merge release-20230920.0-11-gae1294b43 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae1294b4358c10e453b792db1747233abbe6169c", "commit_date": "2023-09-21T18:42:16Z", "commit_message": "Internal change.\n\nPiperOrigin-RevId: 567370524", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "091affd00ec935611c2beef81e8f27ccd6cf7b1f", "commit_date": "2023-09-21T17:41:18Z", "commit_message": "Merge release-20230920.0-10-gf744f443d (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f744f443dd7d24ad675fa5c82f3998e624d696fd", "commit_date": "2023-09-21T17:34:27Z", "commit_message": "Check before attempting to mount an anon mountpoint.\n\nReported-by: syzbot+9575c881cd3f35eea483@syzkaller.appspotmail.com\nPiperOrigin-RevId: 567349098", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5048607510369e4b0c324515d20c64c1f2836222", "commit_date": "2023-09-21T17:30:23Z", "commit_message": "Merge release-20230920.0-9-g97f276fb2 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97f276fb2aecc8975634234ca9b11cf2f0e1e479", "commit_date": "2023-09-21T17:23:03Z", "commit_message": "Merge pull request #9409 from btw616:misc-cleanups\n\nPiperOrigin-RevId: 567345635", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c321a39b9b506be679db586f01fd48c0d9cc01d", "commit_date": "2023-09-21T17:13:31Z", "commit_message": "Merge release-20230920.0-7-g222147462 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "222147462633e9ef5a34af89d5cc6050c81b0367", "commit_date": "2023-09-21T17:06:10Z", "commit_message": "Merge pull request #9406 from avagin:systrap-pdeathsig\n\nPiperOrigin-RevId: 567339130", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "944d4185e4bdc4f07a255bc848c66d00f9da1938", "commit_date": "2023-09-21T05:23:40Z", "commit_message": "Minor filesystem cleanups\n\n- Update the remaining platform.File references in comments and\n  documentation. platform.File has been moved in memmap by commit\n  f347a578b79c (\"Move platform.File in memmap\").\n\n- Remove redundant bit operations in statTo in tmpfs. STATX_SIZE and\n  STATX_BLOCKS has been set at the beginning of the function, there\n  is no need to do it again for regular files.\n\n- Change \"\\tmp\" to \"/tmp\" in pathname, as '\\' is not a valid path\n  delimiter in Linux. \"/tmp\" looks better.\n\nSigned-off-by: Tiwei Bie <tiwei.btw@antgroup.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "814eaf3b77ef695ffd00b83a9db7e1ae6d494d1e", "commit_date": "2023-09-21T03:19:36Z", "commit_message": "systrap: set PDEATHSIG right after forking a sysmsg thread\n\ncontainer_test:TestGoferExits fails by timeout, because there are some\nsysmsg threads survived sandbox process death. When we fork a new sysmsg\nthread, it is traced with PTRACE_O_EXITKILL, so we need to set PDEATHSIG\nbefore detaching from it.\n\nSigned-off-by: Andrei Vagin <avagin@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b989e75563d637d5cf26c9a23297da5fc753972", "commit_date": "2023-09-20T20:14:43Z", "commit_message": "Merge release-20230911.0-35-g1531147bf (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1531147bf2e9b63f9bb068d808582c1ab5cc022d", "commit_date": "2023-09-20T20:06:08Z", "commit_message": "Automated rollback of changelist 564000728\n\nPiperOrigin-RevId: 567054388", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c8e91d04c692978b50c1bad48f7c41193fa0922", "commit_date": "2023-09-20T19:58:03Z", "commit_message": "fs/overlay: create the \"work\" directory in `workdir`\n\nLinux creates the \"work\" directory in `workdir`.  Docker calls chown on it and\nfails if it doesn't exist.\n\nPiperOrigin-RevId: 567053404", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02f70b5df083b640c427290ba2229bcdfe486ad9", "commit_date": "2023-09-20T19:38:39Z", "commit_message": "Implement a subset of `keyctl(2)` and `keyrings(7)` for better Docker support.\n\nThe intention of this change is to cover a sufficient surface to accommodate\nthe use of running Docker within gVisor, rather than a full implementation.\n\nThis implements the following features:\n\n  - Keys as a first-class concept in the kernel.\n  - Tracking keys in user namespaces.\n  - Task session keyrings: possession, inheritance.\n  - Key permission enforcement.\n  - The following `keyctl(2)` operations:\n    - `KEYCTL_GET_KEYRING_ID`\n    - `KEYCTL_DESCRIBE`\n    - `KEYCTL_JOIN_SESSION_KEYRING`\n    - `KEYCTL_SETPERM`\n\nNotably, this does not implement:\n\n  - The ability to actually add any keys other than the session keyring\n    (which does not hold any cryptographic key data).\n  - Other special keyrings (thread keyring, process keyring, user session\n    keyring, etc.).\n  - Lots of `keyctl(2)` operations.\n  - Key expiration.\n  - Key garbage collection. Keys live until their user namespace is destroyed.\n    However, each user namespace is limited to 200 keys, so memory growth is\n    bounded.\n  - `add_key(2)`\n  - `request_key(2)`\n\n... However, this makes design choices that seem odd given the limited scope\nof this change, but make sense when taking into account the desire to\neventually accommodate them in the future. For example, there are many\n`switch` statements with only one option for session keyrings, which would get\nmore options when adding support for other special keyrings. Similarly, the\nsignature of `PossessedKeys` takes in all 3 special \"possessed\" keyrings, but\ncurrently only ever gets the session keyring as non-nil.\n\nPiperOrigin-RevId: 567047896", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81501c53f20f2848fb621e53bba13ed94647f0f2", "commit_date": "2023-09-20T18:48:32Z", "commit_message": "Merge release-20230911.0-32-g81a42184e (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81a42184e191be69f1624ee3481e66049e40da12", "commit_date": "2023-09-20T18:41:32Z", "commit_message": "Reorder nvidia driver versions.\n\nPiperOrigin-RevId: 567031594", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "389daffb176d580df557b81922ce1a55c9074ac7", "commit_date": "2023-09-20T17:47:54Z", "commit_message": "Merge release-20230911.0-31-g539a8464f (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "539a8464f35e16892b31df860fc9c2a798af68d1", "commit_date": "2023-09-20T17:39:20Z", "commit_message": "Qualify NVIDIA 525.125.06 driver version.\n\nDriver version has been qualified on GKE w/ nvidia's basic workload\nand pytorch benchmarks.\n\nPiperOrigin-RevId: 567009651", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cd842b20a3ce91952f85c4ef6910b0e87917c65", "commit_date": "2023-09-19T21:51:59Z", "commit_message": "Automated rollback of changelist 557941259\n\nPiperOrigin-RevId: 566749598", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "695b3a098fd7d7164bcb60b5f770880074d8b037", "commit_date": "2023-09-19T21:18:25Z", "commit_message": "Merge release-20230911.0-29-g640ec03f9 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "640ec03f92ade885c2ee3b4829039dd08f9adf43", "commit_date": "2023-09-19T21:10:52Z", "commit_message": "Fix mount table corruption.\n\nBefore this, mount propagation could cause multiple mounts to have the same\nparent and mountpoint, violating the mountTable contract. Now, when there's\nan existing mount at a propagation point, it's added as a child of the new\nmount.\n\nPiperOrigin-RevId: 566738099", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "949461f2b3624329b4c02744e10c631dabd53eaa", "commit_date": "2023-09-19T20:46:56Z", "commit_message": "Automated rollback of changelist 558922801\n\nPiperOrigin-RevId: 566731014", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f33fedcb2433bea6946aa5f2e7a2efda2f25073", "commit_date": "2023-09-19T19:44:41Z", "commit_message": "Merge release-20230911.0-27-g181a57866 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "181a57866ad0fab5f50e139e789a19314e7e8eaa", "commit_date": "2023-09-19T19:37:33Z", "commit_message": "Add ABI for `keyctl(2)`.\n\nPiperOrigin-RevId: 566711348", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "632a294533dc2738f9236e742a01a7f98c3416be", "commit_date": "2023-09-19T19:23:16Z", "commit_message": "Merge release-20230911.0-26-g50c62321f (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50c62321fdd077c3cad9c420cf2776047ffa89a7", "commit_date": "2023-09-19T19:14:19Z", "commit_message": "KVM: Remove `_` prefix from KVM `ioctl` constants.\n\nThis is useful to be able to refer to them from external packages, such as\nto represent the `ioctl(2)` syscall profile that the Sentry has with the\nKVM platform.\n\nPiperOrigin-RevId: 566705114", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a6c1a4836dc8eeae0d6af49697c9b4c60f85a8b", "commit_date": "2023-09-19T17:54:50Z", "commit_message": "Merge release-20230911.0-25-g8675708cb (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8675708cb8356da419398863e9f997b5cc437bf0", "commit_date": "2023-09-19T17:48:35Z", "commit_message": "Handle arbitrarily large Fuse Dirent Namelen.\n\nIf FUSEDirent.Namelen is larger than the remaining payload size, then the\ndirent is probably invalid. We should skip it.\n\nPiperOrigin-RevId: 566678679", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efe7002330bf54061d3a37b6f6e964ddeadec2aa", "commit_date": "2023-09-18T23:53:58Z", "commit_message": "Merge release-20230911.0-24-g8a7617aed (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a7617aed21c3d17d8a2570d7e22cf27c2692e17", "commit_date": "2023-09-18T23:46:52Z", "commit_message": "Move pytorch benchmark to GPU directory.\n\nThe pytorch image is huge, about 7-8 GB. This doesn't\nneed to be downloaded with the other benchmark images. Move\nit to a GPU directory to speed up benchmark runs.\n\nPiperOrigin-RevId: 566449296", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d82564559dbee358a616c2bcb4bf35ec12466bc", "commit_date": "2023-09-16T03:08:46Z", "commit_message": "Merge release-20230911.0-23-g313485846 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "313485846896a73bb39d985a221b1aa46e85dc8a", "commit_date": "2023-09-16T03:02:41Z", "commit_message": "Tweaks to containerd tests and helpers.\n\nPiperOrigin-RevId: 565839195", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d28da73838c16a0fd53cadba2a6cd3c8662a021", "commit_date": "2023-09-16T02:50:39Z", "commit_message": "Merge release-20230911.0-22-gd81768d4c (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d81768d4c8d29d2a2e0880f615d04e1dd79c88c7", "commit_date": "2023-09-16T02:44:22Z", "commit_message": "Remove peer credential check from control server.\n\nThe peer credential check worked by querying the peer's UID using SO_PEERCRED.\nHowever, when sandbox is configured with custom UID/GID mappings, which it is\nin the following situations:\n1. When not using directfs, sandbox has a mapping of only `65534:65534:1`. So\n   all other non-65534 UIDs are unmmaped.\n2. When using directfs with userns-remap. The sandbox has the same UID/GID\n   mapping as the container.\n\nIn these cases, when the root user tries to connect, the host root user is not\nmapped. Unmapped IDs are translated to overflowuid/gid, which happens to\ndefault to 65534. This leads to unexpected results:\n- Without directfs, this check allows any connection, because sandbox is also\n  running as nobody/65534.\n- In the directfs+userns-remap case, all connections are denied.\n\nThis check doesn't really enforce anything. Hence remove it.\n\nThe real enforcement mechanism is the file mode of the unix domain socket over\nwhich the connection happens. The socket file's mode depends on umask, which\ndefaults to 022. Hence only the user which creates the sandbox via\n`runsc create` has write permission on this socket. So only the sandbox creator\nor root can connect to the sandbox, as intended.\n\nFixes #9356\n\nPiperOrigin-RevId: 565836818", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a94b6899cabf41757a09ec1297380a82e44ad46a", "commit_date": "2023-09-15T22:04:26Z", "commit_message": "Merge release-20230911.0-21-g5ff1e9081 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ff1e908156acadf98e2473c349f879ff54ec7e7", "commit_date": "2023-09-15T21:58:29Z", "commit_message": "Add state:\"nosave\" annotation to nvproxy.objsMu.\n\nWith this, checkpoint command succeeds on nvproxy containers.\n\nUpdates #9363.\n\nPiperOrigin-RevId: 565786118", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b426f638bee8250c0a668a1f92f910c4f2fa9526", "commit_date": "2023-09-15T20:19:33Z", "commit_message": "Merge release-20230911.0-20-g36b9b19da (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36b9b19daca9e7d723388132e787e3010aa30711", "commit_date": "2023-09-15T20:13:26Z", "commit_message": "Do not use abstract sockets for control server.\n\nAny user can connect to an abstract socket. See \"Abstract sockets\" section in\nunix(7). Filesystem UDS requires write permission to connect to. Hence, file\nmode is used to protect the server.\n\nPiperOrigin-RevId: 565759783", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c40c16ba80e487c1fc6d24f539f33b902e8aca4", "commit_date": "2023-09-15T18:41:00Z", "commit_message": "Exempt proposal issues from being closed as stale.\n\nProposals usually have more longevity and contain interesting ideas.\nAlso clean up \"new feature\" and \"enhancement\" from the list. Those labels don't\nexist in gVisor repo.\n\nPiperOrigin-RevId: 565735357", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54edcff35d005f923aad9056fdf1cf8786f6d4b8", "commit_date": "2023-09-15T18:27:38Z", "commit_message": "Merge release-20230911.0-18-gd353f07ba (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d353f07ba5bb62d0b58ba741e3f6d88774c35a79", "commit_date": "2023-09-15T18:19:57Z", "commit_message": "Merge pull request #9381 from testwill:typo\n\nPiperOrigin-RevId: 565729064", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a99bf4a8ad59d17cd039837dc5da2f88f86cd50c", "commit_date": "2023-09-15T06:47:10Z", "commit_message": "fix: successfully typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1957b1fe2c21aba771f3871fc2bfc73d0ed416d9", "commit_date": "2023-09-15T04:02:06Z", "commit_message": "Merge release-20230911.0-16-gb192bf373 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b192bf37363f5ad18a533cb19448a32326613316", "commit_date": "2023-09-15T03:56:26Z", "commit_message": "Handle large control socket paths.\n\nUDS connect and bind fail when the socket path being used is more than 107 in\nlength. Shorten the path using procfs: \"/proc/self/fd/{parentFD}/{sockName)\"\n\nThis avoids falling back to using abstract sockets in some instances.\n\nSuggested-by: Andrei Vagin <avagin@google.com>\nPiperOrigin-RevId: 565557006", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebec2c9ec70f671e265225e1c55d1757cda23d22", "commit_date": "2023-09-15T00:33:35Z", "commit_message": "Merge release-20230911.0-15-ge01d4387d (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e01d4387d2e4af562201ba93c8e93074836ae130", "commit_date": "2023-09-15T00:26:31Z", "commit_message": "Merge pull request #9377 from milantracy:codeqlstatus\n\nPiperOrigin-RevId: 565522379", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3de200084e2ffedc212bd61b22b02fcf34d137f4", "commit_date": "2023-09-14T22:41:18Z", "commit_message": "Merge release-20230911.0-13-g29d82338f (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29d82338fc2a5a19b99f28f2622439d31bd4b8fb", "commit_date": "2023-09-14T22:34:53Z", "commit_message": "Enhance stale action with more labels and a smaller close window.\n\nThe action also ignores a few more labels.\n\nPiperOrigin-RevId: 565494794", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f7da79cbce2a608a225ab5e056f710347ff0262", "commit_date": "2023-09-14T22:30:55Z", "commit_message": "Add CodeQL status badge for its visibility.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fed08373f7a6362ec598076945e68e527eb5872a", "commit_date": "2023-09-14T21:59:09Z", "commit_message": "Merge release-20230911.0-12-g73f4b821a (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73f4b821a1696a215590417549fbea03fe07a8f5", "commit_date": "2023-09-14T21:53:26Z", "commit_message": "Change namespace cloning so that it clones mounts depth-first.\n\nThis saves on allocations.\n\nThis change is a subset of the changes in cl/563529897 and cl/563752003.\nCommitting this change in more discrete parts will help narrow down the\ncauses of b/299603749.\n\nPiperOrigin-RevId: 565484026", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0a9bb7b3ab6514323b52e81a5bd52210bbed490", "commit_date": "2023-09-14T20:25:12Z", "commit_message": "Additionally expect the custom tos/tclass in TOS_TCLASS_EXPECT_DEFAULT case.\n\nPiperOrigin-RevId: 565458888", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3ed62cb903a11488c13fcaea0dac08f25b565b2", "commit_date": "2023-09-14T18:09:44Z", "commit_message": "Merge release-20230911.0-10-gad68fe1d6 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad68fe1d68c5ab7adcb85aec313dc48f2f4080a7", "commit_date": "2023-09-14T18:04:00Z", "commit_message": "images: use gcr.io/syzkaller/syzbot as the base for syzkaller images\n\ngcr.io/syzkaller/env isn't built for ARM64.\n\nPiperOrigin-RevId: 565419016", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fdb0e69a85214c74a043b7a9b76058a98c8c258", "commit_date": "2023-09-13T19:07:37Z", "commit_message": "Merge release-20230904.0-29-g3dda3741d (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3dda3741d8eb531b9f284e4d70d86c952bce94c8", "commit_date": "2023-09-13T19:01:52Z", "commit_message": "Fix CodeQL so that it does not fail the github check.\n\nPiperOrigin-RevId: 565119657", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50181ce80b16850b02ead8bfd89e2f04d7b5dc03", "commit_date": "2023-09-13T17:30:54Z", "commit_message": "Merge release-20230904.0-28-g9117572ae (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9117572ae02ffe41efd7ea51e64d4a4f413b88e1", "commit_date": "2023-09-13T17:25:05Z", "commit_message": "Add \"type: enhancement\" to labels protected from the stale action.\n\nPiperOrigin-RevId: 565089338", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53fd84afcb9d33f5dcc16f71a7d587ff3e19a121", "commit_date": "2023-09-13T00:43:35Z", "commit_message": "Merge release-20230904.0-27-gb86d06d7e (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b86d06d7e51b1e70c2c627e04c5300fa035fcd81", "commit_date": "2023-09-13T00:37:50Z", "commit_message": "Merge pull request #9215 from ekzhang:ekzhang/perf-nvidia-cli-info\n\nPiperOrigin-RevId: 564882593", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8762e188699c29e26f2109dc8e46aba73b002a6", "commit_date": "2023-09-12T18:48:52Z", "commit_message": "Merge release-20230904.0-25-g94500414c (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "94500414c9170f00d4351339bfd87683e02674f3", "commit_date": "2023-09-12T18:41:11Z", "commit_message": "Merge pull request #9359 from milantracy:codeqlconfig\n\nPiperOrigin-RevId: 564786128", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de329f28b2ca56ebd30bbee481901b84908efbbf", "commit_date": "2023-09-12T18:35:10Z", "commit_message": "Merge release-20230904.0-23-g1910a4577 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1910a4577f0183bf444660985f30dc78ef3a74ca", "commit_date": "2023-09-12T18:29:05Z", "commit_message": "cgroupfs: do not return errors from strconv.ParseInt() to write()\n\nArbitrary errors are not convertible to errnos for syscall return and cause the\nsentry to panic.\n\nPiperOrigin-RevId: 564782206", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d163450ac2263f8383a85eb2c13c4ba15682519", "commit_date": "2023-09-12T17:28:45Z", "commit_message": "Merge release-20230904.0-22-g6d06f309e (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d06f309ed5d76dc4c085ab88166f8f5a6161b04", "commit_date": "2023-09-12T17:23:03Z", "commit_message": "Increase stale action ops per run.\n\nRight now we're capped at 30, but have 569 open issues and 192 open PRs.\n\nPiperOrigin-RevId: 564760282", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8758e992c5ca892be1830534a62cc85298061016", "commit_date": "2023-09-11T19:51:18Z", "commit_message": "perf: Remove call to nvidia-container-cli info\n\nThis call is repeated on every container startup sequence, but it is expensive, consistently taking between 2-3 seconds to run each time. This adds a significant amount of startup latency to every container. From `strace` output, the main issue appears to be a call to `openat(AT_FDCWD, \"/dev/nvidia0\", O_RDWR|O_CLOEXEC)`. The first time this is called, it creates a new open device file descriptor and blocks for 2 seconds while doing so. This was measured on a `g4dn.2xlarge` instance on AWS, running a Tesla T4 GPU.\n\nFor comparison, the `nvidia-container-prestart-hook` for runc also runs `nvidia-container-cli` during container boot, but it only calls it once for the `configure` command. gVisor appears to call it twice, once for `info` and then for `configure`.\n\nBy removing the `info` call, or at least only running it when the GPU device files are not already present on the host, GPU container startups can be 2-3 seconds faster.\n\nDoes this sound reasonable? I'm not actually familiar with why the `/dev/nvidia0` file takes 2-3 seconds to open, or why GPU device files need to be explicitly loaded. But I tested the change, and gVisor nvproxy still works.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e1d76499fd52f9ec2e0f43b948ebc769fff73fd", "commit_date": "2023-09-11T19:06:45Z", "commit_message": "Merge release-20230904.0-21-gf8f2bb6d2 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8f2bb6d21ba55b13d6356cb78d7039b2b0dfe51", "commit_date": "2023-09-11T19:01:06Z", "commit_message": "Don't build tensorflow image on ARM.\n\nThe upload image test is failing due to the tensorflow image not being\nsupported on ARM.\n\nPiperOrigin-RevId: 564458336", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1afe6d14e767dd359840b29a55fb849b5a2efb74", "commit_date": "2023-09-11T18:41:47Z", "commit_message": "Add initial CodeQL config for gVisor.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e19bd73d9c245f27e74691bdcd436930794a3f33", "commit_date": "2023-09-09T13:56:33Z", "commit_message": "Merge release-20230904.0-20-gbb4410f44 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb4410f44e3291f7aa34a2655cd683cac7d149cb", "commit_date": "2023-09-09T13:50:38Z", "commit_message": "Rollback 6ceceae9385c and 206e88db3653.\n\nSyzkaller is reporting crashes relating to changes made by these commits.\nRolling back for now. Should be rolled forward with fix.\n\nReported-by: syzbot+9868746b8b0f679da548@syzkaller.appspotmail.com\nPiperOrigin-RevId: 564000728", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8bc56866a8cb0b43f3fe84897d63952a69af978", "commit_date": "2023-09-08T21:03:32Z", "commit_message": "Merge release-20230904.0-19-g717539fbd (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "717539fbd78ae05798fa00712556ec15a55b7156", "commit_date": "2023-09-08T20:57:42Z", "commit_message": "Return user_mss if user_mss is set and socket is unconnected.\n\nHas the same effect as Linux commit 34dfde4ad87b (\"tcp: Return user_mss for\nTCP_MAXSEG in CLOSE/LISTEN state if user_mss set\").\n\nUpdated test to accept both values (default and user set) so test works on\nnewer and older kernels.\n\nPiperOrigin-RevId: 563844012", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb063ff66b90d59d761db49c2ae33ff0003956b6", "commit_date": "2023-09-07T23:34:05Z", "commit_message": "Merge release-20230904.0-18-gad275a100 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad275a100e58195f8e4f441befba3327be51ff04", "commit_date": "2023-09-07T23:28:00Z", "commit_message": "Fix debug builds.\n\nThis change also adds instructions for using a debugger with syscall tests.\n\nFixes #9039\n\nPiperOrigin-RevId: 563576842", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23ff698cf18497d55d861fd299ee4502c53a3fe8", "commit_date": "2023-09-07T20:43:14Z", "commit_message": "Merge release-20230823.0-31-g206e88db3 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "206e88db3653b4de668a5a4f51406fc6967150df", "commit_date": "2023-09-07T20:37:20Z", "commit_message": "Fix cwd/root update method during namespace cloning.\n\nThe previous implementation incorrectly assumed order would be preserved\nin the map.\n\nReported-by: syzbot+da2bc2bee99641f22de4@syzkaller.appspotmail.com\nPiperOrigin-RevId: 563529897", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d9cb5a0523a524a0a2777be6295e3caebcdc1c0", "commit_date": "2023-09-07T17:14:30Z", "commit_message": "Merge release-20230823.0-30-g27d7936e9 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27d7936e933a89c0b55c20966a13ffb40ad2abca", "commit_date": "2023-09-07T17:08:15Z", "commit_message": "Fix github workflow test.\n\nPiperOrigin-RevId: 563466164", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fbd632393665c6628221150b74ae50294d9a3695", "commit_date": "2023-09-07T00:34:55Z", "commit_message": "Merge release-20230823.0-29-gc215e67a5 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c215e67a50f8f6f4d51072318571e0ab54562bc8", "commit_date": "2023-09-07T00:27:02Z", "commit_message": "Let devices cgroup add/remove rules via devices.allow and devices.deny.\n\nPiperOrigin-RevId: 563261158", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca0df251d013d7e118d72670811e2dada63e0181", "commit_date": "2023-09-06T22:50:52Z", "commit_message": "Merge release-20230823.0-28-g6ceceae93 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ceceae9385c44d639a2aebc78bf3b4a8e970e05", "commit_date": "2023-09-06T22:43:02Z", "commit_message": "Abstract mount tree cloning into its own mount method.\n\nWhen copying a mount tree, new child mounts are added to a mount's\npending list. Each of these mounts has its pending mountpoint already set\nwith setKey. Eventually this method will be used to enable recursive binds.\n\nPiperOrigin-RevId: 563236298", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6362f04319ed932f6059a9add22798eb4e6e457e", "commit_date": "2023-09-06T22:05:46Z", "commit_message": "Merge release-20230823.0-27-g2319f958f (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2319f958fc930d0a0980e094928bc233976b8992", "commit_date": "2023-09-06T21:58:03Z", "commit_message": "Automated rollback of changelist 536743330\n\nPiperOrigin-RevId: 563224104", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f83bc0b493d82b89e7528cbbcf497a3854ec7b4", "commit_date": "2023-09-06T21:12:48Z", "commit_message": "Merge release-20230823.0-26-g8aee17790 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8aee177900da1a2a59f7cc6ca79d688677394008", "commit_date": "2023-09-06T21:06:31Z", "commit_message": "Add more justification about why shared mount propagation is not allowed.\n\nUpdates #9324\n\nPiperOrigin-RevId: 563208592", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4146284b601b8e7c551bf172c5fc1f2c7cb972c5", "commit_date": "2023-09-06T20:58:08Z", "commit_message": "Merge pull request #9339 from kevinGC:tcsetsf2\n\nPiperOrigin-RevId: 563207341", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "289c0ad2e0feaaea9bc30ece7d558102163d618c", "commit_date": "2023-09-06T20:35:23Z", "commit_message": "Merge release-20230823.0-23-g0230a371c (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0230a371c23bd4d750e7e60e0e4bf7223ef7087f", "commit_date": "2023-09-06T20:29:19Z", "commit_message": "Merge pull request #9336 from thundergolfer:jonathon/dev-pts-eof-handling\n\nPiperOrigin-RevId: 563199056", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e550bfbd052ddbec0ab214aa1991fad711cf013b", "commit_date": "2023-09-06T20:13:19Z", "commit_message": "Have lgetxattr return ENODATA.\n\nIt is a workaround to lgetxattr/lsetxattr working with security.capacity when running docker in gvisor.\n\nPiperOrigin-RevId: 563194162", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17b0223bdc99a010222b240d9f988801aeee5a97", "commit_date": "2023-09-06T19:38:11Z", "commit_message": "Merge release-20230823.0-20-gf22d85439 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f22d854395ff29a377c5f4fb5100635b9856bb4e", "commit_date": "2023-09-06T19:30:10Z", "commit_message": "Merge pull request #9327 from kevinGC:benchmarkxdp\n\nPiperOrigin-RevId: 563182220", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc2f96cc7626bc4d3eaa3d071e212c316c931578", "commit_date": "2023-09-06T18:01:52Z", "commit_message": "Merge release-20230823.0-18-gd30c39364 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d30c39364daa7c6b5cca3af7fd9b5935409a6f30", "commit_date": "2023-09-06T17:54:41Z", "commit_message": "Split the ring implementation into its own package.\n\nThe ring data structure's requires it's own implementation of Entry. With\nthe new version you can more easily be part of multiple rings at once. Also,\na user who wants to use ilist probably doesn't need ring as well, so it makes\nsense to separate the two.\n\nPiperOrigin-RevId: 563151782", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d9db3349817e9800ad2795f5d95ad16869068b7", "commit_date": "2023-09-06T17:12:11Z", "commit_message": "Merge release-20230823.0-17-gc584a1a43 (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c584a1a435d616ec91a58d5cdba892b6bb000128", "commit_date": "2023-09-06T17:05:13Z", "commit_message": "Add a github workflow that marks issues and PRs as stale.\n\nPiperOrigin-RevId: 563136967", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd5f4c4a21ca3105b1e4b848ca3f0cccc833a4ac", "commit_date": "2023-09-06T02:22:36Z", "commit_message": "Merge release-20230823.0-16-gc227d185a (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c227d185a4c513aa71eff950506a257d7f95ec8a", "commit_date": "2023-09-06T02:15:45Z", "commit_message": "Emit SentryTcpListenEvent when the application listens on a tcp port.\n\nPiperOrigin-RevId: 562957239", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8c399a0930387c98aeebe073ead309bffbccf01", "commit_date": "2023-09-06T01:18:18Z", "commit_message": "Fix EOF (^D) handling in devpts (partially addr #9333)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76ccc85968a7a450ade931ad217bf034c82ac237", "commit_date": "2023-09-05T22:57:16Z", "commit_message": "Merge release-20230823.0-15-ge0029cc0f (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0029cc0ff4b85479177a82e13809b6501809272", "commit_date": "2023-09-05T22:51:21Z", "commit_message": "A few fixes to run tests on 6.2+ kernels\n\n* disable broken socket_inet_loopback test // Lucas Manning\n* disable lseek tests on anon inodes. They have been broken by\ncommit e7478158e1378325907edfdd960eca98a1be405b\nDate:   Wed Jun 29 15:06:57 2022 +0200\n    fs: clear or set FMODE_LSEEK based on llseek function\n\n* don't check memory.kmem.limit_in_bytes, it has been deprecated and dropped:\ncommit 86327e8eb94c52eca4f93cfece2e29d1bf52acbf\nDate:   Tue Jul 4 13:52:40 2023 +0200\n    memcg: drop kmem.limit_in_bytes\ncommit 58056f77502f3567b760c9a8fc8d2e9081515b2d\nDate:   Fri Nov 5 13:37:44 2021 -0700\n    memcg, kmem: further deprecate kmem.limit_in_bytes\ncommit 0158115f702b0ba208ab0b5adf44cae99b3ebcc7\nDate:   Mon Sep 23 15:37:22 2019 -0700\n    memcg, kmem: deprecate kmem.limit_in_bytes\nPiperOrigin-RevId: 562915457", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7928ff6f0c5ce47b3a9a4e0773ca68a5df6d7c93", "commit_date": "2023-09-05T16:53:50Z", "commit_message": "tty: enable `TCSETSF`\n\nWhile there is a difference between flavors of this ioctl (`TCSETS`,\n`TCSETSF`, `TCSETSW`), in practice it seems not to matter. We should let\nusers call `TCSETSF` and can implement those differences if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a9134c2f04b2e21ce0cfc5b33633ce573aa9429", "commit_date": "2023-08-31T18:09:15Z", "commit_message": "netstack: benchmark xdp endpoint\n\nThis just swaps out the fdbased endpoint for an XDP one. Some related\nchanges in here:\n\n- Moved the AF_XDP BPF program into its own Go package so it can be\n  shared.\n- Added a flag to tcp_benchmark to disable user namespaces. This helps\n  when running as root, which is required to install BPF programs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0eb36d3465d625427eeb7ea63e97569d110422f5", "commit_date": "2023-08-30T21:03:34Z", "commit_message": "Merge release-20230823.0-14-gc2a7efe6a (automated)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "master": [{"commit_oid": "7594667507d7114e142d8c19810cbfe53088be46", "commit_date": "2023-09-27T00:35:33Z", "commit_message": "Internal change.\n\nPiperOrigin-RevId: 568695436", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "485de2f6a71bace2eca4b9cc9268ad00f167f409", "commit_date": "2023-09-26T02:53:38Z", "commit_message": "test/syscalls: run tests in the single thread mode\n\nIt allows us to avoid side effects on forking new processes.\n\nPiperOrigin-RevId: 568391853", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e81e0c72a70b0ffe31dba1e5b5b3a12e18f21cad", "commit_date": "2023-09-23T07:47:37Z", "commit_message": "Add NV_MEMORY_FABRIC to nvproxy.\n\nFixes #9372\n\nPiperOrigin-RevId: 567816690", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5dea0ea0972850900b47f63655a3c0f7e033a6d", "commit_date": "2023-09-23T02:51:10Z", "commit_message": "bazel: update bazel_gazelle to v0.33.0\n\nThis has to fix the error:\nexternal/bazel_gazelle/repo/BUILD.bazel:3:11:\n  no such package '@org_golang_x_tools//go/vcs\n\nPiperOrigin-RevId: 567774709", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "853c80007fc42ee037da7901b227ad9732d2a322", "commit_date": "2023-09-22T20:38:04Z", "commit_message": "Add library to benchmark gVisor's `seccomp-bpf` filters.\n\nThe first step to optimizing something is to measure it.\n\nThis creates a `secbench` library which can benchmark the time it takes to\nrun an application \"Profile\", which is a weighted-random set of syscall\nsequences, under a given `seccomp-bpf` filter.\n\nThe `secbench` library runs two subprocesses which run the same set of system\ncalls using this application profile. One of the subprocesses runs with the\nseccomp-bpf filter, and the other one runs without it. The library computes\nthe difference, and reports this duration as the time it takes to run the\nseccomp-bpf filter for that system call. It also reports the overall time it\ntakes to run the weighted-random set of system calls, useful as a general\nmeasure of the overhead that the application will see.\n\nPiperOrigin-RevId: 567704927", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81b7b4aa14c2f425ce1885aa8185a1f34bbdfd24", "commit_date": "2023-09-22T19:05:49Z", "commit_message": "Merge pull request #9416 from avagin:bazel-update\n\nPiperOrigin-RevId: 567682759", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de5271b36007f28f113db82b16d03cdb7efa0e5e", "commit_date": "2023-09-22T17:48:35Z", "commit_message": "Fix small data race in mount.\n\nReported-by: syzbot+eaf165c341800b20949c@syzkaller.appspotmail.com\nPiperOrigin-RevId: 567662206", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a277f53f250910d23534a3fc4401840008296f4d", "commit_date": "2023-09-22T17:35:43Z", "commit_message": "Fix atomicOTrunc implementation in fusefs.\n\nIf FUSE connection does not support atomic O_TRUNC and application calls\nopen(O_TRUNC), FUSE should truncate the file *first* (without a file handle)\nand then subsequently open the file with O_TRUNC filtered out.\n\nWe were truncating the file after open(). There were 2 issues with it:\n1. We were using the inode's file handle, which may be invalid at this point\n   because it is donated to the first FD (to save an open(2) RPC I believe)\n   and that FD can close it.\n2. The truncate() was being done with fhOptions.useFh = true. However,\n   sometimes the file handle might be read-only causing truncate to fail.\n\nFixed both issues by moving the truncate above open() and making it not use any\nfile handles.\n\nPiperOrigin-RevId: 567658664", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9794276875d1e8ebadfb6d97760c2847e36ef7b0", "commit_date": "2023-09-22T05:33:21Z", "commit_message": "bazel: update golang to 1.21.1\n\nand update a few other packages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19250b87ede7311b70238dcd7329e3096a1b49d5", "commit_date": "2023-09-22T01:54:59Z", "commit_message": "Use the last NVIDIA_VISIBLE_DEVICES value from spec.\n\nAs described in #9401, we should use the last value of NVIDIA_VISIBLE_DEVICES\nfrom the container spec to emulate nvidia-container-runtime-hook correctly.\n\nFixes #9401\n\nPiperOrigin-RevId: 567480580", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcacbf17c6171bcc3d406bb378b95b7c18dc82ce", "commit_date": "2023-09-22T01:29:12Z", "commit_message": "buildkite: build arm64 docker images on arm64 agents\n\nPiperOrigin-RevId: 567476463", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05b7c55c13204f3a3b42ccf17e8252015b40353d", "commit_date": "2023-09-21T23:07:04Z", "commit_message": "Do not interpret GPU index as GPU device minor.\n\nThere are 3 ways to identify a GPU device that are relevant:\n1. GPU Index: This is the index of the GPU in PCIe ordering.\n2. GPU Device Minor: This is the minor device number. The GPU device number\n   on the system is 195:minor.\n3. /dev/nvidia#: The GPU can be accessed via the device mounted at this path.\n\nnvproxy incorrectly assumed that all 3 identifiers are the same. In reality,\nonly (2) and (3) are always the same. (1) can differ, as demonstrated in #9389.\n\nSo passthrough the value of `NVIDIA_VISIBLE_DEVICES` to `nvidia-container-cli`\nwhile invoking the `configure` command via the `--devices` flag. The CLI uses\nNVML to figure out the GPU Index -> GPU Device mapping and mounts the right\ndevices into the containers root filesystem at /container/rootfs/dev/. We\nsubsequently scan this directory to *infer* the GPU devices exposed to the\ncontainer. This information in plumbed through various places and appropriate\nvirtualized gVisor devices are created.\n\nAn unintended benefit of this is that identifying GPUs via GPU UUIDs now works!\nEarlier we only accepted GPU index. Now we can just pass through GPU UUID to\nthe CLI and it will deal with it. So `docker run --gpus=\"device=GPU-4e716e7d\"\nworks now.\n\nAlternatives considered:\n1. Parsing `nvidia-container-cli info` output to figure out index -> minor\n   mapping. However, this is a costly operation (as reported in #9215) which\n   can take 2-3 seconds.\n2. Using NVML in runsc via nvidia/go-nvml library. Apart from the downsides of\n   adding another third party dependency, this entails that we duplicate logic\n   from nvidia-container-cli into runsc (mainly logic around\n   src/cli/common.c:select_devices()). This is technical debt and won't age\n   well (will require us to mimic updates to CLI into runsc).\n\nFixes #9389\n\nPiperOrigin-RevId: 567443164", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae1294b4358c10e453b792db1747233abbe6169c", "commit_date": "2023-09-21T18:42:16Z", "commit_message": "Internal change.\n\nPiperOrigin-RevId: 567370524", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f744f443dd7d24ad675fa5c82f3998e624d696fd", "commit_date": "2023-09-21T17:34:27Z", "commit_message": "Check before attempting to mount an anon mountpoint.\n\nReported-by: syzbot+9575c881cd3f35eea483@syzkaller.appspotmail.com\nPiperOrigin-RevId: 567349098", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97f276fb2aecc8975634234ca9b11cf2f0e1e479", "commit_date": "2023-09-21T17:23:03Z", "commit_message": "Merge pull request #9409 from btw616:misc-cleanups\n\nPiperOrigin-RevId: 567345635", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "222147462633e9ef5a34af89d5cc6050c81b0367", "commit_date": "2023-09-21T17:06:10Z", "commit_message": "Merge pull request #9406 from avagin:systrap-pdeathsig\n\nPiperOrigin-RevId: 567339130", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "944d4185e4bdc4f07a255bc848c66d00f9da1938", "commit_date": "2023-09-21T05:23:40Z", "commit_message": "Minor filesystem cleanups\n\n- Update the remaining platform.File references in comments and\n  documentation. platform.File has been moved in memmap by commit\n  f347a578b79c (\"Move platform.File in memmap\").\n\n- Remove redundant bit operations in statTo in tmpfs. STATX_SIZE and\n  STATX_BLOCKS has been set at the beginning of the function, there\n  is no need to do it again for regular files.\n\n- Change \"\\tmp\" to \"/tmp\" in pathname, as '\\' is not a valid path\n  delimiter in Linux. \"/tmp\" looks better.\n\nSigned-off-by: Tiwei Bie <tiwei.btw@antgroup.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "814eaf3b77ef695ffd00b83a9db7e1ae6d494d1e", "commit_date": "2023-09-21T03:19:36Z", "commit_message": "systrap: set PDEATHSIG right after forking a sysmsg thread\n\ncontainer_test:TestGoferExits fails by timeout, because there are some\nsysmsg threads survived sandbox process death. When we fork a new sysmsg\nthread, it is traced with PTRACE_O_EXITKILL, so we need to set PDEATHSIG\nbefore detaching from it.\n\nSigned-off-by: Andrei Vagin <avagin@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1531147bf2e9b63f9bb068d808582c1ab5cc022d", "commit_date": "2023-09-20T20:06:08Z", "commit_message": "Automated rollback of changelist 564000728\n\nPiperOrigin-RevId: 567054388", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c8e91d04c692978b50c1bad48f7c41193fa0922", "commit_date": "2023-09-20T19:58:03Z", "commit_message": "fs/overlay: create the \"work\" directory in `workdir`\n\nLinux creates the \"work\" directory in `workdir`.  Docker calls chown on it and\nfails if it doesn't exist.\n\nPiperOrigin-RevId: 567053404", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02f70b5df083b640c427290ba2229bcdfe486ad9", "commit_date": "2023-09-20T19:38:39Z", "commit_message": "Implement a subset of `keyctl(2)` and `keyrings(7)` for better Docker support.\n\nThe intention of this change is to cover a sufficient surface to accommodate\nthe use of running Docker within gVisor, rather than a full implementation.\n\nThis implements the following features:\n\n  - Keys as a first-class concept in the kernel.\n  - Tracking keys in user namespaces.\n  - Task session keyrings: possession, inheritance.\n  - Key permission enforcement.\n  - The following `keyctl(2)` operations:\n    - `KEYCTL_GET_KEYRING_ID`\n    - `KEYCTL_DESCRIBE`\n    - `KEYCTL_JOIN_SESSION_KEYRING`\n    - `KEYCTL_SETPERM`\n\nNotably, this does not implement:\n\n  - The ability to actually add any keys other than the session keyring\n    (which does not hold any cryptographic key data).\n  - Other special keyrings (thread keyring, process keyring, user session\n    keyring, etc.).\n  - Lots of `keyctl(2)` operations.\n  - Key expiration.\n  - Key garbage collection. Keys live until their user namespace is destroyed.\n    However, each user namespace is limited to 200 keys, so memory growth is\n    bounded.\n  - `add_key(2)`\n  - `request_key(2)`\n\n... However, this makes design choices that seem odd given the limited scope\nof this change, but make sense when taking into account the desire to\neventually accommodate them in the future. For example, there are many\n`switch` statements with only one option for session keyrings, which would get\nmore options when adding support for other special keyrings. Similarly, the\nsignature of `PossessedKeys` takes in all 3 special \"possessed\" keyrings, but\ncurrently only ever gets the session keyring as non-nil.\n\nPiperOrigin-RevId: 567047896", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81a42184e191be69f1624ee3481e66049e40da12", "commit_date": "2023-09-20T18:41:32Z", "commit_message": "Reorder nvidia driver versions.\n\nPiperOrigin-RevId: 567031594", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "539a8464f35e16892b31df860fc9c2a798af68d1", "commit_date": "2023-09-20T17:39:20Z", "commit_message": "Qualify NVIDIA 525.125.06 driver version.\n\nDriver version has been qualified on GKE w/ nvidia's basic workload\nand pytorch benchmarks.\n\nPiperOrigin-RevId: 567009651", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cd842b20a3ce91952f85c4ef6910b0e87917c65", "commit_date": "2023-09-19T21:51:59Z", "commit_message": "Automated rollback of changelist 557941259\n\nPiperOrigin-RevId: 566749598", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "640ec03f92ade885c2ee3b4829039dd08f9adf43", "commit_date": "2023-09-19T21:10:52Z", "commit_message": "Fix mount table corruption.\n\nBefore this, mount propagation could cause multiple mounts to have the same\nparent and mountpoint, violating the mountTable contract. Now, when there's\nan existing mount at a propagation point, it's added as a child of the new\nmount.\n\nPiperOrigin-RevId: 566738099", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "949461f2b3624329b4c02744e10c631dabd53eaa", "commit_date": "2023-09-19T20:46:56Z", "commit_message": "Automated rollback of changelist 558922801\n\nPiperOrigin-RevId: 566731014", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "181a57866ad0fab5f50e139e789a19314e7e8eaa", "commit_date": "2023-09-19T19:37:33Z", "commit_message": "Add ABI for `keyctl(2)`.\n\nPiperOrigin-RevId: 566711348", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50c62321fdd077c3cad9c420cf2776047ffa89a7", "commit_date": "2023-09-19T19:14:19Z", "commit_message": "KVM: Remove `_` prefix from KVM `ioctl` constants.\n\nThis is useful to be able to refer to them from external packages, such as\nto represent the `ioctl(2)` syscall profile that the Sentry has with the\nKVM platform.\n\nPiperOrigin-RevId: 566705114", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8675708cb8356da419398863e9f997b5cc437bf0", "commit_date": "2023-09-19T17:48:35Z", "commit_message": "Handle arbitrarily large Fuse Dirent Namelen.\n\nIf FUSEDirent.Namelen is larger than the remaining payload size, then the\ndirent is probably invalid. We should skip it.\n\nPiperOrigin-RevId: 566678679", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a7617aed21c3d17d8a2570d7e22cf27c2692e17", "commit_date": "2023-09-18T23:46:52Z", "commit_message": "Move pytorch benchmark to GPU directory.\n\nThe pytorch image is huge, about 7-8 GB. This doesn't\nneed to be downloaded with the other benchmark images. Move\nit to a GPU directory to speed up benchmark runs.\n\nPiperOrigin-RevId: 566449296", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "313485846896a73bb39d985a221b1aa46e85dc8a", "commit_date": "2023-09-16T03:02:41Z", "commit_message": "Tweaks to containerd tests and helpers.\n\nPiperOrigin-RevId: 565839195", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d81768d4c8d29d2a2e0880f615d04e1dd79c88c7", "commit_date": "2023-09-16T02:44:22Z", "commit_message": "Remove peer credential check from control server.\n\nThe peer credential check worked by querying the peer's UID using SO_PEERCRED.\nHowever, when sandbox is configured with custom UID/GID mappings, which it is\nin the following situations:\n1. When not using directfs, sandbox has a mapping of only `65534:65534:1`. So\n   all other non-65534 UIDs are unmmaped.\n2. When using directfs with userns-remap. The sandbox has the same UID/GID\n   mapping as the container.\n\nIn these cases, when the root user tries to connect, the host root user is not\nmapped. Unmapped IDs are translated to overflowuid/gid, which happens to\ndefault to 65534. This leads to unexpected results:\n- Without directfs, this check allows any connection, because sandbox is also\n  running as nobody/65534.\n- In the directfs+userns-remap case, all connections are denied.\n\nThis check doesn't really enforce anything. Hence remove it.\n\nThe real enforcement mechanism is the file mode of the unix domain socket over\nwhich the connection happens. The socket file's mode depends on umask, which\ndefaults to 022. Hence only the user which creates the sandbox via\n`runsc create` has write permission on this socket. So only the sandbox creator\nor root can connect to the sandbox, as intended.\n\nFixes #9356\n\nPiperOrigin-RevId: 565836818", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ff1e908156acadf98e2473c349f879ff54ec7e7", "commit_date": "2023-09-15T21:58:29Z", "commit_message": "Add state:\"nosave\" annotation to nvproxy.objsMu.\n\nWith this, checkpoint command succeeds on nvproxy containers.\n\nUpdates #9363.\n\nPiperOrigin-RevId: 565786118", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36b9b19daca9e7d723388132e787e3010aa30711", "commit_date": "2023-09-15T20:13:26Z", "commit_message": "Do not use abstract sockets for control server.\n\nAny user can connect to an abstract socket. See \"Abstract sockets\" section in\nunix(7). Filesystem UDS requires write permission to connect to. Hence, file\nmode is used to protect the server.\n\nPiperOrigin-RevId: 565759783", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c40c16ba80e487c1fc6d24f539f33b902e8aca4", "commit_date": "2023-09-15T18:41:00Z", "commit_message": "Exempt proposal issues from being closed as stale.\n\nProposals usually have more longevity and contain interesting ideas.\nAlso clean up \"new feature\" and \"enhancement\" from the list. Those labels don't\nexist in gVisor repo.\n\nPiperOrigin-RevId: 565735357", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d353f07ba5bb62d0b58ba741e3f6d88774c35a79", "commit_date": "2023-09-15T18:19:57Z", "commit_message": "Merge pull request #9381 from testwill:typo\n\nPiperOrigin-RevId: 565729064", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a99bf4a8ad59d17cd039837dc5da2f88f86cd50c", "commit_date": "2023-09-15T06:47:10Z", "commit_message": "fix: successfully typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b192bf37363f5ad18a533cb19448a32326613316", "commit_date": "2023-09-15T03:56:26Z", "commit_message": "Handle large control socket paths.\n\nUDS connect and bind fail when the socket path being used is more than 107 in\nlength. Shorten the path using procfs: \"/proc/self/fd/{parentFD}/{sockName)\"\n\nThis avoids falling back to using abstract sockets in some instances.\n\nSuggested-by: Andrei Vagin <avagin@google.com>\nPiperOrigin-RevId: 565557006", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e01d4387d2e4af562201ba93c8e93074836ae130", "commit_date": "2023-09-15T00:26:31Z", "commit_message": "Merge pull request #9377 from milantracy:codeqlstatus\n\nPiperOrigin-RevId: 565522379", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29d82338fc2a5a19b99f28f2622439d31bd4b8fb", "commit_date": "2023-09-14T22:34:53Z", "commit_message": "Enhance stale action with more labels and a smaller close window.\n\nThe action also ignores a few more labels.\n\nPiperOrigin-RevId: 565494794", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f7da79cbce2a608a225ab5e056f710347ff0262", "commit_date": "2023-09-14T22:30:55Z", "commit_message": "Add CodeQL status badge for its visibility.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73f4b821a1696a215590417549fbea03fe07a8f5", "commit_date": "2023-09-14T21:53:26Z", "commit_message": "Change namespace cloning so that it clones mounts depth-first.\n\nThis saves on allocations.\n\nThis change is a subset of the changes in cl/563529897 and cl/563752003.\nCommitting this change in more discrete parts will help narrow down the\ncauses of b/299603749.\n\nPiperOrigin-RevId: 565484026", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0a9bb7b3ab6514323b52e81a5bd52210bbed490", "commit_date": "2023-09-14T20:25:12Z", "commit_message": "Additionally expect the custom tos/tclass in TOS_TCLASS_EXPECT_DEFAULT case.\n\nPiperOrigin-RevId: 565458888", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad68fe1d68c5ab7adcb85aec313dc48f2f4080a7", "commit_date": "2023-09-14T18:04:00Z", "commit_message": "images: use gcr.io/syzkaller/syzbot as the base for syzkaller images\n\ngcr.io/syzkaller/env isn't built for ARM64.\n\nPiperOrigin-RevId: 565419016", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3dda3741d8eb531b9f284e4d70d86c952bce94c8", "commit_date": "2023-09-13T19:01:52Z", "commit_message": "Fix CodeQL so that it does not fail the github check.\n\nPiperOrigin-RevId: 565119657", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9117572ae02ffe41efd7ea51e64d4a4f413b88e1", "commit_date": "2023-09-13T17:25:05Z", "commit_message": "Add \"type: enhancement\" to labels protected from the stale action.\n\nPiperOrigin-RevId: 565089338", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b86d06d7e51b1e70c2c627e04c5300fa035fcd81", "commit_date": "2023-09-13T00:37:50Z", "commit_message": "Merge pull request #9215 from ekzhang:ekzhang/perf-nvidia-cli-info\n\nPiperOrigin-RevId: 564882593", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "94500414c9170f00d4351339bfd87683e02674f3", "commit_date": "2023-09-12T18:41:11Z", "commit_message": "Merge pull request #9359 from milantracy:codeqlconfig\n\nPiperOrigin-RevId: 564786128", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1910a4577f0183bf444660985f30dc78ef3a74ca", "commit_date": "2023-09-12T18:29:05Z", "commit_message": "cgroupfs: do not return errors from strconv.ParseInt() to write()\n\nArbitrary errors are not convertible to errnos for syscall return and cause the\nsentry to panic.\n\nPiperOrigin-RevId: 564782206", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d06f309ed5d76dc4c085ab88166f8f5a6161b04", "commit_date": "2023-09-12T17:23:03Z", "commit_message": "Increase stale action ops per run.\n\nRight now we're capped at 30, but have 569 open issues and 192 open PRs.\n\nPiperOrigin-RevId: 564760282", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8758e992c5ca892be1830534a62cc85298061016", "commit_date": "2023-09-11T19:51:18Z", "commit_message": "perf: Remove call to nvidia-container-cli info\n\nThis call is repeated on every container startup sequence, but it is expensive, consistently taking between 2-3 seconds to run each time. This adds a significant amount of startup latency to every container. From `strace` output, the main issue appears to be a call to `openat(AT_FDCWD, \"/dev/nvidia0\", O_RDWR|O_CLOEXEC)`. The first time this is called, it creates a new open device file descriptor and blocks for 2 seconds while doing so. This was measured on a `g4dn.2xlarge` instance on AWS, running a Tesla T4 GPU.\n\nFor comparison, the `nvidia-container-prestart-hook` for runc also runs `nvidia-container-cli` during container boot, but it only calls it once for the `configure` command. gVisor appears to call it twice, once for `info` and then for `configure`.\n\nBy removing the `info` call, or at least only running it when the GPU device files are not already present on the host, GPU container startups can be 2-3 seconds faster.\n\nDoes this sound reasonable? I'm not actually familiar with why the `/dev/nvidia0` file takes 2-3 seconds to open, or why GPU device files need to be explicitly loaded. But I tested the change, and gVisor nvproxy still works.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8f2bb6d21ba55b13d6356cb78d7039b2b0dfe51", "commit_date": "2023-09-11T19:01:06Z", "commit_message": "Don't build tensorflow image on ARM.\n\nThe upload image test is failing due to the tensorflow image not being\nsupported on ARM.\n\nPiperOrigin-RevId: 564458336", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1afe6d14e767dd359840b29a55fb849b5a2efb74", "commit_date": "2023-09-11T18:41:47Z", "commit_message": "Add initial CodeQL config for gVisor.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb4410f44e3291f7aa34a2655cd683cac7d149cb", "commit_date": "2023-09-09T13:50:38Z", "commit_message": "Rollback 6ceceae9385c and 206e88db3653.\n\nSyzkaller is reporting crashes relating to changes made by these commits.\nRolling back for now. Should be rolled forward with fix.\n\nReported-by: syzbot+9868746b8b0f679da548@syzkaller.appspotmail.com\nPiperOrigin-RevId: 564000728", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "717539fbd78ae05798fa00712556ec15a55b7156", "commit_date": "2023-09-08T20:57:42Z", "commit_message": "Return user_mss if user_mss is set and socket is unconnected.\n\nHas the same effect as Linux commit 34dfde4ad87b (\"tcp: Return user_mss for\nTCP_MAXSEG in CLOSE/LISTEN state if user_mss set\").\n\nUpdated test to accept both values (default and user set) so test works on\nnewer and older kernels.\n\nPiperOrigin-RevId: 563844012", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad275a100e58195f8e4f441befba3327be51ff04", "commit_date": "2023-09-07T23:28:00Z", "commit_message": "Fix debug builds.\n\nThis change also adds instructions for using a debugger with syscall tests.\n\nFixes #9039\n\nPiperOrigin-RevId: 563576842", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "206e88db3653b4de668a5a4f51406fc6967150df", "commit_date": "2023-09-07T20:37:20Z", "commit_message": "Fix cwd/root update method during namespace cloning.\n\nThe previous implementation incorrectly assumed order would be preserved\nin the map.\n\nReported-by: syzbot+da2bc2bee99641f22de4@syzkaller.appspotmail.com\nPiperOrigin-RevId: 563529897", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27d7936e933a89c0b55c20966a13ffb40ad2abca", "commit_date": "2023-09-07T17:08:15Z", "commit_message": "Fix github workflow test.\n\nPiperOrigin-RevId: 563466164", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c215e67a50f8f6f4d51072318571e0ab54562bc8", "commit_date": "2023-09-07T00:27:02Z", "commit_message": "Let devices cgroup add/remove rules via devices.allow and devices.deny.\n\nPiperOrigin-RevId: 563261158", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ceceae9385c44d639a2aebc78bf3b4a8e970e05", "commit_date": "2023-09-06T22:43:02Z", "commit_message": "Abstract mount tree cloning into its own mount method.\n\nWhen copying a mount tree, new child mounts are added to a mount's\npending list. Each of these mounts has its pending mountpoint already set\nwith setKey. Eventually this method will be used to enable recursive binds.\n\nPiperOrigin-RevId: 563236298", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2319f958fc930d0a0980e094928bc233976b8992", "commit_date": "2023-09-06T21:58:03Z", "commit_message": "Automated rollback of changelist 536743330\n\nPiperOrigin-RevId: 563224104", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8aee177900da1a2a59f7cc6ca79d688677394008", "commit_date": "2023-09-06T21:06:31Z", "commit_message": "Add more justification about why shared mount propagation is not allowed.\n\nUpdates #9324\n\nPiperOrigin-RevId: 563208592", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4146284b601b8e7c551bf172c5fc1f2c7cb972c5", "commit_date": "2023-09-06T20:58:08Z", "commit_message": "Merge pull request #9339 from kevinGC:tcsetsf2\n\nPiperOrigin-RevId: 563207341", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0230a371c23bd4d750e7e60e0e4bf7223ef7087f", "commit_date": "2023-09-06T20:29:19Z", "commit_message": "Merge pull request #9336 from thundergolfer:jonathon/dev-pts-eof-handling\n\nPiperOrigin-RevId: 563199056", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e550bfbd052ddbec0ab214aa1991fad711cf013b", "commit_date": "2023-09-06T20:13:19Z", "commit_message": "Have lgetxattr return ENODATA.\n\nIt is a workaround to lgetxattr/lsetxattr working with security.capacity when running docker in gvisor.\n\nPiperOrigin-RevId: 563194162", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f22d854395ff29a377c5f4fb5100635b9856bb4e", "commit_date": "2023-09-06T19:30:10Z", "commit_message": "Merge pull request #9327 from kevinGC:benchmarkxdp\n\nPiperOrigin-RevId: 563182220", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d30c39364daa7c6b5cca3af7fd9b5935409a6f30", "commit_date": "2023-09-06T17:54:41Z", "commit_message": "Split the ring implementation into its own package.\n\nThe ring data structure's requires it's own implementation of Entry. With\nthe new version you can more easily be part of multiple rings at once. Also,\na user who wants to use ilist probably doesn't need ring as well, so it makes\nsense to separate the two.\n\nPiperOrigin-RevId: 563151782", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c584a1a435d616ec91a58d5cdba892b6bb000128", "commit_date": "2023-09-06T17:05:13Z", "commit_message": "Add a github workflow that marks issues and PRs as stale.\n\nPiperOrigin-RevId: 563136967", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c227d185a4c513aa71eff950506a257d7f95ec8a", "commit_date": "2023-09-06T02:15:45Z", "commit_message": "Emit SentryTcpListenEvent when the application listens on a tcp port.\n\nPiperOrigin-RevId: 562957239", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8c399a0930387c98aeebe073ead309bffbccf01", "commit_date": "2023-09-06T01:18:18Z", "commit_message": "Fix EOF (^D) handling in devpts (partially addr #9333)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0029cc0ff4b85479177a82e13809b6501809272", "commit_date": "2023-09-05T22:51:21Z", "commit_message": "A few fixes to run tests on 6.2+ kernels\n\n* disable broken socket_inet_loopback test // Lucas Manning\n* disable lseek tests on anon inodes. They have been broken by\ncommit e7478158e1378325907edfdd960eca98a1be405b\nDate:   Wed Jun 29 15:06:57 2022 +0200\n    fs: clear or set FMODE_LSEEK based on llseek function\n\n* don't check memory.kmem.limit_in_bytes, it has been deprecated and dropped:\ncommit 86327e8eb94c52eca4f93cfece2e29d1bf52acbf\nDate:   Tue Jul 4 13:52:40 2023 +0200\n    memcg: drop kmem.limit_in_bytes\ncommit 58056f77502f3567b760c9a8fc8d2e9081515b2d\nDate:   Fri Nov 5 13:37:44 2021 -0700\n    memcg, kmem: further deprecate kmem.limit_in_bytes\ncommit 0158115f702b0ba208ab0b5adf44cae99b3ebcc7\nDate:   Mon Sep 23 15:37:22 2019 -0700\n    memcg, kmem: deprecate kmem.limit_in_bytes\nPiperOrigin-RevId: 562915457", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7928ff6f0c5ce47b3a9a4e0773ca68a5df6d7c93", "commit_date": "2023-09-05T16:53:50Z", "commit_message": "tty: enable `TCSETSF`\n\nWhile there is a difference between flavors of this ioctl (`TCSETS`,\n`TCSETSF`, `TCSETSW`), in practice it seems not to matter. We should let\nusers call `TCSETSF` and can implement those differences if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a9134c2f04b2e21ce0cfc5b33633ce573aa9429", "commit_date": "2023-08-31T18:09:15Z", "commit_message": "netstack: benchmark xdp endpoint\n\nThis just swaps out the fdbased endpoint for an XDP one. Some related\nchanges in here:\n\n- Moved the AF_XDP BPF program into its own Go package so it can be\n  shared.\n- Added a flag to tcp_benchmark to disable user namespaces. This helps\n  when running as root, which is required to install BPF programs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "test/avagin/dev": [{"commit_oid": "3ab29287479d93a44aa4981604d97478a495d5e6", "commit_date": "2023-09-22T01:31:52Z", "commit_message": "bazel: update golang to 1.21.1\n\nand update a few other packages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05b7c55c13204f3a3b42ccf17e8252015b40353d", "commit_date": "2023-09-21T23:07:04Z", "commit_message": "Do not interpret GPU index as GPU device minor.\n\nThere are 3 ways to identify a GPU device that are relevant:\n1. GPU Index: This is the index of the GPU in PCIe ordering.\n2. GPU Device Minor: This is the minor device number. The GPU device number\n   on the system is 195:minor.\n3. /dev/nvidia#: The GPU can be accessed via the device mounted at this path.\n\nnvproxy incorrectly assumed that all 3 identifiers are the same. In reality,\nonly (2) and (3) are always the same. (1) can differ, as demonstrated in #9389.\n\nSo passthrough the value of `NVIDIA_VISIBLE_DEVICES` to `nvidia-container-cli`\nwhile invoking the `configure` command via the `--devices` flag. The CLI uses\nNVML to figure out the GPU Index -> GPU Device mapping and mounts the right\ndevices into the containers root filesystem at /container/rootfs/dev/. We\nsubsequently scan this directory to *infer* the GPU devices exposed to the\ncontainer. This information in plumbed through various places and appropriate\nvirtualized gVisor devices are created.\n\nAn unintended benefit of this is that identifying GPUs via GPU UUIDs now works!\nEarlier we only accepted GPU index. Now we can just pass through GPU UUID to\nthe CLI and it will deal with it. So `docker run --gpus=\"device=GPU-4e716e7d\"\nworks now.\n\nAlternatives considered:\n1. Parsing `nvidia-container-cli info` output to figure out index -> minor\n   mapping. However, this is a costly operation (as reported in #9215) which\n   can take 2-3 seconds.\n2. Using NVML in runsc via nvidia/go-nvml library. Apart from the downsides of\n   adding another third party dependency, this entails that we duplicate logic\n   from nvidia-container-cli into runsc (mainly logic around\n   src/cli/common.c:select_devices()). This is technical debt and won't age\n   well (will require us to mimic updates to CLI into runsc).\n\nFixes #9389\n\nPiperOrigin-RevId: 567443164", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae1294b4358c10e453b792db1747233abbe6169c", "commit_date": "2023-09-21T18:42:16Z", "commit_message": "Internal change.\n\nPiperOrigin-RevId: 567370524", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f744f443dd7d24ad675fa5c82f3998e624d696fd", "commit_date": "2023-09-21T17:34:27Z", "commit_message": "Check before attempting to mount an anon mountpoint.\n\nReported-by: syzbot+9575c881cd3f35eea483@syzkaller.appspotmail.com\nPiperOrigin-RevId: 567349098", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97f276fb2aecc8975634234ca9b11cf2f0e1e479", "commit_date": "2023-09-21T17:23:03Z", "commit_message": "Merge pull request #9409 from btw616:misc-cleanups\n\nPiperOrigin-RevId: 567345635", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "222147462633e9ef5a34af89d5cc6050c81b0367", "commit_date": "2023-09-21T17:06:10Z", "commit_message": "Merge pull request #9406 from avagin:systrap-pdeathsig\n\nPiperOrigin-RevId: 567339130", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "944d4185e4bdc4f07a255bc848c66d00f9da1938", "commit_date": "2023-09-21T05:23:40Z", "commit_message": "Minor filesystem cleanups\n\n- Update the remaining platform.File references in comments and\n  documentation. platform.File has been moved in memmap by commit\n  f347a578b79c (\"Move platform.File in memmap\").\n\n- Remove redundant bit operations in statTo in tmpfs. STATX_SIZE and\n  STATX_BLOCKS has been set at the beginning of the function, there\n  is no need to do it again for regular files.\n\n- Change \"\\tmp\" to \"/tmp\" in pathname, as '\\' is not a valid path\n  delimiter in Linux. \"/tmp\" looks better.\n\nSigned-off-by: Tiwei Bie <tiwei.btw@antgroup.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "814eaf3b77ef695ffd00b83a9db7e1ae6d494d1e", "commit_date": "2023-09-21T03:19:36Z", "commit_message": "systrap: set PDEATHSIG right after forking a sysmsg thread\n\ncontainer_test:TestGoferExits fails by timeout, because there are some\nsysmsg threads survived sandbox process death. When we fork a new sysmsg\nthread, it is traced with PTRACE_O_EXITKILL, so we need to set PDEATHSIG\nbefore detaching from it.\n\nSigned-off-by: Andrei Vagin <avagin@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1531147bf2e9b63f9bb068d808582c1ab5cc022d", "commit_date": "2023-09-20T20:06:08Z", "commit_message": "Automated rollback of changelist 564000728\n\nPiperOrigin-RevId: 567054388", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c8e91d04c692978b50c1bad48f7c41193fa0922", "commit_date": "2023-09-20T19:58:03Z", "commit_message": "fs/overlay: create the \"work\" directory in `workdir`\n\nLinux creates the \"work\" directory in `workdir`.  Docker calls chown on it and\nfails if it doesn't exist.\n\nPiperOrigin-RevId: 567053404", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02f70b5df083b640c427290ba2229bcdfe486ad9", "commit_date": "2023-09-20T19:38:39Z", "commit_message": "Implement a subset of `keyctl(2)` and `keyrings(7)` for better Docker support.\n\nThe intention of this change is to cover a sufficient surface to accommodate\nthe use of running Docker within gVisor, rather than a full implementation.\n\nThis implements the following features:\n\n  - Keys as a first-class concept in the kernel.\n  - Tracking keys in user namespaces.\n  - Task session keyrings: possession, inheritance.\n  - Key permission enforcement.\n  - The following `keyctl(2)` operations:\n    - `KEYCTL_GET_KEYRING_ID`\n    - `KEYCTL_DESCRIBE`\n    - `KEYCTL_JOIN_SESSION_KEYRING`\n    - `KEYCTL_SETPERM`\n\nNotably, this does not implement:\n\n  - The ability to actually add any keys other than the session keyring\n    (which does not hold any cryptographic key data).\n  - Other special keyrings (thread keyring, process keyring, user session\n    keyring, etc.).\n  - Lots of `keyctl(2)` operations.\n  - Key expiration.\n  - Key garbage collection. Keys live until their user namespace is destroyed.\n    However, each user namespace is limited to 200 keys, so memory growth is\n    bounded.\n  - `add_key(2)`\n  - `request_key(2)`\n\n... However, this makes design choices that seem odd given the limited scope\nof this change, but make sense when taking into account the desire to\neventually accommodate them in the future. For example, there are many\n`switch` statements with only one option for session keyrings, which would get\nmore options when adding support for other special keyrings. Similarly, the\nsignature of `PossessedKeys` takes in all 3 special \"possessed\" keyrings, but\ncurrently only ever gets the session keyring as non-nil.\n\nPiperOrigin-RevId: 567047896", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81a42184e191be69f1624ee3481e66049e40da12", "commit_date": "2023-09-20T18:41:32Z", "commit_message": "Reorder nvidia driver versions.\n\nPiperOrigin-RevId: 567031594", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "539a8464f35e16892b31df860fc9c2a798af68d1", "commit_date": "2023-09-20T17:39:20Z", "commit_message": "Qualify NVIDIA 525.125.06 driver version.\n\nDriver version has been qualified on GKE w/ nvidia's basic workload\nand pytorch benchmarks.\n\nPiperOrigin-RevId: 567009651", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cd842b20a3ce91952f85c4ef6910b0e87917c65", "commit_date": "2023-09-19T21:51:59Z", "commit_message": "Automated rollback of changelist 557941259\n\nPiperOrigin-RevId: 566749598", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "640ec03f92ade885c2ee3b4829039dd08f9adf43", "commit_date": "2023-09-19T21:10:52Z", "commit_message": "Fix mount table corruption.\n\nBefore this, mount propagation could cause multiple mounts to have the same\nparent and mountpoint, violating the mountTable contract. Now, when there's\nan existing mount at a propagation point, it's added as a child of the new\nmount.\n\nPiperOrigin-RevId: 566738099", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "949461f2b3624329b4c02744e10c631dabd53eaa", "commit_date": "2023-09-19T20:46:56Z", "commit_message": "Automated rollback of changelist 558922801\n\nPiperOrigin-RevId: 566731014", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "181a57866ad0fab5f50e139e789a19314e7e8eaa", "commit_date": "2023-09-19T19:37:33Z", "commit_message": "Add ABI for `keyctl(2)`.\n\nPiperOrigin-RevId: 566711348", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50c62321fdd077c3cad9c420cf2776047ffa89a7", "commit_date": "2023-09-19T19:14:19Z", "commit_message": "KVM: Remove `_` prefix from KVM `ioctl` constants.\n\nThis is useful to be able to refer to them from external packages, such as\nto represent the `ioctl(2)` syscall profile that the Sentry has with the\nKVM platform.\n\nPiperOrigin-RevId: 566705114", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8675708cb8356da419398863e9f997b5cc437bf0", "commit_date": "2023-09-19T17:48:35Z", "commit_message": "Handle arbitrarily large Fuse Dirent Namelen.\n\nIf FUSEDirent.Namelen is larger than the remaining payload size, then the\ndirent is probably invalid. We should skip it.\n\nPiperOrigin-RevId: 566678679", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a7617aed21c3d17d8a2570d7e22cf27c2692e17", "commit_date": "2023-09-18T23:46:52Z", "commit_message": "Move pytorch benchmark to GPU directory.\n\nThe pytorch image is huge, about 7-8 GB. This doesn't\nneed to be downloaded with the other benchmark images. Move\nit to a GPU directory to speed up benchmark runs.\n\nPiperOrigin-RevId: 566449296", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "313485846896a73bb39d985a221b1aa46e85dc8a", "commit_date": "2023-09-16T03:02:41Z", "commit_message": "Tweaks to containerd tests and helpers.\n\nPiperOrigin-RevId: 565839195", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d81768d4c8d29d2a2e0880f615d04e1dd79c88c7", "commit_date": "2023-09-16T02:44:22Z", "commit_message": "Remove peer credential check from control server.\n\nThe peer credential check worked by querying the peer's UID using SO_PEERCRED.\nHowever, when sandbox is configured with custom UID/GID mappings, which it is\nin the following situations:\n1. When not using directfs, sandbox has a mapping of only `65534:65534:1`. So\n   all other non-65534 UIDs are unmmaped.\n2. When using directfs with userns-remap. The sandbox has the same UID/GID\n   mapping as the container.\n\nIn these cases, when the root user tries to connect, the host root user is not\nmapped. Unmapped IDs are translated to overflowuid/gid, which happens to\ndefault to 65534. This leads to unexpected results:\n- Without directfs, this check allows any connection, because sandbox is also\n  running as nobody/65534.\n- In the directfs+userns-remap case, all connections are denied.\n\nThis check doesn't really enforce anything. Hence remove it.\n\nThe real enforcement mechanism is the file mode of the unix domain socket over\nwhich the connection happens. The socket file's mode depends on umask, which\ndefaults to 022. Hence only the user which creates the sandbox via\n`runsc create` has write permission on this socket. So only the sandbox creator\nor root can connect to the sandbox, as intended.\n\nFixes #9356\n\nPiperOrigin-RevId: 565836818", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ff1e908156acadf98e2473c349f879ff54ec7e7", "commit_date": "2023-09-15T21:58:29Z", "commit_message": "Add state:\"nosave\" annotation to nvproxy.objsMu.\n\nWith this, checkpoint command succeeds on nvproxy containers.\n\nUpdates #9363.\n\nPiperOrigin-RevId: 565786118", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36b9b19daca9e7d723388132e787e3010aa30711", "commit_date": "2023-09-15T20:13:26Z", "commit_message": "Do not use abstract sockets for control server.\n\nAny user can connect to an abstract socket. See \"Abstract sockets\" section in\nunix(7). Filesystem UDS requires write permission to connect to. Hence, file\nmode is used to protect the server.\n\nPiperOrigin-RevId: 565759783", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c40c16ba80e487c1fc6d24f539f33b902e8aca4", "commit_date": "2023-09-15T18:41:00Z", "commit_message": "Exempt proposal issues from being closed as stale.\n\nProposals usually have more longevity and contain interesting ideas.\nAlso clean up \"new feature\" and \"enhancement\" from the list. Those labels don't\nexist in gVisor repo.\n\nPiperOrigin-RevId: 565735357", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d353f07ba5bb62d0b58ba741e3f6d88774c35a79", "commit_date": "2023-09-15T18:19:57Z", "commit_message": "Merge pull request #9381 from testwill:typo\n\nPiperOrigin-RevId: 565729064", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a99bf4a8ad59d17cd039837dc5da2f88f86cd50c", "commit_date": "2023-09-15T06:47:10Z", "commit_message": "fix: successfully typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b192bf37363f5ad18a533cb19448a32326613316", "commit_date": "2023-09-15T03:56:26Z", "commit_message": "Handle large control socket paths.\n\nUDS connect and bind fail when the socket path being used is more than 107 in\nlength. Shorten the path using procfs: \"/proc/self/fd/{parentFD}/{sockName)\"\n\nThis avoids falling back to using abstract sockets in some instances.\n\nSuggested-by: Andrei Vagin <avagin@google.com>\nPiperOrigin-RevId: 565557006", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e01d4387d2e4af562201ba93c8e93074836ae130", "commit_date": "2023-09-15T00:26:31Z", "commit_message": "Merge pull request #9377 from milantracy:codeqlstatus\n\nPiperOrigin-RevId: 565522379", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29d82338fc2a5a19b99f28f2622439d31bd4b8fb", "commit_date": "2023-09-14T22:34:53Z", "commit_message": "Enhance stale action with more labels and a smaller close window.\n\nThe action also ignores a few more labels.\n\nPiperOrigin-RevId: 565494794", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f7da79cbce2a608a225ab5e056f710347ff0262", "commit_date": "2023-09-14T22:30:55Z", "commit_message": "Add CodeQL status badge for its visibility.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73f4b821a1696a215590417549fbea03fe07a8f5", "commit_date": "2023-09-14T21:53:26Z", "commit_message": "Change namespace cloning so that it clones mounts depth-first.\n\nThis saves on allocations.\n\nThis change is a subset of the changes in cl/563529897 and cl/563752003.\nCommitting this change in more discrete parts will help narrow down the\ncauses of b/299603749.\n\nPiperOrigin-RevId: 565484026", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0a9bb7b3ab6514323b52e81a5bd52210bbed490", "commit_date": "2023-09-14T20:25:12Z", "commit_message": "Additionally expect the custom tos/tclass in TOS_TCLASS_EXPECT_DEFAULT case.\n\nPiperOrigin-RevId: 565458888", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad68fe1d68c5ab7adcb85aec313dc48f2f4080a7", "commit_date": "2023-09-14T18:04:00Z", "commit_message": "images: use gcr.io/syzkaller/syzbot as the base for syzkaller images\n\ngcr.io/syzkaller/env isn't built for ARM64.\n\nPiperOrigin-RevId: 565419016", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3dda3741d8eb531b9f284e4d70d86c952bce94c8", "commit_date": "2023-09-13T19:01:52Z", "commit_message": "Fix CodeQL so that it does not fail the github check.\n\nPiperOrigin-RevId: 565119657", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9117572ae02ffe41efd7ea51e64d4a4f413b88e1", "commit_date": "2023-09-13T17:25:05Z", "commit_message": "Add \"type: enhancement\" to labels protected from the stale action.\n\nPiperOrigin-RevId: 565089338", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b86d06d7e51b1e70c2c627e04c5300fa035fcd81", "commit_date": "2023-09-13T00:37:50Z", "commit_message": "Merge pull request #9215 from ekzhang:ekzhang/perf-nvidia-cli-info\n\nPiperOrigin-RevId: 564882593", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "94500414c9170f00d4351339bfd87683e02674f3", "commit_date": "2023-09-12T18:41:11Z", "commit_message": "Merge pull request #9359 from milantracy:codeqlconfig\n\nPiperOrigin-RevId: 564786128", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1910a4577f0183bf444660985f30dc78ef3a74ca", "commit_date": "2023-09-12T18:29:05Z", "commit_message": "cgroupfs: do not return errors from strconv.ParseInt() to write()\n\nArbitrary errors are not convertible to errnos for syscall return and cause the\nsentry to panic.\n\nPiperOrigin-RevId: 564782206", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d06f309ed5d76dc4c085ab88166f8f5a6161b04", "commit_date": "2023-09-12T17:23:03Z", "commit_message": "Increase stale action ops per run.\n\nRight now we're capped at 30, but have 569 open issues and 192 open PRs.\n\nPiperOrigin-RevId: 564760282", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8758e992c5ca892be1830534a62cc85298061016", "commit_date": "2023-09-11T19:51:18Z", "commit_message": "perf: Remove call to nvidia-container-cli info\n\nThis call is repeated on every container startup sequence, but it is expensive, consistently taking between 2-3 seconds to run each time. This adds a significant amount of startup latency to every container. From `strace` output, the main issue appears to be a call to `openat(AT_FDCWD, \"/dev/nvidia0\", O_RDWR|O_CLOEXEC)`. The first time this is called, it creates a new open device file descriptor and blocks for 2 seconds while doing so. This was measured on a `g4dn.2xlarge` instance on AWS, running a Tesla T4 GPU.\n\nFor comparison, the `nvidia-container-prestart-hook` for runc also runs `nvidia-container-cli` during container boot, but it only calls it once for the `configure` command. gVisor appears to call it twice, once for `info` and then for `configure`.\n\nBy removing the `info` call, or at least only running it when the GPU device files are not already present on the host, GPU container startups can be 2-3 seconds faster.\n\nDoes this sound reasonable? I'm not actually familiar with why the `/dev/nvidia0` file takes 2-3 seconds to open, or why GPU device files need to be explicitly loaded. But I tested the change, and gVisor nvproxy still works.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8f2bb6d21ba55b13d6356cb78d7039b2b0dfe51", "commit_date": "2023-09-11T19:01:06Z", "commit_message": "Don't build tensorflow image on ARM.\n\nThe upload image test is failing due to the tensorflow image not being\nsupported on ARM.\n\nPiperOrigin-RevId: 564458336", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1afe6d14e767dd359840b29a55fb849b5a2efb74", "commit_date": "2023-09-11T18:41:47Z", "commit_message": "Add initial CodeQL config for gVisor.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb4410f44e3291f7aa34a2655cd683cac7d149cb", "commit_date": "2023-09-09T13:50:38Z", "commit_message": "Rollback 6ceceae9385c and 206e88db3653.\n\nSyzkaller is reporting crashes relating to changes made by these commits.\nRolling back for now. Should be rolled forward with fix.\n\nReported-by: syzbot+9868746b8b0f679da548@syzkaller.appspotmail.com\nPiperOrigin-RevId: 564000728", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "717539fbd78ae05798fa00712556ec15a55b7156", "commit_date": "2023-09-08T20:57:42Z", "commit_message": "Return user_mss if user_mss is set and socket is unconnected.\n\nHas the same effect as Linux commit 34dfde4ad87b (\"tcp: Return user_mss for\nTCP_MAXSEG in CLOSE/LISTEN state if user_mss set\").\n\nUpdated test to accept both values (default and user set) so test works on\nnewer and older kernels.\n\nPiperOrigin-RevId: 563844012", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad275a100e58195f8e4f441befba3327be51ff04", "commit_date": "2023-09-07T23:28:00Z", "commit_message": "Fix debug builds.\n\nThis change also adds instructions for using a debugger with syscall tests.\n\nFixes #9039\n\nPiperOrigin-RevId: 563576842", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "206e88db3653b4de668a5a4f51406fc6967150df", "commit_date": "2023-09-07T20:37:20Z", "commit_message": "Fix cwd/root update method during namespace cloning.\n\nThe previous implementation incorrectly assumed order would be preserved\nin the map.\n\nReported-by: syzbot+da2bc2bee99641f22de4@syzkaller.appspotmail.com\nPiperOrigin-RevId: 563529897", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27d7936e933a89c0b55c20966a13ffb40ad2abca", "commit_date": "2023-09-07T17:08:15Z", "commit_message": "Fix github workflow test.\n\nPiperOrigin-RevId: 563466164", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c215e67a50f8f6f4d51072318571e0ab54562bc8", "commit_date": "2023-09-07T00:27:02Z", "commit_message": "Let devices cgroup add/remove rules via devices.allow and devices.deny.\n\nPiperOrigin-RevId: 563261158", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ceceae9385c44d639a2aebc78bf3b4a8e970e05", "commit_date": "2023-09-06T22:43:02Z", "commit_message": "Abstract mount tree cloning into its own mount method.\n\nWhen copying a mount tree, new child mounts are added to a mount's\npending list. Each of these mounts has its pending mountpoint already set\nwith setKey. Eventually this method will be used to enable recursive binds.\n\nPiperOrigin-RevId: 563236298", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2319f958fc930d0a0980e094928bc233976b8992", "commit_date": "2023-09-06T21:58:03Z", "commit_message": "Automated rollback of changelist 536743330\n\nPiperOrigin-RevId: 563224104", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8aee177900da1a2a59f7cc6ca79d688677394008", "commit_date": "2023-09-06T21:06:31Z", "commit_message": "Add more justification about why shared mount propagation is not allowed.\n\nUpdates #9324\n\nPiperOrigin-RevId: 563208592", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4146284b601b8e7c551bf172c5fc1f2c7cb972c5", "commit_date": "2023-09-06T20:58:08Z", "commit_message": "Merge pull request #9339 from kevinGC:tcsetsf2\n\nPiperOrigin-RevId: 563207341", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0230a371c23bd4d750e7e60e0e4bf7223ef7087f", "commit_date": "2023-09-06T20:29:19Z", "commit_message": "Merge pull request #9336 from thundergolfer:jonathon/dev-pts-eof-handling\n\nPiperOrigin-RevId: 563199056", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e550bfbd052ddbec0ab214aa1991fad711cf013b", "commit_date": "2023-09-06T20:13:19Z", "commit_message": "Have lgetxattr return ENODATA.\n\nIt is a workaround to lgetxattr/lsetxattr working with security.capacity when running docker in gvisor.\n\nPiperOrigin-RevId: 563194162", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f22d854395ff29a377c5f4fb5100635b9856bb4e", "commit_date": "2023-09-06T19:30:10Z", "commit_message": "Merge pull request #9327 from kevinGC:benchmarkxdp\n\nPiperOrigin-RevId: 563182220", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d30c39364daa7c6b5cca3af7fd9b5935409a6f30", "commit_date": "2023-09-06T17:54:41Z", "commit_message": "Split the ring implementation into its own package.\n\nThe ring data structure's requires it's own implementation of Entry. With\nthe new version you can more easily be part of multiple rings at once. Also,\na user who wants to use ilist probably doesn't need ring as well, so it makes\nsense to separate the two.\n\nPiperOrigin-RevId: 563151782", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c584a1a435d616ec91a58d5cdba892b6bb000128", "commit_date": "2023-09-06T17:05:13Z", "commit_message": "Add a github workflow that marks issues and PRs as stale.\n\nPiperOrigin-RevId: 563136967", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c227d185a4c513aa71eff950506a257d7f95ec8a", "commit_date": "2023-09-06T02:15:45Z", "commit_message": "Emit SentryTcpListenEvent when the application listens on a tcp port.\n\nPiperOrigin-RevId: 562957239", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8c399a0930387c98aeebe073ead309bffbccf01", "commit_date": "2023-09-06T01:18:18Z", "commit_message": "Fix EOF (^D) handling in devpts (partially addr #9333)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0029cc0ff4b85479177a82e13809b6501809272", "commit_date": "2023-09-05T22:51:21Z", "commit_message": "A few fixes to run tests on 6.2+ kernels\n\n* disable broken socket_inet_loopback test // Lucas Manning\n* disable lseek tests on anon inodes. They have been broken by\ncommit e7478158e1378325907edfdd960eca98a1be405b\nDate:   Wed Jun 29 15:06:57 2022 +0200\n    fs: clear or set FMODE_LSEEK based on llseek function\n\n* don't check memory.kmem.limit_in_bytes, it has been deprecated and dropped:\ncommit 86327e8eb94c52eca4f93cfece2e29d1bf52acbf\nDate:   Tue Jul 4 13:52:40 2023 +0200\n    memcg: drop kmem.limit_in_bytes\ncommit 58056f77502f3567b760c9a8fc8d2e9081515b2d\nDate:   Fri Nov 5 13:37:44 2021 -0700\n    memcg, kmem: further deprecate kmem.limit_in_bytes\ncommit 0158115f702b0ba208ab0b5adf44cae99b3ebcc7\nDate:   Mon Sep 23 15:37:22 2019 -0700\n    memcg, kmem: deprecate kmem.limit_in_bytes\nPiperOrigin-RevId: 562915457", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7928ff6f0c5ce47b3a9a4e0773ca68a5df6d7c93", "commit_date": "2023-09-05T16:53:50Z", "commit_message": "tty: enable `TCSETSF`\n\nWhile there is a difference between flavors of this ioctl (`TCSETS`,\n`TCSETSF`, `TCSETSW`), in practice it seems not to matter. We should let\nusers call `TCSETSF` and can implement those differences if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a9134c2f04b2e21ce0cfc5b33633ce573aa9429", "commit_date": "2023-08-31T18:09:15Z", "commit_message": "netstack: benchmark xdp endpoint\n\nThis just swaps out the fdbased endpoint for an XDP one. Some related\nchanges in here:\n\n- Moved the AF_XDP BPF program into its own Go package so it can be\n  shared.\n- Added a flag to tcp_benchmark to disable user namespaces. This helps\n  when running as root, which is required to install BPF programs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}