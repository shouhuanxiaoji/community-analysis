{"master": [{"commit_oid": "f3004b45e7f8266a3f00b146d4742821d04b7940", "commit_date": "2023-09-06T13:33:41Z", "commit_message": "Merge pull request #68 from openSUSE/queue\n\nmultipath-tools 0.9.6", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fb0ce3afae094daa924b357d4b1aebc86928254", "commit_date": "2023-09-01T21:22:02Z", "commit_message": "Fix hwtable test after \"libmultipath: don't bother to recheck timeout\"\n\nThe previous patch  \"libmultipath: don't bother to recheck timeout\"\ncauses sysfs_get_timeout() to be called less frequently. Adapt the\ntests.\n\nSigned-off-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df4da1b8fa1bf69a07cfbf6dd2f05abdc0127296", "commit_date": "2023-09-01T16:18:36Z", "commit_message": "libmultipath: standardize datacore prioritizer timeouts\n\nIf users don't add a timeout to the datacore priorizier arguments, it\nshould use the checker_timeout. Also, don't limit possible timeout\nvalues, to match the other prioritizers.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea91463429610dc447be4759e36e87965ca01de2", "commit_date": "2023-09-01T16:18:36Z", "commit_message": "libmultipath: make prioritizer timeouts work like checker timeouts\n\nMultipath's prioritizers previously didn't use the sysfs timeout for\nscsi devices, and used a prioritizer specific default timeout (although\nin practice, all the prioritizers except hds used 60 seconds). Now\nprioritizers deal with timeouts the same way as the checkers. When\nselecting a prioritizer, select_checker_timeout() is called if the path\ndoesn't already have a checker_timeout set, an the prioritizers that use\ntimeouts now all use the path's checker_timeout. This change also\nincidentally fixes some bugs where the detect_alua() function and the\npath_latency prioritizer were assuming that the timeout was in a\ndifferent unit than it was (seconds vs milliseconds).\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a9d340ff30203744451ece740f3a752f86f788e", "commit_date": "2023-09-01T16:18:36Z", "commit_message": "libmultipath: make checker_timeout a path variable\n\nFactor the code to get the checker_timeout out of select_checker() into\nits own select_checker_timeout function, and use that to set a path\nvariable. This variable will be used by future patches.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f108a6aae2ea962f2e900c64e515f0aacbb238f", "commit_date": "2023-09-01T16:18:36Z", "commit_message": "libmultipath: don't bother to recheck timeout\n\nThis is almost always pointless work. c->timeout has already been set.\nThe only reason why this recheck existed was to deal with the\npossibility that the sysfs value had changed.  It is unlikely that users\nwill update the sysfs value to change the multipath timeout while\nmultipathd is running. They can alway reload multipathd if they want\nit changed, anyways.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc9c4cf674bd185553b90dacadc9fe5b76b7b140", "commit_date": "2023-08-29T20:40:21Z", "commit_message": "libmultipath: bump version to 0.9.6", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bbb77f318ee483292f50a7782aecaecc7e60f727", "commit_date": "2023-08-29T20:40:21Z", "commit_message": "libmultipath: fix max_sectors_kb on adding path\n\nA user can change the value of max_sectors_kb on the multipath device\nand its path devices.\nSo when a path is deleted and then re-added, its value will not be the\nsame as the multipath device. In that case the IOs could be mis-sized.\n\nOn reload, this patch re-apply max_sectors_kb value of the multipath\ndevice on its path devices.\n\nSigned-off-by: Etienne AUJAMES <eaujames@ddn.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd720397fad9808cf42e42d5ff059a7ec1816492", "commit_date": "2023-08-29T20:40:21Z", "commit_message": "multipath-tools: treat disable_changed_wwids like other deprecated keywords\n\nCc: Martin Wilck <mwilck@suse.com>\nCc: Benjamin Marzinski <bmarzins@redhat.com>\nCc: Christophe Varoqui <christophe.varoqui@opensvc.com>\nCc: DM-DEVEL ML <dm-devel@redhat.com>\nSigned-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>\nReviewed-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f220ab6678184b156b800c2885c0147acc9b2aa8", "commit_date": "2023-08-29T20:40:21Z", "commit_message": "multipath-tools: fix docs\n\nMainly; add multipathc info, and info to check man pages\n\nCc: Martin Wilck <mwilck@suse.com>\nCc: Benjamin Marzinski <bmarzins@redhat.com>\nCc: Christophe Varoqui <christophe.varoqui@opensvc.com>\nCc: DM-DEVEL ML <dm-devel@redhat.com>\nSigned-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2c08b0b020fa8ca14c58a05205856204c1b28c0", "commit_date": "2023-08-29T19:39:42Z", "commit_message": "GitHub workflows: switch to Ubuntu 22.04 runner\n\nOnly for \"abi\" not yet, we need make sure that it's output remains\nunchanged if we change the runner.\n\nSigned-off-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ccc4a0204d2c22fce4e9c5511ae466e2ec5b7618", "commit_date": "2023-08-29T19:39:42Z", "commit_message": "GitHub workflows: use Fedora 37 in native.yaml\n\nSigned-off-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "953230e3314e77d5c7afc85afc0a2b7ba8551f95", "commit_date": "2023-08-29T19:39:42Z", "commit_message": "GitHub workflows: enable Debian \"bookworm\"\n\nSigned-off-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c686005521996cf53bb9a8fac3e02a0cd1bc0a23", "commit_date": "2023-08-29T19:39:33Z", "commit_message": "libmultipath: ignore nvme devices if nvme native multipath is enabled\n\nIf the nvme native multipath driver is enabled, blacklist nvme devices\nfor dm-multipath by default. This is particularly useful with\n\"find_multipaths greedy\".\n\nSigned-off-by: Martin Wilck <mwilck@suse.com>\nReviewed-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "058b5f5cb18de2640c3a499bbf628236622b6a7f", "commit_date": "2023-08-29T19:39:23Z", "commit_message": "libmultipath: fix dev_loss_tmo even if not set in configuration\n\nIf pp->dev_loss_tmo == DEV_LOSS_TMO_UNSET, sysfs_set_scsi_tmo() would\nnot set it to min_dev_loss_tmo, causing the system dev_loss_tmo value\n(by default, 30s) to remain unchanged. Fix it.\n\nFixes: 6ad77db (\"libmultipath: Set the scsi timeout parameters by path\")\nSigned-off-by: Martin Wilck <mwilck@suse.com>\nReviewed-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44f1f084a27abac3e6282812ae137e89c4e7495c", "commit_date": "2023-08-29T19:39:18Z", "commit_message": "libmultipath: dm_get_maps(): remove spurious assignment\n\nIssue found by coverity:\n  CID 393674:  Code maintainability issues  (UNUSED_VALUE)\n  Assigning value \"NULL\" to \"mpp\" here, but that stored value is overwritten\n  before it can be used.\n\nSigned-off-by: Martin Wilck <mwilck@suse.com>\nReviewed-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ed9621a7f2595c8460a59ddaa766ff724a2a161", "commit_date": "2023-06-26T13:35:03Z", "commit_message": "multipath-tools build: accept KBUILD_BUILD_TIMESTAMP from env\n\nIt would appear KBUILD_BUILD_TIMESTAMP is meant to be used the same way as in\nthe linux kernel build. For linux, builders are supposed to set\nKBUILD_BUILD_TIMESTAMP in the environment if they want a stable timestamp.\n\nThe libddmmp makefile however tries to directly call git to get a timestamp,\nwhich fails in a typical Debian build environment, which is not a full git\nsource tree.\n\nHave libdmmp/Makefile use KBUILD_BUILD_TIMESTAMP from the environment if\navailable, otherwise use git as before.\n\nmwilck: changed slightly, preserving the original logic\n\nSigned-off-by: Chris Hofstaedtler <zeha@debian.org>\nSigned-off-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc7d7d70330b14505d32d846a18c5571168262f8", "commit_date": "2023-06-26T13:35:03Z", "commit_message": "multipath-tools build: rename PKGCONFIG to PKG_CONFIG\n\nDebian's build system helpers automatically set \"PKG_CONFIG\" correctly, so it\nwould be convenient for Debian to use this name instead of \"PKGCONFIG\".\n\nThe majority of projects also seem to call this makefile variable \"PKG_CONFIG\".\n\nSigned-off-by: Chris Hofstaedtler <zeha@debian.org>\nAcked-by: Sam James <sam@gentoo.org>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d469731c2a18529ef6fc09eee0ee646e3b1ed87b", "commit_date": "2023-06-16T14:17:52Z", "commit_message": "multipath-tools: fix syntax and spelling errors\n\nCc: Martin Wilck <mwilck@suse.com>\nCc: Benjamin Marzinski <bmarzins@redhat.com>\nCc: Christophe Varoqui <christophe.varoqui@opensvc.com>\nCc: DM-DEVEL ML <dm-devel@redhat.com>\nSigned-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "85bbf894d583253cd49805350560aff67e905aaa", "commit_date": "2023-06-15T16:38:08Z", "commit_message": "multipathd: don't assume mpp->paths will exist in need_switch_pathgroup\n\nWhen need_switch_pathgroup() is called by deferred_failback_tick(),\nthere is a chance that mpp->paths will be NULL, even if there are paths\nin the multipath device's pathgroups. Instead check if there are\nmultiple pathgroups, since multipath can't be using the wrong pathgroup\nif there is one or none.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18975ce7c600e4a62382cab5ab8258ce03ae1d84", "commit_date": "2023-06-15T16:38:05Z", "commit_message": "multipathd: reload map if the path groups are out of order\n\nneed_switch_pathgroup() only checks if the currently used pathgroup is\nnot the highest priority pathgroup. If it isn't, all multipathd does is\ninstruct the kernel to switch to the correct pathgroup.  However, the\nkernel treats the pathgroups as if they were ordered by priority. When\nthe kernel runs out of paths to use in the currently selected pathgroup,\nit will start checking the pathgroups in order until it finds one with\nusable paths.\n\nneed_switch_pathgroup() should also check if the pathgroups are out of\norder, and if so, multipathd should reload the map to reorder them\ncorrectly.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ccd7b8f820cede10646f3f779e9313e488c2997", "commit_date": "2023-06-15T16:38:05Z", "commit_message": "multipathd: only refresh priorities in update_prio()\n\nMultipathd previously had various rules to update priorities in\nupdate_prio(), need_switch_pathgroup(), and reload_map(). Instead, only\nupdate the priority in update_prio().  To cover the cases where the\npriorities were getting updated in other functions, update_prio() now\nalways updates all paths' priorities, if the priority on the path that\nit was called with changes.\n\nAlso, do not try to update a path's priority if it is down. Previously,\nwhen refreshing all the paths' priorities, a path could have its\npriority updated when it was in the PATH_DOWN state, as long as its\npriority was PRIO_UNDEF. But if a path is down, and the last time\nmultipath tried to get its priority, it failed, it seems likely that the\nprioritizer will just fail again.\n\nFinally, skip updating all paths' priorities in\ndeferred_failback_tick().  Now that all the paths' priorities will get\nupdated when one changes before starting the deferred failback count,\nit's no longer necessary to update them all again when the failback\ntimeout expires.  The checker loop will continue to update them\ncorrectly while the timeout is going on.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31a31d9d02c4435aaeb905b85252288158f2e57d", "commit_date": "2023-06-15T16:38:05Z", "commit_message": "multipath-tools tests: add tests to verify PRIO_UNDEF changes\n\nMake sure that pathgroups that include paths with a PRIO_UNDEF priority\nare properly sorted.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb92d7529d4ccd46ddbc1ae97dccfe37175620db", "commit_date": "2023-06-15T16:38:05Z", "commit_message": "libmultipath: don't count PRIO_UNDEF paths for pathgroup priority\n\nWhen multipath is not set to group_by_prio, different paths in a\npathgroup can have different priorities. If there is a problem getting\nthe priority of an active path, its priority will be set to PRIO_UNDEF.\nThis will change the priority of the whole pathgroup, even though it's\nlikely that this is simply a temporary error. Instead, do not count\nPRIO_UNDEF paths towards to priority of the path group, unless there are\nno paths that have an actual priority. This will not effect the priority\nof multipath devices with group_by_prio, since all paths in a pathgroup\nwill have the same priority.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa5a2626325b8e66ef61c4495fc9654c5aeb7beb", "commit_date": "2023-06-15T16:38:01Z", "commit_message": "libmultipath: add \"detect_pgpolicy_use_tpg\" config option\n\nIf this and \"detect_pgpolicy\" are both selected and ALUA is\nautodetected, the multipath device will use the \"group_by_tpg\" policy\ninstead of the \"group_by_prio\" policy.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6566b3aa493f2523c1f70c8f6e031045aa06759", "commit_date": "2023-06-15T16:38:01Z", "commit_message": "libmultipath: add \"detect_pgpolicy\" config option\n\nThis allows configuations to use \"group_by_prio\" if alua is autodetected\nand another policy if it isn't, so they can work with detect_prio.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ed582a295d685ae6148e73c13bbcbd86eb0d134", "commit_date": "2023-06-15T16:38:01Z", "commit_message": "multipath-tools tests: add tests for group_by_tpg policy\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9bdf91423f54c47beea86d802f46c0579fee8dd", "commit_date": "2023-06-15T16:38:01Z", "commit_message": "libmultipath: add ALUA tpg path wildcard\n\nMake it possible to easily check a path's target port group.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3be31432250943db650dbe38443bbb84d561acce", "commit_date": "2023-06-15T16:38:01Z", "commit_message": "libmultipath: don't copy pgpolicy string in get_pgpolicy_name\n\ncopying the value into a passed in buffer doesn't help any of the\ncallers of this function. It's just wasted work.\n\nReviewed-by: Martin Wilck <mwilck@suse.com>\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1dd054ade0d0acf5807a9b55a06822e900c3fabb", "commit_date": "2023-06-15T16:37:31Z", "commit_message": "libmultipath: add group_by_tpg path_grouping_policy\n\nWhen we group paths by prio and the priority changes, paths can end up\ntemporarily in the wrong path groups.  This usually happens when some\npaths are down, so their priority can't be updated. To avoid this for\nALUA paths, group them by their target port group instead. The path\ngroups chosen by this policy won't always match with those chosen by\ngroup_by_prio, since it is possible for multiple ALUA target port\ngroups to have the same priority.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d3b27b551eb891350e6f15f6b28130445798ae0", "commit_date": "2023-06-15T15:56:40Z", "commit_message": "multipath-tools: fix spelling\n\nlibmultipath/structs_vec.c:270: mulitpath ==> multipath\nlibmultipath/libmultipath.version:36: overriden ==> overridden\nlibmpathutil/libmpathutil.version:36: overriden ==> overridden\n\nSUMMARY:\nmulitpath     1\noverriden     2\n\nCc: Martin Wilck <mwilck@suse.com>\nCc: Benjamin Marzinski <bmarzins@redhat.com>\nCc: Christophe Varoqui <christophe.varoqui@opensvc.com>\nCc: DM-DEVEL ML <dm-devel@redhat.com>\nSigned-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea73333bbc65d223b0413cd3938fe5b2e6eecc1f", "commit_date": "2023-06-05T09:39:37Z", "commit_message": "multipath-tools: adapt HITACHI/OPEN- config to work with alua and multibus\n\nALUA is needed by Hitachi Global-Active Device (GAD):\nhttps://knowledge.hitachivantara.com/Documents/Management_Software/SVOS/8.1/Global-Active_Device/Overview_of_global-active_device\n\n(Information about ALUA support from personal communication from Hitachi).\n\n\"no_path_retry\" recommendation from:\nhttps://knowledge.hitachivantara.com/Documents/Management_Software/SVOS/9.8.6/Volume_Management_-_VSP_5000_Series/Host_Attachment/05_Red_Hat_Linux_configuration_and_attachment#Device_Mapper_(DM)_Multipath_configuration.0D.0A____for_Red_Hat_Linux\n\nCc: Matthias Rudolph <Matthias.Rudolph@hitachivantara.com>\nCc: Martin Wilck <mwilck@suse.com>\nCc: Benjamin Marzinski <bmarzins@redhat.com>\nCc: Christophe Varoqui <christophe.varoqui@opensvc.com>\nCc: DM-DEVEL ML <dm-devel@redhat.com>\nSigned-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "57ee6f941a4f3ea68bba67e018cf10bd954144ac", "commit_date": "2023-05-24T09:28:11Z", "commit_message": "dm-parts.rules: fix warning reported by udevadm verify\n\nFix the following warning reported by udevadm verify:\n\nkpartx/dm-parts.rules:35 A comma between tokens is expected.\nkpartx/dm-parts.rules: udev rules check failed\n\nNote (mwilck): technically, this udev rule was parsed and\nexecuted by udev correctly, and this is unlikely to change.\nBut the missing comma didn't comply with the udev(7) man page.\nThis commit fixes that.\n\nSigned-off-by: Dmitry V. Levin <ldv@strace.io>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "787b6d3c44180ee5dee3336685ffdfe97317d933", "commit_date": "2023-05-24T09:17:40Z", "commit_message": "11-dm-mpath.rules: fix warnings reported by udevadm verify\n\nFix warnings reported by udevadm verify:\n\nmultipath/11-dm-mpath.rules:18 Whitespace after comma is expected.\n...\nmultipath/11-dm-mpath.rules: udev rules check failed\n\nNote (mwilck): technically, the syntax of the udev rules was correct;\nthey are parsed and executed by udev correctly, and this is unlikely\nto change. But systemd has enabled stricter checks in \"udevadm verify\"\nto ensure better readability of udev rules files\n(https://github.com/systemd/systemd/pull/26980). This commit\nmakes sure the multipath-tools rules comply with these checks.\n\nSigned-off-by: Dmitry V. Levin <ldv@strace.io>\nReviewed-by: Martin Wilck <mwilck@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}