{"master": [{"commit_oid": "caa716803a76680d6662d3f4021ed612157ab044", "commit_date": "2023-10-06T17:22:35Z", "commit_message": "tests: move all basenc tests to their own directory\n\n* tests/misc/base64.pl: Move to tests/basenc/base64.pl\n* tests/misc/basenc.pl: Move to tests/basenc/basenc.pl\n* tests/local.mk: Adjust accordingly", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "378dc38f48a0cbfde3f8002d5491cc96675c904f", "commit_date": "2023-10-06T17:21:12Z", "commit_message": "basenc: auto pad base32 and base64 inputs when decoding\n\nPadding of encoded data is useful in cases where\nbase64 encoded data is concatenated / streamed.\nI.e. where there are padding chars _within_ the stream.\nIn other cases padding is optional and can be inferred.\nNote we continue to treat partial padding as invalid,\nas that would be indicative of truncation.\n\n* src/basenc.c (do_decode): Auto pad the end of the input.\n* NEWS: Mention the change in behavior.\n* tests/misc/base64.pl: Adjust to not fail for missing padding.\nAddresses https://bugs.gnu.org/66265", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a2434d3e58e8ead6c4c92fd989da32fe648e1545", "commit_date": "2023-09-29T01:03:34Z", "commit_message": "sort: improve --help\n\nProblem reported by Jorge Stolfi (bug#66253).\n* src/sort.c (usage): Suggest looking at the manual for -n details.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c4670483238147850f3ae65e94d61dc0f9c678c", "commit_date": "2023-09-25T14:26:31Z", "commit_message": "doc: rm --help: mention that '.' or '..' are rejected\n\n* src/rm.c (usage): State that '.' or '..' are rejected.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de4e7042733a05a0e3097c372744af438db3e856", "commit_date": "2023-09-24T00:20:26Z", "commit_message": "wc: pacify \u2018make syntax-check\u2019\n\n* src/wc_avx2.c (wc_lines_avx2): Explicitly make it \u2018extern\u2019.\nNot sure why this is needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2245a958063244ab9efa5c670810b32a9a1add76", "commit_date": "2023-09-24T00:20:25Z", "commit_message": "wc: distribute src/wc.h\n\n* src/local.mk (noinst_HEADERS): Add src/wc.h.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f40c6b5cf20f6524c5775919c195c7638069d676", "commit_date": "2023-09-24T00:07:52Z", "commit_message": "wc: goto considered harmful\n\n* src/wc.c: Do not include assure.h.  Replace the only\nuse of \u2018assure\u2019 with \u2018unreachable\u2019 which is good enough.\n(wc, main): Remove labels and gotos.  This doesn\u2019t affect\nperformance in any way I can measure, and makes the code\na bit easier to follow.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6b8b1f9e77a3fde7bfd3dd6dbcec2b057ae73215", "commit_date": "2023-09-24T00:07:52Z", "commit_message": "wc: prefer signed integers\n\nPrefer signed to unsigned integers, to make it easier to catch\ninteger overflow errors.\n* src/wc.c: Do not include safe-read.\n(total_lines_overflow, total_words_overflow, total_chars_overflow)\n(total_bytes_overflow): Now bool, not uintmax_t.  All uses changed.\n(max_line_length): Now intmax_t, not uintmax_t.  All uses changed.\nThe total_... vars are still uintmax_t because overflow into them\nis checked.\n(page_size): Now idx_t, not size_t.\n(wc_lines, wc, get_input_fstatus, compute_number_width, main):\nPrefer signed to unsigned ints where either should do.\n(wc_lines, wc): Use read rather than safe_read, since we don\u2019t\nneed safe_read\u2019s checks for huge buffers.\n(wc): Redo call to mbrtoc32 to lessen the number of comparisons\nagainst its returned value.  Do this partly by keeping a pointer\nto the end of the buffer rather than a count.  Simplify\noverflow-checking code.\n(compute_number_width): Check for integer overflow.\nDon\u2019t assume size_t fits into unsigned long.\n* src/wc.h (struct wc_lines): Prefer signed integers.\n* src/wc_avx2.c: Do not include safe-read.h.\n(wc_lines_avx2): Prefer signed integers.  Use read, not safe_read.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8d41285fe494613a732f8060606d68ea3a8181d0", "commit_date": "2023-09-24T00:07:52Z", "commit_message": "wc: improve avx2 API\n\n* src/wc.c: Use \"#include <...>\" for files not in the current dir.\nInclude \"wc.h\" instead of declaring wc_lines_avx2 by hand.\n(wc_lines): New API, with no file name (no longer needed) and\nwith a return struct rather than arg pointers.  All uses changed.\nUse avx2_supported directly instead of using a function pointer.\nExploit C99-style declarations after statements.\nMultiply by 15 rather than dividing; it\u2019s faster and more accurate\nand cannot overflow here.\n(wc): Simplify based on wc_lines API change.\n* src/wc.h: New file.\n* src/wc_avx2.c: Include it, to check API better.\n(wc_lines_avx2): Use new API.  All uses changed.  Exploit C99.\nMake locals more local.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "769ace51e8a1129c44ee4e7e209c3b2df2111524", "commit_date": "2023-09-23T08:15:50Z", "commit_message": "factor,tail: avoid quadratic reallocation\n\n* src/factor.c (struct mp_factors): New member nalloc.\n(mp_factor_init): Initialize it.\n* src/factor.c (mp_factor_insert):\n* src/tail.c (parse_options): Use xpalloc to avoid quadratic\nworst-case behavior on reallocation.\n* src/tail.c (pids_alloc): New static var.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ecc4f4e44ef8797d1fcd01574ebb71999744d73", "commit_date": "2023-09-23T07:28:28Z", "commit_message": "doc: mention Unicode exceptions for wc", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6064bb86475d2318433cd28fa21e94063e07683", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "wc: simplify by removing SUPPORT_OLD_MBRTOWC\n\n* src/wc.c (SUPPORT_OLD_MBRTOWC): Remove.  All uses removed.\n(wc): Simplify by assuming C99-or-later behavior for mbrtoc32,\nwhich after all is a C11 API.  Fix the !SUPPORT_OLD_MBRTOWC\ncode, which evidently was never tested seriously.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17a9e79023fd98886f8e7e673965f61ec9569f6c", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "wc: 3\u00d7 speedup in C locale\n\nThe 3\u00d7 speedup was measured by invoking 'wc $(find * -type f)'\non the coreutils sources etc. on an Ubuntu 23.04 x86-64.\nThese changes also speed up wc 20% in UTF-8 locales.\n* src/wc.c (wc_isprint, wc_isspace): New static vars.\n(wc): Use them for speed.\n(main): Initialize them if needed.\n(isnbspace): Remove; no longer used.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bee39b93f54c4df105ba8b528c9637d67d16d21f", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "wc: treat encoding errors as non white space\n\n* src/wc.c (wc): Treat encoding errors like non white space\ncharacters.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31076e86898ab5b6e7975ca905b9a9b15122ecc6", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "wc: fix word count bug\n\n* bootstrap.conf (gnulib_modules): Remove c32isprint.\n* src/wc.c (wc): Consider all non-white-space characters\nto be word constituents, even if they are not printable.\nPOSIX requires this, and it is what BSD does.\nPartly do this by simplifying the check for a word,\nby counting word starts rather than word ends.\n* tests/wc/wc.pl: Test for the bug.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6648d4102f6fea171dcf3598c412b3842f2b84b", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "maint: omit some unused function tests\n\n* m4/jm-macros.m4: Do not check for ftruncate, iswspace,\nmkfifo, mbrlen, sysctl.  Coreutils no longer uses the\ncorresponding HAVE_* macros, typically because Gnulib\nhandles them now.\n* src/wc.c (iswspace): Remove; unused.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc1822a04284862ae63993b4d597ff2f30c2bb24", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "sort: not a special case for mbrtowc\n\n* configure.ac (GNULIB_MBRTOWC_SINGLE_THREAD): Define.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14d35d5bade2b714e2c7eb4538f21345ebe20684", "commit_date": "2023-09-23T07:28:27Z", "commit_message": "maint: prefer char32_t to wchar_t\n\nThis should work better on non-glibc platforms that don\u2019t\nuse Unicode for wchar_t.  However, POSIX appears to prohibit\nthis for printf.c so leave that alone.\n* bootstrap.conf (gnulib_modules): Add btoc32, c32iscntrl,\nc32isprint, c32isspace, c32width, mbrtoc32.  Remove btoc, wcwidth.\n* src/df.c, src/ls.c, src/wc.c:\nInclude uchar.h instead of wchar.h and wctype.h.\n* src/df.c (replace_invalid_chars):\n* src/ls.c (quote_name_buf):\n* src/wc.c (isnbspace, wc):\nUse char32_t instead of wchar_t.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5a210a9c86f3e15b6ae988da4505a031b6a9f7c", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "wc: simplify #if MB_LEN_MAX\n\n* src/wc.c: Don\u2019t have special #ifs for platforms where\nMB_LEN_MAX is 1.  On these platforms, MB_CUR_MAX is 1 as well,\nso the compiler should optimize away all multi-byte code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb51f74ff61d23dd6067e82833aac0ca62312261", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "wc: avoid undefined conversion state\n\n* src/wc.c (wc): When mbrtowc returns (size_t) -1, zero the\nconversion state, since POSIX says it\u2019s undefined.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "092f8178c00fb9c3b2aaf21c5380a529d503afb8", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "maint: use mbszero\n\n* bootstrap.conf (gnulib_modules): Add mbszero.\n* src/df.c (replace_invalid_chars):\n* src/ls.c (quote_name_buf):\n* src/pathchk.c (portable_chars_only):\n* src/printf.c (STRTOX):\n* src/wc.c (wc):\nPrefer mbszero to clearing an mbstate_t by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c80a538d9696e4e1826b6cbb68bc53fe7fd97e8c", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "maint: prefer mcel\n\nThis causes Gnulib code to also use mcel, which is more consistent.\n* bootstrap.conf (avoided_gnulib_modules): Avoid mbuiter\nand mbuiterf, since we can now just use mcel.  This avoids\nthe need to ship and compile mbchar and these modules.\n(gnulib_modules): Change mcel to mcel-prefer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c16044d8d28a5f6cc02280eaa531487e472f629", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "wc: stop worrying about EBCDIC, shift-JIS, etc\n\n* src/wc.c: Do not include mbchar.h.\n(wc): Check for ASCII characters instead of using is_basic.\nOther parts of Gnulib and coreutils already assume the encoding\nis upward compatible with ASCII, and the old code wouldn\u2019t\nhave worked anyway with shift-JIS.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17bddc047b5003c1b02cf98f9f3484a681cfa627", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "expr: use mcel\n\nThe mcel API is simpler and corresponds more closely to how\nEmacs etc. behave when the input has encoding errors,\nsince it treats each encoding-error byte separately.\n* bootstrap.conf (gnulib_modules): Add mcel.\n* src/expr.c: Include mcel.h instead of mbuiter.h.\n(mbs_logical_cspn, mbs_logical_substr, mbs_offset_to_chars):\nUse mcel API.\n(mbs_logical_substr): Use ximemdup0 so as not to waste memory in\nthe result, fixing a FIXME.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "654700ba5d2a58efc474e00baf2bd4e57bf09095", "commit_date": "2023-09-23T07:28:26Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "259350229028c956fdd5d91c1a6092d4d90cf8a8", "commit_date": "2023-09-21T18:04:14Z", "commit_message": "build: avoid build failures on gcc <= 10, or clang\n\nOn gcc 10 the following build failure occurs:\n  \"error: a label can only be part of a statement\n   and a declaration is not a statement\"\nThis is because the current code is non standards conforming,\nbut GCC >= 11 will compile it (even with the -Wpedantic option).\nThis issue is tracked for GCC at:\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=111526\n\n* src/tail.c (parse_options): Avoid a declaration after label,\nby using a surrounding block.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d24a117707323c9ccc6ff4ad1e50ecb78aad937e", "commit_date": "2023-09-20T14:53:34Z", "commit_message": "tail: allow multiple PIDs\n\ntail can watch multiple files, but currently only a single writer. It\ncan be useful to watch files from multiple writers, or even processes\nnot directly related to the files (e.g. watch log files written by a\nserver process, for the duration of a test driven by a separate\nclient).\n\n* src/tail.c (writers_are_dead): New function.\n(tail_forever): Use it to wait for writers.\n(tail_forever_inotify): As above.\n(parse_options): Manage --pid options in an array.\n* doc/coreutils.texi: Update documentation.\n* tests/tail/pid.sh: Add a variant with two PIDs.\n* News: Mention the new feature.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8367b95a13b96b96db93a7339c094f813af877c9", "commit_date": "2023-09-17T17:47:50Z", "commit_message": "ls: --dired now implies long format with hyperlinks disabled\n\nCurrently --dired is silently ignored\nwith conflicting output formats\n\n* src/ls.c (decode_switches): Set default format and hyperlink mode\nwhen the --dired option is specified.\n* tests/ls/dired.sh: Check that formats are implied / overridden.\n* NEWS: Mention the change in behavior.\n* doc/coreutils.texi (ls invocation): Adjust --dired description.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3564e3a572b64c5384519d735dbbb88690438eae", "commit_date": "2023-09-15T12:37:27Z", "commit_message": "tests: improve ls --dired testing\n\n* tests/ls/dired.sh: Verify ls --dired output against varying offsets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b0f5b99717a0905735d1f16f94f3aad0470f150", "commit_date": "2023-09-13T22:08:02Z", "commit_message": "maint: use C99 int size specifiers rather than PRI.MAX defines\n\nFollowing on from commit v9.3-128-gf31229ebd\nreplace all uses of the PRI.MAX portability defines\nwith C99 size specifiers %z, %j, and %t.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75e24853b7fefb6ea7f272977ed50437747f7f01", "commit_date": "2023-09-11T19:45:42Z", "commit_message": "doc: add subsections for cksum nodes\n\n* doc/coreutils.texi: Specify each of the cksum nodes as a subsection,\nso that the docs are organised appropriately in the pdf and html manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7ec75a27687bc30627e70c9f14d80de778a0d85", "commit_date": "2023-09-08T23:25:39Z", "commit_message": "cp,mv,install: add copy_internal comment\n\n* src/copy.c (copy_internal): Add comment about\nsome particularly tricky logic.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3cff27ddc1acf57e5da8b9e8b8c887bfd070b2c0", "commit_date": "2023-09-08T23:25:39Z", "commit_message": "cp: avoid needless unlinkat after fstatat ELOOP\n\n* src/copy.c (copy_internal): When cp -f's fstatat fails on the\ndestination with ELOOP, report an error immediately when fstatat\nused AT_SYMLINK_NOFOLLOW, as the later unlinkat would fail too.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a66a4b77a558c340a925e6492cf3acd5cd643445", "commit_date": "2023-09-08T23:25:39Z", "commit_message": "cp,mv,install: minor copy_internal refactoring\n\n* src/copy.c (copy_internal): Redo to avoid need for calculating\nfstatat_flags when not needed.  This is for clarity, not speed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67324bf19cf5a7292b1a3fd6b92655611c114a82", "commit_date": "2023-09-08T23:25:39Z", "commit_message": "cp,mv,install: fix comment punctuation\n\n* src/copy.h: Fix punctuation in comment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69bd8be40395d56db8bfa6fee6db1cdd5f5de352", "commit_date": "2023-09-08T23:25:39Z", "commit_message": "cp,mv,install: simplify copy_internal\n\n* src/copy.c (copy_internal): Simplify.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68f4c238caeb10b8ed597de7bf2e8e4764bbda33", "commit_date": "2023-09-05T06:12:02Z", "commit_message": "maint: prefer psame_inode, PSAME_INODE, STP_*\n\nPrefer psame_inode, PSAME_INODE, STP_NBLOCKS, and STP_BLKSIZE,\nwhich take addresses of objects, to their counterparts that\ntake the whole objects.  In some cases the whole objects might\nnot be initialized, which would be undefined behavior strictly\nspeaking.\n* gl/lib/root-dev-ino.h (ROOT_DEV_INO_CHECK):\n* src/cp-hash.c (src_to_dest_compare):\n* src/ls.c (dev_ino_compare):\n* src/pwd.c (robust_getcwd):\nPrefer PSAME_INODE to SAME_INODE.\n* src/chown-core.c (restricted_chown):\n* src/copy.c (copy_reg, same_file_ok, source_is_dst_backup)\n(copy_internal):\n* src/ln.c (do_link):\n* src/pwd.c (logical_getcwd):\n* src/sort.c (avoid_trashing_input):\n* src/split.c (create):\n* src/stat.c (find_bind_mount):\nPrefer psame_inode to SAME_INODE.\n* src/copy.c (infer_scantype):\n* src/du.c (process_file):\n* src/ls.c (gobble_file, print_long_format)\n(print_file_name_and_frills, length_of_file_name_and_frills):\n* src/stat.c (print_stat):\nPrefer STP_NBLOCKS to ST_NBLOCKS.\n* src/copy.c (copy_reg):\n* src/head.c (elide_tail_bytes_file, elide_tail_lines_file):\n* src/ioblksize.h (io_blksize):\n* src/od.c (skip):\n* src/shred.c (do_wipefd):\n* src/stat.c (print_stat):\n* src/tail.c (tail_bytes):\n* src/truncate.c (do_ftruncate):\n* src/wc.c (wc):\nPrefer STP_BLKSIZE to ST_BLKSIZE.\n* src/ioblksize.h (io_blksize):\nArg is now struct stat const *, not struct stat.  All callers changed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "217d68104ac5c513e5d385d965c3aba67f541a8d", "commit_date": "2023-09-05T06:12:02Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65a1c5b4419985dbedba7284f121f6efb17d6576", "commit_date": "2023-09-05T06:12:02Z", "commit_message": "cp,mv,install: a bit more up-to-date source stat\n\n* src/copy.c (copy_reg): Replace caller\u2019s source status\nwith the more recent version.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cd52bd9993163c2ef8b3d62b757c573fb5320df", "commit_date": "2023-09-02T20:28:23Z", "commit_message": "cp,mv,install: fix chmod on Linux CIFS\n\nThis bug occurs only when temporarily setting the mode to the\nintersection of old and new modes when changing ownership.\n* src/copy.c (owner_failure_ok): Treat EACCES like EPERM.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f971361608749e1245c5eb12096de2acd32bf83", "commit_date": "2023-09-01T22:10:45Z", "commit_message": "cp,mv,install: fix chown on Linux CIFS\n\n* src/copy.c (chown_failure_ok): Also treat EACCES as OK.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de4a5220f232e9a3814b43c1700736929af86aa0", "commit_date": "2023-09-01T22:10:45Z", "commit_message": "maint: simplify set_owner\n\n* src/copy.c (HAVE_FCHOWN, fchown): Remove.\n(fchmod_or_lchmod): Move up.\n(fchown_or_lchown): New function.\n(set_owner): Use it to simplify.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74439d15d7f8eae1d942cd96632f4c1c4c9e9e3a", "commit_date": "2023-09-01T22:10:44Z", "commit_message": "chown: port to mingw and MSVC 14\n\n* src/chown-core.c (restricted_chown): Don\u2019t assume fchown exists.\nThe Gnulib doc says that nowadays this is needed only for\nports to mingw and MSVC 14, but it\u2019s an easy port so let\u2019s do it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "850a05644196444f619b613a74dc7089436660c6", "commit_date": "2023-08-31T20:59:02Z", "commit_message": "maint: avoid syntax check failure\n\n* tests/misc/numfmt.pl: Keep lines <= 80 chars.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ed8d003f1eb25fed16c28f08bc26cb606257d1e", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "maint: Gnulib module gc\n\nRemove Gnulib modules that coreutils code no longer use directly.\nSome of these are used indirectly, but gnulib-tool should do that.\n* bootstrap.conf (gnulib_modules): Remove calloc-gnu, cloexec,\ngetgroups, getpass-gnu, getugroups, getusershell, gnu-mae,\ngroup-member, lchown, mgetgroups, netinet_in, readlink,\nrealloc-gnu, rename, rpmatch, stpncpy, tzset, wchar-single,\nwcswidth.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07f8ec6bff48f933e8478b63e9279aed82dcd0d3", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "maint: assume non-rare encodings\n\n* configure.ac (GNULIB_WCHAR_SINGLE_LOCALE): Define.\nThis can improve performance, while dropping support for\nrare encodings on non-GNU platforms.  Nowadays these encodings\nare typically not worth the hassle.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af2137407161bb7a76f790d759f5a8db6b519b9e", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "maint: tune for single thread & locale\n\n* configure.ac (GNULIB_EXCLUDE_SINGLE_THREAD)\n(GNULIB_REGEX_SINGLE_THREAD, GNULIB_WCHAR_SINGLE_LOCALE):\nDefine.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0326b0473837aae21fbf4c60674a5fcf85d9bf1", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "maint: regularize struct initializers\n\n* src/chmod.c (process_file):\n* src/df.c (replace_invalid_chars):\n* src/iopoll.c (iopoll_internal):\n* src/ls.c (quote_name_buf):\n* src/pathchk.c (portable_chars_only):\n* src/printf.c (STRTOX):\n* src/shred.c (main):\n* src/stat.c (neg_to_zero, do_stat):\n* src/timeout.c (settimeout):\n* src/tr.c (card_of_complement):\n* src/wc.c (wc):\nPrefer \u2018{0}\u2019 to initialize everything to zero.\n* src/stat.c (do_stat):\n* src/timeout.c (settimeout):\nDo not assume the usual order for struct members,\nas POSIX does not guarantee this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c902cc2887340adb6ca7ac6b4b922b52438920f", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "maint: rely on Gnulib fdatasync\n\n* m4/jm-macros.m4: Remove fdatasync-related code,\nas Gnulib now does this.\n* src/dd.c (fdatasync) [!HAVE_FDATASYNC]:\n* src/shred.c (dosync) [!HAVE_FDATASYNC]: Rely on Gnulib fdatasync.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50e99b59bf58187ffd433f9267af7d6f6e9a0912", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "maint: use modern Gnulib LIB_ macros\n\n* src/local.mk (src_timeout_LDADD, src_dd_LDADD)\n(src_shred_LDADD, src_sync_LDADD): Use TIMER_TIME_LIB\nand FDATASYNC_LIB instead of LIB_TIMER_TIME and\nLIB_FDATASYNC.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75bf3c00d302b2edbd4d714465e65eb7931cf0ef", "commit_date": "2023-08-31T03:32:13Z", "commit_message": "kill: rely on Gnulib strsignal\n\nOmit checks no longer needed now that we use strsignal.\n* configure.ac: Do not check for strsignal-related decls.\n* src/kill.c (sys_siglist, strsignal): Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8463f41e4d0c3c05c364ba93b6f5ce8fec2737bc", "commit_date": "2023-08-30T06:57:40Z", "commit_message": "maint: remove rename macro\n\n* src/copy.h (rename) [RENAME_TRAILING_SLASH_BUG]:\nRemove: unused, now that Gnulib takes care of this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbb6dfec557e7c8ac2dd728e4a943beb6ccfd53c", "commit_date": "2023-08-30T06:57:40Z", "commit_message": "maint: remove need for mbsalign\n\nThis simplifies memory allocation a bit, and removes an arbitrary\nlimitation from numfmt, which formerly limited cell output to 127\nbytes.\n* bootstrap.conf (gnulib_modules): Remove mbsalign, strncat.\nAdd strnlen (the code already used strnlen directly, and we were\nsaved only because Gnulib used the module indirectly)\n* gl/lib/mbsalign.c, gl/lib/mbsalign.h, gl/modules/mbsalign:\n* gl/modules/mbsalign-tests, gl/tests/test-mbsalign.c: Remove.\n* src/df.c, src/ls.c: Do not include mbsalign.h.\n(MBSWIDTH_FLAGS): New constant, now used for all\nmbswidth calls.  All callers changed to check for -1 return.\n* src/df.c (struct field_data_t): \u2018width\u2019 is now int not size_t,\nsince mbswidth can\u2019t do widths greater than INT_MAX anyway.\nReplace \u2018align\u2019 with \u2018align_right\u2019.  All uses changed.\n(print_table): Redo to avoid the need for ambsalign.\n(get_header, get_dev): mbswidth returns int, not size_t.\n* src/ls.c (MAX_MON_WIDTH): Remove; no longer used.\n(abmon_init): Use strnlen to cheaply discard too-long month names.\nAlign by hand instead of using mbsalign.\n* src/numfmt.c: Include stdckdint.h, mbswidth.h.\nDo not include mbsalign.h.\n(padding_buffer_size): Now idx_t.  All uses changed.\n(padding_width): Now intmax_t, since it\u2019s no longer an object\nsize.  Its sign now records alignment.  All uses changed.\n(zero_padding_width): Now int, since it\u2019s given to sprintf.\nAll uses changed.\n(padding_alignment): Remove; it\u2019s now taken from padding_width\u2019s sign.\n(double_to_human): Return string length.  BUF_SIZE arg is now idx_t.\nInclude suffix in output.  All callers changed.  Simplify by not\ncalling strncat or stpcpy.  Calculate fmt size bound more carefully.\n(setup_padding_buffer): Remove.  All uses removed.\n(parse_format_string): Use intmax_t, not long, for pad.\nOn overflow, set widths to large values that cause later code\nto do the right thing, rather than separately checking for\noverflow here.\n(prepare_padded_number): Return bool, not int 0/1.  New arg\nPADDING.  All uses changed.  Do not limit padded output to 127\nbytes; instead, use xpalloc to expand the output buffer.\n(print_padded_number): New arg PADDING.  All uses changed.\n(process_suffixed_number): Simplify.\n(main): Take extremum if xstrtoimax overflows, as this does\nthe right thing.\n* tests/misc/numfmt.pl: New test suf-20 to test for truncation bug.\nRemove tests pad-3.2, fmt-err-7, as they\u2019re no longer invalid but\nare quite expensive.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "632beba63007f7add3af27dd7100528854f7c68e", "commit_date": "2023-08-29T14:23:14Z", "commit_message": "maint: post-release administrivia\n\n* NEWS: Add header line for next release.\n* .prev-version: Record previous version.\n* cfg.mk (old_NEWS_hash): Auto-update.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9530a14420fc1a267e90d45e8a0d710c3668382d", "commit_date": "2023-08-29T13:36:22Z", "commit_message": "version 9.4\n\n* NEWS: Record release date.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2dddc87214503199a38beeb175cd42cbb43cdff1", "commit_date": "2023-08-28T21:06:43Z", "commit_message": "maint: spelling fixes, including author names\n\nMost of this just affects commentary and documentations.  The only\nsignificant behavior change is translating author names via\nproper_name_lite rather than proper_name_utf8, or not translating\nthem at all.  proper_name_lite is good enough for coreutils and\navoids the bloat that had coreutils not using Gnulib proper_name.\n* bootstrap.conf (gnulib_modules): Use propername-lite instead\nof propername.\n(XGETTEXT_OPTIONS): Look for proper_name_lite instead of for\nproper_name_utf8.\n* cfg.mk (local-checks-to-skip): Remove\nsc_proper_name_utf8_requires_ICONV, since we no longer use\nproper_name_utf8.\n(old_NEWS_hash): Update.\n(sc_check-I18N-AUTHORS): Remove; no longer needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3f15c9c4a0ca69bfdf7fada8b8697f627a7c84d", "commit_date": "2023-08-28T21:06:43Z", "commit_message": "test: omit unreachable code\n\n* src/test.c (unary_operator): Omit unreachable \u2018return false;\u2019.\nOracle Solaris Studio 12.6 warns about it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c8340962dd098eb092bb9ebaad3d239c613e28f1", "commit_date": "2023-08-28T11:18:26Z", "commit_message": "tests: avoid test failure on Android\n\n* gl/tests/test-mbsalign.c (main): Skip the unibyte truncation test\non Android, when the \"C\" locale in fact is multibyte.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9348edb6b650db58a501e4e26e5dbf8e8b13e84d", "commit_date": "2023-08-28T03:50:04Z", "commit_message": "sort: port sort-merge-fdlimit test to Solaris 10\n\n* tests/sort/sort-merge-fdlimit.sh: Give 'sort' fd 6 too.\nNeeded for the same reason sort-continue.sh needed a ulimit -n boost.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c9998fbab1911c8ccb7a7d0fb03e42ed310afe4", "commit_date": "2023-08-28T02:15:31Z", "commit_message": "sort: port sort-continue test back to Solaris 10\n\n* tests/sort/sort-continue.sh: Use ulimit -n 7 not -n 6.  On\nSolaris 10 'sort' uses Gnulib mkostemp, which calls Gnulib\ngetrandom, which opens /dev/urandom to calculate the temp file's\nname, which means 'sort' needs one more file descriptor to work.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3afbcad9ca68863ea3c049f7d5ce0860d07f260", "commit_date": "2023-08-27T19:22:32Z", "commit_message": "tests: avoid false failure on cygwin\n\n* tests/cksum/md5sum-bsd.sh: Avoid part of test dealing with backslashes\nin file names, on systems where backslash is a directory separator.\nIssue reported by Bruno Haible on cygwin.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4e2e2bb577829b3c68f1ed18884ff00f9def819", "commit_date": "2023-08-27T18:53:52Z", "commit_message": "cksum: adjust tests and docs to binary mode handling\n\nFollowing commit v9.3-80-g5e1e0993b which makes cksum\nmatch the output of the standalone utilities...\n\n* doc/coreutils.texi (cksum output modes): Remove the mention\nthat cksum never outputs a binary indicator, as that's no longer the\ncase.\n* tests/cksum/b2sum.sh: Avoid outputting a binary indicator.\n* tests/cksum/sm3sum.pl: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e44ad4e6d9e792a53655383f07565e252656e43", "commit_date": "2023-08-27T16:32:07Z", "commit_message": "all: avoid duplicated write errors on FreeBSD\n\n* src/system.h (write_error): Also call fpurge(), which was seen to\nbe needed on FreeBSD 13.1 to avoid duplicated write errors.\n* src/head.c (xwrite_stdout): Likewise.\n* bootstrap.conf: Depend on fpurge.\nReported by Bruno Haible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13e13107e13ae064c925ecfc516c3b7bcc680aa6", "commit_date": "2023-08-27T16:18:01Z", "commit_message": "tests: avoid false failure where sleep is a shell builtin\n\n* tests/misc/usage_vs_getopt.sh: Handle sleep as a shell builtin,\nwhich was seen on Alpine Linux 3.18.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "900606431e13e32d569fa3191b862b443346b0e9", "commit_date": "2023-08-27T15:37:54Z", "commit_message": "build: fix link errors of sort, split on CentOS 5 and Solaris 10\n\n* src/local.mk (src_sort_LDADD, src_split_LDADD): Add $(CLOCK_TIME_LIB).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "016e9a3bb8ce4f9987c4a725cee7554b879fbd49", "commit_date": "2023-08-27T15:37:52Z", "commit_message": "build: fix compilation error on AIX 7.1\n\n* src/copy.c (copy_internal): Don't test for ENOTEMPTY if it has the\nsame value as EEXIST.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "32e8ead1318269889a32846cf99d39962e236978", "commit_date": "2023-08-27T15:09:07Z", "commit_message": "build: update with gnulib fixes\n\n* gnulib: Update to incorporate gnulib fixes\nfrom Bruno Haible from his coreutils 9.4 pre-release testing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "25727ebd6a1827f1a0b9c93245ba561f6cad505b", "commit_date": "2023-08-24T11:10:49Z", "commit_message": "doc: remove older ChangeLog items\n\n* Makefile.am: Update the oldest documented version\nto 8.30 which is now about 5 years old.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13f439ce562a11357e193633a49307d0b465c150", "commit_date": "2023-08-23T14:23:42Z", "commit_message": "shred: fix operation on Solaris with 64 bit builds\n\n* NEWS: Mention the bug fix.\n* gl/lib/randread.c (get_nonce): Limit getrandom() <= 1024 bytes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d553ab43c6e0c85b6505cf17496ab63524cdf2ba", "commit_date": "2023-08-22T11:10:09Z", "commit_message": "build: update gnulib submodule to latest\n\n* gnulib: Update to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e15f5ab3548fdf516a19016e833e9c325a0bf915", "commit_date": "2023-08-22T11:09:57Z", "commit_message": "doc: reorg texinfo for the checksumming utilities\n\n* doc/coreutils.texi: Reorg so that 'cksum invocation' is the\nmain node listing all options and output formats, which is then\nreferenced by the descriptions of the standalone utilities.\nUse macros in the description of the standalone utilities\nrather than referencing 'md5sum invocation' to be more direct.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0af86d0626e065d65ca8f807a79465f68f79156", "commit_date": "2023-08-21T21:20:39Z", "commit_message": "doc: cksum: remove -b description from texinfo\n\n* doc/coreutils.texi (cksum invocation): Following commit 5e1e0993\nalso remove the desciption of the -b option for the cksum command.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f92de58220226e4a2ddf3475bacee2bae7f0e1d", "commit_date": "2023-08-21T13:28:14Z", "commit_message": "cp: with --sparse=never, avoid COW and copy offload\n\n* src/cp.c (main): Set default reflink mode appropriately\nwith --sparse=never.\n* src/copy.c (infer_scantype): Add a comment to related code.\n* tests/cp/sparse-2.sh: Add a test case.\n* NEWS: Mention the bug.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27c76b83b44e0d6660dbe46ac86db43a0cecb59c", "commit_date": "2023-08-19T15:45:17Z", "commit_message": "maint: comment spelling fix\n\n* tests/split/l-chunk-root.sh: Fix recently introduced typo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20b9a015e5aa05c6ad58bda8e9fa963d217b05e3", "commit_date": "2023-08-16T10:47:54Z", "commit_message": "maint: remove extraneous line in NEWS\n\n* NEWS: Remove extraneous line.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "622eea03cd3dfaad8be07a8e5311f981344b72b7", "commit_date": "2023-08-15T22:22:27Z", "commit_message": "uptime: simplify following gnulib changes\n\n* build-aux/gen-lists-of-programs.sh (build_if_possible_progs):\nRemove uptime.\n(normal_progs): Add uptime.\n* configure.ac: Remove GNULIB_BOOT_TIME invocation.\n* m4/boottime.m4: Remove file.\n* src/uptime.c: Don't include <sys/sysctl.h>, <OS.h>.\n(print_uptime): Don't call sysctl, get_system_info, as Gnulib's\nreadutmp module now does this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2c2643fc5575a3f75654408c19930dc38a1efe8", "commit_date": "2023-08-15T22:22:27Z", "commit_message": "maint: update uptime NEWS\n\n* NEWS: Update as per Bruno Haible <https://bugs.gnu.org/65255#14>.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc5e68612f31f7161321e5ac4d7d6c1fc239f567", "commit_date": "2023-08-15T21:55:41Z", "commit_message": "tests: fix false failure due to locale on alpine\n\n* tests/sort/sort-debug-keys.sh: Decimal point was seen to be '.'\non fr_FR.UTF-8 on Alpine Linux 3.18, so add an extra guard\nto ensure we've a ',' as the decimal point on this locale.\nFixes https://bugs.gnu.org/65310", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1ea34cbf6a235f2436a3265ab9ded6f04748051e", "commit_date": "2023-08-15T21:01:58Z", "commit_message": "uptime: be more generous about read_utmp failure\n\n* src/uptime.c (print_uptime): Check for overflow\nwhen computing uptime.  Use C99-style decl after statements.\nDo not let an idx_t value go negative.\n(print_uptime, uptime): Be more generous about read_utmp failures,\nor when read_utmp does not report the boot time.  Instead of\nfailing, warn but keep going, printing the information that we did\nget, and then exit with nonzero status.\n(print_uptime): Return the desired exit status.  Caller changed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8cfa5db49641f39b63aba2037c6a9e6bd95c0e0", "commit_date": "2023-08-15T21:01:58Z", "commit_message": "uptime: Include VM sleep time in the \"up\" duration\n\n* src/uptime.c: Don't include c-strtod.h.\n(print_uptime): Don't read /proc/uptime, because the value it provides\ndoes not change when a date adjustment occurs.\n* bootstrap.conf (gnulib_modules): Remove 'uptime'.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58977651ecb64e04880d435bdf92e88df32ae924", "commit_date": "2023-08-15T21:01:58Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0cb8332196d3c727f540de407228ecb910e12e25", "commit_date": "2023-08-15T11:35:13Z", "commit_message": "maint: fix typo in NEWS\n\n* NEWS: s|/who/log/wtmp|/var/log/tmp|, introduced in commit 85edb4afbd1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d428096a6ade1acfc6537ab5f138ef1a3531a0fc", "commit_date": "2023-08-15T11:29:41Z", "commit_message": "doc: reference install(1) and cp(1) from each other\n\n* man/cp.x (SEE ALSO): Add install(1).\n* man/install.x (SEE ALSO): Add cp(1).\n\nDiscussed at\nhttps://lists.gnu.org/r/coreutils/2023-08/msg00026.html", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db1d95f43b1bbccfef2959d8ccfad39165dd146d", "commit_date": "2023-08-14T21:11:57Z", "commit_message": "build: fix recent compilation error on GNU/Hurd\n\n* src/copy.c (set_author): Revert change from MACH_PORT_NULL to\nMACH_PORT_nullptr from commit 16b5ca6e (2023-06-29).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc3c84318734af11d5dcbff15e0f27c466908ada", "commit_date": "2023-08-14T13:03:35Z", "commit_message": "maint: avoid syntax-check failure\n\n* po/POTFILES.in: Cater to lib/file-type.c adjustments\nas suggested by sc_po_check.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "049e5b0f8768df2c280ae258d6e6221d8ab7fe46", "commit_date": "2023-08-14T12:45:44Z", "commit_message": "build: fix link errors with gcc < 4.8\n\n* configure.ac: Attempt to link, not only compile, the test programs\nwith __builtin_cpu_supports, to avoid link errors with cksum and wc.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "85edb4afbd119fb69a0d53e1beb71f46c9525dd0", "commit_date": "2023-08-13T06:51:59Z", "commit_message": "doc: improve NEWS discussion of systemd", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b673e61afe9525c43ee765b55c9de6d9737cb85", "commit_date": "2023-08-13T06:51:59Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f31229ebd1b339b85d54c24e3b79a8262b3202d2", "commit_date": "2023-08-12T10:32:25Z", "commit_message": "maint: allow use of printf C99 integer size specifiers\n\nOlder systems that had issues with these like HP-UX and Solaris 8\nare now obsolete, and can easily apply patches to provide support.\nAlso we've used %td since coreutils 9.1, with no reported issues.\n\n* cfg.mk (sc_prohibit-c99-printf-format): Remove to allow use of\n%[jtz] size specifiers, which allows for cleaner code\nby avoiding the need to cast to PRI?MAX etc.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54206043321fd32f0d61afe0ad6fce0c19de2063", "commit_date": "2023-08-11T13:34:49Z", "commit_message": "doc: separate out description of 2038 time stamp change\n\n* NEWS: Separate out the description of the _existing_ issues\nwith outputting timestamps on 32 bit systems, from _future_ issues\noutputting timestamps on all systems.  Also move this to the\n\"improvement\" section, since it's not really a coreutils\nspecific issue, and also is a build time configurable option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d70d55c0a4756f7f9d82c331b0797f1ebcfcbb7c", "commit_date": "2023-08-11T13:07:37Z", "commit_message": "pinky,users,who: optimize read_utmp invocation\n\nWhen we are only interested in entries of type USER_PROCESS, tell\nread_utmp that it does not need to determine the boot time.\n\n* src/pinky.c (short_pinky): Pass option READ_UTMP_USER_PROCESS.\n* src/users.c (users): Likewise.\n* src/who.c (who): Likewise, if calling list_entries_who.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad823360267cbfb3f5b1b3e1438122e5c82eb0b2", "commit_date": "2023-08-09T03:05:33Z", "commit_message": "who: simplify based on readutmp changes\n\n* src/pinky.c (time_string, print_entry, scan_entries, short_pinky):\n* src/uptime.c (print_uptime, uptime):\n* src/users.c (list_entries_users, users):\n* src/who.c (UT_TYPE_RUN_LVL, UT_TYPE_INIT_PROCESS)\n(UT_TYPE_LOGIN_PROCESS, UT_TYPE_DEAD_PROCESS, UT_TYPE_NEW_TIME)\n(time_string, print_user, print_boottime)\n(make_id_equals_comment, print_deadprocs, print_login)\n(print_initspawn, print_clockchange, print_runlevel)\n(list_entries_who, scan_entries, who):\nSimplify, partly by using plain -> rather than macros.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "422dcd424ca6b5fbef8d3bd0088e8e9e3757a203", "commit_date": "2023-08-09T03:05:33Z", "commit_message": "pinky,who: omit pragma\n\n* src/pinky.c, src/who.c:\nOmit no-longer-needed -Wstringop-overread pragma.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "911c0bc41d60ce208114f7a8754341dc637396d2", "commit_date": "2023-08-09T03:05:33Z", "commit_message": "maint: Simplify after gnulib changed\n\nUpdate gnulib submodule to latest.\nAll of UT_USER_SIZE, UT_ID_SIZE, UT_LINE_SIZE, UT_HOST_SIZE are now -1.\n\n* src/pinky.c (print_entry): Remove code for bounded-length ut_line,\nut_user, ut_host.\n(scan_entries): Remove code for bounded-length ut_user.\n* src/who.c (print_line): Remove userlen, linelen arguments.\n(print_user): Remove code for bounded-length ut_line, ut_user, ut_host.\n(make_id_equals_comment): Remove code for bounded-length ut_id.\n(print_boottime, print_deadprocs, print_login, print_initspawn,\nprint_clockchange, print_runlevel, print_heading): Update print_line\ninvocations.\n(scan_entries): Remove code for bounded-length ut_line.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e58c95000114f246db1e44507f0b1dd17d22a1a", "commit_date": "2023-08-04T06:16:00Z", "commit_message": "maint: Update after gnulib module 'readutmp' changed\n\n(This patch is coauthored with Bruno Haible,\nwith original version at <https://bugs.gnu.org/64937#>.)\nThis updates the gnulib submodule to latest.\nFor year-2038 safety on Linux/{x86,arm},\nthis adds an --enable-systemd option to \u2018configure\u2019.\nThe idea is that this sort of thing will become the default\nafter it has been tested more.\n* configure.ac: Don't test whether struct utmp and struct utmpx\nhave the ut_host field; this is now done in gnulib's readutmp module.\n* src/local.mk: Link the programs 'pinky', 'uptime', 'users',\n'who' with $(READUTMP_LIB).\n* src/pinky.c, src/who.c:\nTest HAVE_STRUCT_XTMP_UT_HOST instead of HAVE_UT_HOST.\n* src/pinky.c (print_entry):\n* src/who.c (print_user, print_deadprocs, print_login)\n(print_initspawn, scan_entries):\nSupport the situation where ut_line is a 'char *' rather than a\n'char[]' of fixed size.  Likewise for ut_user and ut_host.\n(make_id_equals_comment): Likewise for ut_id.\n* src/pinky.c (print_entry):\n* src/who.c (print_user):\nOpen /dev to simplify looking up its entries.\nDon\u2019t use printf if the output might in theory be longer than INT_MAX.\n* src/pinky.c (scan_entries, short_pinky):\n* src/uptime.c (print_uptime, uptime):\n* src/users.c (list_entries_users, users):\n* src/who.c (who):\nUse idx_t where new read_utmp needs it.\n* src/system.h (STREQ_LEN): Add comment that last arg can be -1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb7bb52551602433582b50ea19f75e50e3e5b832", "commit_date": "2023-08-02T13:52:39Z", "commit_message": "uptime: fix Y5881633 bug\n\n* src/uptime.c (print_uptime): Prefer signed types.\nFix unlikely bug on platforms with 32-bit long and 64-bit time_t\nif the idle time exceeds 2**31 days (about 6 million years...).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "93e30466ff6eec8a2cd66374e199017763821478", "commit_date": "2023-08-02T13:52:39Z", "commit_message": "pinky: fix \"d\" typo\n\nProblem reported by Bruno Haible (bug#65003).\n* src/pinky.c (idle_string): Fix recently-introduced typo:\nmissing \"d\" for \"days\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73ba9f71e159d48d8fa490096aa4b8b7cc27ae5a", "commit_date": "2023-08-01T14:35:44Z", "commit_message": "maint: minor comment cleanups\n\n* src/cut.c: Adjust a few comments slightly, simply to have their\ntrailing whitespace the same as in the majority of the comments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7783df863a9cb9c4946b4f219992edaef2252ffe", "commit_date": "2023-08-01T14:34:50Z", "commit_message": "cut: promptly diagnose write errors, continued\n\n* src/cut.c: Complete the error-handling improvements started in\ncommit e0a4a60af5, by adding a couple of remaining checks for putchar().\nWhile there, sprinkle a few rather useful comments, and perform a few\nsmall code cleanups, to make the code and the comments more uniform\nand more conformant to the official coding style.  Also make the help\nmessage slightly more uniform.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10dcb0b1253836e54ba90a658c84df967fe73df7", "commit_date": "2023-08-01T14:32:21Z", "commit_message": "maint: reformat text width in HACKING\n\n* HACKING: Adjust line lengths.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e886b300f791e521b183df21a9d4b59b0fe9f9a5", "commit_date": "2023-08-01T13:59:29Z", "commit_message": "pinky: fix buffer size on 32 bit builds\n\n* src/pinky.c (idle_string): Use the correct buffer size\nfollowing the recent int type adjustment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89c8c5fff30af021433139c89de389ee4af7dfc5", "commit_date": "2023-08-01T12:30:02Z", "commit_message": "od: fix issues with recent format string changes\n\n* src/ioblksize.h: Avoid syntax check with redundant idx.h inclusion.\n* src/od.c (FMT_BYTES_ALLOCATED): Increase by two to avoid:\n  error: '%s' directive writing between 1 and 2 bytes into a region\n  of size between 1 and 4 [-Werror=format-overflow=]\n(maint): Use %td to print idx_t rather than invalid %jt format.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b2796750ff68eb58616655236d7003f6d30223a", "commit_date": "2023-08-01T00:51:29Z", "commit_message": "pinky: prefer signed types\n\n* src/pinky.c (idle_string): Prefer intmax_t to unsigned long int;\nthis avoids an overflow on platforms where unsigned long is 32\nbits and time_t is 64 bits (the bug could occur on such a system\nthat was idle for more than 6 million years, so it\u2019s a bit\nhard to supply a test case...).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "703d2d6bd41da03f6b009d8d0e05ba033199bc6e", "commit_date": "2023-08-01T00:51:29Z", "commit_message": "pathchk: prefer signed types\n\n* src/pathchk.c (validate_file_name): Prefer signed types.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "244268f7197db55094fa6e946f8a6f494e668209", "commit_date": "2023-08-01T00:51:29Z", "commit_message": "numfmt: prefer signed types\n\n* src/numfmt.c (suffix_power_char, powerld, expld)\n(simple_strtod_int, double_to_human, prepare_padded_number)\n(process_suffixed_number): Prefer signed types.\n(process_suffixed_number): Fix an unlikely bug if an\narg has exactly 2**32 spaces at the start.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df73cf50e9c2578a45806b349be432ad1cc16201", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "mktemp,seq: prefer signed types\n\n* src/mktemp.c (main):\n* src/seq.c (main): Prefer signed types.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0b8c4ad6104581f44775c9d0f4d6b297351ba06", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "kill: prefer signed types\n\n* src/kill.c (list_signals):\nPrefer signed types.  This avoids undefined behavior on\ntheoretical platforms where unsigned and signed int have\ndifferent representations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6387164e5e094cfa6e0a7baeda3991335bbaeb5b", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "groups,id: don\u2019t assume gid_t fits in unsigned long\n\n* src/group-list.c (print_group): Convert to intmax_t or\nuintmax_t, not to unsigned long.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e20d63c442b0365cc1a7cb236a63412523784e0a", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "dircolors,du,expr: prefer signed types\n\n* src/dircolors.c (dc_parse_stream):\n* src/du.c (max_depth, main):\n* src/expr.c (main):\nPrefer signed types.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08c325c63b28e1345f8a68af447d7a830c216e6e", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "od: prefer signed types\n\n* src/od.c: Include stdckdint.h.\n(bytes_to_oct_digits, bytes_to_signed_dec_digits)\n(bytes_to_unsigned_dec_digits, bytes_to_hex_digits):\nUse \u2018char\u2019 for these small constants.\n(simple_strtoi): Rename from simple_strtoul.  Convert to int\ninstead of unsigned long; that\u2019s good enough.  All uses changed.\nSimplify by using ckd_mul and ckd_add to check for overflow.\n(main): Prefer signed types to unsigned.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89f7d44912e50ab038167c8f7192803e681664e4", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "cksum,df,digest: prefer signed types\n\n* src/cksum.c (main):\n* src/df.c (decode_output_arg):\n* src/digest.c (valid_digits):\nPrefer idx_t to unsigned types when the value is an index\ninto an array.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73a813e484279e546b87a3fb091861bd307777d1", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "join: prefer signed types\n\n* src/join.c (struct outlist, struct field, struct line)\n(struct seq, autocount_1, autocount_2, join_field_1, join_field_2)\n(extract_field, keycmp, check_order, init_linep, free_spareline)\n(getseq, delseq, prfield, prfields, prjoin, join, add_field)\n(string_to_join_field, decode_field_spec, add_field_list)\n(set_join_field, main):\nPrefer signed integers to unsigned.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46e5702bf316b7697e0496f2913a8a78c8442992", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "factor: prefer signed types\n\nWhen it\u2019s easy, prefer signed types to unsigned, as\nthey are less confusing and allow overflow checking.\n* src/factor.c (struct mp_factors, udiv_qrnnd)\n(count_leading_zeros, count_trailing_zeros)\n(factor_insert_multiplicity, mp_factor_clear, mp_factor_insert)\n(factor_insert_refind, factor_using_division)\n(mp_factor_using_division, powm2, millerrabin, millerrabin2)\n(mp_millerrabin, prime_p, prime2_p, mp_prime_p, isqrt, isqrt2)\n(invtab, q_freq, factor_using_squfof, strto2uintmax)\n(print_factors_single, main):\nPrefer signed integers to unsigned.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9970fac34bca0a1058cf80c28ab8552b5b104d1a", "commit_date": "2023-08-01T00:51:28Z", "commit_message": "maint: include idx.h everywhere\n\n* src/system.h: Include idx.h here, instead of in every file\nthat currently uses idx_t.  This should make it easier to use\nidx_t in the future.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cbda6e1f8fdd4d7ffae26edcabceb239ed14ece", "commit_date": "2023-07-31T18:21:43Z", "commit_message": "who: fix only-theoretical overflow\n\nChange stzncpy\u2019s implementation to match its comment, in the case\nwhere SRC + LEN would overflow.  This case never happens in coreutils.\n* src/system.h (stzncpy): Work even if SRC + LEN would overflow.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "779f34e180fdcabddb24acc2829410ce8ed50fd1", "commit_date": "2023-07-31T17:55:19Z", "commit_message": "tac: handle short reads on input\n\nThis can be reproduced by getting the read() above 2G,\nwhich induces a short read, thus triggering the erroneous failure.\n\n  $ truncate -s 5G 5G\n\n  $ cat 5G | TMPDIR=$PWD tac | wc -c\n  tac: /tmp/tacFt7txA: read error: Illegal seek\n  0\n\nWith the fix in place we now get:\n\n  $ cat 5G | TMPDIR=$PWD src/tac | wc -c\n  5368709120\n\n* src/tac.c (tac_seekable): Use full_read() to handle short reads.\n* NEWS: Mention the bug fix.\nReported at https://bugs.debian.org/1042546", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a102826245505986bf336b87e081f1fdb44469d8", "commit_date": "2023-07-31T16:28:04Z", "commit_message": "uptime: output correct user count on OpenBSD\n\n* src/uptime.c (print_uptime, uptime): Always call read_utmp\nand count the result.\n* NEWS: Mention the fix (text by Bruno Haible).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76c795bf2e2b10ad7b0b955ac9324427f845a918", "commit_date": "2023-07-31T16:28:04Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "39f5c3f92e920d857d102d5cf090916739d37be8", "commit_date": "2023-07-30T00:23:15Z", "commit_message": "build: update gnulib submodule to latest\n\n* NEWS: Mention a bug that this fixes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3cb862ce5f10db392cc8e6907dd9d888acfa2a30", "commit_date": "2023-07-22T20:41:07Z", "commit_message": "mv: better diagnostic for 'mv dir x' failure\n\nProblem reported by Nir Oren <https://bugs.gnu.org/64785>.\n* src/copy.c (copy_internal): Use a more-specific diagnostic when\na rename fails due to a problem that must be due to the\ndestination, avoiding user confusion in cases like 'mv dir x'\nwhere x is a nonempty directory.\n* tests/mv/dir2dir.sh: Adjust to match.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0e41e3f3016700c86f2e9b9c2ab9a49e9774a21", "commit_date": "2023-07-20T14:13:01Z", "commit_message": "doc: clarify tail -n/-c +NUM operation\n\ntail -n/-c +NUM, is different from tail -n/-c NUM,\nand head -n/-c NUM, and head -n/c -NUM, in that it\nspecifies a 1 based index rather than a count to skip/include.\nSo clarify this in tail --help and tail info manual.\nNote we also mention this gotcha at:\nhttps://www.pixelbeat.org/docs/coreutils-gotchas.html#tail\n\n* doc/coreutils.texi (tail invocation): Give examples for -c/-n +NUM,\nto make it clear one has to specify a number 1 larger than\nmight be expected.\n* src/tail.c (usage): State the skip at start edge case more clearly\nin the -n description. -c is not often used with tail so we leave\nfull explanation of that to the info manual.  Also split the string\nto simplify translation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4bf182f92ae249560f61bccea3598ec87b0cf8c1", "commit_date": "2023-07-18T22:13:06Z", "commit_message": "maint: add a syntax check to prevent use of NULL\n\n* cfg.mk (sc_prohibit_NULL): Direct to use nullptr instead.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8fd50b86729a7f848c25b62086fcaf5332b5c2f0", "commit_date": "2023-07-18T22:11:24Z", "commit_message": "tests: split: provide more isolated /tmp handling\n\n* tests/split/l-chunk.sh: Move the \"expensive\" portion to ...\n* tests/split/l-chunk-root.sh: .. A new test split from l-chunk.sh\nwhich uses an isolated TMPDIR, rather than exhausting /tmp,\nas that gives false positive failures with some other coreutils tests\nlike tac-2-nonseekable.sh and shuf-reservoir.sh at least.\n* tests/local.mk: Reference the new test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "464be62df69151c73a387a4e7266b0755f563f2e", "commit_date": "2023-07-18T22:11:24Z", "commit_message": "split: honor $TMPDIR for temp files\n\n* bootstrap.conf: Depend on tmpdir rather than tmpfile,\nas the standard tmpfile() doesn't honor $TMPDIR.\n* src/split.c (copy_to_tmpfile): Adjust to call temp_stream() rather\nthan tmpfile();\n* NEWS: Mention the improvement.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b86b70dd5118462ba9388742ebd8459d0b84156", "commit_date": "2023-07-18T22:10:40Z", "commit_message": "tac: fall back to /tmp if $TMPDIR is unavailable\n\nThis also refactors temp_stream() to its own module,\nin preparation for use by split.\n\n* src/tac.c: Refactor temp_stream() out to ...\n* src/temp-stream.c: ... A new module mostly refactored from tac,\nbut uses tmpdir to more robustly support $TMPDIR,\nwhile falling back to /tmp if not available.\n* src/temp-stream.h: The new module interface.\n* src/local.mk: Reference the new module from tac.\n* tests/tac/tac.pl: Adjust to non failing missing $TMPDIR.\n* po/POTFILES.in: Reference the new module with translatable strings.\n* NEWS: Mention the user visible improvements to tac TMPDIR handling.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "47e1388d6fe4a8015de8f3c5521ed851aef6a193", "commit_date": "2023-07-18T17:59:10Z", "commit_message": "maint: add syntax check to ensure safe mkstemp usage\n\nOne needs to include stdlib--.h if using mkstemp()\nlest one hits esoteric bugs with closed stdin etc.\n\n* cfg.mk (sc_require_stdlib_safer): Add a new syntax check.\n(sc_require_stdio_safer): Fix this; broken since commit fa7ed969c3.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02a4ebd6c451d013ecc4a93a809416781fbaf6ab", "commit_date": "2023-07-17T10:28:36Z", "commit_message": "join: promptly diagnose write errors\n\n* src/join.c (prjoin): Check for write errors after each line.\n* tests/misc/write-errors.sh: enable the test for join.\n* NEWS: Mention the improvement.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b1df1d557eb8e3c40778a01af9cd972c80a19d95", "commit_date": "2023-07-17T10:28:36Z", "commit_message": "comm: promptly diagnose write errors\n\n* src/comm.c (writeline): Simplify by removing the unneeded STREAM\nparameter.  Call write_error() upon ferror().\n(compare_files): Adjust to simplified writeline().\n* tests/misc/write-errors.sh: Enable comm test.\n* NEWS: Mention the improvement.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0a4a60af52e40e5ee5c7d5f1764150301d3dea9", "commit_date": "2023-07-17T10:28:36Z", "commit_message": "cut: promptly diagnose write errors\n\n* src/cut.c (cut_bytes): Diagnose errors from fwrite() and putchar().\n(cut_fields): Likewise.\n* tests/misc/write-errors.sh: Enable the test for cut,\nand augment to cover both cut_bytes() and cut_fields().\n* NEWS: Mention the improvement.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca7711456f8cedbf40bec00ced04e7d6d9fc85be", "commit_date": "2023-07-17T10:28:36Z", "commit_message": "uniq: promptly diagnose write errors\n\n* src/uniq.c (write_line): Check the output from fwrite() immediately.\n(check_file): Likewise.\n* tests/misc/write-errors.sh: Enable the test case.\n* NEWS: Mention the improvement.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a03c00023a700386453b91142116279bb79fb59d", "commit_date": "2023-07-17T10:28:36Z", "commit_message": "od: promptly diagnose write errors\n\n* src/od.c (dump): Check for write errors after each block written,\nto exit early even with large / unbounded inputs.\n* tests/misc/write-errors.sh: enable od check.\n* NEWS: Mention the improvement.\nFixes https://bugs.gnu.org/64540", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b2ff7637f1eabba48e461f9f6e3aec956bed7d1", "commit_date": "2023-07-17T10:28:36Z", "commit_message": "all: avoid repeated diagnostic upon write error\n\n* cfg.mk (sc_some_programs_must_avoid_exit_failure): Adjust to\navoid false positive.\n(sc_prohibit_exit_write_error): A new syntax check to prohibit\nopen coding error(..., \"write error\"); instead directing to use...\n* src/system.h (write_error): ... a new function to clear stdout errors\nbefore we explicitly diagnose a write error and exit.\n* src/basenc.c: Use write_error() to ensure no repeated diagnostics.\n* src/cat.c: Likewise.\n* src/expand.c: Likewise.\n* src/factor.c: Likewise.\n* src/paste.c: Likewise.\n* src/seq.c: Likewise.\n* src/shuf.c: Likewise.\n* src/split.c: Likewise.\n* src/tail.c: Likewise.\n* src/tr.c: Likewise.\n* src/unexpand.c: Likewise.\n* tests/misc/write-errors.sh: Remove TODOs for the fixed utilities:\nexpand, factor, paste, shuf, tr, unexpand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef47b928d0b4fb96c8d458450c941fe1eb487542", "commit_date": "2023-07-17T10:28:30Z", "commit_message": "tests: ensure utilties exit promptly upon write error\n\n* tests/local.mk: Reference the new test.\n* tests/misc/write-errors.sh: A new test to ensure utilities\nexit promptly upon writing to /dev/full.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0e7e4a1d41049bbf38cf902d13746b1ab5b1e38", "commit_date": "2023-07-14T05:39:04Z", "commit_message": "cksum: improve problematic_chars function\n\n* src/digest.c (problematic_chars): Implement using strcspn,\nand traversing S only once, rather than once per escaped byte.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebd776a422cb21c846ea58f30930234c918e65d9", "commit_date": "2023-07-12T19:41:00Z", "commit_message": "maint: give a new function the \"pure\" attribute\n\n* src/digest.c (problematic_chars): This recently introduced\nfunction does not modify state so is pure, even though GCC 13.1 at least\ndid not warn about that attribute being appropriate.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "86614ba1c2854d3209086db3788124f6cd07a9ff", "commit_date": "2023-07-11T11:16:41Z", "commit_message": "cksum: escape filenames with a leading '\\' in --check status\n\n* src/digest.c (digest_check): Also escape in the case that the\nfile name contains '\\'.\n* tests/cksum/md5sum-bsd.sh: Add a test case.\n* doc/coreutils.texi (md5um invocation): Clarify escaping operation.\n* NEWS: Mention the bug fix.\nFixes https://bugs.gnu.org/64392", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e1e0993b50f9828332870829463e975df6abeab", "commit_date": "2023-07-09T13:33:14Z", "commit_message": "cksum: support transparent emulation of older utils\n\nSupport -b, --binary, and -t, --text\nto allow full emulation of older utilities with:\n  exec cksum -a $algo --untagged \"$@\"\nNote this would diverge from OpenBSD's support of cksum -b.\n\n* src/digest.c: Change -b to mean --binary, not --base64 in all cases.\nAccept -b and -t in all cases.  Keep --binary and --text undocumented\nfor cksum.\n* tests/cksum/cksum-base64.pl: s/-b/--base64/.\n* tests/cksum/cksum-a.sh: Ensure cksum supports -b and -t appropriately.\n* NEWS: Mention the change in behavior.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f1cffe07ab0f0b4135a52d95f1689d7fc7f26c9", "commit_date": "2023-07-08T12:42:51Z", "commit_message": "maint: avoid static analysis failure for ignored dup2 return\n\n* src/sort.c: We're ignoring failures from these calls,\nso do so explicitly to avoid static analysis issues\nas reported by coverity.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1ac8630f1eed599e84f5a45f3eb14ae32546ac94", "commit_date": "2023-07-04T11:11:16Z", "commit_message": "tests: mktemp -t: $TMPDIR has higher priority than -p\n\n* tests/misc/mktemp.pl: Ensure that with -t,\n$TMPDIR has precedence over -p.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "80a6c7faa2d9cd6f00d512e58fcbbc63f5bcb520", "commit_date": "2023-07-01T18:51:17Z", "commit_message": "maint: update .gitignore\n\nAdd some newly-created Gnulib files,\nplus some bootstrap temporaries.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "57ffc403234f6981088e9c45c443aa6aeb361a2a", "commit_date": "2023-07-01T18:51:17Z", "commit_message": "stty: fix untranslated diagnostics\n\n* src/stty.c (set_speed): Translate diagnostics.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6380a66a7d6dac5f8813056c081e2729bbe3e4a2", "commit_date": "2023-07-01T18:51:17Z", "commit_message": "maint: sync bootstrap from Gnulib\n\n* bootstrap: Copy from gnulib/build-aux/bootstrap.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d727aba601c003ff9439df7775c4682b956968f1", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "maint: prefer ckd_add to INT_ADD_WRAPV etc\n\n* bootstrap.conf (gnulib_modules): Add stdckdint.\nAlso, in C source code, prefer C23 macros like ckd_add\nto their Gnulib near-equivalents like INT_ADD_WRAPV.\nInclude <stdckdint.h> as needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "123d03dca47c4d8e0dc896dd8c5732329e6acffe", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "who: don\u2019t crash if clock gyrates\n\n* src/who.c (idle_string): Avoid signed integer overflow\nif the superuser messes with the clock in bizarre ways.\nRemove an \u2018assume\u2019 that wasn\u2019t correct under this scenario.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0285a713671df2347051f27a2f5f0375a2acf04", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "df: omit GCC 5 \u2018assume\u2019s\n\n* src/df.c (main):\n* src/shred.c (dopass):\nOmit \u2018assumes\u2019 needed to pacify GCC 5 but not needed with GCC 13.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17aaba6a41608a3f07e04f3e337a3195035c31a3", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "maint: pacify GCC bug#109613 better\n\n* src/cut.c (cut_file):\n* src/nl.c (nl_file): Pacify GCC Bug#109613 in a better way, by\nnarrowing the coverage of the \u2018assume\u2019 so that bugs in the\nno-longer-covered part are not masked.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d438486cb5da3c543b58facd8fd78a6326deacda", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "maint: stop pacifying Parfait\n\n* src/fmt.c (get_paragraph):\n* src/stty.c (display_changed, display_all): Omit calls to\n\u2018assume\u2019 that are present only to pacify false positives by Parfait\n<https://labs.oracle.com/pls/apex/f?p=94065:12:17236785746387:13>,\nwhich went in-house in 2012 and never came back.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a44b866b11856ffaf905ac59986f05cda077508c", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d61667d0d874f6af7d618221505c395b383534f", "commit_date": "2023-07-01T18:51:16Z", "commit_message": "maint: go back to using \u2018error\u2019\n\nNow that Gnulib\u2019s \u2018error\u2019 module does proper static checking\nfor not returning, we need no longer use the \u2018die\u2019 macro.\nThis makes code easier to read for people that are used to \u2018error\u2019.\n* cfg.mk (error_fns, exclude_file_name_regexp): Remove \u2018die\u2019.\n(sc_die_EXIT_FAILURE): Remove.\n* src/die.h: Remove.  All includes removed.  All calls to \u2018die\u2019\nchanged back to calls to \u2018error\u2019.\n* src/install.c (get_ids): Use quoteaf (problem found with\nmake syntax-check).\n* src/system.h: Include error.h, since some of our macros call \u2018error\u2019.\nStop including error.h elsewhere.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "478055dc30b9d1565e6b577485aea824ef22b038", "commit_date": "2023-07-01T18:51:15Z", "commit_message": "maint: improve static and dynamic checking\n\nThis modernizes the source code somewhat, to take advantage\nof advances in GCC over the years, and Gnulib\u2019s \u2018assure\u2019 module.\nInclude assure.h in files that now need it.\nDo not include assert.h directly; it\u2019s no longer needed.\n* bootstrap.conf (gnulib_modules): Add \u2018assure\u2019.\n* gl/lib/randread.c (randread_error):\n* src/chmod.c (describe_change):\n* src/chown-core.c (describe_change):\n* src/cp.c (decode_preserve_arg):\n* src/head.c (diagnose_copy_fd_failure):\n* src/ls.c (parse_ls_color):\n* src/od.c (decode_one_format):\n* src/split.c (main):\n* src/test.c (binary_operator, posixtest):\nPrefer affirm to abort, since it has better diagnostics in the\nnormal case and better performance with -DNDEBUG.\n* gl/lib/xdectoint.c, src/die.h: Include stddef.h, for unreachable.\n* gl/lib/xdectoint.c: Do not include verify.h; no longer needed.\n* gl/lib/xdectoint.c (__xnumtoint):\n* src/die.h (die):\nPrefer C23 unreachable () to assume (false).\n* gl/lib/xfts.c (xfts_open):\n* src/basenc.c (base32hex_encode):\n* src/copy.c (abandon_move, copy_internal, valid_options):\n* src/cut.c (cut_fields):\n* src/df.c (alloc_field, decode_output_arg, get_dev):\n* src/du.c (process_file, main):\n* src/echo.c (usage):\n* src/factor.c (udiv_qrnnd, mod2, gcd2_odd, factor_insert_large)\n(mulredc2, factor_using_pollard_rho, isqrt2, div_smallq)\n(factor_using_squfof):\n* src/iopoll.c (iopoll_internal, fwrite_wait):\n* src/join.c (add_field):\n* src/ls.c (dev_ino_pop, main, gobble_file, sort_files):\n* src/mv.c (do_move):\n* src/od.c (decode_format_string, read_block, dump, main):\n* src/remove.c (rm):\n* src/rm.c (main):\n* src/sort.c (stream_open):\n* src/split.c (next_file_name, lines_chunk_split):\n* src/stdbuf.c (main):\n* src/stty.c (set_speed):\n* src/tac-pipe.c (line_ptr_decrement, line_ptr_increment):\n* src/touch.c (touch):\n* src/tr.c (find_bracketed_repeat, get_next)\n(validate_case_classes, get_spec_stats, string2_extend, main):\n* src/tsort.c (search_item, tsort):\n* src/wc.c (main):\nPrefer affirm to assert, as it allows for better static\nchecking when compiling with -DNDEBUG.\n* src/chown-core.c (change_file_owner):\n* src/df.c (get_field_list):\n* src/expr.c (printv, null, tostring, toarith, eval2):\n* src/ls.c (time_type_to_statx, calc_req_mask, get_funky_string)\n(print_long_format):\n* src/numfmt.c (simple_strtod_fatal):\n* src/od.c (decode_one_format):\n* src/stty.c (mode_type_flag):\n* src/tail.c (xlseek):\n* src/tr.c (is_char_class_member, get_next, get_spec_stats)\n(string2_extend):\nPrefer unreachable () to abort () or assert (false) when merely\npacifying the compiler, e.g., in a switch statement on an enum\nwhere all cases are covered.\n* src/copy.c (valid_options): Now returns void; the bool was useless.\nCaller no longer needs to assert.\n* src/csplit.c (find_line):\n* src/expand-common.c (next_file):\n* src/shred.c (incname):\n* src/sort.c (main):\n* src/tr.c (append_normal_char, append_range, append_char_class)\n(append_repeated_char, append_equiv_class):\n* src/tsort.c (search_item):\nOmit assert, since the hardware will check for us.\n* src/df.c (header_mode): Now the enum type it should have been.\n* src/du.c (process_file):\n* src/ls.c (assert_matching_dev_ino):\n* src/tail.c (valid_file_spec):\n* src/tr.c (validate_case_classes):\nMark defns with MAYBE_UNUSED if they\u2019re not used when -DNDEBUG.\n* src/factor.c (prime_p, prime2_p, mp_prime_p): Now ATTRIBUTE_PURE.\nPrefer affirm to error+abort.  No need to translate this diagnostic.\n* src/fmt.c (get_paragraph):\n* src/stty.c (display_changed, display_all, sane_mode):\n* src/who.c (idle_string):\nPrefer assume to assert, since the goal is merely pacification\nand assert doesn\u2019t pacify anyway if -DNDEBUG is used.\n* src/join.c (decode_field_spec):\nOmit unreachable abort.\n* src/ls.c (assert_matching_dev_ino, main):\n* src/tr.c (get_next):\nPrefer assure to assert, since the check is relatively expensive\nand won\u2019t help static analysis.\n* src/ls.c (main):\nPrefer static_assert to assert of a constant expression.\n(format_inode): Redo to make it clear that buflen doesn\u2019t matter,\nand that buf must have a certain number of bytes.  All callers changed.\nThis pacifies -Wformat-overflow.\n* src/od.c (decode_one_format):\nOmit an assert that tested for obviously undefined behavior,\nas the compiler could optimize it away anyway.\n* src/od.c (decode_one_format, decode_format_string):\nPrefer ATTRIBUTE_NONNULL to runtime checking.\n* src/stat.c: Do not include <stddef.h> since system.h does that now.\n* src/sync.c (sync_arg):\nPrefer unreachable () to assert (true), which was a typo.\n* src/system.h: Include stddef.h, for unreachable.\n* src/tail.c (xlseek): Simplify by relying on \u2018error\u2019 to exit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2522c1db68a3cd627432d77220f53de56e875648", "commit_date": "2023-07-01T18:51:14Z", "commit_message": "maint: fix indenting in previous change\n\n* src/ptx.c: Adjust to fit into 80 columns.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16b5ca6e0df165bd8b9c2d8c7e4bc7d1b7efa25d", "commit_date": "2023-06-29T22:29:29Z", "commit_message": "maint: prefer C23-style nullptr\n\n* bootstrap.conf (gnulib_modules): Add nullptr.\nIn code, prefer nullptr to NULL where either will do.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e600fbb7648c206099177bb7a1d253f1dccd7409", "commit_date": "2023-06-22T22:22:07Z", "commit_message": "build: ensure that makeinfo \u2265 6.8 checks the @menu structure\n\nSee <https://lists.gnu.org/r/bug-texinfo/2023-06/msg00015.html>.\n\n* doc/local.mk (MAKEINFO): New variable.\n* cfg.mk (_makefile_at_at_check_exceptions): Update.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8858f15150e9132355437d3e6aba86fbedeb40a", "commit_date": "2023-06-22T22:22:07Z", "commit_message": "b2sum: fix UAR with --check with malformed checksum lines\n\n* src/digest.c (split_3): Reinstate the check for whitespace after the\ndigest portion of the line, so that we exit early before inspecting\nthe file name which would be outside the passed buffer in the case\nwhere the input does not contain a newline.\n* tests/cksum/b2sum.sh: Add a test case.\n* NEWS: Mention the bug fix.\n* THANKS.in: Add Frank Busse who has reported multiple bugs using KLEE.\nFixes https://bugs.gnu.org/64229", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed9d8b873065a28659c796eb6068d00fd50e8a26", "commit_date": "2023-06-21T07:08:21Z", "commit_message": "maint: update GCC bug number in comment", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3638944ff5f3b7600cd3a7a483715a75d44ccf31", "commit_date": "2023-06-20T06:24:02Z", "commit_message": "doc: mention fix for bug#64123", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ac7f2d281ef70500fc70211dc1f146c8666e8c1", "commit_date": "2023-06-20T06:24:02Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15925d0e5b80467c354fe27cb1205d6b6e3da11d", "commit_date": "2023-06-19T12:12:37Z", "commit_message": "tests: move tests to a directory per utility\n\n* cfg.mk: Adjust syntax check exclusion paths.\n* tests/local.mk: Adjust for renamed tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d53190ed46a55f599800ebb2d8ddfe38205dbd24", "commit_date": "2023-06-15T00:00:05Z", "commit_message": "doc: mention cksum error fix with cpu feature checks changes\n\n* NEWS: Mention the error message to aid those searching\nfor solutions to the issue, and mention cksum also\nas that was confirmed to fix the error with the adjusted\ncpu feature detection, as discussed at https://bugs.debian.org/1037264\n* src/cksum.c: Cleanup syntax-check failure from previous commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f780a85985f5b069ba8597aaeac49eb74864926a", "commit_date": "2023-06-14T21:54:46Z", "commit_message": "cksum,wc: clean up hw capability checking\n\n* src/cksum.c (cksum_pclmul) [!CRCTAB && !USE_PCLMUL_CRC32]:\nRemove macro.\n(cksum_fp): No longer file-scope.\n(pclmul_supported): Define only if USE_PCLMUL_CRC32.\nThis omits the debug output \"using generic hardware support\"\nfor simplicity and consistency with wc\u2019s output.\n(crc_sum_stream) [!USE_PCLMUL_32]: No need for static function pointer.\n* src/wc.c (wc_lines_p) [USE_AVX2_WC_LINECOUNT]: No longer file-scope.\n(wc) [USE_AVX2_WC_LINECOUNT]: Check for avx2 support at most once,\nwhich was surely the code\u2019s original intent.\n(wc) [!USE_AVX2_WC_LINECOUNT]: No need for static function pointer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ac941565fc1f7c1eb7954302f2ec20435fdf34c", "commit_date": "2023-06-14T21:54:46Z", "commit_message": "cksum,wc: don\u2019t include <cpuid.h>\n\n* src/cksum.c [!CRCTAB && USE_PCLMUL_CRC32]:\n* src/wc.c [USE_AVX2_WC_LINECOUNT]:\nDon\u2019t include <cpuid.h>; no longer needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7814596fa91a07fb2f1d0972f93f26de8a4ad547", "commit_date": "2023-06-14T21:54:46Z", "commit_message": "cksum: fix bug in check for cksum_pclmul\n\nThis fixes a typo in the previous patch.\nProblem reported by P\u00e1draig Brady <https://bugs.gnu.org/64058#11>.\n* src/cksum.c (pclmul_supported): Also require AVX support\nto use cksum_pclmul.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91a74d361461494dd546467e83bc36c24185d6e7", "commit_date": "2023-06-14T04:14:29Z", "commit_message": "wc: port to kernels that disable XSAVE YMM\n\nProblem reported by Dave Hansen <https://bugs.gnu.org/64058>.\nApply similar change to cksum and pclmul, too.\n* NEWS: Mention wc fix.\n* configure.ac (cpuid_exists, get_cpuid_count_exists):\nRemove.  All uses removed, since we no longer use __get_cpuid or\n__get_cpuid_count.\n(pclmul_intrinsic_exists, avx2_intrinsic_exists): Set to no if\n__builtin_cpu_supports calls cannot be compiled.\n(HAVE_PCLMUL_INTRINSIC, HAVE_AVX2_INTRINSIC): Remove; unused.\nSimplify surrounding code because of this.\n* src/cksum.c (pclmul_supported):\n* src/wc.c (avx2_supported):\nUse __builtin_cpu_supports instead of doing it by hand.\nSimplify surrounding code because of this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37890240730f0d0a24d3fd01357fb96955b29b52", "commit_date": "2023-06-12T20:55:51Z", "commit_message": "dircolors: update list of backup file extensions\n\n* src/dircolors.hin: Sort backup section by extension.\nTreat .dpkg-new and .dpkg-tmp as backup files.\nTreat .crdownload (Chromium based browsers' partial download)\nas a backup file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8e81fc44b9cf5fa4c13fa8b2824278b75566398", "commit_date": "2023-06-11T22:10:34Z", "commit_message": "dd: fix parsing of numbers with more than two multipliers\n\n* src/dd.c (parse_integer): Use recursion to support more than two\nmultipliers.  Also protect suffix[-1] access to ensure we don't\ninspect before the passed string.\n* tests/dd/bytes.sh: Add test cases.\n* doc/coreutils.texi (dd invocation): Note the support for specifying\nmany multipliers in a number.\n* NEWS: Mention the bug fix.\nFixes https://bugs.debian.org/1037275", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b841f111de3e7f21c838b2e3ad2d886c21791916", "commit_date": "2023-06-09T10:27:35Z", "commit_message": "build: update gnulib submodule to latest\n\n* gnulib: Update to latest.\n* po/POTFILES.in: Remove recent sc_po_check workaround.\n* tests/misc/date-debug.sh: Adjust as per spelling fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66ea09b0fecb4fa1e4de78e3738bdbb1442b3f31", "commit_date": "2023-06-08T10:06:20Z", "commit_message": "doc: od --strings: clarify operation\n\n* doc/coreutils.texi (od invocation): Remove mention of ASCII,\nas all printable characters in unibyte locales are output.\n* src/od.c (usage): Clarify that only NUL terminated strings\nare displayed, and that it's printable chars, not only graphic chars\nthat are output. I.e., spaces are output also if part of the string.\nReported at https://bugs.ddebian.org/1037217", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2173c0a52925245d4fe27890f9ced1b5d860372", "commit_date": "2023-06-07T20:51:47Z", "commit_message": "maint: ls.c: update stale comment for previous commit\n\n* src/ls.c (gobble_file): Update comment to correspond with\nthe changes in the previous commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bf574deec8e811db230566fb085028aa6958d0fd", "commit_date": "2023-06-07T18:59:40Z", "commit_message": "ls: display command line symlinks that return ELOOP\n\n* src/ls.c (gobble_file): Ensure we lstat() a symlink\nspecified on the command line, if we receive ELOOP from stat().\n* tests/ls/symlink-loop.sh: Add a new test.\n* tests/local.mk: Reference the new test.\n* NEWS: Mention the bug fix.\nFixes https://bugs.gnu.org/63931", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1e21f6dfff9c49633a358aecef5c02a7091ec1d", "commit_date": "2023-06-07T18:59:30Z", "commit_message": "ls: use more standard symlink traversal\n\n* src/ls.c (gobble_file): stat() symlinks directly,\nrather than their targets.  This will be more consistent\nwith how symlinks are generally accessed.\n(make_link_name): Remove no longer used function.\nAddresses https://bugs.gnu.org/63931", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c975de1668775d3c8ecb2c435ba01eeb33d27db", "commit_date": "2023-06-07T15:05:15Z", "commit_message": "doc: reference COPYING from README\n\n* README: Reference COPYING as per the GNU coding standards,\nand soon to be enforced with a syntax-check from gnulib.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a618837575aedcac3a92f9b57bb16df96326888", "commit_date": "2023-06-06T10:34:09Z", "commit_message": "maint: avoid syntax-check failure\n\n* po/POTFILES.in: Add lib/propername.h due to new comments\nthat trigger sc_po_check.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3621d51c9d7afd87c092abb1db32188ce0d1023d", "commit_date": "2023-06-06T10:16:39Z", "commit_message": "doc: NEWS: mention the more defensive copy_file_range avoidance\n\n* NEWS: Mention the improvement in reinstating runtime avoidance\nof copy_file_range(), that came with the last gnulib update,\npicking up gnulib commit fb034b35.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8909df3ceef4804c5fc5a5bcacbf107add728b2", "commit_date": "2023-06-06T05:44:22Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d12f4df0c62de4cf2360797ae3ea3de859fa259", "commit_date": "2023-06-01T12:21:12Z", "commit_message": "maint: use consistent make variable interpolation syntax\n\n* cfg.mk: Prefer $() interpolation over ${}\nlest the reader is confused as to whether shell interpolation,\ni.e. $${} was intended.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0147288d20169113cdc7075c787c4dbb8c67187c", "commit_date": "2023-05-31T16:26:13Z", "commit_message": "split: --additional-suffix: disallow trailing '/'\n\nNote mktemp --suffix has the same inconsistency,\nbut mktemp -d does support creating dirs\nso probably best to leave that as is.\n\n* src/split.c (main): Check for trailing /.\n* tests/split/additional-suffix.sh: Augment the test.\nReported in https://bugs.debian.org/1036827", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d055228e341d36a7b79057eb2285d4ead69ae808", "commit_date": "2023-05-31T16:24:13Z", "commit_message": "maint: adjust code to handle \"error\" syntax-check changes\n\n* src/dd.c: Don't include no longer used error.h.\nUse quoteaf() rather than quote() to quote appropriate for the shell\nand to avoid the syntax-check failure,\n* src/stty.c: Use quoteaf() rather than quotef()\nto have more consistent quoting of the invalid arg.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7c8eb00468f90b01c54418b2b3c433143fda5d5", "commit_date": "2023-05-31T16:20:09Z", "commit_message": "maint: augment syntax checks to cater for more \"error\" functions\n\nsrc/cfg.mk (sc_error_quotes, sc_error_shell_quotes,\nsc_error_shell_always_quotes): Include \"die\" and \"diagnose\"\nin the class of error functions to check arguments for.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48f5a39872acbf3f23f02cf3216a6e30d00db671", "commit_date": "2023-05-30T21:25:03Z", "commit_message": "dd: fix \u2018error\u2019 name issue without macros\n\n* src/dd.c (_GL_NO_INLINE_ERROR): Remove; no longer needed.\n(diagnose): Rename from nl_error and omit first arg since it is\nalways zero.  All uses changed.\n(error): Remove macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe18d3982a86791dab2d043fabe65811fb25075a", "commit_date": "2023-05-28T14:03:00Z", "commit_message": "build: update gnulib submodule to latest\n\n* gnulib: Update to latest.\n* src/dd.c: Avoid error macro redefinition.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17479ef60c8edbd2fe8664e31a7f69704f0cd221", "commit_date": "2023-05-19T21:20:07Z", "commit_message": "build: modernize bootstrap prerequsite tools\n\nFollowing on from commit v9.0-15-gaa31b919c\nwhich updated README-prereq...\n\n* bootstrap.conf: Add an explicit requirement on m4.\nAdd an explicit requirement on texi2pdf which is often\npackaged separately to makeinfo and induces a failure\nfar down the distribution phase if not present.\nReplace the rsync dependency with wget,\nwhich gnulib changed to in 2018.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5d9b67eecfcccb9350d321d8d97910c5c05bf11", "commit_date": "2023-05-19T17:40:53Z", "commit_message": "build: update gnulib submodule to latest\n\n* gnulib: Update to latest.\n* configure.ac: Remove gnulib reference, as that specific issue\nis now explicitly avoided in gnulib itself.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76e1200eebc3d311c7b5b3b0843dbd408383fab0", "commit_date": "2023-05-19T10:32:14Z", "commit_message": "build: pacify GCC 13 with -flto\n\n* src/cut.c (cut_file): Explicitly mark STREAM as nonnull to avoid\n-Werror=null-dereference.\n* src/nl.c (nl_file): Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba0527d4cad6ce4e2b153c553ce87dd0a2c4c353", "commit_date": "2023-05-19T08:58:50Z", "commit_message": "build: revert -Wmaybe-uninitialized warnings avoidance\n\nThis reverts commit 800c86d5, as that was deemed too invasive.\nWe do keep the change to tee.c to allow using -O3 without warnings.\nFor other optimization options like -O0, -Og, -O1, -Os,\none can use WERROR_CFLAGS= to stop warnings inducing a build failure.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "800c86d5fa6ed32026e33d9db56739b0c696c40e", "commit_date": "2023-05-18T11:13:47Z", "commit_message": "build: avoid false -Wmaybe-uninitialized warnings\n\nAllow easily building a debug build for example with:\n  make CFLAGS='-O0 -ggdb'\n\nFalse -Wmaybe-uninitialized warnings hit in different\nplaces depending on the compiler passes used.\nThese changes were tested with gcc 10.2.1, 12.2.1, and 13.1.1 like:\n  for o in g s z fast 0 1 2 3; do\n    make clean && make -j$(nproc) CFLAGS=\"-O$o\" || break\n  done\n\n* src/digest.c: Disable -Wmaybe-uninitialized that gives\nfalse positive here at -O0.\n* src/ln.c: Avoid -Wmaybe-uninitialized that gives\nfalse positive here at -O1.\n* src/pr.c: Likewise.\n* src/sort.c: Likewise.\n* src/tee.c: Avoid -Wmaybe-uninitialized that gives\nfalse positive here at -O3 on gcc 13.1.1 at least.\n* src/cp.c: Avoid -Wmaybe-uninitialized that gives\nfalse positive here at -Os on gcc 13.1.1 at least.\n* src/copy.c: Avoid -Wmaybe-uninitialized that gives\nfalse positive here at -Og on gcc 13.1.1 at least.\n* src/head.c: Likewise.\n* src/paste.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aed3b8190aca198ac4ef7f7951ee67da61569598", "commit_date": "2023-05-18T10:57:26Z", "commit_message": "build: gnulib: avoid false -Wstringop-overflow warning\n\nTested on gcc 13.1.1 with: make CFLAGS='-O0 -ggdb'\n\n* configure.ac: Disable -Wstringop-overflow for gnulib.\nThis warning is far too problematic in my experience:\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=88443\nand triggers with gcc -O0 with versions 12,13 at least.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f218412b9a041971f1ae85220709936e2dd0ca94", "commit_date": "2023-05-13T09:33:14Z", "commit_message": "maint: cleanups to NEWS\n\n* NEWS: Use more consistent wording, ordering, and formatting\nfor recent entries.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "059e53e5b49d8a2314045c796d813f51dd862069", "commit_date": "2023-05-08T20:34:58Z", "commit_message": "split: advise the kernel of sequential access pattern\n\nAs split is often dealing with large files,\nensure we indicate to the kernel our sequential access pattern.\nThis was seen to operate 5% faster when reading from SSD,\nas tested with:\n\ndd bs=1M count=2K if=/dev/urandom of=big.in\n\nfor split in split.orig split; do\n  # Ensure big file is not cached\n  dd of=big.in oflag=nocache conv=notrunc,fdatasync count=0 status=none\n  # Test read efficiency\n  CWD=$PWD; (cd /dev/shm && time $CWD/src/$split -n2 $CWD/big.in)\ndone\n\nreal    0m9.039s\nuser    0m0.055s\nsys     0m3.510s\n\nreal    0m8.568s\nuser    0m0.056s\nsys     0m3.752s\n\n* src/split.c (main): Use fdadvise to help the kernel\nchoose a more appropriate readahead buffer.\n* NEWS: Mention the improvement.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba128e628cfa0dd111cf235d965200d1cdf77f52", "commit_date": "2023-05-08T11:57:56Z", "commit_message": "doc: adjust build instructions for disabling year 2038 support\n\n* README-install: Adjust the instructions as per recent gnulib updates.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f942cd03fce1a6cda87018306b50f803f08f350", "commit_date": "2023-05-07T21:07:12Z", "commit_message": "build: update gnulib submodule to latest\n\nThis fixes failures in \"very-expensive\" tests on FTS with many\ndirectory entries:\n  FAIL: tests/rm/ext3-perf\n  FAIL: tests/rm/many-dir-entries-vs-OOM\n\nThe following shows the problem in the former of the above tests:\n  $ mkdir d && seq 400000 | env -C d xargs touch )\n  $ rm -rf d\n  rm: traversal failed: d: Operation not supported\n\nGnulib commit 3f0950f65abb (2023-04-26) introduced this regression\nwhich was fixed again with gnulib commit d4d8abb39eb0.\n\nSee discussion in\n<https://lists.gnu.org/r/bug-gnulib/2023-05/msg00040.html>\n\n* bootstrap.conf (gnulib_modules): Change \"year2038-required\" to\n\"year2038-recommended\"; the module has been replaced.\n* gnulib: Update to latest.\n* tests/init.sh: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42f33ae68c579893ea0d7b151e6252b77274ccb7", "commit_date": "2023-05-07T16:17:27Z", "commit_message": "doc: time zone conversion example\n\n* doc/coreutils.texi (Examples of date):\nGive time zone conversion example.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7edec89fc324aabef3f27925ccd962b801783324", "commit_date": "2023-05-07T16:17:26Z", "commit_message": "doc: new subsection for date format specs\n\n* doc/coreutils.texi (Date format specifiers): New subsection,\nwhich groups the date format specifiers without otherwise\nchanging contents.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fae65623a92a3f150fd35cfef58dcb3d8533f94c", "commit_date": "2023-05-06T10:26:04Z", "commit_message": "pr: fix parsing of empty arguments\n\nBefore:\n  $ pr --expand-tabs=\n  pr: '-e' extra characters or invalid number in the argument:\n   \u2018SHELL=/bin/bash\u2019: Value too large for defined data type\n\nAfter:\n  $ pr --expand-tabs=\n  pr: '-e': Invalid argument: \u2018\u2019\n\n* src/pr.c (getoptarg): Ensure we don't parse beyond the\nend of an empty argument, thus outputting arbitrary stack\ninfo in subsequent error messages.\n\nAddresses https://bugs.debian.org/1035596", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "300af7869161a3618e28cbae3daefc25c8267efe", "commit_date": "2023-05-05T18:05:03Z", "commit_message": "cp: -p --parents: minor cleanup of previous patch\n\nThis doesn\u2019t change behavior; it just clarifies the code a bit.\n* src/cp.c (re_protect): New arg DST_SRC_NAME, for clarity, and so\nthat we need to skip '/'s only once.  Caller changed.\nRename a couple of local variables to try to make things clearer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6b1fe43474b48a6bf5793e11cc1d0d6e895fdf4", "commit_date": "2023-05-03T17:15:59Z", "commit_message": "cp: -p --parents: fix failure to preserve permissions for absolute paths\n\n* src/cp.c (re_protect): Ensure copy_acl() is passed an absolute path.\n* tests/cp/cp-parents.sh: Add a test case.\n* NEWS: Mention the bug.\nFixes https://bugs.gnu.org/63245", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7223651ad194a5868b58c1be6c7452fd3ca2f75a", "commit_date": "2023-05-02T21:39:03Z", "commit_message": "tests: provide more info on DEBUG=yes\n\n* README: State that DEBUG=yes is particularly useful with perl tests.\n* tests/split/l-chunk.sh: Use the more standard $DEBUG variable\nrather than an internal $DEBUGGING variable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d683a1d020894d549986bd7b9e78b77b35650a2", "commit_date": "2023-04-30T21:10:25Z", "commit_message": "doc: provide more info on the default 32-bit cksum digest\n\n* doc/coreutils.texi (cksum invocation): Say that the default\ndigest format is 32-bit and based on the Ethernet standard CRC.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cae0419c9343cfbdf392b46f3d4c5ea6c428bb9", "commit_date": "2023-04-30T12:05:12Z", "commit_message": "maint: remove redundant exit status handling\n\n* src/numfmt.c: Remove redundant / confusing\nuse of TIMEOUT_FAILURE.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35adc746a000ac1f8d1d817a6a3a60d5b80daef5", "commit_date": "2023-04-27T01:20:20Z", "commit_message": "maint: simplify --enable-gcc-warnings='expensive'\n\n* configure.ac (WERROR_CFLAGS): Omit mention of\n-Wno-analyzer-double-free, -Wno-analyzer-null-dereference, and\n-Wno-analyzer-use-after-free as manywarnings no longer uses them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21e757350896da0a42d03e9f9738d54473f74a9f", "commit_date": "2023-04-27T01:20:20Z", "commit_message": "maint: suppress GCC 13 false alarms\n\n* src/csplit.c, src/fmt.c, src/make-prime-list.c, src/nohup.c:\nAdd pragmas to pacify GCC 13 when coreutils is configured\nwith --enable-gcc-warnings='expensive'.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c199713ed384d58e23671f58f646afcf06fabf8", "commit_date": "2023-04-27T01:20:19Z", "commit_message": "chmod: pacify GCC 13\n\n* src/chmod.c (main): Use xpalloc instead of X2REALLOC,\nand make the corresponding variables signed instead of unsigned.\nWhen reallocating the buffer, this grows it by a factor of 1.5, not 2.\nThis also pacifies gcc -Wanalyzer-null-dereference.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d178b497542b19571dd6896db561c46ec2e451c3", "commit_date": "2023-04-27T01:20:19Z", "commit_message": "csplit: pacify GCC 13\n\n* src/csplit.c (load_buffer): Refactor for clarity.\nThis also xpacifies gcc -Wanalyzer-use-of-uninitialized-value.\nWhen reallocating the buffer, grow it by a factor of 1.5, not 2.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "941027eeb77e3cfa2923f877d5ba45d7d70a39a5", "commit_date": "2023-04-27T01:20:19Z", "commit_message": "build: update gnulib submodule to latest", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e1c5f2d71eb99bc3c73619eeb0b79c3d36b5a3b", "commit_date": "2023-04-26T15:20:50Z", "commit_message": "tests: more cases for read input diagnostics\n\n* tests/misc/read-errors.sh: Exercise more modes of\nvarious utilities for better read error coverage.\n* tests/split/fail.sh: Remove part refactored into the above test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eb5abbff4e9ddfcb0537bfc75ded89ca739dbfb", "commit_date": "2023-04-26T15:19:51Z", "commit_message": "uniq: be more specific when diagnosing read errors\n\n* src/uniq.c (check_file): Use the errno when diagnosing read errors.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b16553cdad35c286a6078b1bfa503df59403be2b", "commit_date": "2023-04-26T12:51:42Z", "commit_message": "build: fix build with -mno-ssse3\n\nAvoid the following error with -mno-ssse3:\n inlining failed in call to 'always_inline' '_mm_shuffle_epi8':\n target specific option mismatch\n\n* configure.ac: Ensure we use ssse3 specific code when\nchecking whether to enable the pclmul cksum implementation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fb0cc80fa5e1cede9ec05303a70c26d0d23ca1d", "commit_date": "2023-04-25T13:18:35Z", "commit_message": "pr: fix infinite loop when double spacing\n\n* src/pr.c (init_parameters): Ensure we avoid a 0 lines_per_body\nwhich was possible when adjusting for double spacing.\nThat caused print_page() to always return true,\ncausing an infinite loop.\n* tests/pr/pr-tests.pl: Add a test case.\n* NEWS: Mention the fix.\nFixes https://bugs.debian.org/1034808", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc078f747f3db00e70b2ae2ad2ab34e8d54316d3", "commit_date": "2023-04-25T10:17:54Z", "commit_message": "copy: reduce verbosity of -i and -u with --verbose\n\nSince skipping of files is central to the operation of -i and -u,\nand with -u one may be updating few files out of many,\nreinstate the verbosity of this functionality as it was before 9.3.\n\n* src/copy.c (copy_internal): Only output \"skipped\" message\nwith --debug.  Also adjust so message never changes with --debug.\n* tests/cp/cp-i.sh: Adjust accordingly.\n* tests/mv/mv-n.sh: Likewise.\n* tests/cp/debug.sh: Add explicit test case for message.\n* NEWS: Mention the change in behavior.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ea7c020e844687eec15fc4749760bb29dee541a", "commit_date": "2023-04-24T10:46:28Z", "commit_message": "tests: ensure all utilities that read input diagnose errors\n\n* tests/misc/read-errors.sh: Add a new test.\n* tests/misc/date-f.sh: Remove unneeded test.\n* tests/misc/dircolors.sh: Likewise.\n* tests/local.mk: Reference new test, and dereference removed ones.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "82e1750daa3d002717234d8b37d21bdefbf826f4", "commit_date": "2023-04-24T10:46:28Z", "commit_message": "factor: diagnose errors reading the input\n\n* src/factor.c (do_stdin): Exit with failure upon read errors.\n* NEWS: Mention the bug fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5595673d5cc2e3939edb898823dfb069296aa5b2", "commit_date": "2023-04-24T10:46:28Z", "commit_message": "numfmt: diagnose errors reading the input\n\n* src/numfmt.c (main): Exit with failure upon read errors.\n* NEWS: Mention the bug fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e62ba282ef44567a73f93d77583a838447d7550", "commit_date": "2023-04-24T10:46:28Z", "commit_message": "tsort: diagnose errors reading the input\n\n* src/tsort.c (tsort): Check for errors after readtoken().\n* NEWS: Mention the bug fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d333aca433c5c7ae988d262130eb7e0c81819cf", "commit_date": "2023-04-24T10:46:28Z", "commit_message": "cksum: fix failure to diagnose read errors with crc32\n\nThe default crc32 mode fails to diagnose read errors.\n\n* src/cksum.c (cksum_slice8): Fix the check for read errors.\n(cksum_pclmul): Likewise.\n* NEWS: Mention the bug fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e29f4411c80b38a8d146de9ceb0d7e85831b72f3", "commit_date": "2023-04-24T10:37:09Z", "commit_message": "tests: avoid failure when cp fails for proc files\n\nWhen run under QEmu emulation emulated /proc files have\nunstable inode numbers.\n\n* tests/cp/proc-short-read.sh: Skip if unstable inode numbers detected.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bab375973e62e9fcc0b41451d637134073e3007", "commit_date": "2023-04-21T18:13:52Z", "commit_message": "install: support stripping files with a leading hyphen\n\n* src/install.c (strip): Prepend \"./\" to file names with a leading \"-\".\n* tests/install/strip-program.sh: Add a test case.\n* NEWS: Mention the bug fix.\nReported in https://bugs.debian.org/1034429", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6229adb09b9ace9bd0034a2c228fcee224c0563", "commit_date": "2023-04-18T14:32:53Z", "commit_message": "maint: post-release administrivia\n\n* NEWS: Add header line for next release.\n* .prev-version: Record previous version.\n* cfg.mk (old_NEWS_hash): Auto-update.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}