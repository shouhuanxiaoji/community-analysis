{"main": [{"commit_oid": "ad76c2d6ba8091a7afa95568e46af2261b362439", "commit_date": "2023-05-04T18:30:18Z", "commit_message": "Merge pull request #554 from smcv/disable-userns-tests-root\n\nFix test failure since #488 when running as uid 0", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d73a78f7ef0bdb5e0a9e1f332c862d68008dec04", "commit_date": "2023-05-04T18:27:22Z", "commit_message": "Merge pull request #559 from cgzones/compiler\n\nFix various compiler warnings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "928638969e475f7a1a5aa6708add7292eb695f03", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Get umbrella project back in sync\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35e6b2a6982fd167793a267bbb855190a4c6eed2", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Mention CVE-2017-5226 with --new-session\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b246d4297c7f5d62f9a1ab103abbf78c5486475", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Get product intro back in sync\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f9ce900d4cbe51c88d22da144759828ae04d0f0", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Mention --new-session in section \"Sandboxing\"\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a1d8b7217c7153d5ce260db2a408d3679a2847e", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Add --new-session to usage example\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29f92713ceab9699b73aec317e2e77aa0728c6dc", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Improve readability of usage example\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "795eeee77eab88afb9db27b06e1d23cc3aebe38e", "commit_date": "2023-03-30T12:34:17Z", "commit_message": "README, SECURITY: Clarify that bubblewrap does not define a security model\n\nbubblewrap can provide a robust security boundary that severely limits\nfunctionality, or it can provide full functionality without any attempt\nat being a security boundary, or anything in between those extremes.\nIf a caller of bubblewrap chooses inappropriate command-line arguments\nfor their desired security model, then bubblewrap will not provide the\nsecurity model they are aiming for, but this is not a bubblewrap\nvulnerability.\n\nApparently this isn't clear to everyone, so try to clarify.\n\nThe one place where bubblewrap *does* define some sort of security\npolicy for itself is when it's setuid root, in which case it's\nresponsible for preventing users from carrying out privilege escalation\nattacks like CVE-2020-5291.\n\nResolves: https://github.com/containers/bubblewrap/issues/555\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da63f2bddb9ce58e0844ac415d4cba388571e1f4", "commit_date": "2023-03-02T21:49:36Z", "commit_message": "Merge pull request #558 from cgzones/close\n\nload_file_data: do not close fd on error to avoid double-close", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a70cbe8e8eb150ce919fd3b0cfaf68ee2ec32a4", "commit_date": "2023-03-02T21:49:17Z", "commit_message": "Merge pull request #562 from cgzones/cap_example\n\nbwrap.1: mention example format of capability", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5634e3f89b76caa14534d778722821a66631e1e3", "commit_date": "2023-03-02T15:56:02Z", "commit_message": "bwrap.1: mention example format of capability\n\nMention how to format capabilities for --add-cap, e.g.\nCAP_DAC_READ_SEARCH instead of DAC_READ_SEARCH.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ef02842ebde3c88c04dac7cee707b8c581332bc", "commit_date": "2023-03-01T19:35:38Z", "commit_message": "load_file_data: do not close fd on error to avoid double-close\n\nload_file_data() closes the passed file descriptor in case of an read(2)\nfailure.  The file descriptor is however owned by the caller and should\nnot be closed to avoid a double-close.\nSince in this error branch NULL is always returned the only affected\ncaller is load_file_data(), as all other callers immediately abort via\ndie_with_error().  As bubblewrap is single-threaded the second close(2)\nin load_file_data() will be well-defined and fail with EBADF, leading to\nno unrelated file descriptor to be closed\n\nFound by GCC analyzer:\n\n    ./utils.c: In function \u2018load_file_at\u2019:\n    ./utils.c:630:3: warning: double \u2018close\u2019 of file descriptor \u2018fd\u2019 [CWE-1341] [-Wanalyzer-fd-double-close]\n    630 |   close (fd);\n        |   ^~~~~~~~~~\n    ...\n            |  596 |           close (fd);\n            |      |           ~~~~~~~~~~\n            |      |           |\n            |      |           (15) first \u2018close\u2019 here\n    ...\n        |  630 |   close (fd);\n        |      |   ~~~~~~~~~~\n        |      |   |\n        |      |   (20) second \u2018close\u2019 here; first \u2018close\u2019 was at (15)\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab5eb5c3f5bc75ee38d66a0c4d56d8a05be54b76", "commit_date": "2023-02-28T20:53:52Z", "commit_message": "Declare file local variables static\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe0da5d368d1c681be684a8fddffaa2cc6587fb4", "commit_date": "2023-02-28T20:53:49Z", "commit_message": "Use mode_t as parameter type in mkdir_with_parents\n\nThe parameter mode only usage is it being passed to ensure_dir(), which\ntakes it as mode_t.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88004f880a7acfe9d8b3016b173b39b24d70bc92", "commit_date": "2023-02-28T20:53:48Z", "commit_message": "Drop unnecessary cast to same type\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15ef38c4e3af506e7f35b9372cf9f657e9861701", "commit_date": "2023-02-28T20:53:45Z", "commit_message": "Avoid implicit conversions\n\nFound by running under pedantic UBSAN:\n\n    ../bubblewrap.c:968:21: runtime error: implicit conversion from type 'int' of value -1 (32-bit, signed) to type 'uid_t' (aka 'unsigned int') changed the value to 4294967295 (32-bit, unsigned)\n    ../bubblewrap.c:1210:28: runtime error: implicit conversion from type 'int' of value -41 (32-bit, signed) to type 'unsigned int' changed the value to 4294967255 (32-bit, unsigned)\n    ../bubblewrap.c:1215:28: runtime error: implicit conversion from type 'int' of value -41 (32-bit, signed) to type 'unsigned int' changed the value to 4294967255 (32-bit, unsigned)\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae2ec35424a84d3f6baaa114f36d9a2a88962bc", "commit_date": "2023-02-28T20:53:19Z", "commit_message": "Enable and resolve sign comparisson warnings\n\nComparisson of different signedness can result in unexpected results due\nto implicit conversions.\n\n    ../network.c:81:34: warning: comparison of integer expressions of different signedness: \u2018__u32\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n       81 |           if (rheader->nlmsg_seq != seq_nr)\n          |                                  ^~\n    ../network.c:83:34: warning: comparison of integer expressions of different signedness: \u2018__u32\u2019 {aka \u2018unsigned int\u2019} and \u2018__pid_t\u2019 {aka \u2018int\u2019} [-Wsign-compare]\n      83 |           if (rheader->nlmsg_pid != getpid ())\n          |                                  ^~\n\n    ../bind-mount.c:268:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      268 |       assert (i < n_lines);\n          |                 ^\n    ../bind-mount.c:309:13: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      309 |   assert (i == n_lines);\n          |             ^~\n    ../bind-mount.c:318:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      318 |   for (i = 0; i < n_lines; i++)\n          |                 ^\n    ../bind-mount.c:321:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      321 |   for (i = 0; i < n_lines; i++)\n          |                 ^\n\n    ../utils.c:818:19: warning: comparison of integer expressions of different signedness: \u2018size_t\u2019 {aka \u2018long unsigned int\u2019} and \u2018ssize_t\u2019 {aka \u2018long int\u2019} [-Wsign-compare]\n      818 |   while (size - 2 < n);\n          |                   ^\n\n    ../bubblewrap.c:489:13: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      489 |   assert (j < sizeof(dont_close)/sizeof(*dont_close));\n          |             ^\n    ../bubblewrap.c:994:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n      994 |       if (setfsuid (-1) != real_uid)\n          |                         ^~\n    ../bubblewrap.c:1042:61: warning: comparison of integer expressions of different signedness: \u2018ssize_t\u2019 {aka \u2018long int\u2019} and \u2018size_t\u2019 {aka \u2018long unsigned int\u2019} [-Wsign-compare]\n     1042 |       if (write (privileged_op_socket, buffer, buffer_size) != buffer_size)\n          |                                                             ^~\n    ../bubblewrap.c:1232:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1232 |           for (i = 0; i < N_ELEMENTS (cover_proc_dirs); i++)\n          |                         ^\n    ../bubblewrap.c:1260:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1260 |           for (i = 0; i < N_ELEMENTS (devnodes); i++)\n          |                         ^\n    ../bubblewrap.c:1272:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1272 |           for (i = 0; i < N_ELEMENTS (stdionodes); i++)\n          |                         ^\n    ../bubblewrap.c: In function \u2018read_priv_sec_op\u2019:\n    ../bubblewrap.c:1556:15: warning: comparison of integer expressions of different signedness: \u2018ssize_t\u2019 {aka \u2018long int\u2019} and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1556 |   if (rec_len < sizeof (PrivSepOp))\n          |               ^\n    ../bubblewrap.c:1626:28: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n     1626 |   if (*total_parsed_argc_p > MAX_ARGS)\n          |                            ^\n    ../bubblewrap.c:1681:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n     1681 |               if (*total_parsed_argc_p > MAX_ARGS)\n          |                                        ^\n    ../bubblewrap.c:2265:31: warning: comparison of integer expressions of different signedness: \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2265 |           if (opt_sandbox_uid != -1)\n          |                               ^~\n    ../bubblewrap.c:2285:31: warning: comparison of integer expressions of different signedness: \u2018gid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2285 |           if (opt_sandbox_gid != -1)\n          |                               ^~\n    ../bubblewrap.c:2678:23: warning: comparison of integer expressions of different signedness: \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2678 |   if (opt_sandbox_uid == -1)\n          |                       ^~\n    ../bubblewrap.c:2680:23: warning: comparison of integer expressions of different signedness: \u2018gid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2680 |   if (opt_sandbox_gid == -1)\n          |                       ^~\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ab175fe6d3a4053444b04d805a6d686f53455b9", "commit_date": "2023-02-27T12:21:03Z", "commit_message": "Prepare v0.8.0\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ba9a9af913ffdb319f9523074e4863849ba5065", "commit_date": "2023-02-23T12:19:38Z", "commit_message": "tests: Try harder to evade --disable-userns\n\nThe worst-case scenario in terms of enforcing --disable-userns is that\nwe're retaining all capabilities, so test that too, to make sure that\nthe option is genuinely restricting even a privileged user.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "140936fd73937b105051f978f9443c3b1c7253dc", "commit_date": "2023-02-23T12:17:59Z", "commit_message": "tests: Explicitly unshare userns when testing --disable-userns\n\nIf we're running the tests as uid 0 with capabilities, then bwrap will\nnot create a new user namespace by default, which means the limit won't\nbe exceeded and the test will fail. Make sure we always try to create\nthe new user namespace.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a319fd5dc323e9cc5988922c8d8a5efdfbb2160b", "commit_date": "2023-02-17T09:30:19Z", "commit_message": "Merge pull request #550 from smcv/seccomp-einval-hint\n\nAttempt to clarify error message for missing CONFIG_SECCOMP_FILTER", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f873fa8ae7b36f2d12974363d488fbc2baee51b", "commit_date": "2023-01-23T11:29:13Z", "commit_message": "Attempt to clarify error message for missing CONFIG_SECCOMP_FILTER\n\nGeneral-purpose desktop distributions are compiled with CONFIG_SECCOMP\nand CONFIG_SECCOMP_FILTER, but vendor kernels for phones and other\nassorted embedded devices don't necessarily enable these options. These\nkernels are unsuitable for running Flatpak, or anything else that relies\non `bwrap --seccomp` or `bwrap --add-seccomp-fd`.\n\nMissing CONFIG_SECCOMP or CONFIG_SECCOMP_FILTER is not the *only* reason\nwhy we could get EINVAL here: I think we'd also get EINVAL if the seccomp\nprogram is syntatically invalid. However, it's a relatively likely reason,\nso it seems worth providing a hint.\n\nHelps: flatpak/flatpak#3069\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41fd02ad147907cedf88a7f7488ac18667adc919", "commit_date": "2023-01-04T08:47:04Z", "commit_message": "test-run: Filter out no-new-privs in capsh output\n\nOlder versions of capsh would only show the capabilities, which we\nexpect not to change when we don't drop capabilities; but newer\nversions also display whether the NO_NEW_PRIVS bit is set, and we *do*\nexpect to change that.\n\nResolves: https://github.com/containers/bubblewrap/issues/544\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5f672355b916e6e59dad5ec9ca55aa90afe8a90", "commit_date": "2023-01-03T10:04:09Z", "commit_message": "Add --assert-userns-disabled option\n\nWe can't combine --disable-userns with entering an existing user\nnamespace via --userns if the existing user namespace was created with\n--disable-userns, because its ability to create nested user namespaces\nhas already been disabled. However, the next best thing is to verify\nthat we are already in the desired state.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33c333bcb88557ad23a9bc5be0d619d537984e9", "commit_date": "2023-01-03T10:04:09Z", "commit_message": "Add an option to disable nested user namespaces by setting limit to 1\n\nSome use-cases of bubblewrap want to ensure that the subprocess can't\nfurther re-arrange the filesystem namespace, or do other more complex\nnamespace modification. For example, Flatpak wants to prevent sandboxed\nprocesses from altering their /proc/$pid/root/.flatpak-info, so that\n/.flatpak-info can safely be used as an indicator that a process is part\nof a Flatpak app.\n\nThis approach was suggested by lukts30 on containers/bubblewrap#452.\nThe sysctl-controlled maximum numbers of namespaces are themselves\nnamespaced, so we can disable nested user namespaces by setting the\nlimit to 1 and then entering a new, nested user namespace. The resulting\nprocess loses its privileges in the namespace where the limit was set\nto 1, so it is unable to move the limit back up.\n\nCo-authored-by: Alexander Larsson <alexl@redhat.com>\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb7ac1348f98ee48f1e2e38bdf93abca2e4f6d06", "commit_date": "2022-11-21T13:41:13Z", "commit_message": "Merge pull request #539 from smcv/test-size\n\nFix test failures in 0.7.0 on unusual platforms", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5080b233faead1b7e9b1321d2897c204bcbab3b3", "commit_date": "2022-11-07T18:30:21Z", "commit_message": "test-run: Don't rely on df supporting the --output=size option\n\ndf --output was new in coreutils 8.21 (2013), and non-GNU\nimplementations like busybox df don't have it.\n\nThis avoids a test failure in Steam Runtime 1 'scout', which is based\non Ubuntu 12.04 (2012). It'll also be helpful for anyone maintaining\nan OS with non-GNU shell utilities.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cfc15df5f1669a26c805b91c229805ffe012ca5f", "commit_date": "2022-11-07T18:26:21Z", "commit_message": "test-run: If bubblewrap is setuid, assert that --size is not allowed\n\nPreviously, this test would have failed for a setuid bubblewrap.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad76c2d6ba8091a7afa95568e46af2261b362439", "commit_date": "2023-05-04T18:30:18Z", "commit_message": "Merge pull request #554 from smcv/disable-userns-tests-root\n\nFix test failure since #488 when running as uid 0", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d73a78f7ef0bdb5e0a9e1f332c862d68008dec04", "commit_date": "2023-05-04T18:27:22Z", "commit_message": "Merge pull request #559 from cgzones/compiler\n\nFix various compiler warnings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "928638969e475f7a1a5aa6708add7292eb695f03", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Get umbrella project back in sync\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35e6b2a6982fd167793a267bbb855190a4c6eed2", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Mention CVE-2017-5226 with --new-session\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b246d4297c7f5d62f9a1ab103abbf78c5486475", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Get product intro back in sync\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f9ce900d4cbe51c88d22da144759828ae04d0f0", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Mention --new-session in section \"Sandboxing\"\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a1d8b7217c7153d5ce260db2a408d3679a2847e", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Add --new-session to usage example\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29f92713ceab9699b73aec317e2e77aa0728c6dc", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Improve readability of usage example\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "795eeee77eab88afb9db27b06e1d23cc3aebe38e", "commit_date": "2023-03-30T12:34:17Z", "commit_message": "README, SECURITY: Clarify that bubblewrap does not define a security model\n\nbubblewrap can provide a robust security boundary that severely limits\nfunctionality, or it can provide full functionality without any attempt\nat being a security boundary, or anything in between those extremes.\nIf a caller of bubblewrap chooses inappropriate command-line arguments\nfor their desired security model, then bubblewrap will not provide the\nsecurity model they are aiming for, but this is not a bubblewrap\nvulnerability.\n\nApparently this isn't clear to everyone, so try to clarify.\n\nThe one place where bubblewrap *does* define some sort of security\npolicy for itself is when it's setuid root, in which case it's\nresponsible for preventing users from carrying out privilege escalation\nattacks like CVE-2020-5291.\n\nResolves: https://github.com/containers/bubblewrap/issues/555\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da63f2bddb9ce58e0844ac415d4cba388571e1f4", "commit_date": "2023-03-02T21:49:36Z", "commit_message": "Merge pull request #558 from cgzones/close\n\nload_file_data: do not close fd on error to avoid double-close", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a70cbe8e8eb150ce919fd3b0cfaf68ee2ec32a4", "commit_date": "2023-03-02T21:49:17Z", "commit_message": "Merge pull request #562 from cgzones/cap_example\n\nbwrap.1: mention example format of capability", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5634e3f89b76caa14534d778722821a66631e1e3", "commit_date": "2023-03-02T15:56:02Z", "commit_message": "bwrap.1: mention example format of capability\n\nMention how to format capabilities for --add-cap, e.g.\nCAP_DAC_READ_SEARCH instead of DAC_READ_SEARCH.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ef02842ebde3c88c04dac7cee707b8c581332bc", "commit_date": "2023-03-01T19:35:38Z", "commit_message": "load_file_data: do not close fd on error to avoid double-close\n\nload_file_data() closes the passed file descriptor in case of an read(2)\nfailure.  The file descriptor is however owned by the caller and should\nnot be closed to avoid a double-close.\nSince in this error branch NULL is always returned the only affected\ncaller is load_file_data(), as all other callers immediately abort via\ndie_with_error().  As bubblewrap is single-threaded the second close(2)\nin load_file_data() will be well-defined and fail with EBADF, leading to\nno unrelated file descriptor to be closed\n\nFound by GCC analyzer:\n\n    ./utils.c: In function \u2018load_file_at\u2019:\n    ./utils.c:630:3: warning: double \u2018close\u2019 of file descriptor \u2018fd\u2019 [CWE-1341] [-Wanalyzer-fd-double-close]\n    630 |   close (fd);\n        |   ^~~~~~~~~~\n    ...\n            |  596 |           close (fd);\n            |      |           ~~~~~~~~~~\n            |      |           |\n            |      |           (15) first \u2018close\u2019 here\n    ...\n        |  630 |   close (fd);\n        |      |   ~~~~~~~~~~\n        |      |   |\n        |      |   (20) second \u2018close\u2019 here; first \u2018close\u2019 was at (15)\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab5eb5c3f5bc75ee38d66a0c4d56d8a05be54b76", "commit_date": "2023-02-28T20:53:52Z", "commit_message": "Declare file local variables static\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe0da5d368d1c681be684a8fddffaa2cc6587fb4", "commit_date": "2023-02-28T20:53:49Z", "commit_message": "Use mode_t as parameter type in mkdir_with_parents\n\nThe parameter mode only usage is it being passed to ensure_dir(), which\ntakes it as mode_t.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88004f880a7acfe9d8b3016b173b39b24d70bc92", "commit_date": "2023-02-28T20:53:48Z", "commit_message": "Drop unnecessary cast to same type\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15ef38c4e3af506e7f35b9372cf9f657e9861701", "commit_date": "2023-02-28T20:53:45Z", "commit_message": "Avoid implicit conversions\n\nFound by running under pedantic UBSAN:\n\n    ../bubblewrap.c:968:21: runtime error: implicit conversion from type 'int' of value -1 (32-bit, signed) to type 'uid_t' (aka 'unsigned int') changed the value to 4294967295 (32-bit, unsigned)\n    ../bubblewrap.c:1210:28: runtime error: implicit conversion from type 'int' of value -41 (32-bit, signed) to type 'unsigned int' changed the value to 4294967255 (32-bit, unsigned)\n    ../bubblewrap.c:1215:28: runtime error: implicit conversion from type 'int' of value -41 (32-bit, signed) to type 'unsigned int' changed the value to 4294967255 (32-bit, unsigned)\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae2ec35424a84d3f6baaa114f36d9a2a88962bc", "commit_date": "2023-02-28T20:53:19Z", "commit_message": "Enable and resolve sign comparisson warnings\n\nComparisson of different signedness can result in unexpected results due\nto implicit conversions.\n\n    ../network.c:81:34: warning: comparison of integer expressions of different signedness: \u2018__u32\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n       81 |           if (rheader->nlmsg_seq != seq_nr)\n          |                                  ^~\n    ../network.c:83:34: warning: comparison of integer expressions of different signedness: \u2018__u32\u2019 {aka \u2018unsigned int\u2019} and \u2018__pid_t\u2019 {aka \u2018int\u2019} [-Wsign-compare]\n      83 |           if (rheader->nlmsg_pid != getpid ())\n          |                                  ^~\n\n    ../bind-mount.c:268:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      268 |       assert (i < n_lines);\n          |                 ^\n    ../bind-mount.c:309:13: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      309 |   assert (i == n_lines);\n          |             ^~\n    ../bind-mount.c:318:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      318 |   for (i = 0; i < n_lines; i++)\n          |                 ^\n    ../bind-mount.c:321:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      321 |   for (i = 0; i < n_lines; i++)\n          |                 ^\n\n    ../utils.c:818:19: warning: comparison of integer expressions of different signedness: \u2018size_t\u2019 {aka \u2018long unsigned int\u2019} and \u2018ssize_t\u2019 {aka \u2018long int\u2019} [-Wsign-compare]\n      818 |   while (size - 2 < n);\n          |                   ^\n\n    ../bubblewrap.c:489:13: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      489 |   assert (j < sizeof(dont_close)/sizeof(*dont_close));\n          |             ^\n    ../bubblewrap.c:994:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n      994 |       if (setfsuid (-1) != real_uid)\n          |                         ^~\n    ../bubblewrap.c:1042:61: warning: comparison of integer expressions of different signedness: \u2018ssize_t\u2019 {aka \u2018long int\u2019} and \u2018size_t\u2019 {aka \u2018long unsigned int\u2019} [-Wsign-compare]\n     1042 |       if (write (privileged_op_socket, buffer, buffer_size) != buffer_size)\n          |                                                             ^~\n    ../bubblewrap.c:1232:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1232 |           for (i = 0; i < N_ELEMENTS (cover_proc_dirs); i++)\n          |                         ^\n    ../bubblewrap.c:1260:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1260 |           for (i = 0; i < N_ELEMENTS (devnodes); i++)\n          |                         ^\n    ../bubblewrap.c:1272:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1272 |           for (i = 0; i < N_ELEMENTS (stdionodes); i++)\n          |                         ^\n    ../bubblewrap.c: In function \u2018read_priv_sec_op\u2019:\n    ../bubblewrap.c:1556:15: warning: comparison of integer expressions of different signedness: \u2018ssize_t\u2019 {aka \u2018long int\u2019} and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1556 |   if (rec_len < sizeof (PrivSepOp))\n          |               ^\n    ../bubblewrap.c:1626:28: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n     1626 |   if (*total_parsed_argc_p > MAX_ARGS)\n          |                            ^\n    ../bubblewrap.c:1681:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n     1681 |               if (*total_parsed_argc_p > MAX_ARGS)\n          |                                        ^\n    ../bubblewrap.c:2265:31: warning: comparison of integer expressions of different signedness: \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2265 |           if (opt_sandbox_uid != -1)\n          |                               ^~\n    ../bubblewrap.c:2285:31: warning: comparison of integer expressions of different signedness: \u2018gid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2285 |           if (opt_sandbox_gid != -1)\n          |                               ^~\n    ../bubblewrap.c:2678:23: warning: comparison of integer expressions of different signedness: \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2678 |   if (opt_sandbox_uid == -1)\n          |                       ^~\n    ../bubblewrap.c:2680:23: warning: comparison of integer expressions of different signedness: \u2018gid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2680 |   if (opt_sandbox_gid == -1)\n          |                       ^~\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ab175fe6d3a4053444b04d805a6d686f53455b9", "commit_date": "2023-02-27T12:21:03Z", "commit_message": "Prepare v0.8.0\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ba9a9af913ffdb319f9523074e4863849ba5065", "commit_date": "2023-02-23T12:19:38Z", "commit_message": "tests: Try harder to evade --disable-userns\n\nThe worst-case scenario in terms of enforcing --disable-userns is that\nwe're retaining all capabilities, so test that too, to make sure that\nthe option is genuinely restricting even a privileged user.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "140936fd73937b105051f978f9443c3b1c7253dc", "commit_date": "2023-02-23T12:17:59Z", "commit_message": "tests: Explicitly unshare userns when testing --disable-userns\n\nIf we're running the tests as uid 0 with capabilities, then bwrap will\nnot create a new user namespace by default, which means the limit won't\nbe exceeded and the test will fail. Make sure we always try to create\nthe new user namespace.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a319fd5dc323e9cc5988922c8d8a5efdfbb2160b", "commit_date": "2023-02-17T09:30:19Z", "commit_message": "Merge pull request #550 from smcv/seccomp-einval-hint\n\nAttempt to clarify error message for missing CONFIG_SECCOMP_FILTER", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f873fa8ae7b36f2d12974363d488fbc2baee51b", "commit_date": "2023-01-23T11:29:13Z", "commit_message": "Attempt to clarify error message for missing CONFIG_SECCOMP_FILTER\n\nGeneral-purpose desktop distributions are compiled with CONFIG_SECCOMP\nand CONFIG_SECCOMP_FILTER, but vendor kernels for phones and other\nassorted embedded devices don't necessarily enable these options. These\nkernels are unsuitable for running Flatpak, or anything else that relies\non `bwrap --seccomp` or `bwrap --add-seccomp-fd`.\n\nMissing CONFIG_SECCOMP or CONFIG_SECCOMP_FILTER is not the *only* reason\nwhy we could get EINVAL here: I think we'd also get EINVAL if the seccomp\nprogram is syntatically invalid. However, it's a relatively likely reason,\nso it seems worth providing a hint.\n\nHelps: flatpak/flatpak#3069\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41fd02ad147907cedf88a7f7488ac18667adc919", "commit_date": "2023-01-04T08:47:04Z", "commit_message": "test-run: Filter out no-new-privs in capsh output\n\nOlder versions of capsh would only show the capabilities, which we\nexpect not to change when we don't drop capabilities; but newer\nversions also display whether the NO_NEW_PRIVS bit is set, and we *do*\nexpect to change that.\n\nResolves: https://github.com/containers/bubblewrap/issues/544\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5f672355b916e6e59dad5ec9ca55aa90afe8a90", "commit_date": "2023-01-03T10:04:09Z", "commit_message": "Add --assert-userns-disabled option\n\nWe can't combine --disable-userns with entering an existing user\nnamespace via --userns if the existing user namespace was created with\n--disable-userns, because its ability to create nested user namespaces\nhas already been disabled. However, the next best thing is to verify\nthat we are already in the desired state.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33c333bcb88557ad23a9bc5be0d619d537984e9", "commit_date": "2023-01-03T10:04:09Z", "commit_message": "Add an option to disable nested user namespaces by setting limit to 1\n\nSome use-cases of bubblewrap want to ensure that the subprocess can't\nfurther re-arrange the filesystem namespace, or do other more complex\nnamespace modification. For example, Flatpak wants to prevent sandboxed\nprocesses from altering their /proc/$pid/root/.flatpak-info, so that\n/.flatpak-info can safely be used as an indicator that a process is part\nof a Flatpak app.\n\nThis approach was suggested by lukts30 on containers/bubblewrap#452.\nThe sysctl-controlled maximum numbers of namespaces are themselves\nnamespaced, so we can disable nested user namespaces by setting the\nlimit to 1 and then entering a new, nested user namespace. The resulting\nprocess loses its privileges in the namespace where the limit was set\nto 1, so it is unable to move the limit back up.\n\nCo-authored-by: Alexander Larsson <alexl@redhat.com>\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb7ac1348f98ee48f1e2e38bdf93abca2e4f6d06", "commit_date": "2022-11-21T13:41:13Z", "commit_message": "Merge pull request #539 from smcv/test-size\n\nFix test failures in 0.7.0 on unusual platforms", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5080b233faead1b7e9b1321d2897c204bcbab3b3", "commit_date": "2022-11-07T18:30:21Z", "commit_message": "test-run: Don't rely on df supporting the --output=size option\n\ndf --output was new in coreutils 8.21 (2013), and non-GNU\nimplementations like busybox df don't have it.\n\nThis avoids a test failure in Steam Runtime 1 'scout', which is based\non Ubuntu 12.04 (2012). It'll also be helpful for anyone maintaining\nan OS with non-GNU shell utilities.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cfc15df5f1669a26c805b91c229805ffe012ca5f", "commit_date": "2022-11-07T18:26:21Z", "commit_message": "test-run: If bubblewrap is setuid, assert that --size is not allowed\n\nPreviously, this test would have failed for a setuid bubblewrap.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad76c2d6ba8091a7afa95568e46af2261b362439", "commit_date": "2023-05-04T18:30:18Z", "commit_message": "Merge pull request #554 from smcv/disable-userns-tests-root\n\nFix test failure since #488 when running as uid 0", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d73a78f7ef0bdb5e0a9e1f332c862d68008dec04", "commit_date": "2023-05-04T18:27:22Z", "commit_message": "Merge pull request #559 from cgzones/compiler\n\nFix various compiler warnings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "928638969e475f7a1a5aa6708add7292eb695f03", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Get umbrella project back in sync\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35e6b2a6982fd167793a267bbb855190a4c6eed2", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Mention CVE-2017-5226 with --new-session\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b246d4297c7f5d62f9a1ab103abbf78c5486475", "commit_date": "2023-04-03T14:01:03Z", "commit_message": "bwrap.xml: Get product intro back in sync\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f9ce900d4cbe51c88d22da144759828ae04d0f0", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Mention --new-session in section \"Sandboxing\"\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a1d8b7217c7153d5ce260db2a408d3679a2847e", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Add --new-session to usage example\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29f92713ceab9699b73aec317e2e77aa0728c6dc", "commit_date": "2023-04-03T07:52:37Z", "commit_message": "README.md: Improve readability of usage example\n\nSigned-off-by: Sebastian Pipping <sebastian@pipping.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "795eeee77eab88afb9db27b06e1d23cc3aebe38e", "commit_date": "2023-03-30T12:34:17Z", "commit_message": "README, SECURITY: Clarify that bubblewrap does not define a security model\n\nbubblewrap can provide a robust security boundary that severely limits\nfunctionality, or it can provide full functionality without any attempt\nat being a security boundary, or anything in between those extremes.\nIf a caller of bubblewrap chooses inappropriate command-line arguments\nfor their desired security model, then bubblewrap will not provide the\nsecurity model they are aiming for, but this is not a bubblewrap\nvulnerability.\n\nApparently this isn't clear to everyone, so try to clarify.\n\nThe one place where bubblewrap *does* define some sort of security\npolicy for itself is when it's setuid root, in which case it's\nresponsible for preventing users from carrying out privilege escalation\nattacks like CVE-2020-5291.\n\nResolves: https://github.com/containers/bubblewrap/issues/555\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da63f2bddb9ce58e0844ac415d4cba388571e1f4", "commit_date": "2023-03-02T21:49:36Z", "commit_message": "Merge pull request #558 from cgzones/close\n\nload_file_data: do not close fd on error to avoid double-close", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a70cbe8e8eb150ce919fd3b0cfaf68ee2ec32a4", "commit_date": "2023-03-02T21:49:17Z", "commit_message": "Merge pull request #562 from cgzones/cap_example\n\nbwrap.1: mention example format of capability", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5634e3f89b76caa14534d778722821a66631e1e3", "commit_date": "2023-03-02T15:56:02Z", "commit_message": "bwrap.1: mention example format of capability\n\nMention how to format capabilities for --add-cap, e.g.\nCAP_DAC_READ_SEARCH instead of DAC_READ_SEARCH.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ef02842ebde3c88c04dac7cee707b8c581332bc", "commit_date": "2023-03-01T19:35:38Z", "commit_message": "load_file_data: do not close fd on error to avoid double-close\n\nload_file_data() closes the passed file descriptor in case of an read(2)\nfailure.  The file descriptor is however owned by the caller and should\nnot be closed to avoid a double-close.\nSince in this error branch NULL is always returned the only affected\ncaller is load_file_data(), as all other callers immediately abort via\ndie_with_error().  As bubblewrap is single-threaded the second close(2)\nin load_file_data() will be well-defined and fail with EBADF, leading to\nno unrelated file descriptor to be closed\n\nFound by GCC analyzer:\n\n    ./utils.c: In function \u2018load_file_at\u2019:\n    ./utils.c:630:3: warning: double \u2018close\u2019 of file descriptor \u2018fd\u2019 [CWE-1341] [-Wanalyzer-fd-double-close]\n    630 |   close (fd);\n        |   ^~~~~~~~~~\n    ...\n            |  596 |           close (fd);\n            |      |           ~~~~~~~~~~\n            |      |           |\n            |      |           (15) first \u2018close\u2019 here\n    ...\n        |  630 |   close (fd);\n        |      |   ~~~~~~~~~~\n        |      |   |\n        |      |   (20) second \u2018close\u2019 here; first \u2018close\u2019 was at (15)\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab5eb5c3f5bc75ee38d66a0c4d56d8a05be54b76", "commit_date": "2023-02-28T20:53:52Z", "commit_message": "Declare file local variables static\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe0da5d368d1c681be684a8fddffaa2cc6587fb4", "commit_date": "2023-02-28T20:53:49Z", "commit_message": "Use mode_t as parameter type in mkdir_with_parents\n\nThe parameter mode only usage is it being passed to ensure_dir(), which\ntakes it as mode_t.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88004f880a7acfe9d8b3016b173b39b24d70bc92", "commit_date": "2023-02-28T20:53:48Z", "commit_message": "Drop unnecessary cast to same type\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15ef38c4e3af506e7f35b9372cf9f657e9861701", "commit_date": "2023-02-28T20:53:45Z", "commit_message": "Avoid implicit conversions\n\nFound by running under pedantic UBSAN:\n\n    ../bubblewrap.c:968:21: runtime error: implicit conversion from type 'int' of value -1 (32-bit, signed) to type 'uid_t' (aka 'unsigned int') changed the value to 4294967295 (32-bit, unsigned)\n    ../bubblewrap.c:1210:28: runtime error: implicit conversion from type 'int' of value -41 (32-bit, signed) to type 'unsigned int' changed the value to 4294967255 (32-bit, unsigned)\n    ../bubblewrap.c:1215:28: runtime error: implicit conversion from type 'int' of value -41 (32-bit, signed) to type 'unsigned int' changed the value to 4294967255 (32-bit, unsigned)\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae2ec35424a84d3f6baaa114f36d9a2a88962bc", "commit_date": "2023-02-28T20:53:19Z", "commit_message": "Enable and resolve sign comparisson warnings\n\nComparisson of different signedness can result in unexpected results due\nto implicit conversions.\n\n    ../network.c:81:34: warning: comparison of integer expressions of different signedness: \u2018__u32\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n       81 |           if (rheader->nlmsg_seq != seq_nr)\n          |                                  ^~\n    ../network.c:83:34: warning: comparison of integer expressions of different signedness: \u2018__u32\u2019 {aka \u2018unsigned int\u2019} and \u2018__pid_t\u2019 {aka \u2018int\u2019} [-Wsign-compare]\n      83 |           if (rheader->nlmsg_pid != getpid ())\n          |                                  ^~\n\n    ../bind-mount.c:268:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      268 |       assert (i < n_lines);\n          |                 ^\n    ../bind-mount.c:309:13: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      309 |   assert (i == n_lines);\n          |             ^~\n    ../bind-mount.c:318:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      318 |   for (i = 0; i < n_lines; i++)\n          |                 ^\n    ../bind-mount.c:321:17: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018unsigned int\u2019 [-Wsign-compare]\n      321 |   for (i = 0; i < n_lines; i++)\n          |                 ^\n\n    ../utils.c:818:19: warning: comparison of integer expressions of different signedness: \u2018size_t\u2019 {aka \u2018long unsigned int\u2019} and \u2018ssize_t\u2019 {aka \u2018long int\u2019} [-Wsign-compare]\n      818 |   while (size - 2 < n);\n          |                   ^\n\n    ../bubblewrap.c:489:13: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      489 |   assert (j < sizeof(dont_close)/sizeof(*dont_close));\n          |             ^\n    ../bubblewrap.c:994:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n      994 |       if (setfsuid (-1) != real_uid)\n          |                         ^~\n    ../bubblewrap.c:1042:61: warning: comparison of integer expressions of different signedness: \u2018ssize_t\u2019 {aka \u2018long int\u2019} and \u2018size_t\u2019 {aka \u2018long unsigned int\u2019} [-Wsign-compare]\n     1042 |       if (write (privileged_op_socket, buffer, buffer_size) != buffer_size)\n          |                                                             ^~\n    ../bubblewrap.c:1232:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1232 |           for (i = 0; i < N_ELEMENTS (cover_proc_dirs); i++)\n          |                         ^\n    ../bubblewrap.c:1260:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1260 |           for (i = 0; i < N_ELEMENTS (devnodes); i++)\n          |                         ^\n    ../bubblewrap.c:1272:25: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1272 |           for (i = 0; i < N_ELEMENTS (stdionodes); i++)\n          |                         ^\n    ../bubblewrap.c: In function \u2018read_priv_sec_op\u2019:\n    ../bubblewrap.c:1556:15: warning: comparison of integer expressions of different signedness: \u2018ssize_t\u2019 {aka \u2018long int\u2019} and \u2018long unsigned int\u2019 [-Wsign-compare]\n     1556 |   if (rec_len < sizeof (PrivSepOp))\n          |               ^\n    ../bubblewrap.c:1626:28: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n     1626 |   if (*total_parsed_argc_p > MAX_ARGS)\n          |                            ^\n    ../bubblewrap.c:1681:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\n     1681 |               if (*total_parsed_argc_p > MAX_ARGS)\n          |                                        ^\n    ../bubblewrap.c:2265:31: warning: comparison of integer expressions of different signedness: \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2265 |           if (opt_sandbox_uid != -1)\n          |                               ^~\n    ../bubblewrap.c:2285:31: warning: comparison of integer expressions of different signedness: \u2018gid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2285 |           if (opt_sandbox_gid != -1)\n          |                               ^~\n    ../bubblewrap.c:2678:23: warning: comparison of integer expressions of different signedness: \u2018uid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2678 |   if (opt_sandbox_uid == -1)\n          |                       ^~\n    ../bubblewrap.c:2680:23: warning: comparison of integer expressions of different signedness: \u2018gid_t\u2019 {aka \u2018unsigned int\u2019} and \u2018int\u2019 [-Wsign-compare]\n     2680 |   if (opt_sandbox_gid == -1)\n          |                       ^~\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ab175fe6d3a4053444b04d805a6d686f53455b9", "commit_date": "2023-02-27T12:21:03Z", "commit_message": "Prepare v0.8.0\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ba9a9af913ffdb319f9523074e4863849ba5065", "commit_date": "2023-02-23T12:19:38Z", "commit_message": "tests: Try harder to evade --disable-userns\n\nThe worst-case scenario in terms of enforcing --disable-userns is that\nwe're retaining all capabilities, so test that too, to make sure that\nthe option is genuinely restricting even a privileged user.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "140936fd73937b105051f978f9443c3b1c7253dc", "commit_date": "2023-02-23T12:17:59Z", "commit_message": "tests: Explicitly unshare userns when testing --disable-userns\n\nIf we're running the tests as uid 0 with capabilities, then bwrap will\nnot create a new user namespace by default, which means the limit won't\nbe exceeded and the test will fail. Make sure we always try to create\nthe new user namespace.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a319fd5dc323e9cc5988922c8d8a5efdfbb2160b", "commit_date": "2023-02-17T09:30:19Z", "commit_message": "Merge pull request #550 from smcv/seccomp-einval-hint\n\nAttempt to clarify error message for missing CONFIG_SECCOMP_FILTER", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f873fa8ae7b36f2d12974363d488fbc2baee51b", "commit_date": "2023-01-23T11:29:13Z", "commit_message": "Attempt to clarify error message for missing CONFIG_SECCOMP_FILTER\n\nGeneral-purpose desktop distributions are compiled with CONFIG_SECCOMP\nand CONFIG_SECCOMP_FILTER, but vendor kernels for phones and other\nassorted embedded devices don't necessarily enable these options. These\nkernels are unsuitable for running Flatpak, or anything else that relies\non `bwrap --seccomp` or `bwrap --add-seccomp-fd`.\n\nMissing CONFIG_SECCOMP or CONFIG_SECCOMP_FILTER is not the *only* reason\nwhy we could get EINVAL here: I think we'd also get EINVAL if the seccomp\nprogram is syntatically invalid. However, it's a relatively likely reason,\nso it seems worth providing a hint.\n\nHelps: flatpak/flatpak#3069\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41fd02ad147907cedf88a7f7488ac18667adc919", "commit_date": "2023-01-04T08:47:04Z", "commit_message": "test-run: Filter out no-new-privs in capsh output\n\nOlder versions of capsh would only show the capabilities, which we\nexpect not to change when we don't drop capabilities; but newer\nversions also display whether the NO_NEW_PRIVS bit is set, and we *do*\nexpect to change that.\n\nResolves: https://github.com/containers/bubblewrap/issues/544\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5f672355b916e6e59dad5ec9ca55aa90afe8a90", "commit_date": "2023-01-03T10:04:09Z", "commit_message": "Add --assert-userns-disabled option\n\nWe can't combine --disable-userns with entering an existing user\nnamespace via --userns if the existing user namespace was created with\n--disable-userns, because its ability to create nested user namespaces\nhas already been disabled. However, the next best thing is to verify\nthat we are already in the desired state.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33c333bcb88557ad23a9bc5be0d619d537984e9", "commit_date": "2023-01-03T10:04:09Z", "commit_message": "Add an option to disable nested user namespaces by setting limit to 1\n\nSome use-cases of bubblewrap want to ensure that the subprocess can't\nfurther re-arrange the filesystem namespace, or do other more complex\nnamespace modification. For example, Flatpak wants to prevent sandboxed\nprocesses from altering their /proc/$pid/root/.flatpak-info, so that\n/.flatpak-info can safely be used as an indicator that a process is part\nof a Flatpak app.\n\nThis approach was suggested by lukts30 on containers/bubblewrap#452.\nThe sysctl-controlled maximum numbers of namespaces are themselves\nnamespaced, so we can disable nested user namespaces by setting the\nlimit to 1 and then entering a new, nested user namespace. The resulting\nprocess loses its privileges in the namespace where the limit was set\nto 1, so it is unable to move the limit back up.\n\nCo-authored-by: Alexander Larsson <alexl@redhat.com>\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb7ac1348f98ee48f1e2e38bdf93abca2e4f6d06", "commit_date": "2022-11-21T13:41:13Z", "commit_message": "Merge pull request #539 from smcv/test-size\n\nFix test failures in 0.7.0 on unusual platforms", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5080b233faead1b7e9b1321d2897c204bcbab3b3", "commit_date": "2022-11-07T18:30:21Z", "commit_message": "test-run: Don't rely on df supporting the --output=size option\n\ndf --output was new in coreutils 8.21 (2013), and non-GNU\nimplementations like busybox df don't have it.\n\nThis avoids a test failure in Steam Runtime 1 'scout', which is based\non Ubuntu 12.04 (2012). It'll also be helpful for anyone maintaining\nan OS with non-GNU shell utilities.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cfc15df5f1669a26c805b91c229805ffe012ca5f", "commit_date": "2022-11-07T18:26:21Z", "commit_message": "test-run: If bubblewrap is setuid, assert that --size is not allowed\n\nPreviously, this test would have failed for a setuid bubblewrap.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}