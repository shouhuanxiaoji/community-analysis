{"jit_unsupported": [{"commit_oid": "8a109445ccf66897ebefad54a5b69a2854e93746", "commit_date": "2023-03-01T11:29:24Z", "commit_message": "Add unsupported error code for jit", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10dc79fd1c7505c32eaafcbf0f46ee08a4d4782d", "commit_date": "2023-02-11T14:35:27Z", "commit_message": "improve __buitin_mul_overflow() checks (#209)\n\nUse <stddef.h> as a source for size_t as suggested by ANSI in preference\r\nto <sys/types.h> (as suggested by POSIX), and make sure that the check\r\nincludes linkin so it won't result in a false positive in platforms that\r\nallow link time resolution of unknown objects (ex: AIX with lxc)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71c2748a7b7f6b1238262f171613233596e44e40", "commit_date": "2023-02-11T14:31:32Z", "commit_message": "pcregrep: minor documentation update (#208)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a649cbc96e5725a7969e71c4b2f2a8506da64010", "commit_date": "2023-02-09T17:11:00Z", "commit_message": "zig build support (#206)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1de7291a8cc939e1d345131e7ac89111dd7c670d", "commit_date": "2023-02-08T15:15:27Z", "commit_message": "Bring pcre2.h.generic up to date", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8385df8c97b6f8069a48e600c7e4e94cc3e3ebd9", "commit_date": "2023-02-08T15:09:18Z", "commit_message": "Made PCRE2_UCP the default in UTF mode in pcre2grep, and added new options --case-restrict and --no-ucp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a97f600d6572d024fc3a1a42f4730b83c380440", "commit_date": "2023-02-07T07:01:59Z", "commit_message": "Support ucp word boundary in JIT", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c9a5299fb8a7bc00e036c88725de4e331976c87", "commit_date": "2023-02-06T17:08:09Z", "commit_message": "Fix \\b and \\B with PCRE2_EXTRA_ASCII_BSW in the interpreters", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "26d5cd99c8f462924706e59aad231d9c2bb4b8a9", "commit_date": "2023-02-06T06:10:58Z", "commit_message": "build: update filelist after JIT update (#203)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d84f255bef4d956d67ff5da35024e7a8c0c7e669", "commit_date": "2023-02-05T06:09:20Z", "commit_message": "JIT compiler update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45f44736a22022299ecaaec4ef122b82e224c474", "commit_date": "2023-02-04T17:25:14Z", "commit_message": "Bring ChangeLog up to date", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bf8045997e8f2615a44200a5191836fb430bd69", "commit_date": "2023-02-04T17:19:56Z", "commit_message": "Documentation update for new PCRE2_EXTRA caseless and ASCII options", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c905ce0c19cd3ef94588c9d9f29b9b8a2457ecb", "commit_date": "2023-02-03T14:57:32Z", "commit_message": "maint: avoid duplicated boolean properties and bad script extensions (#202)\n\n`ucptest` was misbehaving and showing the wrong properties and\r\nfinding the wrong characters.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4678857266b0a832b356516e41501d60eef2800e", "commit_date": "2023-02-03T14:52:57Z", "commit_message": "add a C23 inspired checked integer multiplication helper (#198)\n\nCompilers had become far more creative about optimizing code that\r\nmight be considered undefined behaviour, so improve our integer\r\noverflow checking to prevent any possible miscompilations.\r\n\r\nWhile at it, expand the use of the checks to pcre2test to fix a\r\nsimilar problem to the one that was tackled in pcre2_compile.\r\n\r\nPrefer (if available) a builtin provided by the compiler.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af0839f911d6d2d7b9f62e4505ec353ca5e23fa8", "commit_date": "2023-02-02T17:31:13Z", "commit_message": "maint: honor @missing in DerivedBidiClass and report non values (#201)\n\nStarting with Unicode 15, the provided DerivedBidiClass data file\r\nreports different default values to use for unassigned characters\r\nin different groups.\r\n\r\nProcess the additional hints for that specific file, and allow\r\noverriding the values later if more specific.\r\n\r\nSince that was previously forbidden, change get_other_case() to\r\nreport when no valid value could be provided and allow skipping\r\nconflicting rule lines that required that restriction.\r\n\r\nWhile at it, Allow using the long identifiers in `ucptest` with\r\nthe `find bidi` command (underscores also allowed).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc56fd790c1a3ba8f2890fc2b6afba21250923de", "commit_date": "2023-02-02T17:19:45Z", "commit_message": "Further ASCII tests and minor bugfix plus ChangeLog update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6089462a460a9f6c2db63a86e1c09fabaa81499", "commit_date": "2023-02-01T17:42:29Z", "commit_message": "Additional PCRE2_EXTRA_ASCII_xxx code", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72c9b576950e94e5026b0b8c63db332f348e0faf", "commit_date": "2023-02-01T15:38:58Z", "commit_message": "Ucptest updates (#199)\n\n* ucptest: regenerate testoutput\r\n\r\nLast sync with 1a5fcd (Remove unused variables in ucptest.c and update test data\r\nfor added properties, 2022-04-25), and showing significant differences.\r\n\r\n* fix `findprop +` with UTF-8 characters and duplicated other case", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40626f0cb6796593b92ba60b38c69f755f350bcf", "commit_date": "2023-02-01T15:28:21Z", "commit_message": "upgrade to Unicode 15 (#200)\n\nReverting several reserved characters that were removed from the\r\nprevious release, and that are only referencing as \"@missing@ in\r\nDerivedBidiClass.txt", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c13d54f6581fa51a270a1ec40b1b7626d686dec1", "commit_date": "2023-01-29T16:46:24Z", "commit_message": "Implement PCRE2_EXTRA_CASELESS_RESTRICT and related features", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcceddcf3c1ed0def8c0d88c188d1d07ffd79b87", "commit_date": "2023-01-25T12:49:36Z", "commit_message": "Fix minor typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69d6b24615537f7ec849d80c5dce839da6f3d647", "commit_date": "2023-01-25T09:37:30Z", "commit_message": "Fix minor memory check bug in pcre2test", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa5ec503b3cf3cb019cdbe81ea7e25edf32f0351", "commit_date": "2023-01-23T16:04:02Z", "commit_message": "Correct list of JIT-supported architectures", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "303e3bc48086b1a1501511c48a400d7b6a92a9bd", "commit_date": "2023-01-23T12:36:53Z", "commit_message": "make sure to use either size_t or PCRE2_SIZE correctly (#195)\n\nIt doesn't change much in practice, but helps clarify the interfaces\r\nof some functions that were either documented with the wrong type or\r\nhad mismatching types between declaration and implementation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f86495869395d2567b3d5bb41a422c50c97acf2", "commit_date": "2023-01-22T14:14:28Z", "commit_message": "Expand documentation re availability of JIT", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0f899f4d3ca2db999a1521a77c7b3653dde800a", "commit_date": "2023-01-20T17:08:34Z", "commit_message": "More UTF documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d9c1599a1c846c9ab7e6bf84f6de288006c31bc", "commit_date": "2023-01-20T16:58:07Z", "commit_message": "Update documentation re JIT fast path and UTF validity", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f508518762b87905f85e3ca442e05b3080117079", "commit_date": "2023-01-20T15:37:01Z", "commit_message": "Documentation update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0333c414f4f0bbf845ae0be474389a4bfe47b731", "commit_date": "2023-01-20T15:13:41Z", "commit_message": "Documentation update re invalid UTF", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b785232a8102615d6edf671f27202bb21954ad3b", "commit_date": "2023-01-19T17:26:33Z", "commit_message": "Add ChangeLog entry for PR #192", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a94da799a80952074407868bce013a8b53b2ddd0", "commit_date": "2023-01-19T17:24:14Z", "commit_message": "Update ChangeLog for PR #192", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6068ae19fbc173b09e9e1be96e2984b8336671c9", "commit_date": "2023-01-19T17:19:02Z", "commit_message": "build: make the C99 requirement explicit (#193)\n\nRecent code uses C99 syntax (as reported in #163, and therefore it\r\nwill fail to build unless C99 (or higher) support is required by the\r\ncompiler (gcc >= 5 does it by default).\r\n\r\nFor those unfortunate to need an older compiler that does require a\r\nflag to enable that, make sure that both autoconf and cmake make it\r\nexplicit.\r\n\r\nWhile testing the change with the ancient autoconf version listed as\r\na prerequisite, noticed that the LT_INIT syntax introduced with 91485e5\r\n(Update configure.ac for latest version of autoconf., 2021-02-02), was\r\nnot supported, so update the autoconf minimum as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "703ccd6374eeb150f2062e4d84ffd64c99a54b5d", "commit_date": "2023-01-19T17:08:36Z", "commit_message": "pcre2test: use microseconds instead of milliseconds for timing (#192)\n\nWhen using -t or its variants the timing results with a modern CPU\r\nwhere not very significant even with 4 decimal digits.\r\n\r\nWhile at it, move the factor calculation that can be done with\r\ninteger arithmetic and even optimized out for the more common case\r\nwhen CLOCKS_PER_SEC == 1000000 out of the denominator.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fdb19cac2ce8b32639fb2102c272088a48a28f9", "commit_date": "2023-01-19T09:29:49Z", "commit_message": "Fix inadvertent missing test update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d73a949ec126592911583ed962e879e849e05733", "commit_date": "2023-01-18T17:57:07Z", "commit_message": "Refactor heapframe_size code in pcre2test and update documentation for heap frame information", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4405c4b5517d8b68f1161a7271ed5f9157f761c", "commit_date": "2023-01-18T17:55:55Z", "commit_message": "Add autom4te.cache to .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c80c6338ad23380544a79ba2325a93113e8168d3", "commit_date": "2023-01-17T15:26:27Z", "commit_message": "add pcre2_get_match_data_heapframes_size() (#191)\n\nSince PCRE2 10.41, the match data contains a pointer to a vector of\r\nframes allocated in the heap and that are used by pcre2_match()\r\nwhen doing non JIT matches.\r\n\r\nThere is though, no outside visibility on the size of it, and therefore\r\nthe memory it uses is locked away until match_data itself is freed.\r\n\r\nAdd an API that allows getting that value, so an application could\r\ndecide based on its own experienced memory pressure to keep reusing\r\nthat match_data or not.\r\n\r\nWhile at it, update the documentation of other related functions for\r\nclarity.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d66adc387baa2d29f91f0cadfaf8d8e77e13bb3", "commit_date": "2023-01-17T14:55:53Z", "commit_message": "avoid LIMIT_HEAP integer multiplication wrap around (#184)\n\nIf a LIMIT_HEAP value once converted to bytes is larger than UINT_MAX\r\nwould result in a bogus setting that could trigger a matching failure\r\nas shown by the following:\r\n\r\n  PCRE2 version 10.42 2022-12-11\r\n    re> /(*LIMIT_HEAP=4194304)a/\r\n  data> a\r\n  Failed: error -63: heap limit exceeded\r\n\r\nRemove the multiplication and instead keep track of the maximum heap\r\nallowed in KB as was done originally.\r\n\r\nAditionally, add a check to avoid overflowing a PCRE2_SIZE while\r\ndoubling the heap used and that could result in a crash (only on\r\nsystems with a 32-bit PCRE2_SIZE and using non standard settings).\r\n\r\nUnlike the original, this code avoids rounding the heapframes_size\r\nto the frame_size at the allocation time, which simplifies the logic\r\nand wasn't really needed.\r\n\r\nFixes: d90fb23 (Refactor match_data() to always use the heap instead\r\n       of having an initial frames vector on the stack..., 2022-07-27)\r\nCloses: #183", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fdd3ce7e2ad51f38d7c7a47c92f2aa46b290a0f7", "commit_date": "2023-01-17T14:43:20Z", "commit_message": "minor tweaks to valid_utf() to avoid truncation of error offset (#181)\n\ne8cdae3 (Correct an incorrect cast., 2017-04-14) started changing\r\nsome of the casts to fit the type of the error offset variable, so\r\ncomplete that, and for consistency, add the same type of casts to\r\nthe non UTF-8 code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0746b3d523c9a799aa62ae9e03188b23664f48b0", "commit_date": "2022-12-14T10:47:39Z", "commit_message": "Update the ManyConfigTests to include new POSIX freestanding test, add a JIT test in a non-source directory, and update selectors", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "937964f8c96dccccb22f5d576134b8b2b396c783", "commit_date": "2022-12-14T10:11:21Z", "commit_message": "Make pcre2posix_test work when the default newline is not LF.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}], "master": [{"commit_oid": "1e146e7343ed5bd893a1617d2b8c0072baa7a992", "commit_date": "2023-10-12T16:49:52Z", "commit_message": "Doc update: clarify ASCII options and update ChangeLog and HTML", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "231824ff6cf6dc6005c190ce0e152c21d4bb00ac", "commit_date": "2023-10-12T15:30:20Z", "commit_message": "doc: mention binary properties and ascii options (#308)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30464862fd372e70f2ddbba5373591ad1be4c490", "commit_date": "2023-10-11T16:51:01Z", "commit_message": "Add (?aT) for updating PCRE2_EXTRA_ASCII_DIGIT in pattern (#307)\n\nAffecting the definition of [:digit:] and [:xdigit:].\r\n\r\nFor consistency, also allow (?aP) to have a similar effect.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a552803330e6eb4234c887a48a1584cb83c0666", "commit_date": "2023-10-11T11:34:35Z", "commit_message": "Update UCP handling of \\b and \\B to match recent changes to \\w", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0b4ee097b2923b6151ee4185a99b2cef5a8420c", "commit_date": "2023-10-09T15:55:17Z", "commit_message": "Update HTML docs and ChangeLog for recent patches", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d231944236c6516de2831cbdde3069dab180ae81", "commit_date": "2023-10-09T15:46:42Z", "commit_message": "fix a possible integer overflow in DFA matching (#305)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b74f738898e21be244f1a7f92a9b6bb357d4a9c", "commit_date": "2023-10-09T15:32:49Z", "commit_message": "Allow restricting [:xdigit:] to ASCII for POSIX compatibility (#301)\n\nWhile at it, do some cleanup to related code and documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fef16341b802afc153d91ee232ebbc415da616a", "commit_date": "2023-10-04T17:02:12Z", "commit_message": "Update [[:digit:]] in UCP mode to match Perl", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b26eae1099d8803afc6b2e20ec84cb0fe255083", "commit_date": "2023-10-04T14:42:12Z", "commit_message": "Add properties Mn and Pc to the meaning of \\w and its synonyms in UCP mode", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "457c0e69a8f78d32bc7d4b6422cd01e396a4cf5d", "commit_date": "2023-10-03T15:52:56Z", "commit_message": "Add more examples fixed by #300; update ChangeLog", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "794245ecc296724b52f5030831e58bedbffa2452", "commit_date": "2023-10-03T15:14:23Z", "commit_message": "match: also restore originally unset entries in recursion (#300)\n\nA regresion from ~10.30 not affecting JIT", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a2bf0c5ab009ba3a87d39b12256784b7bd9aeb2", "commit_date": "2023-10-01T16:16:15Z", "commit_message": "minor cleanup for previous fix (#299)\n\nMove tests to the non UTF file and remove dead code.\r\n\r\nWhile at it, do some other minor changes everywhere.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab47f889c6639a0e59ea5acc063c85c5e459d55d", "commit_date": "2023-09-30T16:35:47Z", "commit_message": "Fix ECMAScript interpretation of \\u{ 12} to be literal, not a repeated u.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90991cf4db486cd308e3e476b0e1fd1a965395c4", "commit_date": "2023-09-30T10:10:40Z", "commit_message": "Documentation update following PR297", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a04e0e680f0503188e7b1a22845bebb53efb141", "commit_date": "2023-09-30T09:19:31Z", "commit_message": "Spaces are not allowed within \\u{} in BSUX mode (#297)\n\nFor compatibility with Javascript, which will treat any non\r\nconforming escape as a literal.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79832a79304682ea8f4b4adfcab276081df4be04", "commit_date": "2023-09-25T16:23:35Z", "commit_message": "Allow spaces and tabs within {...} constructs to match Perl usage.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "80053ba153575523ac2a9b71ef327c9f4b0a2ef7", "commit_date": "2023-09-20T12:26:10Z", "commit_message": "Documentation and tests update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fa5367fa761e58bffe792c7cb36335aa26f84fa", "commit_date": "2023-09-13T16:43:43Z", "commit_message": "Update meaning of {,5} etc to match update in Perl 5.34.0; refactor quantifier parsing", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "09c41a1960d120dc2cfffda1b3534fd10c1d4d59", "commit_date": "2023-08-30T15:39:50Z", "commit_message": "Restore no indent in pcre2demo.3 man page", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b6bd784f17c0a191f569f047e5f05cb60d34304", "commit_date": "2023-08-30T11:47:37Z", "commit_message": "Add a TH (title) macro to pcre2demo.3 (#292)\n\nper groff_man(7):\r\n\r\n> A man page should contain exactly one .TH call at or near the\r\n> beginning of the file, prior to any other macro calls.\r\n\r\nThis manual page didn't (and as a result `man --warnings` emits a\r\nwarning about the first `.SH` macro).\r\n\r\nMake PrepareRelease add such a header to pcre2demo.3 along with a\r\ncomment noting that pcre2demo.3 is automatically generated (to avoid\r\nany further confusion on that front).\r\n\r\nThis necessitates teaching 132html to know about that warning (which\r\nwe don't want to have appearing in the HTML output).\r\n\r\nAlso, update the EX and EE macros to reflect the current content of\r\n`/usr/share/groff/1.22.4/tmac/an-ext.tmac`\r\n\r\nSigned-off-by: Matthew Vernon <matthew@debian.org>\r\nCo-authored-by: Matthew Vernon <matthew@debian.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b25444815d3948c521def16f606f61b9be50cbc2", "commit_date": "2023-08-27T03:39:55Z", "commit_message": "jit: Add LoongArch SX 128 bit SIMD Support. (#290)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b291b297dac929212aa2ce3c531ad4fcd14801c", "commit_date": "2023-08-21T17:16:49Z", "commit_message": "Deal with integer overflow bug in recent variable length lookbehind code. Fixes ClusterFuzz 61627.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7331d5cc5f86baa8de786db40fcfc1766cd0af28", "commit_date": "2023-08-18T16:54:45Z", "commit_message": "Fix minor sanitize issue.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "803a64f6151a2d43a44a2377956ae36408c96986", "commit_date": "2023-08-18T16:40:16Z", "commit_message": "Fix issue #275", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "264ec9c7ed5f6751c412a1f824e3491bb82d8633", "commit_date": "2023-08-18T16:17:17Z", "commit_message": "match: avoid signed/unsigned mismatch (#289)\n\nSince 1e78b77 (Code for variable-length lookbehinds, 2023-08-06)\r\nthe Windows CI job (doing 32bit) is showing:\r\n\r\n  pcre2_match.c(5780,16): warning C4018: '>': signed/unsigned mismatch [pcre2-8-static.vcxproj]\r\n  pcre2_match.c(5781,16): warning C4018: '>': signed/unsigned mismatch [pcre2-8-static.vcxproj]\r\n\r\nRestrict the ptrdiff to the valid range and while at it remove an\r\nunnecessary conditional from the UTF section an update related\r\ndocumentation as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7364c4694250c416e16b9dd81f281cb331c73de", "commit_date": "2023-08-18T16:14:32Z", "commit_message": "cmake: increase minimum to 3.5 (#288)\n\nSince 3.27 was released, the following warning is being triggered:\r\n\r\n  CMake Deprecation Warning at CMakeLists.txt:108 (CMAKE_MINIMUM_REQUIRED):\r\n    Compatibility with CMake < 3.5 will be removed from a future version of\r\n    CMake.\r\n\r\n    Update the VERSION argument <min> value or use a ...<max> suffix to tell\r\n    CMake that the project does not need compatibility with older versions.\r\n\r\nUpdate version and while at it, clean the code and make sure it errors out\r\neven when invoked with an ancient (<=2.4) version of cmake that would just\r\nwarn otherwise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "172802bacd65e4854f842d7f0346ff3658ba8d2c", "commit_date": "2023-08-17T04:27:28Z", "commit_message": "jit: rebase #259 on top of 3c93cdc (#287)\n\nRecent JIT does a backward incompatible change that removes CMOV\r\nso update code accordingly to fix arm64 builds.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02558c89e71592ab5f257e30ccf60b7d8b26499e", "commit_date": "2023-08-16T16:10:20Z", "commit_message": "jit: allow updating STR_PTR by arm64 simd helper (#259)\n\nWithout this change, the extra work that was done scanning for matches\r\nin the subject was lost and had to be restarted in 1 byte increments.\r\n\r\nWhile at it, update the logic so it will update STR_PTR conditionally\r\njust like it was implemented in the other architectures.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14e0c41be1756e98a0e5f4d23935a25e3355c93a", "commit_date": "2023-08-16T15:56:34Z", "commit_message": "admin: update ChangeLog and config.h for recent changes (#286)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d2ae5eb0fd22ff83a02dc901fdc42eb1010098cb", "commit_date": "2023-08-15T16:18:39Z", "commit_message": "Note some recent pull merges in ChangeLog", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "def175f4a908b477662c26a21e716038fd53675a", "commit_date": "2023-08-15T16:04:56Z", "commit_message": "Use standard CMake constructs to export the library's targets. (#260)\n\n* Use standard CMake constructs to export the library's targets.\r\n\r\n* Fix typo.\r\n\r\n* Document that PCRE2_USE_STATIC_LIBS is not required if only one edition of the library has been built.\r\n\r\n* Replace some missed stuff from previous review.\r\n\r\n* Don't explicitly set `PCRE2_FOUND` to true.\r\n\r\n* Avoid defining the target aliases if they are already defined.\r\n\r\n* Set `PCRE2_LIBRARIES` and `PCRE2_***_LIBRARY` for compatibility.\r\n\r\n* Change `PCRE2_USE_STATIC_LIBS` to prohibit loading the shared library if set.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bc8ccfc62addaf6c0d39359c04a408c508ff5cf", "commit_date": "2023-08-15T15:12:51Z", "commit_message": "Fix issue with test 10 that was introduced by 9452a78", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cc772a4ec905ba189628abaaee0822df73419ea", "commit_date": "2023-08-15T15:07:56Z", "commit_message": "Update to latest zig (#262)\n\n* Update to latest zig\r\n\r\n* Adopt build.zig to zig v0.11\r\n\r\nZig v0.11 is released, so let's upgrade!", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ff81a6d8a3dd09b1bb4cf212e5dae48b5e37bc3", "commit_date": "2023-08-12T11:43:39Z", "commit_message": "Allow \\R in variable-length lookbehinds", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8314be909f33ddc78019aa2a87c6e45ff6a41b0c", "commit_date": "2023-08-11T18:09:17Z", "commit_message": "Update HTML and plain text documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5974a843640c263a796da79e361c093cfe087d0d", "commit_date": "2023-08-11T17:38:20Z", "commit_message": "Update documentation for variable-length lookbehinds", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b37e2f28385cb5839c3d8caa5b8740eadff22aa", "commit_date": "2023-08-10T10:02:29Z", "commit_message": "jit: add LoongArch support (#281)\n\nWhile at it, make sure the list of files by sljit is updated\r\nafter last import.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c93cdcda64f2a7e43496f25315ee3d375566387", "commit_date": "2023-08-09T08:30:58Z", "commit_message": "JIT compiler update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c13b06a5a4d051e2ce333293c9edbc7b798f875c", "commit_date": "2023-08-08T16:41:23Z", "commit_message": "Fix tests in out-of-source-tree CMake builds (#278)\n\npcre2_test and pcre2_grep_test were unable to find testdata when running\r\nvia their CMake-generated wrappers in an out-of-source-tree build.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1ac71895b5ac0df60f344850509a6ae80452772", "commit_date": "2023-08-08T16:08:40Z", "commit_message": "Add tests for bugs just fixed", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3342fe5c4fae60ce8c91c2d58f6cd98d0f28faab", "commit_date": "2023-08-08T14:48:09Z", "commit_message": "Fix an integer overflow introduced in recent new code - fixes ClusterFuzz 61274", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb1c7d27db09a4d0a2b6e1486c4f1a4d332e8b8c", "commit_date": "2023-08-08T14:21:06Z", "commit_message": "Fix another regression buffer overflow introduced in recent new code - fixes ClusterFuzz 61269", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f77d022733a5b7e2ff1e3d80b547c0d89811efe", "commit_date": "2023-08-08T14:15:24Z", "commit_message": "Fix regression buffer overflow introduced in recent new code - fixes ClusterFuzz 61268", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0b3fc4c4bc4bd8ada9ada3292a28a44570794f1", "commit_date": "2023-08-06T16:21:17Z", "commit_message": "Update unknown error number test in RunTest.bat", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ce8eb007d5b3c879e75c00894440e3b63bbda689", "commit_date": "2023-08-06T16:14:20Z", "commit_message": "Show fc output after test mis-match in RunTest.bat", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b1f2f84b8b3e33c99a075899865d5dc338f1343", "commit_date": "2023-08-06T15:26:06Z", "commit_message": "Fix typo in CMakeLists.txt", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e78b77382564b4cc9991e486652d4b105d8ee35", "commit_date": "2023-08-06T14:42:55Z", "commit_message": "Code for variable-length lookbehinds", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7cc9d63fd9145d78fd0208ebb901e66fe80f4317", "commit_date": "2023-07-17T16:41:26Z", "commit_message": "Update pcre2test documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "044408710f86dc3d05ff3050373d477b6782164e", "commit_date": "2023-07-17T16:33:11Z", "commit_message": "Update pcre2_compile() to treat a NULL pattern with zero length as an empty string. Plus some documentation tidies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d503a9d9807a1e2649d98a69d33eade07617148c", "commit_date": "2023-07-12T12:04:27Z", "commit_message": "Add idempotent guards to pcre2posix.h (#274)\n\nHow odd that it got lost  between PCRE1 and PCRE2.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb84d7399181161ad8074ee26778007dfcbccd5b", "commit_date": "2023-06-19T16:42:07Z", "commit_message": "Add compile-time check that PCRE2_CODE_UNIT_WIDTH is 8, 16, or 32", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "32756285bd148bd3c9c404aa98b78ddcaa0b56ae", "commit_date": "2023-06-14T11:32:44Z", "commit_message": "cmake: remove test binaries from target list (#266)\n\nOtherwise they will be mistakenly installed by `cmake --install`", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b12b58ff5b5027fe9e2a44c92448881350ccea79", "commit_date": "2023-06-14T11:32:11Z", "commit_message": "cmake: prevent multi library unity build conflicts (#265)\n\nWhen support for Unity/Jumbo builds was added[1], the fact that cmake\r\nwill need to be able to not mix files with different PCRE2_UCHAR\r\nsizes was missed, resulting in a possibly broken build by redefining\r\nLINK_SIZE as shown by warnings during compilation.\r\n\r\nSince 4678857 (add a C23 inspired checked integer multiplication helper\r\n(#198), 2023-02-03), the build will fail if the linker wouldn't be able\r\nto merge the multiple implementations of pcre2_ckd_smul from each\r\nparticipating library.\r\n\r\nTo avoid both problems, disable UNITY_BUILD for the non 8-bit libraries.\r\n\r\n[1] https://github.com/PCRE2Project/pcre2/pull/94", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ef82f7eb78e9effd662239c6dac70c534a6d60b", "commit_date": "2023-05-28T15:14:35Z", "commit_message": "Ignore build subdirectory. (#256)\n\nIt is a common practice to create a build subdirectory and run cmake from there.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9452a78a42208044443af4a14d1cafb5f95e5bcf", "commit_date": "2023-05-16T14:13:56Z", "commit_message": "Add some test cases (#253)\n\n* Add tests which use recurse to test \\K and Mark in atomic scope\r\n\r\n* Add the test which use firstline,utf,match_invalid_utf together", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8a875eb8922e5c938ac9c7f70f79f0105c5d2e2", "commit_date": "2023-05-16T14:05:13Z", "commit_message": "windows: integrate visibility attributes without conflicts (#249)\n\nWhen using a DLL in Windows, the function declarations (and definitions)\r\nthat are public are decorated with attributes but those declarations would\r\nconflict with the ones that are selected when the compiler supports the\r\nvisibility feature.\r\n\r\nDefine instead a new macro that would be added to the corresponding\r\nmacros independently and while at it allow setting visibility with cmake.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1bc34ffa64c33381d793fb5cdddf3f484e603d23", "commit_date": "2023-05-12T14:54:02Z", "commit_message": "pcre2grep: document better possible multiline matching misses (#252)\n\nWhile at it, remove a misplaced cast that would cause problems for\r\nsubjects over 2GB and a few typos.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf6f9843bdf89b9a0fc9907c665936b288641d74", "commit_date": "2023-05-09T14:16:00Z", "commit_message": "avoid the possibility of dangling pointers to capitem in pcre2_compile (#248)\n\nAs shown by the following warning from gcc13:\r\n\r\n  src/pcre2_compile.c: In function 'compile_regex':\r\n  src/pcre2_compile.c:8319:17: warning: storing the address of local variable 'capitem' in '*cb.open_caps' [-Wdangling-pointer=]\r\n   8319 |   cb->open_caps = &capitem;\r\n        |   ~~~~~~~~~~~~~~^~~~~~~~~~\r\n\r\nWhile normally the stack of \"capitems\" will be unwinded and the head of\r\nit that is stored in \"cb\" set to NULL, this is not done in case of a\r\ncompilation failure.\r\n\r\nInstead of keeping it inside \"cb\", initialize it in the stack of\r\ncompile_regex() and make sure it is gone once that function returns.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78f02dfd72d3abb3fb579b502681593e6099114c", "commit_date": "2023-05-07T16:09:33Z", "commit_message": "pcre2grep: correctly convert colors in Windows (#247)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04fbb65b5e4931656d57de592c0e3ed89fe99b68", "commit_date": "2023-05-04T15:41:40Z", "commit_message": "Update scorecards.yml (#244)\n\nOld one failing because Debian 9 is no longer available as shown by:\r\n\r\n```\r\nE: Failed to fetch http://deb.debian.org/debian/dists/stretch/main/binary-amd64/Packages  404  Not Found\r\n```", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1bb1ef67eff000fe4aa8c1c45289938188e11e48", "commit_date": "2023-04-21T08:12:45Z", "commit_message": "no partial match if trailing data is invalid utf (#238)\n\nAvoid returning a partial match if one was found but followed by invalid\r\nUTF, making the result consistent with JIT and unlike:\r\n\r\n  PCRE2 version 10.34 2019-11-21\r\n    re> /.a/match_invalid_utf,allvector,jit\r\n  data> b\\xb1\\=ph,ovector=1\r\n  No match\r\n   0: <unchanged>\r\n  data> b\\xb1\\=ph,ovector=1,no_jit\r\n  Partial match: b\\x{b1}\r\n  ** ovector[1] is not equal to the subject length: 1 != 2\r\n   0: 0 1", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15a11d10a8580ee09f7cd433e1fdaccb88106c4f", "commit_date": "2023-04-21T08:11:36Z", "commit_message": "pcre2test: avoid printing invalid utf trail in partial match (#237)\n\nWhen match_invalid_utf is enabled, invalid UTF-8 data can't match\r\nbut it was mistakenly getting printed as part of a partial match\r\neventhough the ovector correctly didn't include it, as shown by:\r\n\r\n  PCRE2 version 10.34 2019-11-21\r\n    re> /(?<=..)X/match_invalid_utf,allvector\r\n  data> XX\\x80\\=ph,ovector=1\r\n  Partial match: \\x{80}\r\n  ** ovector[1] is not equal to the subject length: 2 != 3\r\n   0: 2 2\r\n\r\nFix the logic to print instead the empty match that was returned\r\nand address a buffer overread when trying to decode UTF-8 that was\r\nmissing code units.\r\n\r\nFixes: #235", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9bad4654be04c6419c443a1e7469844ece15e8cf", "commit_date": "2023-04-20T16:46:52Z", "commit_message": "Abandon pcre2test test if pattern conversion results in a string that is too long", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "93233290a922048afd7e091eea2b4027e90a0661", "commit_date": "2023-04-15T15:38:13Z", "commit_message": "Documentation minor update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a3525848462b87235c52fd8a51fc5cffb8f55ca6", "commit_date": "2023-04-15T14:40:21Z", "commit_message": "Fix typo in ChangeLog and increase size of buffer in pcre2test to avoid compiler warning.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29d65e0cd386f46191917b1e554e217b6c8e64dd", "commit_date": "2023-04-15T14:33:57Z", "commit_message": "pcre2test: print library bitwidth in banner for usability (#227)\n\nWhile at it update related documentation and missed changes in Changelog", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3bbdb6dd713b39868934fdc978ba61b81da6d1c5", "commit_date": "2023-04-11T17:03:06Z", "commit_message": "pcre2grep: avoid UCP mode for \\d for compatibility with GNU grep (#222)\n\nMatching multi-byte digits was released with GNU grep 3.9 and considered a\r\nregression that required a couple more releases.\r\n\r\nWhile implementations differ on their interpretation of `\\d` under Unicode,\r\nthere is a recommendation[1] for a POSIX compatible mode that and a suggestion\r\nthat it will be better (safer and faster) to only consider ASCII digits for\r\nthat class (and [:digit]).\r\n\r\nUse the recently introduced PCRE2_EXTRA_ASCII_BSD if `--posix-digit` is used\r\ntogether with `-u` or `-U` for compatibility with GNU grep.\r\n\r\n[1] https://unicode.org/reports/tr18/", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8558f252e8d8b3fd52d1dc8ea46ecefd991a187", "commit_date": "2023-04-11T12:55:01Z", "commit_message": "Fix wrong test", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c08b619dc973beacc474dcb67cda8cd366200ce", "commit_date": "2023-04-11T12:42:36Z", "commit_message": "Fix an invalid match of ascii word classes when invalid utf is enabled\n\nFixes #224", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64549346f044dec18d18d06c2d08a68a68e26817", "commit_date": "2023-04-09T11:29:46Z", "commit_message": "avoid inconsistency between \\d and [:digit:] when using /a (#223)\n\nSince a608946 (Additional PCRE2_EXTRA_ASCII_xxx code, 2023-02-01)\r\nPCRE2_EXTRA_ASCII_BSD could be used to restrict \\d to ASCII causing\r\nthe following inconsistent behaviour in UCP mode.\r\n\r\n  PCRE2 version 10.43-DEV 2023-01-15\r\n    re> /\\d/utf,ucp,ascii_bsd\r\n  data> \u0663\r\n  No match\r\n  data>\r\n  re> /[[:digit:]]/utf,ucp,ascii_bsd\r\n  data> \u0663\r\n    0: \\x{663}\r\n\r\nIt has been suggested[1] that the change to match \\p{Nd} when Unicode\r\nis enabled for [:digit:] might had been unintentional and a bug, as\r\n[:digit:] should be able to be POSIX compatible, so add a new flag\r\nPCRE2_EXTRA_ASCII_DIGIT to avoid changing its definition in UCP mode.\r\n\r\n[1] https://lore.kernel.org/git/CANgJU+U+xXsh9psd0z5Xjr+Se5QgdKkjQ7LUQ-PdUULSN3n4+g@mail.gmail.com/", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "512be06078bec9a3a941765900d566060aa5af8b", "commit_date": "2023-03-29T09:19:48Z", "commit_message": "update to latest zig (#219)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "38f33a4932e187c9ad6309a96e97f81982f53244", "commit_date": "2023-03-22T17:54:00Z", "commit_message": "Remove pcre2_ucptables.c from explicit building by Bazel and zig (its", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1dd18c0e72b78528e80aa483331d2208779e31e6", "commit_date": "2023-03-22T17:36:28Z", "commit_message": "Remove pcre2_ucptables.c from sources in build doc (#216)\n\nThis file is included by pcre2_tables.c, so it should not be built\r\nmanually otherwise it causes errors.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6277357eff44c887100ec19b2127bbb03118f725", "commit_date": "2023-03-08T10:41:31Z", "commit_message": "Code adjustment for a goto that bypassed a block initialization (though it was not relevant in the goto case)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88fabd8dc4015ba00e8d1782f55ebff5fd51be20", "commit_date": "2023-03-08T10:22:53Z", "commit_message": "Minor code adjustments to avoid using C++ reserved names \"new\" and \"typename\" as variables", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5cfe2a9f1621168a086311c7452f5d5ee2b130e", "commit_date": "2023-03-07T17:28:33Z", "commit_message": "Re-arrange code to avoid jump into a block that bypassed its initialization in the debugging printint module.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "47f86d515f696c2ec844a9157a6763cfa5a904c2", "commit_date": "2023-03-07T16:54:27Z", "commit_message": "Remove variable called \"not\" from pcre2_printint.c (deprecated in C; illegal in C++)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10dc79fd1c7505c32eaafcbf0f46ee08a4d4782d", "commit_date": "2023-02-11T14:35:27Z", "commit_message": "improve __buitin_mul_overflow() checks (#209)\n\nUse <stddef.h> as a source for size_t as suggested by ANSI in preference\r\nto <sys/types.h> (as suggested by POSIX), and make sure that the check\r\nincludes linkin so it won't result in a false positive in platforms that\r\nallow link time resolution of unknown objects (ex: AIX with lxc)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71c2748a7b7f6b1238262f171613233596e44e40", "commit_date": "2023-02-11T14:31:32Z", "commit_message": "pcregrep: minor documentation update (#208)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a649cbc96e5725a7969e71c4b2f2a8506da64010", "commit_date": "2023-02-09T17:11:00Z", "commit_message": "zig build support (#206)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1de7291a8cc939e1d345131e7ac89111dd7c670d", "commit_date": "2023-02-08T15:15:27Z", "commit_message": "Bring pcre2.h.generic up to date", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8385df8c97b6f8069a48e600c7e4e94cc3e3ebd9", "commit_date": "2023-02-08T15:09:18Z", "commit_message": "Made PCRE2_UCP the default in UTF mode in pcre2grep, and added new options --case-restrict and --no-ucp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a97f600d6572d024fc3a1a42f4730b83c380440", "commit_date": "2023-02-07T07:01:59Z", "commit_message": "Support ucp word boundary in JIT", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c9a5299fb8a7bc00e036c88725de4e331976c87", "commit_date": "2023-02-06T17:08:09Z", "commit_message": "Fix \\b and \\B with PCRE2_EXTRA_ASCII_BSW in the interpreters", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "26d5cd99c8f462924706e59aad231d9c2bb4b8a9", "commit_date": "2023-02-06T06:10:58Z", "commit_message": "build: update filelist after JIT update (#203)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d84f255bef4d956d67ff5da35024e7a8c0c7e669", "commit_date": "2023-02-05T06:09:20Z", "commit_message": "JIT compiler update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45f44736a22022299ecaaec4ef122b82e224c474", "commit_date": "2023-02-04T17:25:14Z", "commit_message": "Bring ChangeLog up to date", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bf8045997e8f2615a44200a5191836fb430bd69", "commit_date": "2023-02-04T17:19:56Z", "commit_message": "Documentation update for new PCRE2_EXTRA caseless and ASCII options", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c905ce0c19cd3ef94588c9d9f29b9b8a2457ecb", "commit_date": "2023-02-03T14:57:32Z", "commit_message": "maint: avoid duplicated boolean properties and bad script extensions (#202)\n\n`ucptest` was misbehaving and showing the wrong properties and\r\nfinding the wrong characters.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4678857266b0a832b356516e41501d60eef2800e", "commit_date": "2023-02-03T14:52:57Z", "commit_message": "add a C23 inspired checked integer multiplication helper (#198)\n\nCompilers had become far more creative about optimizing code that\r\nmight be considered undefined behaviour, so improve our integer\r\noverflow checking to prevent any possible miscompilations.\r\n\r\nWhile at it, expand the use of the checks to pcre2test to fix a\r\nsimilar problem to the one that was tackled in pcre2_compile.\r\n\r\nPrefer (if available) a builtin provided by the compiler.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af0839f911d6d2d7b9f62e4505ec353ca5e23fa8", "commit_date": "2023-02-02T17:31:13Z", "commit_message": "maint: honor @missing in DerivedBidiClass and report non values (#201)\n\nStarting with Unicode 15, the provided DerivedBidiClass data file\r\nreports different default values to use for unassigned characters\r\nin different groups.\r\n\r\nProcess the additional hints for that specific file, and allow\r\noverriding the values later if more specific.\r\n\r\nSince that was previously forbidden, change get_other_case() to\r\nreport when no valid value could be provided and allow skipping\r\nconflicting rule lines that required that restriction.\r\n\r\nWhile at it, Allow using the long identifiers in `ucptest` with\r\nthe `find bidi` command (underscores also allowed).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc56fd790c1a3ba8f2890fc2b6afba21250923de", "commit_date": "2023-02-02T17:19:45Z", "commit_message": "Further ASCII tests and minor bugfix plus ChangeLog update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6089462a460a9f6c2db63a86e1c09fabaa81499", "commit_date": "2023-02-01T17:42:29Z", "commit_message": "Additional PCRE2_EXTRA_ASCII_xxx code", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72c9b576950e94e5026b0b8c63db332f348e0faf", "commit_date": "2023-02-01T15:38:58Z", "commit_message": "Ucptest updates (#199)\n\n* ucptest: regenerate testoutput\r\n\r\nLast sync with 1a5fcd (Remove unused variables in ucptest.c and update test data\r\nfor added properties, 2022-04-25), and showing significant differences.\r\n\r\n* fix `findprop +` with UTF-8 characters and duplicated other case", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40626f0cb6796593b92ba60b38c69f755f350bcf", "commit_date": "2023-02-01T15:28:21Z", "commit_message": "upgrade to Unicode 15 (#200)\n\nReverting several reserved characters that were removed from the\r\nprevious release, and that are only referencing as \"@missing@ in\r\nDerivedBidiClass.txt", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c13d54f6581fa51a270a1ec40b1b7626d686dec1", "commit_date": "2023-01-29T16:46:24Z", "commit_message": "Implement PCRE2_EXTRA_CASELESS_RESTRICT and related features", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcceddcf3c1ed0def8c0d88c188d1d07ffd79b87", "commit_date": "2023-01-25T12:49:36Z", "commit_message": "Fix minor typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69d6b24615537f7ec849d80c5dce839da6f3d647", "commit_date": "2023-01-25T09:37:30Z", "commit_message": "Fix minor memory check bug in pcre2test", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa5ec503b3cf3cb019cdbe81ea7e25edf32f0351", "commit_date": "2023-01-23T16:04:02Z", "commit_message": "Correct list of JIT-supported architectures", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "303e3bc48086b1a1501511c48a400d7b6a92a9bd", "commit_date": "2023-01-23T12:36:53Z", "commit_message": "make sure to use either size_t or PCRE2_SIZE correctly (#195)\n\nIt doesn't change much in practice, but helps clarify the interfaces\r\nof some functions that were either documented with the wrong type or\r\nhad mismatching types between declaration and implementation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f86495869395d2567b3d5bb41a422c50c97acf2", "commit_date": "2023-01-22T14:14:28Z", "commit_message": "Expand documentation re availability of JIT", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0f899f4d3ca2db999a1521a77c7b3653dde800a", "commit_date": "2023-01-20T17:08:34Z", "commit_message": "More UTF documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d9c1599a1c846c9ab7e6bf84f6de288006c31bc", "commit_date": "2023-01-20T16:58:07Z", "commit_message": "Update documentation re JIT fast path and UTF validity", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f508518762b87905f85e3ca442e05b3080117079", "commit_date": "2023-01-20T15:37:01Z", "commit_message": "Documentation update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0333c414f4f0bbf845ae0be474389a4bfe47b731", "commit_date": "2023-01-20T15:13:41Z", "commit_message": "Documentation update re invalid UTF", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b785232a8102615d6edf671f27202bb21954ad3b", "commit_date": "2023-01-19T17:26:33Z", "commit_message": "Add ChangeLog entry for PR #192", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a94da799a80952074407868bce013a8b53b2ddd0", "commit_date": "2023-01-19T17:24:14Z", "commit_message": "Update ChangeLog for PR #192", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6068ae19fbc173b09e9e1be96e2984b8336671c9", "commit_date": "2023-01-19T17:19:02Z", "commit_message": "build: make the C99 requirement explicit (#193)\n\nRecent code uses C99 syntax (as reported in #163, and therefore it\r\nwill fail to build unless C99 (or higher) support is required by the\r\ncompiler (gcc >= 5 does it by default).\r\n\r\nFor those unfortunate to need an older compiler that does require a\r\nflag to enable that, make sure that both autoconf and cmake make it\r\nexplicit.\r\n\r\nWhile testing the change with the ancient autoconf version listed as\r\na prerequisite, noticed that the LT_INIT syntax introduced with 91485e5\r\n(Update configure.ac for latest version of autoconf., 2021-02-02), was\r\nnot supported, so update the autoconf minimum as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "703ccd6374eeb150f2062e4d84ffd64c99a54b5d", "commit_date": "2023-01-19T17:08:36Z", "commit_message": "pcre2test: use microseconds instead of milliseconds for timing (#192)\n\nWhen using -t or its variants the timing results with a modern CPU\r\nwhere not very significant even with 4 decimal digits.\r\n\r\nWhile at it, move the factor calculation that can be done with\r\ninteger arithmetic and even optimized out for the more common case\r\nwhen CLOCKS_PER_SEC == 1000000 out of the denominator.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fdb19cac2ce8b32639fb2102c272088a48a28f9", "commit_date": "2023-01-19T09:29:49Z", "commit_message": "Fix inadvertent missing test update", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d73a949ec126592911583ed962e879e849e05733", "commit_date": "2023-01-18T17:57:07Z", "commit_message": "Refactor heapframe_size code in pcre2test and update documentation for heap frame information", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4405c4b5517d8b68f1161a7271ed5f9157f761c", "commit_date": "2023-01-18T17:55:55Z", "commit_message": "Add autom4te.cache to .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c80c6338ad23380544a79ba2325a93113e8168d3", "commit_date": "2023-01-17T15:26:27Z", "commit_message": "add pcre2_get_match_data_heapframes_size() (#191)\n\nSince PCRE2 10.41, the match data contains a pointer to a vector of\r\nframes allocated in the heap and that are used by pcre2_match()\r\nwhen doing non JIT matches.\r\n\r\nThere is though, no outside visibility on the size of it, and therefore\r\nthe memory it uses is locked away until match_data itself is freed.\r\n\r\nAdd an API that allows getting that value, so an application could\r\ndecide based on its own experienced memory pressure to keep reusing\r\nthat match_data or not.\r\n\r\nWhile at it, update the documentation of other related functions for\r\nclarity.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d66adc387baa2d29f91f0cadfaf8d8e77e13bb3", "commit_date": "2023-01-17T14:55:53Z", "commit_message": "avoid LIMIT_HEAP integer multiplication wrap around (#184)\n\nIf a LIMIT_HEAP value once converted to bytes is larger than UINT_MAX\r\nwould result in a bogus setting that could trigger a matching failure\r\nas shown by the following:\r\n\r\n  PCRE2 version 10.42 2022-12-11\r\n    re> /(*LIMIT_HEAP=4194304)a/\r\n  data> a\r\n  Failed: error -63: heap limit exceeded\r\n\r\nRemove the multiplication and instead keep track of the maximum heap\r\nallowed in KB as was done originally.\r\n\r\nAditionally, add a check to avoid overflowing a PCRE2_SIZE while\r\ndoubling the heap used and that could result in a crash (only on\r\nsystems with a 32-bit PCRE2_SIZE and using non standard settings).\r\n\r\nUnlike the original, this code avoids rounding the heapframes_size\r\nto the frame_size at the allocation time, which simplifies the logic\r\nand wasn't really needed.\r\n\r\nFixes: d90fb23 (Refactor match_data() to always use the heap instead\r\n       of having an initial frames vector on the stack..., 2022-07-27)\r\nCloses: #183", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fdd3ce7e2ad51f38d7c7a47c92f2aa46b290a0f7", "commit_date": "2023-01-17T14:43:20Z", "commit_message": "minor tweaks to valid_utf() to avoid truncation of error offset (#181)\n\ne8cdae3 (Correct an incorrect cast., 2017-04-14) started changing\r\nsome of the casts to fit the type of the error offset variable, so\r\ncomplete that, and for consistency, add the same type of casts to\r\nthe non UTF-8 code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0746b3d523c9a799aa62ae9e03188b23664f48b0", "commit_date": "2022-12-14T10:47:39Z", "commit_message": "Update the ManyConfigTests to include new POSIX freestanding test, add a JIT test in a non-source directory, and update selectors", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "937964f8c96dccccb22f5d576134b8b2b396c783", "commit_date": "2022-12-14T10:11:21Z", "commit_message": "Make pcre2posix_test work when the default newline is not LF.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}