{"2.1": [], "main": [{"commit_oid": "5d58d66093f9bc81be39901a08eee287e76c7982", "commit_date": "2023-09-26T22:45:50Z", "commit_message": "Merge pull request #3225 from kgaillot/build\n\nFix clang build", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91b4148b87616c06e92735fcb385aabee262aafd", "commit_date": "2023-09-26T20:58:00Z", "commit_message": "Refactor: libpacemaker: cast enum assignment\n\nto make clang happy", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb7319164393cc743acda8f52081978cd6c07871", "commit_date": "2023-09-26T19:01:30Z", "commit_message": "Doc: Pacemaker Development: add more detail about function naming", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8a77797ac1824a972eccc7e62cd6144cd752a6c", "commit_date": "2023-09-26T19:01:30Z", "commit_message": "Build: rpm: move crm_master to pacemaker-cli package\n\nshould have been done with 57ce5b5eb", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91cb95c5756ea99359f7c096c3fddd2e2cf65033", "commit_date": "2023-09-26T14:54:20Z", "commit_message": "Merge pull request #3224 from nrwahl2/nrwahl2-xml\n\nRefactor: based: Use new XML logger functions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f988e45092ef0f2fe7bbbc405c33950ea1d1425", "commit_date": "2023-09-26T14:49:56Z", "commit_message": "Merge pull request #3214 from kgaillot/best-practices\n\nReplace enum pe_ordering with internal API in libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "979ae14c2016fb48dcdfcb90447065abf6f33ea8", "commit_date": "2023-09-25T20:44:33Z", "commit_message": "Refactor: based: Use new XML logger functions\n\nDrop unused logger_out\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4c95f2a22c00bfc643c845d192ea5e64c720fcc", "commit_date": "2023-09-25T17:22:57Z", "commit_message": "Merge pull request #3222 from nrwahl2/nrwahl2-xml\n\nMinor XML cleanups", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "281217361255c3a44cc602f8ca40c85994ea7cf8", "commit_date": "2023-09-20T22:00:13Z", "commit_message": "Refactor: various: Functionize logging XML changes\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c7a827ae6e0294563540b4ada8c642c6097d420", "commit_date": "2023-09-20T21:59:51Z", "commit_message": "Refactor: fencer: Drop XML patchset logging\n\nThe call to xml_apply_patchset() also trace-logs the patchset.\n\nAlso revert most of aea44d61. There's an obvious error when setting the\nrc variable (although it works since false == 0 == pcmk_rc_ok).\nAdditionally, the relocation of a block of code in that commit is no\nlonger necessary.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c66e2b6d04c5f6c4ceefd6d1a0c8f0a521619bc", "commit_date": "2023-09-20T21:59:50Z", "commit_message": "Refactor: various: Functionize XML patchset logging\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a06c3cd9381686847daf5c6cf9567d8d9072007a", "commit_date": "2023-09-20T21:48:23Z", "commit_message": "API: libpe_status,libpe_rules: deprecate enum pe_ordering and all its values\n\nThe enum has to stay in pe_types.h because it is used by pe_action_wrapper_t.\nWe can at least prevent internal code from using any of the values (except the\nfirst, since enums must have at least one value).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a0aa75ef081347dcbd7e2654f15c30f8485e9c8", "commit_date": "2023-09-20T21:48:23Z", "commit_message": "Refactor: scheduler: replace pe_order_then_cancels_first internally\n\n... with pcmk__ar_then_cancels_first", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0774b5e7e741a04fd1106a60b161a65976d5f07", "commit_date": "2023-09-20T21:48:23Z", "commit_message": "Refactor: scheduler: replace pe_order_preserve internally\n\n... with pcmk__ar_guest_allowed", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0733d47ced4fb6c386c757c15b7fc98a14b3a95", "commit_date": "2023-09-20T21:48:23Z", "commit_message": "Refactor: scheduler: replace pe_order_anti_colocation internally\n\n... with pcmk__ar_if_required_on_same_node", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90f176ed0fdbe094ca053eb2f9d118f3761c0f8e", "commit_date": "2023-09-20T21:48:23Z", "commit_message": "Refactor: scheduler: replace pe_order_one_or_more internally\n\n... with pcmk__ar_min_runnable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7ee08e68931af5f98f1cc5fe05dec1ffda055e5", "commit_date": "2023-09-20T21:48:23Z", "commit_message": "Refactor: scheduler: replace pe_order_load internally\n\n... with pcmk__ar_if_on_same_node_or_target", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84ce43b7b5321e44bf176d8eb100dab0eafc42cc", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: replace pe_order_asymmetrical internally\n\n... with pcmk__ar_asymmetric", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5c47da12893476de26c8cf5a43f1c08a074f21b", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: replace pe_order_implies_then_printed internally\n\n... with pcmk__ar_first_implies_then_graphed", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83a0a686d208f73672540d01e5ce6382624dfa32", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: replace pe_order_implies_first_printed internally\n\n... with pcmk__ar_then_implies_first_graphed", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7edef53aadfb81fd7e82316da947a9b406339c3f", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: replace pe_order_same_node internally\n\n... with pcmk__ar_if_on_same_node", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1549152557e32906a4344ae89c5cbdbd317d30b6", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: don't set ordered flag for serialize-only orderings\n\nThis has no effect but is logically preferable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62255a957653379a554db7b4855f54232a76234c", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: replace pe_order_serialize_only internally\n\n... with pcmk__ar_serialize", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b9d2eeeba08f448a312253f317be676f4cd2360", "commit_date": "2023-09-20T21:40:23Z", "commit_message": "Refactor: scheduler: replace pe_order_restart internally\n\n... with pcmk__ar_intermediate_stop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eed8b341be40944d10c92bb2f30eadccb0aac2e3", "commit_date": "2023-09-20T21:40:21Z", "commit_message": "Refactor: scheduler: replace pe_order_probe internally\n\n... with pcmk__ar_nested_remote_probe", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44f98c1aee9423734a898a4d24657d16cc85c230", "commit_date": "2023-09-20T21:35:34Z", "commit_message": "Refactor: libcrmcommon: Don't copy old XML for patchset unless necessary\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9be3357681f0b044e7ccd6c0a7aa025caadce249", "commit_date": "2023-09-20T21:35:34Z", "commit_message": "Refactor: libcrmcommon: Drop unused xml_patch_version_check() argument\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c2fb2446e15ff6d0f433da9c7cc15e77856e9a7", "commit_date": "2023-09-20T21:35:34Z", "commit_message": "Refactor: libcrmcommon: Use PCMK_XA_FORMAT\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d7cce8eac87429d1bde1865f4f6932aea93b3db", "commit_date": "2023-09-20T21:35:34Z", "commit_message": "API: libcrmcommon: New PCMK_XA_FORMAT string constant\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b84a17bfd4a70f0461c383a7c34fb7ed64434c4", "commit_date": "2023-09-20T20:07:12Z", "commit_message": "Refactor: scheduler: replace pe_order_implies_then_on_node internally\n\n... with pcmk__ar_first_implies_same_node_then", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7cf884db60914900db20eb8cc1a2638bcdb803fb", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_pseudo_left internally\n\n... with pcmk__ar_first_else_then", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15e4015e769382ef4b3b8221348943722c0be085", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_runnable_left internally\n\n... with pcmk__ar_unrunnable_first_blocks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e41087b8ce695a087432085bb3f2e55a3480ca89", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_implies_first_migratable internally\n\n... with pcmk__ar_unmigratable_then_blocks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e2c6f61c0eceabb0822eebaf22dcbf3d69b8a61", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_promoted_implies_first internally\n\n... with pcmk__ar_promoted_then_implies_first", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc9de104313c52299d1668707c5c63a77d1b1b7f", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_implies_then internally\n\n... with pcmk__ar_first_implies_then", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8228b7080ad7307409bd4774e81f68f831bc9b6", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_implies_first internally\n\n... with pcmk__ar_then_implies_first", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e03ee7fe48c6325c02e5a7c22665602521ce00a", "commit_date": "2023-09-20T17:22:22Z", "commit_message": "Refactor: scheduler: replace pe_order_apply_first_non_migratable internally\n\n... with pcmk__ar_if_first_unmigratable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78b86afef8cce55508f6b80241573230945e71d0", "commit_date": "2023-09-20T17:14:57Z", "commit_message": "Refactor: scheduler: replace pe_order_optional internally\n\n... with pcmk__ar_ordered.\n\nThe name is questionable. The relation is optional if only this flag is set\n(see should_add_input_to_graph()), and effectively this enables the relation\nby making it not match an equality comparison against pcmk__ar_none. But\nenabling it means order_actions() will order them, and this name is readable\nand in the future could more specifically control whether the relation is an\nordering.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7482df598e4d9ce951d420f8d333c46a2e41f993", "commit_date": "2023-09-20T14:46:11Z", "commit_message": "Refactor: scheduler: replace pe_order_none internally\n\n... with pcmk__ar_none", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e7aad174b5d0072bb8493c33bd7f4c93ba32114", "commit_date": "2023-09-20T14:44:04Z", "commit_message": "Refactor: scheduler: add enum pcmk__action_relation_flags\n\n... initially with no values.\n\nThis new enum in libcrmcommon is intended to replace enum pe_ordering from\nlibpe_status and libpe_rules, which will be deprecated as public API. No\nexternal code should need that level of detail into the ordering code, and\nnearly everything that uses the enum is already internal anyway.\n\nAll internal references to enum pe_ordering are updated to the new one. The\nreference in pe_action_wrapper_t is left since it is public API (it should\nreally be uint32_t anyway).\n\nThe \"ordering\" terminology is replaced here with \"action relation\" since\nnon-ordering relationships are also involved.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "989f0809d9fb93114ce2fc0c6ae7df5594324328", "commit_date": "2023-09-20T13:42:02Z", "commit_message": "Refactor: scheduler: make order_actions() last argument uint32_t\n\nIt's a flag group, not a single enum value", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c4388654f5af3d463fb473a763cd12ff5ac3d51c", "commit_date": "2023-09-20T13:37:10Z", "commit_message": "Merge pull request #3219 from kgaillot/log\n\nCorrect a couple log messages", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cad3c452130577c86f7df47a06abeb630e312306", "commit_date": "2023-09-18T20:52:47Z", "commit_message": "Merge pull request #3220 from nrwahl2/nrwahl2-xml_const\n\nTake const argument in pcmk__xml2text()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eac87aa6b6fad90398ea51d74c65c0c562be885", "commit_date": "2023-09-18T19:27:41Z", "commit_message": "Refactor: libcrmcommon: calculate_xml_digest_v2 xml argument is const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07b38d203986b7708dc230ad94f7bb1113b54bac", "commit_date": "2023-09-18T19:27:41Z", "commit_message": "API: libcrmcommon: save_xml_to_file()'s xml argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73223b04ca19c49ddb909654eff117e0f942ba8a", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: tools: write_shadow_file()'s xml argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9e910003e705b769bc5939094abd25100765196", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: controller: save_cib_contents()'s output argument is now [in]\n\nKeeping it non-const to fit the CIB callback function signature\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "027e8c8423d694a5e528af40c6559aebb07c7880", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: validate_xml_verbose()'s xml_blob argument is const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7fbd750e64dfd31eecec7c569e4abcbea4e29b56", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: fencer: stonith_send_reply()'s reply argument is const\n\nAlso remove forward declaration\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a453c1d035a931610d4fb64d467b0adc42632fb3", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcluster: send_cluster_message()'s data argument is const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f1d395902d795976222d5c3d4f8eac9724848ef", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcluster: pcmk__cpg_send_xml()'s msg argument is const\n\nAlso return bool instead of gboolean\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd7d4cc8868582171db81003f7554ba8133dfb8d", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: fencer: do_local_reply()'s notify_src argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "209ef66cf975ab55b14df1adc0f768c12bf7b9bd", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: pcmk__send_ipc_request() argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40222c15e7664cd8999d973e3e5ca75cd369d7fb", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: pcmk__ipc_methods_s:reply_expected() arg const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48ba630ce4ed7be3d652b1a66a4beecb40caf858", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: crm_ipc_send()'s message argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6175bf3330c2fd25a0eed77b8fb72064a23529d1", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: based: do_local_notify()'s notify_src argument is const\n\nSince pcmk__ipc_send_xml() and pcmk__remote_send_xml() now take const\narguments.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9d8ee5d773d3ef9a6409cc00f348f666a6e3dc7", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: based: cib_notification_s:msg is now const\n\nSince pcmk__ipc_prepare_iov() and pcmk__remote_send_xml() both take\nconst arguments.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b15a52fe3a1dbbf7b558dfb7ba26a7af7d15289e", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: pcmk__ipc_send_xml()'s xml argument is const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a997b2f254c4ac0742b69a86d16850d78d4901e", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: pcmk__ipc_prepare_iov()'s xml argument is const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c079f4348d60819c428a4e63e2bca20915015fa7", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: pcmk__remote_send_xml() argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54b3ac8b695fa32465c69463b92d2b72083bff94", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: dump_xml_unformatted()'s argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16f3fd4fe09357317894df2749a9a2a1c5bc3664", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: write_xml_file()'s xml argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "49e731bd66eb9d81f3d1e3f763ee7640efc90464", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: write_xml_fd()'s xml argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a44e147b66e8809f14d1f55d7eb91fe8aa555be", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libpe_status: resource-config message argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90d7cbd5ded81fc79b663b5e8bbcb2573a204994", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: dump_xml_formatted()'s argument is now const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8268ff110ccd780d6809967ebbae64d439968d2b", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: tools: Use const xmlNode * arguments in shadow messages\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ccc5ab154fde8bfd64656039ece48bb462d06146", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: xml-patchset message takes const argument\n\nNow that dump_xml_formatted_with_text() takes a const argument, we can\ndo this.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5698f4c5dd8142ad3258ec18634e9c890b17d67f", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "API: libcrmcommon: dump_xml_formatted_with_text()'s argument is const\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d80dde1279e39060654c38b8d144743651bd2d30", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: Drop pcmk__xml_fmt_full\n\nThere are no remaining uses.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22736179abdafb6110c0a2ab56149e2d915887a6", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Test: cts-cli: Update outputs after XML text dump change\n\nNow that we're using our own text dumping implementation instead of\nlibxml's, attribute values are escaped in a few places where they\nweren't previously.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9a7b424dcce9f795720b095f075199aa4160552", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: pcmk__xml2text() takes const xmlNode * argument\n\nIt would be nice to use libxml's dump function for its intended purpose\nwhen we don't need to filter the XML (as in\ndump_xml_formatted_with_text()). However, there are a couple of issues.\n* Our dumping implementation escapes attribute values, while libxml's\n  xmlNodeDumpOutput() does not. This means attribute value formatting is\n  inconsistent depending on whether we're including text nodes (which\n  are unrelated to attribute values). This isn't strictly a bug, but\n  it's certainly counter-intuitive that the output from\n  dump_xml_formatted_with_text() differs from that of\n  dump_xml_formatted() in any way other than inclusion of text nodes.\n* xmlNodeDumpOutput() prevents pcmk__xml2text() from taking a const\n  argument.\n\nIt's also easier to read if everything uses the same implementation,\nthough this is secondary (cleaning up comments would have gone a long\nway toward readability).\n\nThe only caller that passes pcmk__xml_fmt_full is\ndump_xml_formatted_with_text(), so we can simply use pcmk__xml_fmt_text\nthere.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec24672b7da7f0472a78ac9777f3d25aecbf1008", "commit_date": "2023-09-18T19:27:40Z", "commit_message": "Refactor: libcrmcommon: Don't set pcmk__xml_fmt_full in log_data_element\n\npcmk__show_xml() doesn't care about this flag, so there's no reason to\nset it. This will allow us to drop the flag soon.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac0b8c836eba46208e7e838414890d6223ddd59e", "commit_date": "2023-09-18T19:27:38Z", "commit_message": "Log: libcrmcommon: Improve error log in pcmk__xml2text()\n\nWe shouldn't log a cryptic integer and expect the user to look for a\ncomment in the source code.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6665f335597d617f7001efd0d3fdfeaf27475317", "commit_date": "2023-09-18T19:22:11Z", "commit_message": "Refactor: libcrmcommon: Use XML_TAG_DIFF in last remaining place\n\n...where \"diff\" was used as a literal.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd54dfd6fe45bcb8c657d3a2fa326f4cda22604c", "commit_date": "2023-09-18T19:22:11Z", "commit_message": "API: libcrmcommon: Use XML_TAG_DIFF_REMOVED string constant\n\n...instead of the literal \"diff-removed\" internally.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "700e017ff40dde9780ecd6f7f66056c851c0343b", "commit_date": "2023-09-18T19:22:11Z", "commit_message": "API: libcrmcommon: Use XML_TAG_DIFF_ADDED string constant\n\n...instead of the literal \"diff-added\" internally.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b603e3b0ec441f3aff8f51f192ebcffa04a8f3e7", "commit_date": "2023-09-18T17:06:17Z", "commit_message": "Log: scheduler: correct meta-attribute name in message", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb71e0a1052f8a310a77fcc48c121e7f353f9e5a", "commit_date": "2023-09-18T17:06:16Z", "commit_message": "Refactor: scheduler: functionize parsing an integer meta-attribute\n\n... to reduce duplication and improve readability", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "955f5a0dcc1455225b06868f7ec29b3d9d72b46a", "commit_date": "2023-09-18T15:48:12Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_PROMOTED_NODEMAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0354e3bfbaaa555879cd12ccebef31ee3d1f63b1", "commit_date": "2023-09-18T15:47:38Z", "commit_message": "API: libcrmcommon: add PCMK_META_PROMOTED_NODE_MAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d6f5ed7fecf71bbcf1dbd0aac6e8a93a7118636e", "commit_date": "2023-09-18T15:45:45Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_PROMOTED_MAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "947eeccfbe2c312b9270d604f625730325b0ac64", "commit_date": "2023-09-18T15:45:06Z", "commit_message": "API: libcrmcommon: add PCMK_META_PROMOTED_MAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3898a53b00a696b2183951186f27aabcfb740f1f", "commit_date": "2023-09-18T15:42:50Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_INCARNATION_NODEMAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5262e7184a08bccd63943e576bd0c0c3b3901e1a", "commit_date": "2023-09-18T15:42:50Z", "commit_message": "API: libcrmcommon: add PCMK_META_CLONE_NODE_MAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ea24faa4ed8e31c5caf4fbc1ccee1fd5dbffdf0", "commit_date": "2023-09-18T15:42:50Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_INCARNATION_MIN string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6cf8efc83128c8472a43d9ccb75e616d54303844", "commit_date": "2023-09-18T15:42:48Z", "commit_message": "API: libcrmcommon: add PCMK_META_CLONE_MIN string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d65b801923a2624751600ee651a7e2f2bd3bac70", "commit_date": "2023-09-18T15:35:27Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_INCARNATION_MAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "298327245f6ff96576ceccb9d91567c428159cb0", "commit_date": "2023-09-18T15:34:17Z", "commit_message": "API: libcrmcommon: add PCMK_META_CLONE_MAX string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "438705619872a6b4d9a388340bf117572f424b86", "commit_date": "2023-09-18T15:31:09Z", "commit_message": "Log: scheduler: correct message about only-if-unmigratable inputs", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ed2af5a7b39e5589c20dc0b92b9c31e7bf31955", "commit_date": "2023-09-18T14:46:21Z", "commit_message": "Merge pull request #3217 from nrwahl2/nrwahl2-actions\n\nMinor cleanup of some action code", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d77126ce6c02144d47e99fdee0ad64e2c70f112d", "commit_date": "2023-09-15T02:32:26Z", "commit_message": "Refactor: libpacemaker: pcmk__create_migration_actions drop redundancy\n\ncustom_action()'s return value is guaranteed non-NULL.\npcmk__create_migration_actions() is the only caller that checks the\nreturn value, and even it checks only the migrate_from and migrate_to\nvalues. Drop those unnecessary checks.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "877faf50bba899d19682e7ead4b7cc393389de7f", "commit_date": "2023-09-14T23:42:22Z", "commit_message": "Doc: libpe_status: Document that custom_action() returns non-NULL\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fab963433ab50f14958617acfe839fe2398f94b3", "commit_date": "2023-09-14T23:32:21Z", "commit_message": "Refactor: libpe_status: Drop unused create-action macros\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70736879d534017a0862f0341060d131df852eb7", "commit_date": "2023-09-14T23:32:21Z", "commit_message": "Refactor: libpe_status: Best practices for pe__clear_resource_history()\n\nDrop unused return value and redundant argument.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af93d8968414ce2113f7348fc07c0d15cc59cec5", "commit_date": "2023-09-12T18:57:41Z", "commit_message": "Merge pull request #3208 from kgaillot/doc\n\nMove some sections around in documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "945cb3afc49850fdea5b9c4cae94f43a1f0110a9", "commit_date": "2023-09-12T15:46:38Z", "commit_message": "Merge pull request #3213 from kgaillot/best-practices\n\nMove pe_link_state and pe_discover_e enums to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c2049d84c9c208938bcf7b4bd94488208702531", "commit_date": "2023-09-06T20:38:36Z", "commit_message": "Merge pull request #3211 from clumens/crm_resource-agents\n\nAPI: libpacemaker: Add function for listing resource agents.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c23c1660f75d0b21a220e66c10d2c558fa88051", "commit_date": "2023-09-06T18:49:22Z", "commit_message": "API: libpacemaker: Add additional agent listing functions.\n\nThese functions add the functionality for the --list-ocf-alternatives,\n--list-ocf-providers, and --list-standards command line arguments to\ncrm_resource.  That tool has been modified to call these new private\nfunctions.\n\nRef T44", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d0b060a4e5fc7eddf40b7ae48ded3f4fe19aca0", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: deprecate pe_discover_exclusive in enum pe_discover_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34973dc4f831defb6cff2054721cd76e6d6d695f", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: add pcmk_probe_exclusive to enum pe_discover_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a36e6da1d6008d54101206567352f66ec0b2479", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: deprecate pe_discover_never in enum pe_discover_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5546dbcdc4b3e4cc9846a9b4779e27b21faad67", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: add pcmk_probe_never to enum pe_discover_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f17a8fb53d43390e9a66fa03e0c1ca6db42cbf1", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: deprecate pe_discover_always in enum pe_discover_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "77ec3558edc2aae59c38a6b41b5627ac21d3aa3e", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: add pcmk_probe_always to enum pe_discover_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b6da26323d2341e2c25174f283e65ca1955a9ffb", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libpe_status,libcrmcommon: move enum pe_discover_e to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76baaf4f5a843e99927c38932b43886f028401ef", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libcrmcommon: deprecate enum pe_link_state", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b2c210e6dbf32946aba9ada92fde9079a23d8f7", "commit_date": "2023-09-06T15:53:44Z", "commit_message": "API: libpe_status,libcrmcommon: move enum pe_link_state to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d2e51e8ff783f98b864d215702d3fc63952756b3", "commit_date": "2023-09-06T15:53:31Z", "commit_message": "Merge pull request #3210 from oalbrigt/crm_resource-dont-restart-unmanaged-resources\n\nRefactor: crm_resource: report error when trying to restart unmanaged resources", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2fc8a0f75f5a5d4ae2c19c47e31fad3ec8e1998", "commit_date": "2023-09-06T14:56:47Z", "commit_message": "Merge pull request #3207 from kgaillot/best-practices\n\nMove enum pe_action_flags to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bfa21e48d74ac9fa720dd7575ca685d2ea3411e", "commit_date": "2023-09-05T17:08:32Z", "commit_message": "Merge pull request #3206 from kgaillot/scheduler\n\nFix rule-based action meta-attributes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc65dc35fea107a2604fd580f86409f848ef553b", "commit_date": "2023-09-05T17:07:26Z", "commit_message": "Merge pull request #3209 from clumens/tools-crm_perror\n\nRemove crm_perror from tools & daemons", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a253662d2048efa2b74638272fb3a95c707bd050", "commit_date": "2023-09-01T08:10:53Z", "commit_message": "Refactor: crm_resource: report error when trying to restart unmanaged resources\n\nFixes T329", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c1893f91c441e072c7a0231529cde3e54637d50", "commit_date": "2023-08-31T19:26:53Z", "commit_message": "Refactor: tools: Remove direct calls to crm_perror.\n\nDaemons are detached from the console, so no one's going to see their\nstderr anyway.  In all these cases, we should just call pcmk_rc_err on\nerrno to log the error.  This adds a little more context to what went\nwrong.\n\nAdditionally, I've changed the return type of the internal\nbind_and_listen function to return -errno just in case the caller is\never interested in that.  It's more useful than just returning a -1\neverywhere.  On the other hand, I've left init_remote_listener alone\nbecause its error checking isn't great in the first place and could\nreally use a more thorough overhaul.\n\nFixes T170", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbb7c42db730cad4deb2aa2a31dbcec24f7df100", "commit_date": "2023-08-31T17:14:52Z", "commit_message": "Refactor: Remove unnecessary calls to pcmk_strerror.\n\nThis function is deprecated, and many uses can be replaced with calls to\npcmk_rc_str instead.  These fall into two categories:\n\n* pcmk_strerror(errno) - As long as errno is positive, this fits into\n  the new standard return code space so we can just call pcmk_rc_str\n  instead.\n\n* if (rc != pcmk_rc_ok) { pcmk_strerror(rc); } - These are obvious.  The\n  new standard return codes can just be passed to pcmk_rc_str.\n\nThere are plenty of pcmk_strerror calls still around, but there's plenty\nof places still using the old style return codes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a39d4c313d574a95ef34f909b04786cdadca70df", "commit_date": "2023-08-31T17:14:52Z", "commit_message": "Low: libcrmcommon: Fix error logging in mainloop_add_ipc_server_with_prio.\n\nIf qb_ipcs_create returns NULL, nothing will have set rc so the error\nmessage will be something nonsensical where we print out that there was\nan error, but the error string is that there was no error.\n\nInstead, check errno.  qb_ipcs_create returns NULL only if calloc fails\nat the moment, in which case error will be set and we can use that to\nget the correct error message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eeb86af82ca57170bb54f048ee71ee2bf458fac7", "commit_date": "2023-08-31T17:14:52Z", "commit_message": "Refactor: tools: Remove direct calls to crm_perror.\n\nThere's very few of these calls anymore.  However, the tools still make\nplenty of calls to library functions that in turn call crm_perror.\nThose are going to be much more difficult to replace, but luckily\nthey're being tracked in T172 so we don't need to deal with them here.\n\nFixes T171", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aebfe9f1fba7f179db1d88e9974d92e7cf2cb3e9", "commit_date": "2023-08-30T17:32:35Z", "commit_message": "Test: scheduler: update test output for action meta-attribute fix\n\nNow that node attributes are considered when evaluating rules in action\nmeta-attributes, and action meta-attribute blocks are properly ordered\nfor rule processing, the timeout-by-node test output is correct.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b2e45a078980188a20be489f8efc8ed7a1bc387", "commit_date": "2023-08-30T17:32:35Z", "commit_message": "Fix: scheduler: properly sort rule-based blocks when overwriting values\n\nPreviously, sorting nvpair blocks for rule processing using sort_pairs() always\nsorted with the highest score first.\n\nThis makes sense when evaluating nvpairs with overwrite set to false, so the\nhighest score takes precedence. However, when overwrite is true, this wrongly\nmakes the lowest score take precedence.\n\nNow, the sort order depends on overwrite.\n\nThis has gone undetected for so long because nearly all callers set overwrite\nto false. The main exception is when unpacking action meta-attributes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43146f7b2d6e649f626d2523db6f4a253fae8953", "commit_date": "2023-08-30T17:32:35Z", "commit_message": "Fix: scheduler: properly evaluate rules in action meta-attributes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b2d33e6d5a5bb25186d221e3efd0022b1beef9d5", "commit_date": "2023-08-30T17:32:35Z", "commit_message": "Test: scheduler: add test for op timeout that varies by node\n\nThis is currently broken", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a79a788e9bfc52d5a32b2e255cc5613db3b0b34", "commit_date": "2023-08-30T17:32:34Z", "commit_message": "Refactor: scheduler: functionize unpacking action meta-attributes\n\n... for future reuse. The validate_on_fail() return value is no longer used,\nso it can be dropped.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd54b499f249314b9305800feef11401067f45b5", "commit_date": "2023-08-30T17:18:00Z", "commit_message": "Merge pull request #3205 from oalbrigt/fencer-connection-wait\n\nRefactor: fencer: sleep 1s between reconnects", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "031b29bb2366eef4e428c7f681fce4bf82fd1105", "commit_date": "2023-08-30T15:34:02Z", "commit_message": "Merge pull request #3186 from nrwahl2/nrwahl2-replace_notify\n\nDrop all CIB replace notify code", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20ee027cb54eb8175a688a795934a9a9347a6615", "commit_date": "2023-08-30T07:47:04Z", "commit_message": "Refactor: fencer: sleep 1s between reconnects\n\nFixes T449", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c3a015caf121f88919bc157710f2b1a12989537", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_dc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f14b56dadd52e8fd71c45277b3b222f3cbfdf9e", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_on_dc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a2c6f90d5a841454dd4b0273b2e0bfcc8554198", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_dedup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55e97871b43b187b433aa4478bc9124623fe6e01", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_inputs_deduplicated", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83061c10edea2060960a1bfd13dc1cd95ee7a8f7", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_tracking", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "657ca24bdaf13fd417001d3d3861763757822dad", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_detect_loop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab831d43b4b8ed91d5eda1eaa32f49e79316c5e1", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_reschedule", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa6cb9c6d9fa65199075b1322ceafa8636fdfd47", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_reschedule", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f1508e04aa86afa18b473cb42d3e537f17a1339", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_requires_any", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20f2d879bc9e22f3b4cf62b69f2bc67814fde102", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_min_runnable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4e9a4459a4985126c53afb94e63cbb020b9f638f", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_dangle", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "732ac760c31459c296a909d83740b883127da8da", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_migration_abort", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88b7c9814c32c8ef03ba48778dddccf2c86023f4", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_processed\n\nIt was checked, but nothing set it", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "594343ecca37b2bdd3b6e98921b3ef255315bdb2", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_dumped", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "689fc0f42f14516a01329c5057fba7168d970235", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_added_to_graph", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef680db77fa1edc9feb2c2cacfcc26d020faaec5", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_migrate_runnable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d2a97f1150a9066880b0d4ef1c9755a0a91a0d14", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_migratable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d463025d888a710550727cc7d7676790e0cd14e", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_implied_by_stonith\n\nIt has been unused for many years. Technically this could be considered\nbackward-incompatible if anyone was running the scheduler and then checking\nactions for the flag, but it was originally intended for internal use and is\nnot expected to be used by any external code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a87c8689ae7cb250b43536d2b1f60afac15564c2", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_have_node_attrs", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3607dc2a93786beb67fae83afab78e9cf7b441", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_attrs_evaluated", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3720e262416c26aec9c97c9240499d34932fb8a1", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_print_always", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "361e31af465e5b8837a000d1c5a8c2d5bb6faa96", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: add pcmk_action_always_in_graph", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2285513c4c4f11d9c318d29f7b938bd0a0b1e7ea", "commit_date": "2023-08-29T20:14:35Z", "commit_message": "API: libcrmcommon: deprecate pe_action_optional", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "667a2e584f7782b69dd174caf22efcc49f12ca6d", "commit_date": "2023-08-29T20:14:34Z", "commit_message": "API: libcrmcommon: add pcmk_action_optional", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d877b5dc858bbd2f269d3be59313cce110f94536", "commit_date": "2023-08-29T20:05:13Z", "commit_message": "API: libcrmcommon: deprecate pe_action_runnable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a43add83d00b8aab37a0d1ac74047bef4612b18", "commit_date": "2023-08-29T20:05:13Z", "commit_message": "API: libcrmcommon: add pcmk_action_runnable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e982806a03751106bb48f2b32c956a22e6f7887", "commit_date": "2023-08-29T20:05:13Z", "commit_message": "API: libcrmcommon: deprecate pe_action_pseudo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0035835b89604060a05d1287896e759cfdae7559", "commit_date": "2023-08-29T20:05:13Z", "commit_message": "API: libcrmcommon: add pcmk_action_pseudo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d97f3b7e39f39da13d1f1f9942c83911bb8536d2", "commit_date": "2023-08-29T20:05:13Z", "commit_message": "API: libcrmcommon: add pcmk_no_action_flags", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0d9a2fb918bc266cef8b2e363a6ab9a850d93b8", "commit_date": "2023-08-29T20:05:13Z", "commit_message": "API: libpe_status,libcrmcommon: move enum pe_action_flags to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23110faaa1ba97881b12fe717e2cb1384ef18f8a", "commit_date": "2023-08-29T20:04:44Z", "commit_message": "Merge pull request #3204 from kgaillot/best-practices\n\nReplace pe_rsc_* flags with enum pcmk_rsc_flags in libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b04d46185b3eb043dec2aa4cad78150034544852", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_needs_unfencing", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1fc3acf0700d2c08d97af77c26275e8227c085be", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_needs_fencing", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4e6f482e835b108f11f8f81e7010bd152641c530", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_needs_quorum", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "acd6bead7f8c9d4b2582947f95e79179f1d3a2a3", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_is_container", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28ced3bef3549049c373b4c4855b8b530bfc7968", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_maintenance", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58b81a3430cd981391b9c340c5d64ced428e2de2", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_replica_container", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a79b3b858935c1b087cd3cdfd92056d2f22d681", "commit_date": "2023-08-28T20:53:32Z", "commit_message": "API: libpe_status: deprecate pe_rsc_failure_ignored", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1fda0e54dafbddcebaf9b5176bf783f94b8e481", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_allow_migrate", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "946415d658127055ac863303553c62ff3a42713e", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_stop_unexpected", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c1a698d91a806be16fe62cbd2a9c59584e75fea", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: (further) deprecate pe_rsc_stopping", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "839226a1320d6437045d5cdfa00c7fee13826dbb", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: (further) deprecate pe_rsc_starting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0c2c5f301cbbbfe52097ec5e7ebbf412109611d", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_start_pending", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf22e21937aee363b9690b376ca127dcd93b714c", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_runnable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a951c85c94bd81feee32f7713e02dc997099b91", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_detect_loop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7321cffa6300121f147d972f19b9cc9182773ccf", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_failed", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6f81ecb780cc267bb80f45a6ee4fede8d8c69e9", "commit_date": "2023-08-28T20:53:31Z", "commit_message": "API: libpe_status: deprecate pe_rsc_critical", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cfa1d5e1e47aafca6fb85b92e952a0449204701", "commit_date": "2023-08-28T20:49:48Z", "commit_message": "API: libpe_status: deprecate pe_rsc_allow_remote_remotes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fec65461a20b7e71f8da4e6b0cb2927f7d6616d1", "commit_date": "2023-08-28T20:49:48Z", "commit_message": "API: libpe_status: deprecate pe_rsc_reload", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8be19e3452de06c2b56157b4de05e277dca89796", "commit_date": "2023-08-28T20:49:48Z", "commit_message": "API: libpe_status: deprecate pe_rsc_stop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee8e99f9bcc915ab221f391fbd0ffcd5c5a6ddcc", "commit_date": "2023-08-28T20:49:48Z", "commit_message": "API: libpe_status: deprecate pe_rsc_restarting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bbbeacff2a7aab4981d3f4c03fe4fa561240e63c", "commit_date": "2023-08-28T20:49:48Z", "commit_message": "API: libpe_status: deprecate pe_rsc_merging", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2b58235fe426047b104b329bc50c9ca69f5303c", "commit_date": "2023-08-28T20:49:48Z", "commit_message": "API: libpe_status: deprecate pe_rsc_assigning", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e47962ddb562fbbca435cf588604ab7e72a4994", "commit_date": "2023-08-28T20:49:47Z", "commit_message": "API: libpe_status: deprecate pe_rsc_provisional", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "82e297ce2d75ff159fa3eebc95811d3ba4fd25a0", "commit_date": "2023-08-28T20:48:49Z", "commit_message": "API: libpe_status: deprecate pe_rsc_promotable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8973f0f49c8de74804396635ed323cfffb317ca", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Refactor: based, libcib: Drop all CIB replace notify code\n\nNothing internal uses it anymore, and we've never advertised it to\nexternal callers. cib_types.h doesn't document valid values for the\nevent argument of cib_api_operations_t:add_notify_callback(). Any\nexternal caller using this was relying on an undocumented feature or\nimplementation detail and can't expect it to work.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bbf8f2298d77d70000469821666acd509ed3873f", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Refactor: attrd: Drop replace notify callback\n\nEvery time a CIB replace notification is sent, a CIB diff notification\nis also sent. So move the attrd_cib_replaced_cb() logic into\nattrd_cib_updated_cb() and drop attrd_cib_replaced_cb().\n\nCheck the patchset directly instead of checking change section flags.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2d61d49123a0ae8be6d8d4ce5a1329a68e91635", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Refactor: attrd: Use pcmk__cib_abs_xpath_for() instead of XPATH_ALERTS\n\nTo reduce duplication.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4741517824a5c6db9388591118445669301f015f", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Low: attrd: Don't write attributes for a CIB replace that we requested\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7216ae9a8ac31dd08b9cf6f31e355fd29097b5e8", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Refactor: attrd: Move CIB-related functions to attrd_cib.c\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec65417cc769d7930a1e4c2751909e5f545f42ff", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Refactor: controller: Drop replace notify callback\n\nEvery time a CIB replace notification is sent, a CIB diff notification\nis also sent. So move the do_cib_replaced() logic into do_cib_updated()\nand drop do_cib_replaced().\n\nCheck the patchset directly instead of checking change section flags.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5990f98401be5745fcc57b4406f216966fe547bb", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Low: controller: Drop CIB replace call recording and forgetting\n\nAll we really care about is whether we (the local controller instance)\nrequested a particular operation that replaced all or part of the CIB.\nIf we requested it, then we shouldn't restart the join sequence simply\nbecause we're notified that based tried to perform the operation. If we\ndo want to restart the join sequence after a replace that we requested,\nwe can do so via a request-specific callback.\n\nI'm not sure why I created a table to record each call in the first\nplace... probably because the previous code set R_CIB_ASKED only for\nspecific calls. We don't need to be selective anymore, now that each\nCIB client has a unique client ID that's included in the notify XML.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "edb42600354cdec2661449be2333be8c29766f94", "commit_date": "2023-08-28T20:37:50Z", "commit_message": "Refactor: controller: Make cib_client_id a static variable\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c8ec22c9f07a900a26d1a68ca05f4196d342d3a6", "commit_date": "2023-08-28T20:37:48Z", "commit_message": "Refactor: various: Functionize getting patchset from CIB diff message\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e98beaa29f67047ce8e1df49342750c56cc2e28", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_fence_device", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ef08351960374638cf0facd5887060f6746ec84", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_unique", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "784fcb85fdfeadc64b1d8c7a709cfd7551b38526", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_notify", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "86abdbadc2b70587f66e58381a0eb34d7d21b734", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_orphan_container_filler", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f22e24ed288aeda7d0a76e53abb29a8c045d725", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_block", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83de5d6a3c25ce02c38db8eec17120f70cb1b585", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_managed", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c41dd4421672a36377d672b8761bc206508d1ca", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libpe_status: deprecate pe_rsc_orphan", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d007c20792a1fd105abb8caaf7c066efa7116cf3", "commit_date": "2023-08-28T20:37:00Z", "commit_message": "API: libcrmcommon: add enum pcmk_rsc_flags\n\n... equivalent to libpe_status' pe_rsc_* constants", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d403049711a462d3d3e4394a7170f7ede95877", "commit_date": "2023-08-28T20:36:43Z", "commit_message": "Merge pull request #3197 from kgaillot/best-practices\n\nMove data set flags to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69e0c24bea629f24979da4c8daf756b4969cb9a6", "commit_date": "2023-08-28T20:13:56Z", "commit_message": "Merge pull request #3203 from kgaillot/cts\n\nUpdate cts-lab patterns for recent log changes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f42e1704fce9087f8875c6c6f4d31a347d866c3b", "commit_date": "2023-08-28T19:31:59Z", "commit_message": "Low: attrd: Ignore CIB diff notification if shutdown was requested\n\nLike the replace callback already does. This is in preparation for\nmerging the replace callback into the diff callback.\n\nSee\nhttps://github.com/ClusterLabs/pacemaker/pull/3186#discussion_r1300472173.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20ad1a974d5dff9f9e1a84c01fd329596c6691f9", "commit_date": "2023-08-28T19:31:59Z", "commit_message": "Refactor: libcrmcommon, libcib: Check for element in CIB diff\n\nConvert pcmk__alert_in_patchset() to a more generic function,\ncib__element_in_patchset(), that tests whether a given element was\nmodified by a CIB update. Since checking a v2 CIB update involves string\ncomparisons rather than searching an XML object for the desired element,\nthis function can't support arbitrary XPath queries. Supported elements\nare those that are supported by pcmk__abs_xpath_for_element().\n\nAlso move the function to libcib since we're using F_CIB_UPDATE_RESULT.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29648f0e61105e776eb6e483318e93efb5f47c6a", "commit_date": "2023-08-28T19:31:59Z", "commit_message": "Refactor: libcrmcommon: Best practices in pcmk__alert_in_patchset()\n\nUse const where possible. Functionize v1 and v2 logic. Use better\ndefault for rc. Error-check rc getter. Use CIB XPath getter functions\nfor maintainability. Iterate over only XML_DIFF_CHANGE elements for v2.\nUse true/false. Use pcmk__starts_with() instead of strstr(). Clarify\ntest conditions.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a82ce5f57036ccb2c6a574e5a39e1285f016d87", "commit_date": "2023-08-28T19:31:55Z", "commit_message": "Refactor: libcrmcommon: New pcmk__cib_abs_xpath_for()\n\nThis new function gets the absolute XPath for a CIB element.\n\nUnfortunately we can't use the absolute XPath all the time, because\nbased_callbacks.c:prepare_input() and the \"Mirror\" logic in\ncib_file.c:cib_file_process_request() both operate on CIB objects that\nare part of an F_CIB_CALLDATA element within the request XML. An\nabsolute XPath doesn't match against this embedded CIB. Detaching the\nCIB XML from the request alters the request. This interferes with some\ntrace messages at least, and it may have other side effects as well.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d2e33ef4bdd7c12b7efc92af40d4dc1caa81365", "commit_date": "2023-08-28T14:47:01Z", "commit_message": "Merge pull request #3201 from kgaillot/T138\n\nComplete fix for T138", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6dfd1f3fc8e95fc2e205a137ba506f71a908862c", "commit_date": "2023-08-28T14:44:01Z", "commit_message": "Merge pull request #3189 from clumens/makefiles\n\nUpdate Makefiles", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9282f44cf5bdd138a135241c8482fe36351af5e4", "commit_date": "2023-08-28T14:26:14Z", "commit_message": "Merge pull request #3202 from nrwahl2/nrwahl2-configure\n\nFix: build: Echo one file per line in schema_files()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f85d11c22f1ab5cbf5adb052b91eeded49350bc", "commit_date": "2023-08-28T04:08:15Z", "commit_message": "Fix: build: Escape newline in grep for schema_files()\n\nOtherwise grep throws an error and an RPM build has CIB_VERSION = \"\"\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "edf461eea4cc3e10c16179be90711284133682d7", "commit_date": "2023-08-28T03:51:54Z", "commit_message": "Fix: build: Echo one file per line in schema_files()\n\nOtherwise we end up with CIB_SCHEMA_VERSION = \"2\"\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4bfd81bbbe37d5120145d3db8210dab83417c38d", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Refactor: CTS: Make indentation more consistent in cts.in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be2194b2ea0c8bed503b3c584debb193ac63804d", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Low: CTS: Fix regexes for new /etc/sysconfig/pacemaker syntax.\n\n0c3631e96973481cda230de410dda8a05fd8877e changed that file such that the\nexisting regexes weren't really useful anymore.  In particular, the file\npreviously only had each key listed once while it now has each listed\nseveral times.  Thus, the regexes that just looked for the key and\nchanged it would now perform the substitution in several spots,\npotentially breaking settings.\n\nInstead, try to be smarter and only apply the substitutions in the one\nplace where they're needed while also using simpler regexes and\ncommenting what exactly they do.\n\nNote that there's one behavioral change here:\n\ntrace-add can now only be run if trace-set has been run first to ensure\nan uncommented PCMK_trace_functions line exists.  There's not really any\nreadable one line sed command that can both create the line if it\ndoesn't exist, and add to it if it does.  Hopefully this isn't too big\nof a change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b9eb755ae6cd5bfb2da04978f734369fb40f519", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Low: CTS: Print help output if no function is given for trace cmds.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9bc716d863cd8a9b8361b2b6402588d97a3c8bf", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Low: CTS: Don't add a comma to host group names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f0d112b3539f1923ef63807da618727f5b88ab8", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Build: Lists in Makefiles should be more consistent.\n\nThe idea here is that each item of a list is on its own line.  Each item\nis tabbed over until it's under the previous item, with spaces to round\nout the padding.  The backslash is tabbed over until it's right of\nwhatever the longest element in the list is.  For some lists that only\nhave a couple items of very similar length, I've just let the editor\nline them up with spaces.\n\nSet your tabstop to 8 whenever editing a Makefile to preserve this\nindentation.\n\nFixes T250", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3caa973334ca44279a4e418c39ff80bd86ac85e1", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Build: Avoid using sed -i, which behaves differently on BSD.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91535a0062436f680b32c4e18b5653ae15e49080", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Refactor: CTS: Remove the cluster-init helper.\n\nThis likely does not work with corosync 3, and is RHEL/Fedora specific,\nand we never use it (nor know of anyone who does).  So, it can go.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1dfb69d82262289132476978ea40fe4807e9875d", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Build: Fix ordering of LIBADD and LDADD libraries in Makefiles.\n\nLibraries should be listed before anything they require.  Additionally,\nchange how libraries are listed to be one per line using the += syntax\nand clean up the spacing.  I think this makes it easier to read.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf6ff759c9c823f3561fdf8543473285100807f3", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Build: Break a large chunk of xml Makefile out into a script.\n\nThis makes it a little easier to follow due to less escaping and fewer\ndollar signs and line continuations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b5fe2ac7c530db34c8fb476c53b3b56843e01c2", "commit_date": "2023-08-25T14:50:31Z", "commit_message": "Build: Use wildcards where possible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "38a7407eefd2be5c3889df65ad0634c861cc1d02", "commit_date": "2023-08-24T20:57:25Z", "commit_message": "Build: Remove unnecessary clean-generic targets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1625f628716d0bf541dfd7e3d6db9464ad95137", "commit_date": "2023-08-24T20:57:25Z", "commit_message": "Test: build: test-headers needs the build dir added to its search path.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55d928005f5190157cde95a321e5a5a804c2f688", "commit_date": "2023-08-24T20:57:25Z", "commit_message": "Build: Be consistent with marking targets as .PHONY.\n\nA couple notes on the changes in this patch:\n\n* The prerequisites of a .PHONY target (anything on the right side of\n  the colon) are always interpreted as a literal target name.  This\n  means any \"%\" in the target name will be handled literally.\n\n  Remove those targets from .PHONY and instead have them be\n  prerequisites of the FORCE target.  This ensures they will always be\n  built.\n\n* In some places, I have left targets that ought to be PHONY alone.\n  This is because phony targets should not be the prerequisite of a rule\n  that makes a real file.  The most obvious example of this occurs in\n  rpm/Makefile.am.\n\n* In some other places, I have left targets that should not be PHONY\n  marked as such.  This is because we want to force them to happen every\n  time the rule is invoked.  The most obvious example of this occurs in\n  devel/Makefile.am for the coverity targets.\n\nSee:\n\nhttps://www.gnu.org/software/make/manual/html_node/Phony-Targets.html\nhttps://www.gnu.org/software/make/manual/html_node/Force-Targets.html", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58400e272cfc51f02eec69cdd0ed0d27a30e78a3", "commit_date": "2023-08-24T17:30:43Z", "commit_message": "Fix: attrd: avoid race condition at writer election\n\nf5263c94 was not a complete fix. The issue may also occur if a remaining node\n(not the original DC or writer) wins the attribute writer election after the\noriginal DC's controller has exited but before its attribute manger has exited.\n\nThe long-term solution will be to have the attribute manager (instead of the\ncontroller) be in control of erasing transient attributes from the CIB when a\nnode leaves. This short-term workaround simply has new attribute writers skip\nshutdown attributes when writing out all attributes.\n\nFixes T138", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83e547cc64f2586031a007ab58e91fc22cd1a68a", "commit_date": "2023-08-24T17:19:19Z", "commit_message": "Refactor: attrd: use enum instead of bools for attrd_write_attributes()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca6feb003906d63f458d74c433119ce9d4a1dfdb", "commit_date": "2023-08-24T16:33:39Z", "commit_message": "Log: controller: improve disconnection messages\n\nDrop redundant messages, and improve wording and severity of remaining", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3c64ca161841eb99c6317a66358f7077304469d", "commit_date": "2023-08-24T13:59:17Z", "commit_message": "Merge pull request #3198 from twtlpla/main\n\nfix the validation function of input", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f9622a2ebf6fde84b2a59ad426aeda84503599ed", "commit_date": "2023-08-24T03:13:40Z", "commit_message": "fix the validation of input", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73173aa4e9de2f5a469a1c61b6b0a7715fb38e17", "commit_date": "2023-08-23T20:36:56Z", "commit_message": "Refactor: fencer: rename remote_fencing_op_t \"delay\" member to \"client_delay\"\n\n... to distinguish it better from other types of delay", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1fa1bbc423e0aad6fd9af8867bf7480d33fb90a4", "commit_date": "2023-08-23T20:36:56Z", "commit_message": "Log: based: improve request processing messages\n\nIn particular, shutdown request handling is not \"legacy\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c59bb5c41155480523d9de0539b63e95a5174fc0", "commit_date": "2023-08-23T20:36:56Z", "commit_message": "Low: agents: avoid deprecated attrd_updater option in ocf:pacemaker:ping", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d157ed08863b146fcb563bb326f11723e2740277", "commit_date": "2023-08-23T20:36:56Z", "commit_message": "Doc: Pacemaker Explained: emphasize that nodes are tagged by ID not name", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b6e638d3d2e5776a12aa1bc1406ab8c5134d74a1", "commit_date": "2023-08-23T20:36:05Z", "commit_message": "Merge pull request #3199 from kgaillot/purge\n\nLow: tools: make crm_node -R use transaction for CIB changes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "686b630fd3fa0c6171ba694c1e2b7146f9e65dea", "commit_date": "2023-08-23T19:18:46Z", "commit_message": "Low: tools: make crm_node -R use transaction for CIB changes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "768027683b2fa7b1803afc8a3537855c5130f18e", "commit_date": "2023-08-23T15:51:50Z", "commit_message": "Merge pull request #3194 from kgaillot/best-practices\n\nMove pe_find to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7843681da7a6fbdd5a3c91754325b871788072b8", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: deprecate pe_find_any", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0cb09c09b76e5879e4e111680bf681a472a69a6a", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: add pcmk_rsc_match_basename", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "345c516d98a7009b19e4a7d0ec666bed91d7a316", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: deprecate pe_find_inactive\n\nIt was never used in a released version.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b46361994b38f69ba52c91d8163fadaf11702a5c", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: deprecate pe_find_current", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c54926381cb7647f74c9aa9e4d6336fab1daf0b2", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: add pcmk_rsc_match_current_node", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97b732e6f91430223b6e8fb026474fc47d3d25ab", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: deprecate pe_find_clone", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5ad46f9d35e9da67f85181691c12d8e13159f35", "commit_date": "2023-08-23T14:21:18Z", "commit_message": "API: libcrmcommon: add pcmk_rsc_match_clone_only", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "927b2daa7b845b1eedb1df5b7332b3a9fe59e690", "commit_date": "2023-08-23T14:07:14Z", "commit_message": "Merge pull request #3196 from twtlpla/main\n\nAdd the parameter of dampening and fix attrd_updater command", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f34227db4ea15595cefbabd91765879111245317", "commit_date": "2023-08-23T01:28:11Z", "commit_message": "Add the parameter of attrd_delay and fix attrd_updter command", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bcaedf485e68c8cd10bf188fa25428ba5c656292", "commit_date": "2023-08-22T16:32:20Z", "commit_message": "Merge pull request #3190 from kgaillot/T198\n\nT198: Drop \"replace\" directory", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8d8c481b476f4a207898ce78ba4888736e484f2", "commit_date": "2023-08-22T15:04:06Z", "commit_message": "Low: attrd: fix build with older compilers", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01465e5115e3b3ef0b723f7baeeef9d91b22d526", "commit_date": "2023-08-22T14:20:43Z", "commit_message": "Merge pull request #3179 from kgaillot/purge\n\nImprove how crm_node -R works", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0069436611cacbf565ed3a88985481a062d4a55", "commit_date": "2023-08-21T21:31:58Z", "commit_message": "Merge pull request #3192 from clumens/if0\n\nRefactor: Remove code commented out with \"#if 0\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "361cfcbd6bd0e1079ebea881a63dd9f0f12c19e2", "commit_date": "2023-08-21T21:01:02Z", "commit_message": "Refactor: libcrmcommon: watchdog.c doesn't need mman.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52ab2b34b0991c7f65e939f6d7aa84994b9d1f1d", "commit_date": "2023-08-21T21:01:02Z", "commit_message": "Build: configure: define strchrnul in calling file\n\n... instead of replacing it. This allows us to ditch the replace subdirectory.\n\nFixes T198", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "babde93456392f17364575ed33494d9b6eeabce8", "commit_date": "2023-08-21T21:01:02Z", "commit_message": "Build: configure.ac: require strerror() to always return non-NULL", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2549e54f37c8dec5b6e1ab963ed014e930c02561", "commit_date": "2023-08-21T21:01:02Z", "commit_message": "Build: configure: require functions instead of replacing them\n\nBecause we define _GNU_SOURCE in portability.h, alphasort(), scandir(),\nstrnlen(), and strndup() should all be available in glibc on all versions\nof Linux distributions we support. As they originated in BSD, they should be\navailable there as well.\n\nAlso remove some leftover declarations of formerly replaced functions in\nportability.h.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "adaf6bd938854c0fd10c3766057a476932313cb1", "commit_date": "2023-08-21T21:00:59Z", "commit_message": "Build: configure: avoid re-running configure unnecessarily\n\nPreviously, we used a simple wildcard for *.rng as CONFIG_STATUS_DEPENDENCIES,\nmeaning a change to any RNG would trigger re-running configure at the next\nmake. However, certain RNGs are auto-generated every make, and those should not\ntrigger configure.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1d4ee702fd176d9e4dab6c2d1d3aa0552087838", "commit_date": "2023-08-21T19:49:13Z", "commit_message": "API: libcrmcommon: deprecate pe_find_anon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba953a91a587be585dce072f396609cc226e1e2e", "commit_date": "2023-08-21T19:49:13Z", "commit_message": "API: libcrmcommon: add pcmk_rsc_match_anon_basename", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "80295feb570ea2c258cfadb41b21dfc227151e76", "commit_date": "2023-08-21T19:49:13Z", "commit_message": "API: libcrmcommon: deprecate pe_find_renamed", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac1ad0a4b2eeeff5f80b83b4df0735ff50698ce8", "commit_date": "2023-08-21T19:49:13Z", "commit_message": "API: libcrmcommon: add pcmk_rsc_match_history", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f0234f25a79d514522062c8cc197f3b57791d9b", "commit_date": "2023-08-21T19:49:13Z", "commit_message": "API: libpe_status,libcrmcommon: move enum pe_find to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc15fd23fc0801f15dda11d90e3356e7b0243b4b", "commit_date": "2023-08-21T19:48:51Z", "commit_message": "Merge pull request #3191 from kgaillot/best-practices\n\nMove pe_quorum_policy to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c61752275486c1cbee5eb1f73e496eb44d9e2c6", "commit_date": "2023-08-21T18:26:54Z", "commit_message": "Refactor: Remove code commented out with \"#if 0\".\n\nAnything that's been commented out since early last decade (or before)\nis clearly not important enough to get around to figuring out, so it's\ncut.  Other uses remain, including a bunch that are commented out\nbecause we're waiting on a compatibility break.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78a73acc5c13d4c55baa6b5ebbb7cf341e71ad00", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: deprecate no_quorum_demote", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e693230a09a5143a1582b57825cd1844e9420484", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: add pcmk_no_quorum_demote", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f8bb93237b56063aa3833d4b7e947f318af33cd", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: deprecate no_quorum_suicide", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c53c2ba2bdb1164319f2c9b2bed9d9bac0ff8c21", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: add pcmk_no_quorum_fence", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55941c232c274d26f213342eb3c100e5b94bbfd8", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: deprecate no_quorum_ignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b8def2f09507e91b6554e8878ded07093396e83", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: add pcmk_no_quorum_ignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0369f38b773fe1c44340a83a17e5c84559d3c75e", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: deprecate no_quorum_stop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37320dfb4effd8400b880631f5bbd67e77280e6e", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: add pcmk_no_quorum_stop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1b154cbb735569cfa70778046c451834875f76a", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: deprecate no_quorum_freeze", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be001e9472a13fa33dbf68e477737ad600b0b30c", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libcrmcommon: add pcmk_no_quorum_freeze", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e0e4bd43c052b43ebcd27934275199b2e6f8232", "commit_date": "2023-08-21T17:12:47Z", "commit_message": "API: libpe_status,libcrmcommon: move enum pe_quorum_policy to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efd8e48a2114f512ff0ce4e37952a53c13bafdff", "commit_date": "2023-08-21T17:12:32Z", "commit_message": "Merge pull request #3183 from kgaillot/best-practices\n\nMove more enums from libpe_status/libpe_rules to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "621b466659a57f1062522d68609a8125fb7a3432", "commit_date": "2023-08-21T13:45:12Z", "commit_message": "Build: configure: move daemon/user processing to more appropriate sections", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "191f82f172e94b698d5c5c5b0c7ee16525bb49ce", "commit_date": "2023-08-21T13:45:12Z", "commit_message": "Build: configure: move path processing to appropriate section", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4d412dcc71dd9d167d6de15a9e1f355c33bd1db", "commit_date": "2023-08-21T13:45:12Z", "commit_message": "Build: configure.ac: require all system headers we use unconditionally", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b38ed15d1c1365d4d8d816172fa54093c3f297e0", "commit_date": "2023-08-21T13:45:12Z", "commit_message": "Build: configure.ac: add and use REQUIRE_PROG() macro\n\nIt currently only has a single call, but it is nice to have for the future\nand makes configure.ac marginally more readable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7dd56f2c22c801d64427f9447af7e6ab8367a298", "commit_date": "2023-08-21T13:42:37Z", "commit_message": "Merge pull request #3187 from kgaillot/T694\n\nT694: Fix unit test on 32-bit systems with 64-bit file sizes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "427008862d2c0552dd05097e17e8a193e4d43642", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Test: libcrmcommon: fix unit tests on 32-bit hosts with large files\n\nBased on patch provided by Taketo Kabe <pkabe@vega.pgw.jp> with CLBZ#5526\n\nFixes T694", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a4fd5911dbb656b5c34b65aa691be13596b5f521", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: don't cache sscanf result\n\nCacheing can get outdated after system software upgrades, and just makes\nconfigure.ac even harder to follow.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cf11506dd87b3855051b26f36d8ba496a2280b4", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move __progname check to libraries section\n\n... instead of headers, which it has nothing to do with.\nAlso, improve formatting, and don't cache the value (cacheing is off by default\nbecause it can get outdated after system software upgrades, which is a good\nreason not to use it).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcf4fee12afde08c5a40237805f5a84501444db2", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move systemd function with rest of systemd code\n\nThis allows us to drop the \"Helpers\" section", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cbba16b9d856bd52192c53e82a262e488900c4b", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move BUILD_VERSION detection to versioning section\n\nNo code changes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ba02f225f2b7f95aa2d66ae59fa029261481ca3", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move tools section up\n\n... so PATH is set and tools are available before any other processing.\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea82c6d7060a99ff15d20786679f2caca144c71e", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: detect git existence correctly\n\nThe previous code checked whether $GIT was executable, but GIT was set with\n\"false\" as a fallback, so it would always be executable.\n\nAlso, if we're going to bother detecting git, use GIT in Makefiles.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d16fcded648f0db6d8e63124095af5867e957814", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: separate programs section into tools and documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb0b39c87f146bf7b21cfc8baca8fc49761d59f9", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: new section for processing file paths\n\nThis was 90% of the \"General Processing\" section", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36348588bce9e88963ba7b2dcfac5680ce177ea5", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: new section for simple option processing\n\nThis handles defining subtitution variables and C constants for configure\noptions, where no complex processing is needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ec28b95e50f4bdf4e28cc6692775216b1edc493", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move package version processing with schema versioning\n\nThe idea is that grouping sections by purpose is more intuitive than by\nmechanics (defining C constants vs. substitution variables, etc.).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d80fb4ae22af98069052917e3852d07aed42f8f", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: improve configure options section\n\n- Move the yes_no_try() helper to the options section\n- Limit the options section to defining options and values, moving\n  all processing of the values to the general processing section for now\n- Improve comments", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "047eb24736346e033b2557fcab2b281a0eccb465", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move schema detection to own section\n\nsince it's not related to configure options", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e46847780219d29b31400461f96f20879087d724", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move compiler checks and helpers to compiler check section\n\nI think it's more intuitive to look for helpers where they're relevant rather\nthan in a grouping of their own. Also, drop a redundant message that\ncc_supports_flag has already logged.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ace0a5bb49953ea7f8b8762f7f16543e5a5f57b4", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move program checks to program check section", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e9fdac023d87c4f8acb5b22bd50af645c5968e58", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move PACKAGE_SERIES definition out of configure.ac\n\nIt's only used in one Makefile", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db65ca578585827fab339d0c2f0ea1c428615dcc", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: move some stuff from bootstrap to more appropriate sections", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c798a07b27bf62ad19775aeefe3c46ce4be291cb", "commit_date": "2023-08-16T20:56:53Z", "commit_message": "Build: configure: process datarootdir correctly\n\nautoconf wants .in files to ensure datarootdir is set, because directories such\nas datadir are defined in terms of it. However, we expand all paths before\nsubstitution, so it doesn't apply to us. Setting AC_DATAROOTDIR_CHECKED tells\nautoconf not to worry about it, but for completeness, we should expand\ndatarootdir as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d0b37a3fa595c3e51a6b89a7f5228a2167681ba", "commit_date": "2023-08-16T14:35:03Z", "commit_message": "Build: configure: drop useless cruft\n\n- We don't follow the suggested structure\n- No one's reading configure.ac for automake snippets\n- We don't need ancient copy-and-pastes with no purpose for us\n- We can assume size_t exists since we require C99\n- We don't use SIZEOF macros, so don't bother defining them\n- I have no idea how $Format:%h$ (added in 87629d537bd) was supposed to work,\n  but nothing I know of uses that syntax", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aeafea7aa308b63a030ec7b1b6cffddcfdd02b13", "commit_date": "2023-08-16T14:19:14Z", "commit_message": "Build: configure: use convenience macro where appropriate", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c4b0e6211711003f608bdac833578bb759afe30", "commit_date": "2023-08-15T14:46:30Z", "commit_message": "Merge pull request #3185 from clumens/find-python-tests\n\nTest: python: Specify a path to python tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8accb83876ae3cb84db57ff6fac9b099c7b5afeb", "commit_date": "2023-08-15T14:42:22Z", "commit_message": "Merge pull request #3184 from clumens/rc\n\nUpdate getaddrinfo and bz2 related error codes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "474ae5dc4a8f975eb29c9a94018a2d26ff5be8b2", "commit_date": "2023-08-14T19:55:14Z", "commit_message": "Test: cts-cli: Update expected test output for new error codes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "249e61cb33f594bfb325a6b0f782466f10189ca9", "commit_date": "2023-08-14T19:52:38Z", "commit_message": "Refactor: libcrmcommon: Deprecate bz2_strerror.\n\nFixes T551", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81d5b41f8f19dc19a8856ce9219535507d44b314", "commit_date": "2023-08-14T19:50:51Z", "commit_message": "Refactor: libcrmcommon: Use the new bz2-related error code.\n\nIn the various places where we're calling some bzip2 library function\nand getting an error code back from it, translate that into a standard\npacemaker return code then get an error message just like we do for all\nother errors.\n\nThis has a couple other effects:\n\n* Where crm_ipc_decompress previously returned EILSEQ, now return a\n  standard pacemaker return code.  That was probably not the right value\n  to return in this case anyway, since the error message indicates it's\n  for multibyte characters.  Callers really only care if there was an\n  error or not, and squash the return code down to a legacy one anyway.\n\n* Where pcmk__compress previously returned pcmk_rc_error, now return a\n  standard pacemaker return code.  Here again, the callers really only\n  care about error or not.\n\n* Remove the unit test for bz2_strerror, which is about to be\n  deprecated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9b6191e42922345aeeefa9cb295d797fa3c31a6", "commit_date": "2023-08-14T19:35:49Z", "commit_message": "Feature: libcrmcommon: Add pcmk__bzlib2rc.\n\nThis function translates errors from the domain of bz2 return codes to\nstandard Pacemaker return codes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e839e79915a3eb5937f2cb3af40aa1c9f8f4e4da", "commit_date": "2023-08-14T19:35:49Z", "commit_message": "Feature: libcrmcommon: Add the pcmk_rc_compression error code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7fb0d9cb437c12d3e0ff3e44e03789852d3e571", "commit_date": "2023-08-14T19:35:49Z", "commit_message": "Refactor: libcrmcommon, daemons: Use the new network-related return codes.\n\nIn the couple places we are calling getaddrinfo(), translate its return\ncode and then use pcmk_rc_str to get an error message just like for all\nother errors.\n\nThis has two other effects:\n\n* get_address_info now returns a standard Pacemaker return code, which\n  isn't really a huge change because its one caller only cares about\n  success vs. failure.\n\n* pcmk__connect_remote can now return additional codes if getaddrinfo\n  fails instead of just ENOTCONN.  Note that the callers of\n  pcmk__connect_remote could also use modification to consider these new\n  return codes, but this seems like it's going to get out of control\n  pretty quickly.  Instead, each caller should probably be modified when\n  it is audited for best practices.\n\nFixes T387", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "051a083c7d0918adc5b0822d5ae1d90e2d103712", "commit_date": "2023-08-14T19:35:46Z", "commit_message": "Feature: libcrmcommon: Add pcmk__gaierror2rc.\n\nThis function translates errors from the domain of getaddrinfo() return\ncodes to standard Pacemaker return codes.  Some of these map straight to\nexisting EWHATEVER codes, while a bunch map to our new return codes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bcb4e4bb1a3411dccdd1701e9198b26d26c17d0", "commit_date": "2023-08-14T19:20:28Z", "commit_message": "Feature: libcrmcommon: Add the pcmk_rc_ns_resolution error code.\n\nThis is intended for anywhere that something related to name server\nresolution fails.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31db6af3fffac3e51bd5af0d537fa33706308789", "commit_date": "2023-08-08T14:04:05Z", "commit_message": "Merge pull request #3180 from nrwahl2/nrwahl2-transactions\n\nMove CIB transaction management to client and fix controller regression", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4660d88019491925f3e135b2187960ce639ce152", "commit_date": "2023-08-08T07:17:05Z", "commit_message": "API: libcib: Drop call_options from cib init_transaction()\n\nThe argument is ignored, and cib_api_operations_t:init_transaction()\nhasn't made it into a release yet, so remove the argument.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a11a663abcf43f9c5e2954cd974571a77e6d63e", "commit_date": "2023-08-08T07:17:05Z", "commit_message": "Refactor: based: Simplify based_callbacks.c:prepare_input()\n\nThe input variable gets assigned the child of F_CIB_CALLDATA, not the\nF_CIB_CALLDATA element itself. In Pacemaker 1.1.11 and currently,\nF_CIB_CALLDATA's child is never F_CRM_DATA nor another F_CIB_CALLDATA\nelement. So the pcmk__str_any_of() condition is always false.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8088cbd50433fdf04f226737d79c734ed6c6a2cc", "commit_date": "2023-08-08T07:17:05Z", "commit_message": "Refactor: based, libcib: Don't process commit-transaction locally\n\nNow that we don't rely on transaction tables stored inside\npacemaker-based, there's no need to process commit-transaction requests\nlocally. Instead, we can forward them to all nodes, as we do with any\nother modifying request.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "842e0475b7cb8039b6115060e5ce21dbda02778f", "commit_date": "2023-08-08T07:17:05Z", "commit_message": "Refactor: controller: Drop user_data argument from controld_update_cib()\n\nAll callers now pass NULL.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44c51814991e26df26e88b956aad1ef528cc46fb", "commit_date": "2023-08-08T07:17:03Z", "commit_message": "Refactor: libcib, based: Remove CIB transaction management from server\n\nThis is the second of two commits that move most of the CIB transaction\nlogic in the client. The previous commit implements transaction\nmanagement (initialize, extend, discard) at the client side. This one\nremoves all transaction management from the server (pacemaker-based and\nthe CIB file emulated server).\n\nThe server side now consists only of committing the transaction.\n\nNote that the transaction XML is added to the commit request as\nF_CIB_CALLDATA.\n\nThis fixes a regression in the controller join sequence introduced by\n5e3b3d1. As of that commit, there are multiple asynchronous calls when\nbuilding each transaction in do_dc_join_ack(). If multiple nodes were\njoining in parallel, the DC may try to initiate a transaction for one\nnode while a transaction was already open for another node. However, the\nDC's CIB client can have only one active transaction at a time.\n\nNow, the transaction is created, sent to the CIB manager, and freed\nsynchronously. There is no opportunity for another node's join ack to\ntry to initiate a transaction in the meantime.\n\nAlso, 5e3b3d1 started using join_ack->msg as the node state update XML\nby mistake. The correct node state update XML is join_ack->xml.\n\nFixes T690\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e83821a44bf3c486b03db575c6d6bbdfa64b2f86", "commit_date": "2023-08-08T07:15:52Z", "commit_message": "Refactor: libcib, based: Implement transaction management in client\n\nImplement CIB transaction management (initialize, extend, discard) at\nthe client side. To keep the size of this commit under control, for now\nwe continue to manage transactions on the server side as well. The\nclient does not yet send the transaction XML as part of the commit\nrequest.\n\nIn each cib_t client object, store an XML object containing the CIB\ntransaction (if any). If a newly created request should be part of a\ntransaction, add it within cib__create_op().\n\nThe init_transaction() and end_transaction() (with commit=false) members\nof cib_api_operations_t now create and free (respectively) the\ncib_t:transaction object.\n\nRef T690\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97952dc2d23808547847267dd4189c7f45320c03", "commit_date": "2023-08-08T07:15:52Z", "commit_message": "API: libcrmcommon: Deprecate crm_xml_replace()\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53d4d3474ed94132313cbca4ee566f670e33daf8", "commit_date": "2023-08-08T07:15:50Z", "commit_message": "Refactor: various: Remove internal uses of crm_xml_replace()\n\ncrm_xml_replace() is basically a version of crm_xml_add() that removes\nthe attribute if the value argument is NULL.\n\nIt logs an assertion and doesn't update the attribute if the old value\nmatches the new value. This has the potential to cause some strange\nmemory errors, and it's difficult to update callers to be sure they're\nsafe.\n\ncib_perform_op() is the only caller where it's unknown whether the value\nargument is NULL. There, we now call xml_remove_prop() if value is NULL\nor crm_xml_add() otherwise. In the other callers, we know whether value\nis NULL, and we can unconditionally call the appropriate function.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df1ecb202f6ef4f77db37f1beb6b9c1a30868080", "commit_date": "2023-08-08T07:13:15Z", "commit_message": "Refactor: libcib: New T_CIB_TRANSACTION string constant\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e23fba0ebd15cbc9536f865ff32cc6806cd286c", "commit_date": "2023-08-08T07:13:15Z", "commit_message": "Refactor: libcib, based: New T_CIB_COMMAND string constant\n\nTo replace literal \"cib_command\" occurrences\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b21d91f6344a6853aded09f742c8e41de5c3dc76", "commit_date": "2023-08-08T07:13:15Z", "commit_message": "API: libcib: New cib_t:transaction member\n\nThis will store a CIB transaction as it's being built.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b9c5da4a900d0d3d15bf934551fc52da701ae16", "commit_date": "2023-08-08T07:13:14Z", "commit_message": "Refactor: libcib: Return legacy return code from cib__create_op()\n\nThe old xmlNode return value is now an output argument.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12e7bf59336113b84dab8c1d942e5180d933f85b", "commit_date": "2023-08-08T07:12:07Z", "commit_message": "Refactor: libcib: New arguments for cib_create_op()\n\nAlso rename to cib__create_op() (double underscore for internal API).\n\nTake a cib argument instead of a call_id argument, and increment the\ncall ID within cib__create_op(). A small side effect is that cib_remote\nregistration now uses a call ID of 1 instead of 0; another is that\ncib_native registration now includes a call ID where it previously did\nnot.\n\nTake a client_name argument to simplify CRM_OP_REGISTER calls.\n\nUse in cib_native_signon_raw().\n\nConsistently NULL-check return value.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22cb8e8c266ffc1c5432563853eb7aa8620c662e", "commit_date": "2023-08-07T21:05:34Z", "commit_message": "Merge pull request #3181 from nrwahl2/nrwahl2-cts\n\nFix: build: Fix API and CIB versions in RPM build", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e72f1c5616219720f135db1a277550255a0b12e4", "commit_date": "2023-08-07T19:14:45Z", "commit_message": "Fix: build: Fix API and CIB versions in RPM build\n\nWhen running configure from within the RPM build directory, the relative\npaths that set API_VERSION and CIB_VERSION don't match anything in the\ngit index. However, the git ls-files command returns success even if its\noutput is empty. So we never fall back to the ls command if the\ngit ls-files output is empty. As a result, the API_VERSION and\nCIB_VERSION variables get set to empty strings in an RPM build.\n\nThis causes cts-lab to fail in an RPM installation. The validate-with\nattribute in the empty CIB is set based on the value of CIB_VERSION. If\nCIB_VERSION is empty, validate-with gets set to \"pacemaker-\", which is\ninvalid.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52694e680484b1a9f883f0197ddbc317426b2dbf", "commit_date": "2023-08-03T22:24:52Z", "commit_message": "Merge pull request #3178 from kgaillot/attrd\n\nFix attrd race condition when shutting down", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c63762c715d6f0fd17b624bf3395e91b8c55b175", "commit_date": "2023-08-03T21:25:02Z", "commit_message": "Low: tools: improve attrd_updater -U help", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3532ed7356d42d3ff01e356539542396c4bbcf35", "commit_date": "2023-08-03T20:26:00Z", "commit_message": "Log: attrd: improve disconnection messages", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5d1546b8240dc27a8af70756a11d1ca40d2bdc3", "commit_date": "2023-08-03T18:21:44Z", "commit_message": "Refactor: attrd: consolidate \"shutting down\" checks\n\nThis makes it more obvious that each caller has considered whether to include\nshutdown requests in its check.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5263c9401c9c38d4e039149deddcc0da0c184ba", "commit_date": "2023-08-03T18:21:21Z", "commit_message": "Fix: attrd: avoid race condition when shutting down\n\nThis addresses a race condition that can occur when the DC and the attribute\nwriter are different nodes, and shutting down at the same time. When the DC\ncontroller leaves its Corosync process group, the remaining nodes erase its\ntransient node attributes (including \"shutdown\") from the CIB. However if the\n(former) DC's attrd is still up, it can win the attribute writer election\ncalled after the original writer leaves. As the election winner, it writes out\nall its attributes to the CIB, including \"shutdown\". The next time it rejoins\nthe cluster, it will be immediately shut down.\n\nFixes T138", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c50c6aa2c2923966c60e505e09ce7f8893cf6d8", "commit_date": "2023-08-03T14:36:43Z", "commit_message": "Merge pull request #3177 from kgaillot/glib\n\nFix glib assertions due to asynchronous metadata action completing after shutdown begins", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9552fe68ecd6836fe153e10bddf136a9bf9024c3", "commit_date": "2023-08-02T22:03:53Z", "commit_message": "Merge pull request #3175 from kgaillot/T381\n\nPrepare code for action-specific failure timeouts", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78581213ed3bf4183b0ec1f391b720d5d91f3f68", "commit_date": "2023-08-02T21:56:55Z", "commit_message": "Log: controller: improve messages for resource history updates", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b915f1ce38756431f7faa142565e3e07aade194", "commit_date": "2023-08-02T21:56:55Z", "commit_message": "Low: controller: guard lrm_state_table usage with NULL check\n\nIt is NULL while draining the mainloop during the shutdown sequence.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "247d9534f36f690c1474e36cedaadb3934022a05", "commit_date": "2023-08-02T21:56:45Z", "commit_message": "Refactor: controller: de-functionize lrm_state_destroy()\n\nIt was a one-liner called once", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "63f4bd4d5a324e6eb279340a42c7c36c8902ada7", "commit_date": "2023-08-02T20:57:31Z", "commit_message": "Fix: controller: don't try to execute agent action at shutdown\n\nNormally, agent execution is not possible at shutdown. However, when metadata\nis needed for some action, the agent can be called asynchronously, and when the\nmetadata action returns, the original action is performed. If the metadata is\ninitiated before shutdown, but completes after shutdown has begun, do not try\nto attempt the original action, so we avoid unnecessary error logs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa098a9b46934bd411e5b999c6ca5b5fa8de631c", "commit_date": "2023-08-02T16:39:52Z", "commit_message": "Test: cts-scheduler: update expected outputs for on-fail change\n\non-fail=\"stop\" is not valid for stop actions, and it is now (properly) removed\nfrom transition graphs (though the controller doesn't care, so it has no real\neffect).\n\nCleanups now (properly) have on-fail=\"ignore\" in the transition graph, but\nagain the controller doesn't care, so it has no real effect.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2e7159f20e1e264f7bfa4d504cd9d852cb9341e", "commit_date": "2023-08-02T16:39:51Z", "commit_message": "Low: scheduler: make validate_on_fail() replace value\n\nPreviously, validate_on_fail() validated the on-fail meta-attribute, and\nreturned it if valid, or an appropriate fallback if not.\n\nNow, if on-fail is not valid, directly replace it in the meta-attributes table.\n\nWhile this could theoretically have side effects, since previously the table\nretained the raw value (and added it to the transition graph), nothing actually\nneeds the raw value.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6142dac9695799b2201db43893448c3c04370845", "commit_date": "2023-08-02T16:39:22Z", "commit_message": "Low: scheduler: compare action names case-sensitively in validate_on_fail()\n\nAnd while we're at it, use convenience functions where appropriate, and improve\nerror checking, comments, variable names, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "77537ecb1c1112144ceefda8b16a743793a36cda", "commit_date": "2023-08-02T16:28:25Z", "commit_message": "Refactor: scheduler: make unpack_operation_on_fail() take separate arguments\n\n... instead of an action object, in preparation for planned changes. Also,\nadd a doxygen block, and rename to validate_on_fail() since it doesn't actually\nunpack anything.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e678a391b0946c62da335e27ddd3b4077e56ec47", "commit_date": "2023-08-02T16:28:25Z", "commit_message": "Refactor: scheduler: drop redundant argument from unpack_operation()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef0c129c224471e30a47c78013c0eb6df7065586", "commit_date": "2023-08-02T16:28:25Z", "commit_message": "Refactor: scheduler: drop redundant argument from pe__resource_is_remote_conn()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bac3585fbacf620190c9761eee38aa347bf05774", "commit_date": "2023-08-02T16:28:23Z", "commit_message": "Refactor: scheduler: use iterator functions in pe_get_failcount()\n\n... to make it easier to follow", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87ef522d767c619d33ebb538a7c74a7a716fe4a4", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "Refactor: scheduler: drop redundant argument from generate_fail_regexes()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d29d2ad218acb568767fd43001b8ab32aa690c1b", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "Refactor: tools: best practices for crm_resource's max_delay_in()\n\nRename to wait_time_estimate() to better reflect its purpose, add a doxygen\nblock, and improve log messages, comments, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8e0d41e2ee678378d69904cd6d4f4a50bbd10a2", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "Refactor: tools: best practices for crm_resource's max_delay_for_resource()\n\nRename to max_rsc_stop_timeout() to better reflect its purpose, add a doxygen\nblock, and improve log messages, comments, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcea72b29b82ca43826397c588efa8b07d88656b", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "Refactor: controller: pair crm_next_same_xml() with first_named_child()\n\nIt doesn't matter since this is internally generated XML with no comments,\nbut it's good for consistency and resiliency.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6c6f17054628c5621ddd09cd8ec059d8924d764", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_FAIL_TIMEOUT string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e23a32c304c56af70acf4baac7751621a804418a", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "API: libcrmcommon: add PCMK_META_FAILURE_TIMEOUT string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef1ca27f836c6c5d5dad6c15a84d4b00a1acbaa3", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "API: libcrmcommon: deprecate XML_RSC_ATTR_FAIL_STICKINESS string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e7d22aebb09aeb8948ece9ce4d5d475503253d5", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "API: libcrmcommon: add PCMK_META_MIGRATION_THRESHOLD string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f48e4cb4eca337c9f2673bff2a76c4c7c3d9e1e", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "Doc: Pacemaker Explained: separate Resource Operations into own chapter\n\nThe Resources chapter was overlong, and operations are a new topic", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7f9a9aae0397229abed0af1efc90cdd871dc395", "commit_date": "2023-08-02T14:55:26Z", "commit_message": "Doc: xml: remove duplicate line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96a7e08e196dadc9863cb7b4be2ded7329d401f0", "commit_date": "2023-08-02T14:33:18Z", "commit_message": "Merge pull request #3174 from kgaillot/best-practices\n\nMove enum action_fail_response to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2b06425f3f82d63a0e1edc00e8fc74e1ca2cae4", "commit_date": "2023-08-01T14:16:59Z", "commit_message": "Merge pull request #3162 from clumens/crm_node-fo\n\nConvert crm_node to formatted output", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7f7317a142ded8a00f023a16ac9e0987a2544ed", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "API: schemas: Add a new schema for crm_node.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a85a7f9e1ac9fd94f329680ecc8db7d9b181a5a0", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Refactor: tools: Simplify run_controller_mainloop a bit.\n\nNow that it's only being called in one way, we can get rid of the\nargument passing and conditionals based on those arguments.\n\nFixes T570", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cc11bb6bed594e9072fe7200d831af63e47998f", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Feature: tools: Convert crm_node -l/-p to formatted output.\n\nI'd like to remove all the run_controller_mainloop stuff, but replacing\nit with pcmk__list_nodes means querying the CIB instead of the\ncontroller and that might return different results.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a27f099230856883cafda83cd381986123da37f4", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Feature: tools: Convert crm_node -i to formatted output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed592d9a832e18b2e50d854bb147a44de6801948", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Feature: tools: Convert crm_node -q to use formatted output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c03ee21db771360392bb721021b65109d0e9edac", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Feature: tools: Convert crm_node -n/-N to use formatted output.\n\nDespite some similarities between this formatted output message and\nothers, we're going to stick with our own messages here.  crm_node is\npretty specialized for using in scripts, while most other formatted\noutput messages in this area are a lot more verbose.  So we'll just go\nwith our own minimal messages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f883809d38cbdf2036ce5dbbdc29e9b8ad17590", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Feature: libcrmcommon: Bump feature set for crm_node formatted output", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be123ac144b30536480ad143d71d5d99c4b1834f", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Low: libpacemaker: Change the type of the node_id argument.\n\nWhere this is set, it's a uint32_t and not an int.  Change its\nreferences in va_arg calls and in its printf format specifier to match.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62f805e414fb2fce258614019e832cb65fef5339", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Feature: tools: Add formatted output skeleton to crm_node.\n\nNothing is using this for normal output yet, only for error handling.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba7f6d8f5bca8f30c8a868114a0a41be8d3a873d", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Refactor: tools: Remove a newline from the end of an error message.\n\nOne will get added when we print the error out after crm_node is done.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75e8f33a69eac9f73b15667f07904301cc904182", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Refactor: tools: Use g_set_error throughout crm_node.\n\nThis is in preparation for converting to formatted output.  Basically,\neverywhere we were calling fprintf for an error message and their\nreturning should be a call to g_set_error.  There are a couple other\nthings going on here:\n\n* I skipped the spot where we're printing out command line usage.  This\n  will get handled by formatted output code.\n\n* I removed a call to crm_err in a command line callback that seems\n  redundant, as well as replaced a call elsewhere.  This means these\n  won't be logged, but I'm not sure it's terribly important.\n\n* There were several spots in controller_event_cb where we returned an\n  error message but didn't set any particular error code.  I've changed\n  these to set exit_code to CRM_EX_PROTOCOL.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebd12e3281f9a686d2929704d98860149797a033", "commit_date": "2023-07-31T18:58:51Z", "commit_message": "Refactor: tools: Make error a static global variable in crm_node.c.\n\nIt's about to be used in a lot more places.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6f0e5de102c25aaf6d2fceaea67eab5a1f4e63e", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_demote in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bead24124bee3bb85257818763babe2ae66237d7", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_demote to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5a1a10d4f624fff265e5e3e85ca8b94cdb173c6", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_reset_remote in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed77b95c61c12f7be0b8eecfc6bb5943824c9344", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_reset_remote to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44f84033bd623012c8c9c1a9722d00380a4474c7", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_restart_container in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "968c8c2149e3c8258d9cdc313e72a8cc99599ebb", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_restart_container to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba99faf24f6a9de063f1994f8d9a9ffa8cd34183", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_fence in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7dc0f71bb546426bf4e9ae555c49b9fb4cf78e2f", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_fence_node to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1f0bfea9763385335525ad02d449fa9bfbd9d07", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_standby in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "132d4da318a59b2b5ec057c289118c8db2e9cb56", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_standby_node to action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2c436302cd76fbf58fa819ab208c14bf46ed7c9", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_stop in action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "63a0563b959d602799737bd57d87b1b9b81a13ee", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_stop to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28f515c21c77ff4d81708c464860d6ab7959e575", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_block in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b82abf2865c2f46eb7c36fa6d638dddaa1e7fe66", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_block to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c71610611bd1ad481815c514baff01aad253aae", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_migrate in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6109be2c962786dd419ee69cef52d8cf40e69ec", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_ban to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f6fd317331d407bcc2fb4ccde5a7c9a1f85970a", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_recover in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc9af2192684376f71a7860facb0d0e5943a04b3", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_restart to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa730be1d20c3f67a0b37241b4c9c21659eb89ae", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: deprecate action_fail_ignore in enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74e157840a81923b391a9a540ea052a28eb1b743", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libcrmcommon: add pcmk_on_fail_ignore to enum action_fail_response", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "218a7a8f3bffcf98db4d4112a54143f23daddcc1", "commit_date": "2023-07-31T16:48:08Z", "commit_message": "API: libpe_status,libpe_rules,libcrmcommon: move enum action_fail_response to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9dfcecf124c8de093a5ffa8f0b1fd00e4a48a6d3", "commit_date": "2023-07-31T16:47:21Z", "commit_message": "Merge pull request #3173 from kgaillot/best-practices\n\nMove enum action_tasks to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d250737d1995caa77234cf421e50375be715437e", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate stonith_node in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ceaaec06998c1e55df0aef69a8160c20f262514f", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_fence to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dee83b0e6f2fb14988c0945833920b6b4bfc3e52", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate shutdown_crm in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cded3384ee248ec774b94e126c7289325c8f4e8", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_shutdown to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24dd666287c55dc639249ae9c4b2ecf25e496e13", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate action_demoted in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcb9c977172e78b9acdd961bfa73a36cd2ef8ae5", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_demoted to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da6596e586a1b94e3cc3222f0ff72b289650510e", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate action_demote in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb4f06df23a28afa327d941efcf60d59cae40ecc", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_demote to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c79ab07bad8debc0ec525920053df86c2a40e3b", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate action_promoted in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2066a33b46078c922f094da3b2f1ac1ed2dddab1", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_promoted to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7dd0108e528f5dac1bd073ac40de1e2eefa37d2a", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate action_promote in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5718533ee36549685ce2f60e5557a3db469f7189", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_promote to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de7aef75b12ba75e47ea036e8acae0ce4aa2e63b", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate action_notified in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76c5590fcbb846a126d4389a29ccea11332437bc", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_notified to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f52dd7281d0a4cde75e44e61da562f43ed951273", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate action_notify in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "832fb8d2d4c4e4ab905c3cf70d793345b231f5b3", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_notify to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feef9810f17dbfa45d3db9fda98a65cbd2e0a855", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate started_rsc in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3be47fbac3e9422eec37427ab9a01823052dc8fc", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_started to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6d05f6f12146c969eb7345e7eb97a23ca186113", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate start_rsc in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70b3bb02185d7d1143251936b79bff3aee3a8264", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_start to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e849ec66e57692fab4df7f26340f16a24167f2a0", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate stopped_rsc in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9602e5e4dc3b7695ce2384e9d6485d763a9cdbf1", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_stopped to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74eeaeb042c105ae22481020a57e082644f60806", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate stop_rsc in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18286444d681c97d834d83fe6fe2c2bd2c995271", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_stop to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "595d742cd203100e3b66b6a4114fed2dce0a6fa8", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate monitor_rsc in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b09480a5a36f728e09be16362d40249afe7dcc7", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_monitor to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78cc4e3779024b6c44c8d29acb6fdac40f4e6267", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: deprecate no_action in enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee0d34670c3a036c2f00c590ffae61f01570eb96", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libcrmcommon: add pcmk_action_unspecified to enum action_tasks", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64327b258e99f9fdfb92befd5e8e0a3f65a5168f", "commit_date": "2023-07-31T14:33:21Z", "commit_message": "API: libpe_status,libpe_rules,libcrmcommon: move enum action_tasks to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "982f7b77dee58cf1a4b876efcd8b2e8ad02374e6", "commit_date": "2023-07-31T14:31:11Z", "commit_message": "Merge pull request #3172 from kgaillot/best-practices\n\nMove rsc_start_requirement to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cac59ffcbab5a591435a1cc002f1292244f2961", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libcrmcommon: deprecate rsc_req_stonith in enum rsc_start_requirement", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c9016a800a0a34fb129aef8c562473fec58a064", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libcrmcommon: add pcmk_requires_fencing to enum rsc_start_requirement", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d66d089feacbe9b13b9b5618dde20e6ac5c32b80", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libcrmcommon: deprecate rsc_req_quorum in enum rsc_start_requirement", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecb8d69aced6079c0208b17b82ec2be0c267a5ff", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libcrmcommon: add pcmk_requires_quorum to enum rsc_start_requirement", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "670cf3521b5318378f164496768164ed0e13795e", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libcrmcommon: deprecate rsc_req_nothing in enum rsc_start_requirement", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d9f7c4e6d707177913a85b0b892bcf513b673495", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libcrmcommon: add pcmk_requires_nothing to enum rsc_start_requirement", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed95428e0786fdeb50ae9a8622e38b736bd7ad6d", "commit_date": "2023-07-27T22:21:47Z", "commit_message": "API: libpe_status,libpe_rules,libcrmcommon: move enum rsc_start_requirement to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e34402e5a4f361e05a2ea2c5bb1d91e7b262e5de", "commit_date": "2023-07-27T21:59:44Z", "commit_message": "Merge pull request #3165 from kgaillot/best-practices\n\nDeprecate role string constants", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5de7c1863fed60d3b9c50f58ec5d0d7a4d4a81e2", "commit_date": "2023-07-26T20:57:44Z", "commit_message": "Merge pull request #3171 from kgaillot/purge\n\nFix: libcrmcommon: wait for reply from appropriate controller commands", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3e31da0016795397bfeacb2f3d76ecfe35cc1f67", "commit_date": "2023-07-26T19:40:54Z", "commit_message": "Fix: libcrmcommon: wait for reply from appropriate controller commands\n\nipc_controld.c:reply_expected() wrongly omitted PCMK__CONTROLD_CMD_NODES (which\nhasn't been a problem because crm_node uses a mainloop instead of sync dispatch\nfor that) and CRM_OP_RM_NODE_CACHE (which can be sent via\nipc_client.c:pcmk_ipc_purge_node()).\n\nBecause CRM_OP_RM_NODE_CACHE gets only an ack and no further replies, we now\nhave to be careful not to return true from the controller's dispatch()\nfunction, otherwise crm_node -R would wait forever for more data. That means\nwe have to check for whether any replies are expected, which means we have to\nincrement expected replies *before* sending a request (in case it's sync).\n\nRegression introduced in 2.0.5 by ae14fa4a\n\nFixes T681", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c4e1098d28efb887dde83dd5dcf8d604c346113", "commit_date": "2023-07-26T17:40:33Z", "commit_message": "Merge pull request #3169 from clumens/t601\n\nDisable sync points in certain circumstances.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84d0eb6a36eba091acd866e79f45cb89f7376115", "commit_date": "2023-07-26T16:15:12Z", "commit_message": "Low: daemons: Disable sync points in certain circumstances.\n\nThis only affects sync points on IPC messages containing multiple\nupdate messages, and only when those messages are received by an attrd\nthat does not support multiple update messages.  Hopefully, this is a\npretty small number of installations.\n\nIn these cases, right now we act like sync points are supported but they\nare not.  For local sync points, what happens is we iterate over each\nindividual update message.  Each update message will have a sync point\nattribute, and the server will send the ACK for each as it processes the\nmessage.  However, the client is only going to wait for the first ACK\nbefore continuing.  For all the other ACKs, there will not be a client\nlistening.\n\nCluster-wide sync points likely work the same way, though I have not\ntested it to be sure.  I don't see how they could work, at least.\n\nI don't see any way to actually handle these, so my \"fix\" here is to\nsimply disable support.  Log a message and remove the attributes from\nthe XML messages so the server doesn't try to do anything.\n\nFixes T601", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0ff4697b3cddb5af1996ca08bd16b35df398ad9", "commit_date": "2023-07-26T14:46:44Z", "commit_message": "Merge pull request #3170 from clumens/attrd-cts\n\nAdd a test case for the recent attrd_updater regression", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3ce272fbe554cdaf59d5c4d6751710a714edd541", "commit_date": "2023-07-26T13:27:18Z", "commit_message": "Tests: cts: Escape a pipe in an attrd log message regex.\n\nThis is a literal pipe in the log message, not a piece of regex syntax.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bf9a012cc67d6689a258d4b3d96c3b1a9a059f2", "commit_date": "2023-07-26T13:27:18Z", "commit_message": "Tests: cts: Add a test case for attrd_updater -U -d when creating an attr\n\nRef T682", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d50926bf3a4683bc0a96554d48b15d4081dd712c", "commit_date": "2023-07-24T16:30:49Z", "commit_message": "Merge pull request #3168 from clumens/cts-lab\n\nApply pylint fixes to the cts-lab script", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68dd1a798cd77b0ff4f2e9e3a9f4c11de6c8c2a9", "commit_date": "2023-07-24T15:16:52Z", "commit_message": "Refactor: cts: Fix a few more minor problems in cts-lab.in.\n\n* Add docstrings to a couple functions.\n\n* Add an encoding to \"with open()\".\n\n* Ignore invalid name warnings from pylint.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fe22b69bda510a893cb4588b8e8df2270b505dd", "commit_date": "2023-07-24T15:16:52Z", "commit_message": "Refactor: cts: Improve whitespace in cts-lab.in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04eb0701ef776118749c783b89c6649ed1c67f4c", "commit_date": "2023-07-24T15:16:51Z", "commit_message": "Refactor: cts: plural_s is always called with uppercase=True.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a3df758f069faaeab999c64ea6021838a11e944", "commit_date": "2023-07-24T15:16:34Z", "commit_message": "Refactor: cts: Fix some minor string-related things in cts-lab.in.\n\n* Put some extra spaces around the string substitution operator in a\n  couple places.\n\n* Use string substitution instead of adding where possible.\n\n* Use %r instead of calling repr().\n\n* Don't call str() on what's already a string.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "56b30cf055384f2a0c541b9224541811a9525031", "commit_date": "2023-07-21T14:59:16Z", "commit_message": "Refactor: cts: Rename variables to follow python naming.\n\nUnfortunately, LogFactory cannot be changed at this time because it's an\nimport from another module.  When we work on removing the factory\nclasses/objects, we can revisit this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0962b48c751d63986dd0c0f8826a8f3c7a034e0b", "commit_date": "2023-07-21T14:59:16Z", "commit_message": "Refactor: cts: Fix minor problems in cts-lab.in.\n\n* Change imports to each be on their own line.\n\n* Don't put multiple statements on a single line.\n\n* Get rid of unnecessary elif statements.\n\n* Remove an unnecessary semicolon.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db477b71d086369f3dd9c47268ebb2789a22eaf6", "commit_date": "2023-07-21T14:59:16Z", "commit_message": "Refactor: cts: Remove support for running from the source checkout.\n\nThis was removed elsewhere in the python module earlier, and I don't\nthink anyone is using it, so remove it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b510b602ec835cd267265b9f87cfc260058ba5", "commit_date": "2023-07-21T14:59:16Z", "commit_message": "Refactor: cts: Fix indentation problems in cts-lab.in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0dbec2c8dad7a166ccfa97b996372d5d73c297e1", "commit_date": "2023-07-19T16:43:24Z", "commit_message": "Merge pull request #3167 from waltdisgrace/bz-2106642\n\nFix: tools: Fix a bug in clone resource description display", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "770d417e28dc9527fec8b8a00caaba8825995454", "commit_date": "2023-07-19T14:51:29Z", "commit_message": "Fix: tools: Fix a bug in clone resource description display\n\nPreviously, descriptions of resources running on multiple\nnodes were displayed despite --full not being used (with pcs\nstatus) or --show-detail not being used (with crm_mon).\n\nFor example, clone resources running on multiple nodes were\naffected.\n\nNow, --full and --show-detail must be used in order for resource\ndescriptions to be displayed, regardless of the number of nodes\nthe resource is run on.\n\nsee bz: 2106642", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6257911c2959b5d6abdae20fa4ee2e479ba6694", "commit_date": "2023-07-19T14:41:46Z", "commit_message": "Merge pull request #3166 from HideoYamauchi/trac5339\n\nHigh: tools: The dampen parameter is disabled when setting values with attrd_updater.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebac530c815a62f7c3a1c24f64e9a530d9753dbe", "commit_date": "2023-07-19T09:21:07Z", "commit_message": "High: tools: The dampen parameter is disabled when setting values with attrd_updater.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "80874297418a581538774a2156442ee108219020", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_PROMOTED_LEGACY_S string constant\n\n... and use a new internal constant PCMK__ROLE_PROMOTED_LEGACY instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "856fcaca20cfca8849b227b78a48107b35759baf", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_UNPROMOTED_LEGACY_S string constant\n\n... and use a new internal constant PCMK__ROLE_UNPROMOTED_LEGACY instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7ae59d8194394be6ecfa4584e76cf75810f3b79", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_PROMOTED_S string constant\n\n... and use a new internal constant PCMK__ROLE_PROMOTED instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "954b7201a231e90dada4feee2240d9534e3f3652", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_UNPROMOTED_S string constant\n\n... and use a new internal constant PCMK__ROLE_UNPROMOTED instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a14276e8a6895d3986841b281abf748c21e2ce99", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_STARTED_S string constant\n\n... and use a new internal constant PCMK__ROLE_STARTED instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70380a608b71b04451dffe622af376c9c16ec487", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_STOPPED_S string constant\n\n... and use a new internal constant PCMK__ROLE_STOPPED instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "51fc0d29a033cbc4417f47109ca2240647213cdd", "commit_date": "2023-07-18T21:17:35Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_UNKNOWN_S\n\n... and use a new internal constant PCMK__ROLE_UNKNOWN instead", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "351f4003fce015df5fc1b35000a74eadf33e8da5", "commit_date": "2023-07-17T20:14:25Z", "commit_message": "API: libpe_status,libpe_rules: deprecate RSC_ROLE_MAX", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2089a4c168bf4b9b56750b7347719025905f3603", "commit_date": "2023-07-17T20:14:25Z", "commit_message": "Refactor: scheduler: drop assertions in role2text()\n\nThey aren't that helpful, and this lets us deprecate RSC_ROLE_MAX", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f323fb0a9009924e2fa6861977420ddc5c4ea0c", "commit_date": "2023-07-17T20:14:11Z", "commit_message": "Merge pull request #3164 from kgaillot/best-practices\n\nMove enum rsc_role_e to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06e8438187ad64975fc8b8523e195c99253357af", "commit_date": "2023-07-17T18:25:56Z", "commit_message": "API: libcrmcommon: deprecate RSC_ROLE_PROMOTED in enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84dcd1ce10c54cf6d3f158f51e18a56f43e8ec44", "commit_date": "2023-07-17T18:25:56Z", "commit_message": "API: libcrmcommon: add pcmk_role_promoted to enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13ca61379384ad64279096455554defa1d859222", "commit_date": "2023-07-17T18:25:19Z", "commit_message": "API: libcrmcommon: deprecate RSC_ROLE_UNPROMOTED", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10b202c665e1645592685d99542feb53f9419bd9", "commit_date": "2023-07-17T18:25:18Z", "commit_message": "API: libcrmcommon: add pcmk_role_unpromoted to enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c8167f8939a5b564b94c1168f7b00fedd895d7b6", "commit_date": "2023-07-17T18:24:46Z", "commit_message": "API: libcrmcommon: deprecate RSC_ROLE_STARTED in enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7b1e7363e01268f6507e4c5c1a08755a9847494", "commit_date": "2023-07-17T18:24:46Z", "commit_message": "API: libcrmcommon: add pcmk_role_started to enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e435bb755adea50123a32b97b5adfce269a0af5", "commit_date": "2023-07-17T18:24:27Z", "commit_message": "API: libcrmcommon: deprecate RSC_ROLE_STOPPED in enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91444a18efbc0d311d28cf3bc67cf6bae5bc6458", "commit_date": "2023-07-17T18:24:26Z", "commit_message": "API: libcrmcommon: add pcmk_role_stopped to enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fa4ccefd80be229f9d6c814bfce5143030723d3", "commit_date": "2023-07-17T18:23:52Z", "commit_message": "API: libcrmcommon: deprecate RSC_ROLE_UNKNOWN in enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73d0b99430517872c80efeab39eb376827491616", "commit_date": "2023-07-17T18:23:51Z", "commit_message": "API: libcrmcommon: add pcmk_role_unknown to enum rsc_role_e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "56db63f4fb096fa34a9953f92e4eb8eae757dd91", "commit_date": "2023-07-17T18:22:58Z", "commit_message": "API: libpe_status,libpe_rules,libcrmcommon: move enum rsc_role_e to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd937e99cb0b6cec098b917b29ff855252d6b85b", "commit_date": "2023-07-17T17:12:26Z", "commit_message": "Merge pull request #3163 from clumens/cts-misc\n\nCTS miscellaneous", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16382b365bcb04854d4a83a596a74f561c00fba9", "commit_date": "2023-07-17T17:06:13Z", "commit_message": "Merge pull request #3161 from kgaillot/logging\n\nFix XML logging regression", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b150f0cc7f9d2dca05647fff02b61a1b44625d9e", "commit_date": "2023-07-17T14:31:49Z", "commit_message": "API: libcrmcommon: deprecate pcmk_log_xml_impl()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04b8cf3b75fb1d85f842a1e704e5a31928c3ca2c", "commit_date": "2023-07-17T14:31:49Z", "commit_message": "Log: libcrmcommon: fix regression in XML logging\n\n213961c55 (in 2.1.6) broke filtered XML logging (such as crm_log_xml_trace()).\nEven though the XML logging macros used proper filtering, switching\npcmk_log_xml_impl() to use a logger output object meant that the object's\nmethod implementations filtered again using their own location.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ead9ca0df344f4eb839c2fb963668baf098fc9a", "commit_date": "2023-07-17T14:31:49Z", "commit_message": "API: libcrmcommon: add pcmk_log_xml_as()\n\nThis is not meant to be used directly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99ae23b54be5e49445b56faa7bad86d40a81a551", "commit_date": "2023-07-17T14:31:48Z", "commit_message": "Refactor: libcrmcommon: allow setting filters for logger output objects\n\nWith the usual logging functions, filters (PCMK_trace_functions etc.) operate\nbased on the caller's file, function, and line number. However, with logger\noutput objects, there was previously no way to set those, so the logger method\nimplementation itself would always be used for filtering.\n\nA new internal API pcmk__output_set_log_filter() allows setting the file,\nfunction, line number, and tags that will be used to filter logger\noutput object messages.\n\nlibqb logging functions are called directly to accomplish this, which as a\nside effect allows us to use variadic arguments directly rather than allocate a\nseparate buffer in some cases.\n\nAs of this commit, nothing uses the new API yet.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67e7222950e9fe117c4ec583e4c95cd01c5f047f", "commit_date": "2023-07-17T14:22:09Z", "commit_message": "Build: Support running pylint on cts-related scripts.\n\nNote that this only handles things in the cts/ directory, and not any\npython scripts in any subdirectories.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b6632a0c6a5a80ffb24da6285b1ca99abc851b06", "commit_date": "2023-07-17T14:22:09Z", "commit_message": "Build: Move cts.in to the cts/ directory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c35ee27ea47af94b70e210e954e1b45f68d615d", "commit_date": "2023-07-17T14:22:08Z", "commit_message": "Build: Move cluster_test.in to the cts/ directory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "712cd62b56054aac3dca217cbd5c33f77eb41e7a", "commit_date": "2023-07-17T14:21:54Z", "commit_message": "Build: Move cts-log-watcher.in to the cts/ directory.\n\nActually, from looking at .gitignore, it looks like it lived there at\nsome point in the past.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13bf0395249b27c98e0a853ce80514006a6d9e9f", "commit_date": "2023-07-17T14:21:43Z", "commit_message": "Build: Move CTSLab.py.in into the cts/ directory.\n\nAnd rename it to cts-lab.  Then, fix up a bunch of references to the old\nname.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a558a973e31470fdbdfc5cb23cafa274ea7b986", "commit_date": "2023-07-17T14:21:42Z", "commit_message": "Refactor: cts: Remove OCFIPraTest.\n\nThis hasn't seen any significant updates in a very long time, so it is\nunlikely it works.  We've also never used it ourselves, nor heard from\nanyone that's using it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46d1f9f194b559cf98de282efcf3769b786ce235", "commit_date": "2023-07-13T14:18:10Z", "commit_message": "Merge pull request #3160 from kgaillot/actions\n\nSeparate action-related libcrmcommon APIs into own header files", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53314d868ae6fe9222d71d6fba6b4b11374d6168", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "Refactor: libcrmcommon: separate action-related internal APIs into own header", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6283eb5a4aa49000bd9fe11460062954eef81164", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "Refactor: libcrmcommon: separate action-related public APIs into own header", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6467254da4e17d70f3e2cfa76dd71edb6ec30e1", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "Refactor: liblrmd: separate events API into own header file\n\nThis will help avoid circular includes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "daf9b727a21cf0328f9d0cf5f4908086a53d0831", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "API: libcrmcommon: deprecate crm_action_str()\n\nReplace internal uses with a new internal API pcmk__readable_action()\n(which is properly case-sensitive)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10e95652686e7baa5943f6e602428492f78ef80e", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "Refactor: libcrmcommon: rename operations.c to actions.c\n\n... for more consistent terminology", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8dc4b2f79d2fc86471759b8a682f6fc7af407e1", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "API: libcrmcommon: deprecate CRMD_METADATA_CALL_TIMEOUT defined constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0276387a613967007582e3ca112bf9fcd0b3e2b", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "API: libcrmcommon: add (and deprecate) PCMK_DEFAULT_METADATA_TIMEOUT_MS defined constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62391286caf852d3e42e0d7a54cc6ee08b168361", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "API: libcrmcommon: deprecate CRM_DEFAULT_OP_TIMEOUT_S string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97c4bfa72867e3c34a266a3726201ca5aac4141c", "commit_date": "2023-07-12T22:02:40Z", "commit_message": "API: libcrmcommon: add PCMK_DEFAULT_ACTION_TIMEOUT_MS defined constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cda24a210312826331a6b521864d9e766c2731ec", "commit_date": "2023-07-12T22:01:04Z", "commit_message": "Merge pull request #3152 from kgaillot/actions\n\nRename (and use) string constants for action names", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c395457adc5c428999d0b4ed544a400e372ec952", "commit_date": "2023-07-12T21:41:21Z", "commit_message": "Merge pull request #3159 from clumens/build-rpm\n\nLow: build: No longer try to package the cts python directory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1fdea4349d8a8b5e4b4a18fa7c08e8ac4917f9a0", "commit_date": "2023-07-12T20:33:45Z", "commit_message": "Low: build: No longer try to package the cts python directory.\n\nThat directory doesn't exist anymore following moving the last file into\n_cts instead.  Additionally, we no longer need to byte compile anything\nin pacemaker/tests/ since nothing in there is an importable module.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "814e23ba45cb80e93c9629faca73d5670365d3d8", "commit_date": "2023-07-12T14:31:08Z", "commit_message": "Merge pull request #3158 from clumens/cts-cm\n\nMove crm_corosync to the _cts module", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efa098cc62f55178114b2e9c84f155db87b3ea04", "commit_date": "2023-07-12T14:29:32Z", "commit_message": "Refactor: python: Add docstrings to cmcorosync.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9331bfb7044d576639c5b08d4e801bf52a3d8806", "commit_date": "2023-07-12T14:16:02Z", "commit_message": "Refactor: python: Disable a pylint warning we can't do anything about.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01a7470f41e444db34728a032c0cb1d77df15ab3", "commit_date": "2023-07-12T14:16:02Z", "commit_message": "Refactor: python: Reformat how component lists are built.\n\nThe previous formatting was kind of ugly in my opinion, so change it\naround to be a little easier to follow.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "541e42da3a174ab2615b1ee640b42a67e02ddcfd", "commit_date": "2023-07-12T14:16:02Z", "commit_message": "Refactor: python: Remove the name argument to Corosync2.\n\nThis wasn't actually getting set anywhere useful anyway.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a961a69cdb21bd0607b3109388ecde004e338e48", "commit_date": "2023-07-12T14:16:02Z", "commit_message": "Refactor: python: Rename fullcomplist to be private.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17ec4487d4569f18499344335304947fc4967cdd", "commit_date": "2023-07-12T14:16:02Z", "commit_message": "Refactor: python: Simplify list traversals in cmcorosync.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99a3e9cfe2c0b993826a19008509756e0eb5587a", "commit_date": "2023-07-12T14:16:02Z", "commit_message": "Refactor: cts,python: Move crm_corosync to the _cts module.\n\nAlso, rename it to Corosync2 and get rid of the unnecessary __init__\nmodule in cts/lab.  All that's left in that directory now is scripts, no\nmore library parts.\n\nFixes T588", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffc6ee94492faf2a9ed93469c5c592b7436f5602", "commit_date": "2023-07-12T14:06:54Z", "commit_message": "Merge pull request #3157 from clumens/unittests\n\nLow: python: Add tests/__init__.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "848eabc6ae05de3088616f9b6322ee54a7ef04e0", "commit_date": "2023-07-12T14:05:44Z", "commit_message": "Merge pull request #3155 from clumens/cts-ClusterManager\n\nMove ClusterManager into the _cts module", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48902e4601019316e7199853bffc640a485f952c", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "Low: libpe_status: compare action names case-sensitively\n\n... and use a constant where we should", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "609ca4fedf9d2a8e16d24dd81b435565170071a5", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_CLEAR_FAILCOUNT string constant\n\n... and use it everywhere instead of CRM_OP_CLEAR_FAILCOUNT (where referring to\nan action name, and not a controller message type)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a469d54bfbc2ece8f0d55752be00cd140741db3d", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_LRM_DELETE string constant\n\n... and use it everywhere instead of CRM_OP_LRM_DELETE (where referring to an\naction name, and not a controller message type)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8b1e5d4fc4a9c8eba9d120459fbebd0f9840af6", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: deprecate CRM_OP_RELAXED_SET string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88f53154af786498d0c02348e7d11c537469aba9", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_ONE_OR_MORE string constant\n\n... and use it everywhere instead of CRM_OP_RELAXED_SET", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "895772d485deb3102ed914736b5254da6f1c6c01", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: deprecate CRM_OP_RELAXED_CLONE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f38968c7ee6f45aa0b3cc3990a683142a167cf9", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_CLONE_ONE_OR_MORE string constant\n\n... and use it everywhere instead of CRM_OP_RELAXED_CLONE", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07c44b5e6a2c10dc6ed190d19040ab444acb6cd8", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_LOAD_STOPPED string constant\n\n... and use it everywhere instead of LOAD_STOPPED", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a25c533c327306977612aaece164de87a9015675", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_MAINTENANCE_NODES string constant\n\n... and use it everywhere instead of CRM_OP_MAINTENANCE_NODES (where referring\nto an action name, and not a controller message type)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "09c947ea2fa691a2594cf14b49a315129a34d26d", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: deprecate CRM_OP_FENCE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab08b375b2d584627ef4ed63b9dee1d3bad05aa1", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_STONITH string constant\n\n... and use it everywhere instead of CRM_OP_FENCE (where referring to an\naction name, and not a controller message type)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ebc4ed5addbdbab18ba6b324a1f9a5273f9edf5", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_DO_SHUTDOWN string constant\n\n... and use it everywhere instead of CRM_OP_SHUTDOWN (where referring to an\naction name, and not a controller message type)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ada965ae5340145ef9670eb87882057abb188db0", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_REBOOT string constant\n\n... and use it everywhere instead of (where referring to a fencing action name)\nthe string literal \"reboot\".\n\nNote: Since the \"poweroff\" fence action is deprecated, I am not bothering to\nadd a constant for it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81cab92ad17e72165556503daa0d24e3c402ca32", "commit_date": "2023-07-12T13:58:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_ON string constant\n\n... and use it everywhere instead of (where referring to a fencing action name)\nthe string literal \"on\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ddd843fff9927f2ffaa7a184dcfe36e1114e81dc", "commit_date": "2023-07-12T13:51:03Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_OFF string constant\n\n... and use it everywhere instead of (where referring to a fencing action name)\nthe string literal \"off\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79edb8364e1a455cebf457c871b54119835ed0a2", "commit_date": "2023-07-12T13:50:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_STATUS string constant\n\n... and use it everywhere instead of (where referring to a fencing action name)\nthe string literal \"status\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e86d878bab78648ad126870f56b51ca0015ca9b6", "commit_date": "2023-07-12T13:50:19Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_LIST string constant\n\n... and use it instead of \"list\" where referring to a fencing action", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "032c406f429a685252012832d33be3e5e4378a64", "commit_date": "2023-07-12T13:50:19Z", "commit_message": "API: libcrmcommon: deprecate RSC_NOTIFIED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f62bbdb8fd1cd28b73d3eac154002130541a7cd4", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_NOTIFIED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1442f2c8f7d5ffd1c6011ee55d3ec55a74e5c2d8", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_NOTIFIED string constant\n\n... and use it everywhere instead of CRMD_ACTION_NOTIFIED, RSC_NOTIFIED,\nor (where referring to an action name) the string literal \"notified\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b820258406a04d3171dce0289ef5580d78c085f", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate RSC_DEMOTED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d06b6736a9b9f8e193c669159c37e25e681c547b", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_DEMOTED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e6994d3cb414f62a499ef9d1ea3ee97590215ca", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_DEMOTED string constant\n\n... and use it everywhere instead of CRMD_ACTION_DEMOTED, RSC_DEMOTED,\nor (where referring to an action name) the string literal \"demoted\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "940c0a7b86c34fbe6e62ac22c019c871e3ce607d", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate RSC_PROMOTED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fff16aee28425a16258113bcab6d0599fc863ea6", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_PROMOTED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0180d443c34be4e18a910629dc0c4cf0c65eac88", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_PROMOTED string constant\n\n... and use it everywhere instead of CRMD_ACTION_PROMOTED, RSC_PROMOTED,\nor (where referring to an action name) the string literal \"promoted\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b6a987cdac47bea40bab7f1e13775601df286bcc", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate RSC_STOPPED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "463b04da46651e9273b8697734d1bc5d55c2a7b3", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_STOPPED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6b929ca0f4849604ca82cef6491372e831b416a", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_STOPPED string constant\n\n... and use it everywhere instead of CRMD_ACTION_STOPPED, RSC_STOPPED,\nor (where referring to an action name) the string literal \"stopped\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b66d53357f0d98b42fe3909d1e3cf263eff7f3d2", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate RSC_STARTED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "689ef7bea67c7c2d43121339dff2dd2353f42fd7", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_STARTED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fd0f6a3e7fdacab6383caf03da8cf02f22bf09b", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_RUNNING string constant\n\n... and use it everywhere instead of CRMD_ACTION_STARTED, RSC_STARTED,\nor (where referring to an action name) the string literal \"running\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "961968a95955fa9db10f317641f667e9b13902cd", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate RSC_MIGRATED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8864a366199ebf771e136d1d173d88f490d7f450", "commit_date": "2023-07-12T13:49:15Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_MIGRATED string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef5f7ec3bf6a4d0bea3dcf9cdedc21d9d79bfcd9", "commit_date": "2023-07-12T13:49:14Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_MIGRATE_FROM string constant\n\n... and use it everywhere instead of CRMD_ACTION_MIGRATED, RSC_MIGRATED,\nor (where referring to an action name) the string literal \"migrate_from\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15c2d95888ea3b81a3845e7efa763d23105d6c1c", "commit_date": "2023-07-12T13:48:53Z", "commit_message": "API: libcrmcommon: deprecate RSC_MIGRATE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc5e07bc840b29e926ecca1cbf8ec7bc99444ab0", "commit_date": "2023-07-12T13:48:53Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_MIGRATE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e73051f68cd0daf7dfd4eae2edd00454b992827", "commit_date": "2023-07-12T13:48:53Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_MIGRATE_TO string constant\n\n... and use it everywhere instead of CRMD_ACTION_MIGRATE, RSC_MIGRATE,\nor (where referring to an action name) the string literal \"migrate_to\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9bbc7ed72ec6f294f291166d7d0672f0d6b5dc50", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: deprecate RSC_CANCEL string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c383e1757250025466baa902dce23776e72bdb7d", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_CANCEL string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4857fa3fb3e8c0769cbad0981c546523d45d78b4", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_CANCEL string constant\n\n... and use it everywhere instead of CRMD_ACTION_CANCEL, RSC_CANCEL,\nor (where referring to an action name) the string literal \"cancel\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0952afa5438b598ce3848f2885a13f333805d96e", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: deprecate RSC_DELETE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff64cdf754e2de7abe46cd5aa50dc22ece6b01e3", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_DELETE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a39cf65e194c09b942369e227b9afc6fcd76628a", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_DELETE string constant\n\n... and use it everywhere instead of CRMD_ACTION_DELETE, RSC_DELETE,\nor (where referring to an action name) the string literal \"delete\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e89254f0cac548df6f62a8b1dc1cf1f4bf70d77", "commit_date": "2023-07-12T13:46:06Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_VALIDATE_ALL string constant\n\n... and use it everywhere instead of the string literal \"validate-all\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c43e0ac1c4efbdc8dcafd5a04a77a8642f3ea7e7", "commit_date": "2023-07-12T13:46:05Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_RELOAD_AGENT string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "747a104644dff6523c86e56de75617b29e238e5e", "commit_date": "2023-07-12T13:45:37Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_RELOAD_AGENT string constant\n\n... and use it everywhere instead of CRMD_ACTION_RELOAD_AGENT.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca1450f055be8280aff426f9f820530d7f616937", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_RELOAD string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2905478c0792d8d4ced25d044801b337eacae1c6", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_RELOAD string constant\n\n... and use it everywhere instead of CRMD_ACTION_RELOAD or (where referring to\nan action name) the string literal \"reload\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "851c4c6292815cf3857683b217bd9de3f9610a5b", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate RSC_PROMOTE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04251b6e6c5ca6b77401dda73991aff921f3f14d", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_PROMOTE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "790e60b31d915cb4ccccee597c8b52901a5da70a", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_PROMOTE string constant\n\n... and use it everywhere instead of CRMD_ACTION_PROMOTE, RSC_PROMOTE,\nor (where referring to an action name) the string literal \"promote\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3aaace421391ff447e96bf841c5dd15232fe05c6", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate RSC_NOTIFY string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6418d3635a380b9510de471506762bd51f99dd7e", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_NOTIFY string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53dab2fb346d9df66618abdcbca2744870ec7f03", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_NOTIFY string constant\n\n... and use it everywhere instead of CRMD_ACTION_NOTIFY, RSC_NOTIFY,\nor (where referring to an action name) the string literal \"notify\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f3a0dc4911edb05ae3b734cd18b700d3e0d310b", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate RSC_DEMOTE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "506c3d9af0ccebf4c001ce903c5e51196fa3f22c", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_DEMOTE string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61fda27e3b3e68dc35aa40dc7dc4788b52c5228d", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_DEMOTE string constant\n\n... and use it everywhere instead of CRMD_ACTION_DEMOTE, RSC_DEMOTE,\nor (where referring to an action name) the string literal \"demote\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d75cea5362dbfb2504964ec16df7616a6adf2c51", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate RSC_METADATA string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dda7156ea0a5da83691a8a8895cd713ef4dbbb1c", "commit_date": "2023-07-12T13:40:57Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_METADATA string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27c7fd00e397ba870337ada2a50c0a90cbc6c3e1", "commit_date": "2023-07-12T13:40:53Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_META_DATA string constant\n\n... and use it everywhere instead of CRMD_ACTION_METADATA, RSC_METADATA,\nor (where referring to an action name) the string literal \"meta-data\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5d60a5d42a63caad4735f385ccac3dcee7250a1", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: deprecate RSC_STATUS string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7cad280def79970d0bdeb99c289c770c4993a116", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_STATUS string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "602c4b4068b99da94e051f74fe2eb5e7ef9ba593", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_MONITOR string constant\n\n... and use it everywhere instead of CRMD_ACTION_STATUS, RSC_STATUS,\nor (where referring to an action name) the string literal \"monitor\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03e83fdb01b29e637629a82855945ae44877442b", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: deprecate RSC_STOP string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "effdc3c45c5400522db295e7a2f489c0c836c18f", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_STOP string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0cd684a68d2cafec380b00f60881544bef14dcb", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_STOP string constant\n\n... and use it everywhere instead of CRMD_ACTION_STOP, RSC_STOP,\nor (where referring to an action name) the string literal \"stop\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df9c32ea8ca3fd11037f8c4e264e35e8edd2fe01", "commit_date": "2023-07-06T20:53:30Z", "commit_message": "API: libcrmcommon: deprecate RSC_START string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "778bdd00afda3643b194ac8da7ec0dd383c765f6", "commit_date": "2023-07-06T20:53:29Z", "commit_message": "API: libcrmcommon: deprecate CRMD_ACTION_START string constant", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65840d9874d899e79dae83b8bc8fcaea24d8dcc5", "commit_date": "2023-07-06T20:53:29Z", "commit_message": "API: libcrmcommon: add PCMK_ACTION_START string constant\n\n... and use it everywhere instead of CRMD_ACTION_START, RSC_START,\nor (where referring to an action name) the string literal \"start\".", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ad3c014a8321f138a2da1934cbec2ebe65fa9c9", "commit_date": "2023-07-06T20:53:17Z", "commit_message": "Merge pull request #3151 from nrwahl2/nrwahl2-transactions\n\nUse a single cib__operation_t table for pacemaker-based and libcib", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be4441b0c661d7eca6b8454aa4d8739ae954c031", "commit_date": "2023-07-06T20:06:51Z", "commit_message": "Merge pull request #3135 from kgaillot/best-practices\n\nMove enum rsc_recovery_type to libcrmcommon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40c1849f3c52b8e0a21709741f16266b85571b8d", "commit_date": "2023-07-06T18:43:41Z", "commit_message": "Refactor: libcrmcommon: Check xml->doc != NULL in top-level functions\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f76f903f47599ed6aedfdc9a5da72487c6685060", "commit_date": "2023-07-06T18:43:41Z", "commit_message": "Refactor: based, libcib: Rename cib_operation_t to cib__operation_t\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "424090758dcdc21a14b0a8ede9fbf1e4e6d5542a", "commit_date": "2023-07-06T18:43:41Z", "commit_message": "Refactor: libcib: Rename enum cib_op_attr to cib__op_attr\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c46169f26bc5187770e5a4f40912b75cdcd2180f", "commit_date": "2023-07-06T18:43:41Z", "commit_message": "Refactor: based: Remove unnecessary includes from based_operation.c\n\nThe includes elsewhere could use updates, but it's especially simple\nright now in based_operation.c.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5273fddd4dab912d75f11325aa815ce7f33aa1c", "commit_date": "2023-07-06T18:43:41Z", "commit_message": "Refactor: based, libcib: Use a single cib_operation_t table\n\nNow all the cib_operation_t data that's shared between based and\ncib_file.c is in lib/cib/cib_ops.c, rather than duplicated.\npacemaker-based and CIB file clients have different CIB op functions,\nand the ones defined in pacemaker-based aren't visible to libcib. So\nunfortunately we must keep separate cib_op_fn_t tables in each.\n\npacemaker-based and cib_file.c each have a short op function getter\nwhose contents are identical but reference a different static array of\nfunctions. The array is indexed by the type member of a cib_operation_t\nobject.\n\nThe use of enum cib__op_type values as keys is not strictly necessary,\nbut it's less error-prone than ensuring the order remains consistent\nacross arrays. It also allows us to skip functions for operations that\naren't supported for CIB file clients, without losing clarity.\n\nWe now have a new shared cib__get_operation() function as well, which\nreplaces similarly named functions from based and libcib.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e94299f07350900df22b1fc0563b083b0c72a9a4", "commit_date": "2023-07-06T18:43:41Z", "commit_message": "Refactor: based: Rename based_common.c to based_operation.c\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e37e2b4bde883a1cca84ec20e3cdbef159a6a407", "commit_date": "2023-07-06T18:43:39Z", "commit_message": "Refactor: based, libcib: Drop cib_operation_t:prepare\n\nThe logic is simple enough to condense into a single prepare function in\nbased_callbacks.c. The existing prepare functions all returned pcmk_ok\nunconditionally.\n\ncib_prepare_none() is basically a special case of cib_prepare_data() --\nF_CIB_CALLDATA should not be set for requests that used\ncib_prepare_none(), and the processor functions shouldn't try to use it.\n\ncib_prepare_sync() is identical to cib_prepare_none().\n\ncib_prepare_diff() is used only for PCMK__CIB_REQUEST_APPLY_PATCH, so we\ncan check for cib__op_apply_patch directly.\n\nAlso drop extern declaration of cib_perform_command(), which does not\nexist.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b662bcb3ca32ecf22c5d20d2920ec8074e5da994", "commit_date": "2023-07-06T16:33:01Z", "commit_message": "Refactor: libcib: Rename cib_op_t to cib__op_fn_t\n\nWe have too many similar names.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba252c854cce8284d25a19bf1e500a34c4518760", "commit_date": "2023-07-06T16:33:01Z", "commit_message": "Refactor: based, libcib: New cib_operation_t:type member\n\nNothing uses this yet\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18fb777b3133b8a9751b3e95c4385bdf9028ab3d", "commit_date": "2023-07-06T16:33:01Z", "commit_message": "Refactor: libcib: New enum cib__op_type\n\nNothing uses this yet\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70488f85c92f8be370cb8ae771d1214ba90808b8", "commit_date": "2023-07-06T16:33:01Z", "commit_message": "Refactor: based, libcib: Drop cib_operation_t:cleanup\n\nIt doesn't do anything except free output if output isn't the live CIB,\nand dump core if something isn't NULL that should be.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4b2e9a19474289f5cb897ea448cf9f9564ce11d", "commit_date": "2023-07-06T16:33:01Z", "commit_message": "Refactor: based: Include glib.h and libxml/tree.h expicitly\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83418720c5de17775530714a02649a2de05c6120", "commit_date": "2023-07-06T16:32:15Z", "commit_message": "API: libcrmcommon: Deprecate getDocPtr()\n\nEvery XML node that Pacemaker creates is guaranteed to have a doc, so\nthis getter function is unnecessary. It will be removed in a future\nrelease.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1056296a8348590c927a67e9cc26ad34c8e140c6", "commit_date": "2023-07-06T16:30:54Z", "commit_message": "Refactor: libcrmcommon: Drop getDocPtr() from internal code\n\nOther than a few exceptions where a doc isn't needed, we create all new\nXML nodes via create_xml_node(). This ensures that the newly created\nnode has a doc. Therefore, we don't need a getter function that creates\nand assigns a doc not present.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98c2ed6e195ad753991c6c23d78a9dc0d63583e6", "commit_date": "2023-07-06T16:29:08Z", "commit_message": "Refactor: libpe_status: Drop redundant xmlNewChild()\n\nIt does the same thing as create_xml_node() with these arguments and\nwith parent != NULL.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c3a3254d843e40d05a8ad41af32cc38863e630b", "commit_date": "2023-07-06T16:29:06Z", "commit_message": "Refactor: libcrmcommon: Use xmlNewChild() in create_xml_node()\n\nThis is equivalent to creating a new node using the parent's doc and\nadding it as parent's child.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e39c27b86e265c447753d4fd4e404c79b4240db8", "commit_date": "2023-07-06T14:14:15Z", "commit_message": "Merge pull request #3137 from nrwahl2/nrwahl2-fixes\n\nFix: scheduler: Clone instances should not shuffle unnecessarily", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b561198c85bac0f80e3e436251a8adde84863160", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpacemaker: Use instance for trace tag in preferred_node()\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10401c1655d4886f7de0ab0c82fe729493ff5e0d", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Test: scheduler: Update outputs for promotable bundle colocation fix\n\nThe bundle-promoted-{,anti}colocation-{3..6} tests and the\ncancel-behind-moving-remote test are now fixed.\n\nThree other tests have score changes, in which the previous highest\npromotion score becomes INFINITY:\n* bundle-interleave-promote\n* bundle-interleave-start\n* remote-connection-shutdown\n\nRef T672\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d774d070fa526ceeb775ab08e1702b0b4c543779", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Fix: libpacemaker: Honor role-based colocations for bundles\n\nPreviously, colocations involving promotable bundles did not work\nreliably. They did not work at all if the bundle was the dependent.\n\nThe fix is multifaceted. First, the bundled resource and its instances\nnow receive the bundle's colocations after promotable role selection\nhas begun. (This was done in the previous commit.) They don't need the\nbundle's colocations during assignment -- only the bundle's replicas'\ncontainers are relevant at that point. However, a container can never be\npromoted, so we need to be able to check the role of the bundled\nresource running inside it, in order to determine the replica's \"role\".\n\nWe update pcmk__colocation_affects() and pcmk__apply_coloc_to_priority()\naccordingly. If a resource is a bundle replica container, we get the\nrole of the bundled resource instance running inside it, if any.\n\nPart of applying colocations to the dependent when the bundle is primary\nis choosing a compatible instance of the primary bundle. For\npromoted-bundle-with-promoted-bundle colocations, the dependent may be\nan instance of the bundled resource. If so, the dependent's location\nwill be a bundle node. We need to compare the bundle node's host, rather\nthan the bundle node itself, against the primary container's location.\n\nThis fixes the cancel-behind-moving-remote test that was temporarily\nbroken in the \"Don't shuffle clone instances unnecessarily\" commit.\n\nThere may be some opportunities to reuse some of the code from\npcmk__clone_assign() and/or pcmk__clone_apply_coloc_score() for the\nbundled clone. For a promotable bundle, after all, the bundled resource\nis a promotable clone. However, thus far it seems that the bundled\nresource assignment and roles are too tightly interwoven with the\nassignment of the bundle replica containers. Straightforward approaches\nto reuse clone code were unsuccessful. It seems that it would be too\ncomplicated unless we begin a larger overhaul of bundle code in\nlibpacemaker.\n\nI was particularly surprised that this didn't involve updating\npcmk__update_dependent_with_promotable() or\npcmk__update_promotable_dependent_priority() directly, or adding any new\ncalls to them... those might play a role in any future refactors.\n\nFixes T672\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "126930b03ea2efb9b2a30f319eb0600d680d24a1", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpacemaker: Bundle constraints can apply to bundled resource\n\nThis breaks tests by itself. It will be fixed in the next commit. I'm\nkeeping them separate to make review easier.\n\nRef T672\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8688ee9d68e44d16982c4a4f81a4eec8a8052fb9", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpe_status: New pe__clone_flag_is_set() function\n\nCheck for flags set by pe__set_clone_flag(). Based on\npe__group_flag_is_set().\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d05eb46bd8328a649da7c473deac7e4923318818", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Test: scheduler: Update outputs for primitive-with-promoted-bundle\n\nRef T672\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7649873a3ba3a3aa8d2d12a6fb109b3f2804e5a", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpacemaker: Fix some primitive-with-promoted-bundle colocs\n\nIf a node is a bundle node and the resource we're updating allowed nodes\nfor is a bundled resource, look up the colocation attribute on the\nbundle node's assigned host. Likewise if the node is a guest node and\nthe resource has container-attribute-target set to \"host\".\n\nFor guest nodes, this basically aligns with the existing specification\nof container-attribute-target.\n\nOnly the bundled resource can run on a bundle node. So if the bundled\nresource is involved in a colocation (for example, \"rscB with promoted\nbundled-rscA\"), then the colocation must be considered for the bundle\nnode's assigned host.\n\nRef T672\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b51084c0e62bcfde71722175832c43cf18143856", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpacemaker: Pass target_rsc to add_colocated_node_scores()\n\nNothing uses this yet.\n\nPass the resource on whose behalf we're updating the nodes table. We\nwill use this for attribute lookups.\n\nThe nodes argument is **almost** completely redundant now. It would be\nnice to drop it. As before, cmp_resources() complicates things. So does\nthe group implementation -- it updates only the last member for\ncmp_resources() (or the first member for other callers), and does not\nupdate the group itself. It seems hacky to add special handling in\ncmp_resources() for groups that's aware of the logic inside\npcmk__group_add_colocated_node_scores(). (Hard to say if that's hackier\nthan the current approach.)\n\nThe only elegant approach that comes to mind for dropping nodes is to:\n* make a recursive copy of the allowed nodes tables for resource1 and\n  resource2 in cmp_resources()\n* pass in the same resource as both source_rsc and target_rsc, so that\n  the resource's scratch node table is updated\n* return the node table we want as the return value of\n  add_colocated_node_scores(), so that we get the correct table for\n  groups without having to grab it explicitly from the last member in\n  the caller\n* save the returned table\n* restore the backed-up node tables\n\nHowever, it's wasteful to copy every descendant's node table just to\nsave the table from the last member of a group.\n\nRef T672\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5215359ad8f88ea6301a035d5566af810bbc3b98", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpacemaker: const colocation arg (add_colocated_node_scores)\n\nAnd various minor formatting/naming changes\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a76cc89644b2e40f28741fef1d1c727bd943c96e", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: various: New force_host arg for pe_node_attribute_calculated()\n\nWe'll use this soon for querying an attribute from a bundle node's host\nin colocations, regardless of whether XML_RSC_ATTR_TARGET is set to\n\"host\".\n\nAlso implement best practices: Rename to pe__, add doxygen, improve\nerror checking.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aabb9e659b5f1f17ec232c98a02d77e4eef44bde", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Test: scheduler: Update after fixing anticolocation roles\n\nThe previous commit fixed an issue in which anticolocations affected\nscores when the role did NOT match, rather than when the role DID match.\n\nRegarding the test changes: currently, bundle colocations apply only to\nthe bundle itself and to its containers. Bundle containers are not\npromotable. So, a colocation with role=Promoted will never match for a\nbundle container. For that reason, before the fix, colocations with\nrole=Promoted affected the bundle containers.\n\nNow that a colocation affects scores only when the resource role matches\nthe colocation role, the constraints in these tests no longer have an\neffect.\n\nRef T672\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1560e4752439d2c811685ed290d70c28eee67ba5", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Fix: libpacemaker: Anti-colocations affect scores when roles match\n\nCurrently, we skip an anti-colocation if the role specified in the\nconstraint for the dependent or primary resource doesn't match the\nactual next role of the dependent or primary resource. This is the\nopposite of the correct behavior. The anti-colocation should apply only\nif both the dependent's next role and the primary's next role match the\nspecified next role for each (if set) in the colocation.\n\nThis hasn't caused a problem in and of itself up to now. This is\nlikely because an earlier block handles promoted/unpromoted role\nconstraints when the dependent is already assigned, as is the case when\nchoosing roles for the dependent.\n\nRef T672\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b599fba23255714597e02d37cd615f02d7f13032", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Test: scheduler: Update outputs after dropping colocation code\n\nLots of scores change since we're adding to instances collective\ncolocations that we previously ignored.\n\nHowever, only one transition changes (promoted-probed-score). That one\nis fine. Everything begins in a Stopped state. The only differences are\ndue to AdminClone instances (which all the other resources depend on)\nbeing assigned to opposite nodes now. Both instances get promoted as\nthey did before. The resulting assignments are functionally identical.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2984222d466531207a95d245110d6b256ac63ff1", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Refactor: libpacemaker: Drop pcmk__add_collective_constraints()\n\nThis logic was added by commit 2be9cc39 as a way to avoid unnecessary\nshuffling of instances of clones that are involved in colocations. It\nhas grown a bit over time.\n\nHowever, our recent instance shuffling fix (for\nclone-recover-no-shuffle-{4..7} tests) made all of this obsolete. It's\nnow simpler to drop pcmk__add_collective_constraints() and\ncan_run_everywhere(), and to add parent constraints to instances\nindiscriminately. The code that applies colocations and adds dependent\ncolocated node scores can handle them, and the instance assignment code\nis more robust.\n\nNote that we drop the \"has influence\" check that was in\npcmk__add_collective_constraints(), but that gets checked later.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a58756f229144615ed2a8e4309f9f128d896c22", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Test: scheduler: Fix incorrect promotion scores in promoted-probed-score\n\nThe promotion score attribute names refer to the specific clone\ninstances rather than to the primitive (AdminDrbd):\n\n<nvpair\n id=\"status-hypatia-corosync.nevis.columbia.edu-promoted-AdminDrbd.0\"\n name=\"master-AdminDrbd:0\"\n value=\"5\"\n/>\n\n<nvpair\n id=\"status-orestes-corosync.nevis.columbia.edu-promoted-AdminDrbd.1\"\n name=\"master-AdminDrbd:1\"\n value=\"5\"\n/>\n\nAs a result, if each instance gets assigned to the other node (in this\ncase, if instance 0 gets assigned to orestes and instance 1 to hypatia),\neach instance's assigned node has no promotion score for it. The\ninstances cannot promote.\n\nCurrently, the scores change slightly, and the transition does not.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b950ced61a37effe399100b4a0b369e2a28575ce", "commit_date": "2023-07-06T08:10:27Z", "commit_message": "Test: scheduler: Update test outputs after clone instance shuffling fix\n\nThe following tests are now correct:\n* clone-recover-no-shuffle-4\n* clone-recover-no-shuffle-5\n* clone-recover-no-shuffle-6\n* clone-recover-no-shuffle-7\n\nScores for several other tests are changed in ways (usually duplicates\nfrom additional tentative assignments) that don't impact the resulting\ntransition.\n\nOne test (cancel-behind-moving-remote) technically breaks. Previously,\ndue to shuffling, ovn-dbs-bundle-1 moved to controller-0. Since\novndb_servers:1 gets promoted on ovn-dbs-bundle-1, controller-0 held the\npromoted instance of ovn-dbs-bundle.\n\nNow, since instances correctly prefer their current nodes,\novn-dbs-bundle-1 remains on controller-2. However, ovndb_servers:1 still\ngets promoted on ovn-dbs-bundle-1, so controller-2 holds the promoted\ninstance of ovn-dbs-bundle.\n\nip-172.17.1.87 is colocated with ovn-dbs-bundle's promoted role and is\nbanned from controller-2. As a result, ip-172.17.1.87 is now stopped.\n\nThis test is believed to have worked properly in the past due only to\nluck. At this point (see T672 and the bundle-promoted-*colocation-*\ntests), it's well-established that colocations involving promotable\nbundles don't work correctly.\n\nRef T489\nRef RHBZ#1931023\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "512556ebd82c060924e369eabf9dbb700b93e8e4", "commit_date": "2023-07-06T08:10:25Z", "commit_message": "Fix: libpacemaker: Don't shuffle clone instances unnecessarily\n\nCurrently, clone instances may be shuffled under certain conditions,\ncausing an unnecessary resource downtime when an instance is moved\naway from its current running node.\n\nFor example, this can happen when a stopped promotable instance is\nscheduled to promote and the stickiness is lower than the promotion\nscore (see the clone-recover-no-shuffle-7 test). Instance 0 gets\nassigned first and goes to the node that will be promoted. If instance 0\nis already running on some node, it must stop there before it can start\non the new node. Another instance may start in its place after it stops.\n\nThe fix is to assign an instance to its current node during the early\nassignment phase, if that node is going to receive any instance at all.\nIf the node will receive an instance, it should receive its current\ninstance.\n\nThe approach is described in detail in comments.\n\nPreviously, if instance 0 was running on node1 and got assigned to node2\nduring the early assignment phase (due to node2 having a higher score),\nwe backed out and immediately gave up on assigning instance 0 early.\n\nNow, we increment a \"number of instances reserved\" counter, as well as\nthe parent's counter of instances assigned to node2. We then try again\nto assign instance 0 to node1. If node2 already has the max allowed\nnumber of instances, then it will be marked unavailable for this round.\n\nFixes T489\nFixes RHBZ#1931023\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d3faea124cd09fb41dcc07819f3d5dd0bd99ba5", "commit_date": "2023-07-06T07:45:14Z", "commit_message": "Test: scheduler: Update tests after new stop_if_fail argument\n\nSome scores are repeated since we're able to back out of a failed early\nassignment now.\n\nOnly one test changes otherwise. bug-1822 has a score change from\n-INFINITY to 49. However, the partially active group is still not\nallowed to promote, which is the purpose of the test.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4554a4eae89ef61b59f6a87643716aec25f33a3d", "commit_date": "2023-07-06T07:45:12Z", "commit_message": "Refactor: libpacemaker: New stop_if_fail argument for assign() method\n\n...of resource_alloc_functions_t. This will allow us to do a fully\nreversible assignment.\n\nCurrently pcmk__unassign_resource() undoes everything assignment-related\nbut can't undo changes to roles and actions.\n\nNow, if stop_if_fail is true, the assign() method and\npcmk__assign_resource() behave as before.\n\nIf stop_if_fail is false and assignment succeeds, we can safely either\nconsider the assignment final or revert it via\npcmk__unassign_resource(). If assignment fails, the effect is as if we\nhad called pcmk__unassign_resource(); there are no side effects on next\nrole or actions.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b643c8a86ba1c6bb528b29f4a121c88c1446e9a", "commit_date": "2023-07-03T21:02:10Z", "commit_message": "Refactor: libpacemaker: Return chosen node from assign_instance()\n\nThe return type was changed to bool by commit 97f67da8. However, an\nupcoming commit will need the assigned-to node.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8eee259fdede1c606f3b76153253fa34618c4812", "commit_date": "2023-07-03T21:02:10Z", "commit_message": "Refactor: libpe_status: Copy count in pe__copy_node()\n\npe__copy_node() is supposed to make a shallow copy of a pe_node_t\nobject. That should include the count member. The caller is free to\nreset it to 0 if desired.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ce3818c8f2db188c283ab32428fb749f29c3de3d", "commit_date": "2023-07-03T21:02:10Z", "commit_message": "Refactor: libpacemaker: Functionize updating parent allowed node count\n\n...in pcmk_sched_instances.c:assign_instance(). We'll use this elsewhere\nin an upcoming commit.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "522bb9228e6d4863ecc4a6f26a99c88c0726b1bd", "commit_date": "2023-07-03T21:02:10Z", "commit_message": "Refactor: libpacemaker: Check whether instance already assigned\n\n...before early assignment, and skip if so.\n\nThis was turned into a CRM_CHECK() by commit 454d09e6. However, while\nworking on some other fixes, I hit the CRM_CHECK() in several tests.\nIt's safer to just check the pe_rsc_provisional flag. We can do this\noutside of assign_instance(), so that we don't call preferred_node().\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8339455a01720682fb76ec33cd3e9aaa67e21b34", "commit_date": "2023-07-03T15:42:56Z", "commit_message": "Merge pull request #3147 from clumens/cts-xml\n\nMove cib_xml into the _cts module", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "179765d28816f1ce28f53e3918122211910372b2", "commit_date": "2023-06-30T20:46:22Z", "commit_message": "Refactor: python: Use simpler tests to see if lists are empty.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6455fdf9c950aa2db0b2f9bfee92dc369957f4a5", "commit_date": "2023-06-30T16:47:20Z", "commit_message": "Refactor: python: Add docstrings to cibxml.py.\n\nAdditionally, rename several parameters from name to _id since that's\nwhat they actually are and to improve consistency.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64a695884de03b76e4df6d9253ad80bb5f206f12", "commit_date": "2023-06-30T16:20:58Z", "commit_message": "Refactor: python: Remove the CibBase class.\n\nThere's really no need for it to exist - the only subclass of it is\nXmlBase, which is what everything else derives from.  Therefore, move\nall its contents into XmlBase.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d77997aff7d8660ad2bd631444d355376ecc9da6", "commit_date": "2023-06-30T16:20:58Z", "commit_message": "Refactor: python: Libraries shouldn't call exit.\n\nRaise an exception instead.  This isn't being caught anywhere so it has\nthe same effect as an exit, except that we could catch it in the future\nif we wanted to.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9dff20d78e9e8dce55dcc408b1e44c139481b6f", "commit_date": "2023-06-30T16:20:58Z", "commit_message": "Low: python: No longer use a default section argument.\n\nPreviously when modifying the constraints section of the generated CIB,\nwe would not pass any section argument.  This would mean we'd default to\n\"all\", which is not a valid section as far as cibadmin is concerned.\n\nInstead, pass \"constraints\" for the section here.  This gets rid of the\nonly place where we were using the default, so it can be made into a\nrequired parameter.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66f20f735964a2860443d5223bda241651f09f14", "commit_date": "2023-06-30T16:20:58Z", "commit_message": "Refactor: python: Add helper functions for building XML.\n\nPull the for loops out into their own functions that build attribute\nstrings, and then wrap those in other functions that add the element\ntags.  This doesn't make for shorter code (especially not with the\ndocstrings), but I think it makes for easier to follow code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7cc7813b55227243b8f10afdd366c379ef184d9b", "commit_date": "2023-06-30T16:20:58Z", "commit_message": "Refactor: python: Rename most things in cibxml.py to be private.\n\nVery few of these functions or attributes are intended to be accessed\noutside of their classes, so rename them to match that fact.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da558d47b0e55af0c8b62834ecd97d92399cec70", "commit_date": "2023-06-30T12:21:52Z", "commit_message": "Refactor: python: Minor fixes.\n\n* Get rid of some unnecessary parens where we were constructing one\n  element tuples for string substitutions.\n\n* Remove XmlBase.__init__.  This function doesn't do anything aside from\n  call the superclass.\n\n* Don't inherit from object.\n\n* Use += where possible.\n\n* Use % for string substitutions instead of adding.\n\n* Don't rename the parameter to add_child in a subclass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0feaa27d10ba50d537e1a592b3b7c2fa609f119", "commit_date": "2023-06-30T12:21:52Z", "commit_message": "Refactor: python: Use items() to iterate over dicts.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c301b77b39ccc6273a4e0fad35f4258ba9f7cc6c", "commit_date": "2023-06-30T12:21:52Z", "commit_message": "Refactor: cts, python: Move cib_xml into the _cts module.\n\nNo code changes aside from changing the import line and adding __all__.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4688aa3230dd337b5e16b25ad5b9e938440d1b61", "commit_date": "2023-06-30T12:21:52Z", "commit_message": "Refactor: cts: Move CibBase from CIB.py to cib_xml.py.\n\nThis class is only ever used in cib_xml.py and gets rid of a set of\ncircular imports that makes refactoring these modules one at a time more\nof a pain.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7d5084173e00c01d997ec781606724e2de968941", "commit_date": "2023-06-29T21:24:03Z", "commit_message": "Merge pull request #3141 from kgaillot/group\n\nFix a group colocation issue", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5abb6160c8fc9bd2f33fc9536c27dc1089fb2115", "commit_date": "2023-06-29T19:43:24Z", "commit_message": "Refactor: scheduler: make some variables const that can be", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b24a4dd3a3470d33a68be26a05d700d77a913b72", "commit_date": "2023-06-29T19:43:24Z", "commit_message": "Low: scheduler: continue with non-sequential set members after error", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5e17c9e7d6f109d36627e3aeb2791e983e3aa69", "commit_date": "2023-06-29T19:43:24Z", "commit_message": "Log: scheduler: improve colocation unpacking messages (and comments)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55e381f5e37081d79355a7d06046bcc8ad575ac1", "commit_date": "2023-06-29T19:43:24Z", "commit_message": "Fix: CIB: be more strict about ignoring colocation elements without an ID\n\nCallers of pcmk__unpack_colocation() have more context about the element being\nunpacked, so the checks are done there.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c619c29a24a7574aeb721868930f6d003a8a145", "commit_date": "2023-06-29T17:25:30Z", "commit_message": "Merge pull request #3143 from nrwahl2/nrwahl2-clone_group_max\n\nFix: libpacemaker: Respect clone-node-max for cloned groups", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7b737856a92c03ae973b3b32986cfc4ae142900", "commit_date": "2023-06-29T16:46:39Z", "commit_message": "Merge pull request #3144 from clumens/cts-scenarios\n\nMove CTSscenarios.py into the _cts module", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e073a398b908a7fa5492a33dd99fb64a7e7c71f", "commit_date": "2023-06-29T15:04:34Z", "commit_message": "Test: scheduler: update test output for group colocation fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca6f2b7a297541d5c720f9f7db46f6d8546704df", "commit_date": "2023-06-29T15:04:34Z", "commit_message": "Fix: scheduler: consider explicit colocations with group members\n\nPreviously, a group's colocations would include only colocations explicitly\nwith the group itself, and with its first member (for \"group with\" colocations)\nor last member (for \"with group\" colocations). Explicit colocations with a\ndifferent group member could cause incorrect node assignment.\n\nFixes T679", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9bf2833ecc9cd26806cd93b68386f160e057a70", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Test: scheduler: add regression test for colocation with an inner group member\n\nAs of this commit, the behavior is incorrect.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65d419a988b393ffbdbba074cec2e01eeb54d0c8", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Refactor: scheduler: mark explicitly configured colocations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9c6939591c29d430e7734627d0de492fe4ecd45", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Log: scheduler: improve logs when unpacking colocation sets", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "47361fa87231ff5cefde79e50152c8c1e2d9797b", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Feature: CIB: deprecate \"ordering\" attribute of \"resource_set\"\n\nIt's undocumented, and makes sets even more confusing than they already are,\nespecially since it only applies when the score is positive.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18105943c51eebbd85c0690ed5185a035721d1e2", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Refactor: scheduler: simplify unpacking a colocation set (slightly)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "347575407f3461838d3e0f79c7e78271a557db93", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Refactor: scheduler: use bool for \"group ordering\" in colocation sets\n\n... for readability", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3f8aa6161db3d788d8eb3af03e0416e2e58dc47", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Refactor: scheduler: don't use macro for finding constraint resource\n\nIt obscured what was happening", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b46c8cdd16cb80ccf976ddab32acb32c7632906", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Refactor: scheduler: prefix all internal colocation IDs with \"#\"\n\n... to ensure they're easily distinguished from user-configured colocations\nin log messages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8e6776bf1b7038a4c2a619e36ec05877ba1f728", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Refactor: scheduler: use flag group instead of bool for colocation influence\n\n... so we can add more flags", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c812b3bcf2bf1906c2c7d41bbff5db26d29a33c", "commit_date": "2023-06-29T15:00:33Z", "commit_message": "Low: scheduler: improve error-checking when creating colocations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c22106e3fa3d3a4e26bf9b422ee1ab3cd0a0730", "commit_date": "2023-06-29T14:59:39Z", "commit_message": "Merge pull request #3142 from nrwahl2/nrwahl2-tmp\n\nMinor libpacemaker and libpe_status improvements", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cfebaf67c0a57c86de1bcbf6400ff04cef6808d5", "commit_date": "2023-06-29T03:08:22Z", "commit_message": "Test: scheduler: Update tests for cloned group clone-node-max fix\n\nRef T678\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "018ad6d5fd9f6ce1e8900346911a1ff4a2edaa7d", "commit_date": "2023-06-29T03:08:22Z", "commit_message": "Fix: libpacemaker: Respect clone-node-max for cloned groups\n\nCurrently, cloned groups may have more than clone-node-max instances\nassigned to a given node. This can happen when a location constraint\nexists for the clone.\n\nFor example, consider the case of the clone-recover-no-shuffle-5 test.\nThe cloned group prefers node1 with a score of 100. The location score\nis applied only to a group's first member.\n\nSo in the early assignment attempt (within pcmk__assign_instances()), we\ntry to assign each instance (group) to its current node. However, the\nfirst member prefers a different node (node1) and gets assigned there\ninstead. The second member has to follow the first due to the group's\ninternal colocation.\n\nHowever, node1 wasn't the preferred node. So assign_instance() tries to\nrevert the assignment by calling pcmk__unassign_resource() on the\ninstance (the group). But this leaves the group members assigned,\nbecause pcmk__unassign_resource() doesn't act recursively.\n\nWith this commit, pcmk__unassign_resource() acts recursively. We can now\nunassign a resource and all its children recursively.\n\nFixes T678\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a28e637fbde36ad0d738e44c222974a05833c97d", "commit_date": "2023-06-29T03:08:15Z", "commit_message": "Refactor: libpacemaker: Restore node tables if cloned group assign fails\n\nCurrently, when assigning an instance of a cloned group (that is, one of\nthe groups), we make a copy only of the group's allowed nodes table. We\nrestore only that table if an early assignment attempt fails.\n\nHere, we make a recursive copy containing the allowed nodes tables of\nthe group itself and of all the resources in the group. Then we restore\nall of them from backup if the assignment fails.\n\nThis doesn't visibly fix anything yet, but it's a necessary part of the\nfix for T678. And it was obviously wrong before :)\n\nRef T678\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f6d8224662afc859d08c43fbd7ef12ba0196058", "commit_date": "2023-06-28T22:47:44Z", "commit_message": "Log: libpacemaker: Log which resource we're adding colocations for\n\nThis makes tracing easier. For a collective resource, we may be adding\ncolocations to a descendent rather than to the collective itself, so\npass in a new rsc argument instead of getting it from the colocation\nobject.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5074c5789aa9cb6ffe544913c9a03039253f2084", "commit_date": "2023-06-28T22:47:44Z", "commit_message": "Refactor: libpacemaker: apply_coloc_score()'s primary arg is now const\n\nresource_alloc_functions_t:apply_coloc_score() updates the dependent's\nscores. It has no effect on the primary.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb1e91aa469bcc8f8610c36cedf7527a4a8448d8", "commit_date": "2023-06-28T22:47:44Z", "commit_message": "Refactor: libpe_status: New pe__foreach_const_bundle_replica() function\n\nThis is like pe__foreach_bundle_replica(), but it requires that the\nbundle argument be const and treats bundle's replicas as const.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a1b7e78824cc56a4c84b6a42a557633092f59ccd", "commit_date": "2023-06-28T22:47:44Z", "commit_message": "Test: cts-cli: Update tests after defunctionization\n\npcmk__finalize_assignment() -> pcmk__assign_resource()\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed9063b39d6d1774b3668833d6fae0a7dc981227", "commit_date": "2023-06-28T22:47:41Z", "commit_message": "Refactor: libpacemaker: De-functionize pcmk__finalize_assignment()\n\nMove it into pcmk__assign_resource(). Also correct the \"was assignment\nchanged\" logic, and allocate rc_stopped only once.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b0cb816073bc7e61548b47ab3ef2d25ff0de48b", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: cts: Don't use a wildcard import in CTSlab.py.in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d12887d8e716d5ce73af75c6129d2c9d974d5d0e", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Improve iterating over a dict in scenarios.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46679807bc36ff4ef99656db8f513781bf1a93b6", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Improve whitespace in scenarios.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc177e8a1ff2fae2ad35eb74dfacefdc95bbf41a", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Rename run_loop to _run_loop.\n\nThis is only used privately within the base class and its subclasses, so\nrename it to indicate that it is private.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d223e2f7ca614575a36285cdc6dfddccc6028c0", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Add documentation to scenarios.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "918d3128891ca31bc2003b6c27df60ad83edde37", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Disable invalid name warnings in a couple places.\n\nLike elsewhere, I think cm is a perfectly good name for this parameter.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5af263085aad6f762bddfafe271c4ff94a9d7a1a", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Rename the Iterations variable.\n\n* Raise NotImplementedError in Scenario.run_loop.\n\n* Get rid of the body of Boot.run_loop, which did nothing useful anyway.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c32f20d0de50fac7013215586a0c526814bb51cb", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Rename attributes in the Scenario class.\n\nThese should be named in accordance with standard python naming rules.\nAlso, the TestSets and Sets attributes were completely unused.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3761ca0f6649d06dee841929238b560d166fb8da", "commit_date": "2023-06-28T19:58:23Z", "commit_message": "Refactor: python: Don't use max as the name of a variable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15b5627415b27b58b909d8df6b859c73246d1170", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Pass a ClusterManager instance to ScenarioComponent.\n\nThis allows us to not have to pass it to every setup or teardown call", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21af34c7e1847f47a7f5828f9be704c6a2f67785", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Don't use [] as a default argument.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e8244c418a3e1cf98e0302e06460ee357811b49", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Simplify various format string.\n\n* Use %r instead of repr().\n\n* Use %s instead of adding.\n\n* Use format strings instead of adding and calling ljust/rjust.  I think\n  this is more readable, even if it's still not great.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5edd0f633bc8718ec769c967d37053592babb813", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Use booleans instead of 1/0 where possible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5bbcf0584c4b749d29914b0192fadab511d2f37", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Minor refactorings in scenarios.py.\n\n* Remove unused imports.\n\n* Remove unnecessary inheritance from the object class.\n\n* Remove commented out code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1bdafaab38f914f102225db5f6e18b1f378001b", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Rename TearDown to teardown.\n\n* Return NotImplementedError in the base class if the subclass\n  doesn't implement it.\n\n* Don't return any value.  Only some subclasses were, and it's never\n  used anywhere.\n\n* Remove the force= argument from one instance.  It's always False, so\n  we can ditch the argument and change the one place it's used.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a0bd384159728621420a7a4ef105e0b6228f516", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Rename SetUp to setup.\n\n* Return NotImplementedError in the base class if the subclass\n  doesn't implement it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8144c261de77b814c584bbe88ccf27889956994", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Rename IsApplicable to is_applicable.\n\n* Return NotImplementedError in the base class if the subclass doesn't\n  implement it.\n\n* Always return a boolean, not None.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af8e1c1e70b02d7bd522443f543a4cb65f82b91", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Use += where possible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ede55f3ab1832c60510a7666706938c77c50b82", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Use should_continue in scenarios.py.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9dda6b1157852b6ec13a8ab906a4a74cbf5de77", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: cts, python: Remove the rest of BasicSanityCheck.\n\nThis doesn't really add anything on top of the base test scenario, and\nI've previously removed the BSC resource test and scenario, so get rid\nof everything that enabled it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "773779ce16979d56d048a87a4cc051e1d4d1fbf1", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: python: Remove unused scenarios and add __all__.\n\nThese scenarios are not referenced anywhere, so they aren't being used.\nI don't imagine they have been used for a long time, either.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a625fe29bc3e99d4405d98f3667a94ebb4ace6e", "commit_date": "2023-06-28T19:58:22Z", "commit_message": "Refactor: cts, python: Move CTSscenarios.py into the _cts module.\n\nNo code changes, aside from updating imports.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f932af29077ef228f6024d8bb7bc8fc3e6952a1", "commit_date": "2023-06-28T09:54:45Z", "commit_message": "Refactor: libpacemaker: Recursively copy and restore allowed node tables\n\nGiven a resource, these two new functions create copies of the allowed\nnodes tables of its entire tree of descendants, or restore from such a\nbackup copy.\n\nRef T678\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "394f8d7b807ad892a76b9ca79bce41a3a2e87c06", "commit_date": "2023-06-27T17:37:42Z", "commit_message": "Refactor: libpacemaker: Move colocation getters to lib-private header\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "229770d53952b757a308eb92a23c12354455e030", "commit_date": "2023-06-27T17:08:03Z", "commit_message": "Merge pull request #3140 from nrwahl2/nrwahl2-tmp\n\nVarious minor libpacemaker improvements, new tests", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f8967a5cdab00d587495514751d65351becdb24", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: Drop redundant check in pcmk__primitive_assign()\n\nWe've already returned if pe_rsc_provisional is set.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d6e3a54e9477b322473cd662a44102197571235", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: Don't make apply_this_with a GFunc\n\nIt's not used as a GFunc, so it's simpler to take the arguments as the\ndata types we want.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35378d18c8ad3e1015b1569f4b94a87e2d508afe", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: Drop convert_const_pointer()\n\nI'm not sure why this function exists but it's not necessary.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c96dfe81ef81f5fc4d517c6ad7edec7a1fa9ece4", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: Prepend new colocations to working set\n\nThe order doesn't matter in the working set, so prepend for efficiency.\npe_working_set_t:colocation_constraints is used only for freeing all\ncolocation constraints.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c70170a06525024421eb6c845608b99f8ac07d10", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Test: cts-cli: Update output for #uname as default colocation attr\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c642c207cd1b411e99498730bb62bef6fb63b73", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: Default colocation->node_attribute to #uname\n\nIt's been documented this way in Pacemaker Explained for a long time,\nand the trace message in pcmk__new_colocation() also says we're using\nCRM_ATTR_UNAME if the node_attr argument is NULL.\n\nHowever, we haven't actually set a default value in\npcmk__new_colocation() before now. Also, we've used CRM_ATTR_ID as the\ndefault in pcmk__apply_coloc_to_scores() and\npcmk__apply_coloc_to_priority() for a long time. Surprisingly,\ndefaulting to CRM_ATTR_UNAME globally doesn't affect any regression\ntests.\n\nThis allows us to avoid some checks by assuming\ncolocation->node_attribute is non-NULL.\n\nThis commit also removes a couple of redundant NULL checks of a\npcmk__colocation_t object in add_node_scores_matching_attr(), to reduce\nclutter. It's a static function with only one caller that already\nNULL-checks the colocation.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53ced0dd7cf595c6bb79ae3ede668a6417452e2d", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: DRY up cmp_{dependent,promotable}_priority()\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "454d09e61dfea2adf65f8186953cfb3764121ee7", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Refactor: libpacemaker: Dead code in assign_instance()\n\nThe instance has not yet been assigned when we call assign_instance(),\nso pe_rsc_provisional is set. At early assignment time, there is no way\nthe instance could have been assigned. At final assignment time, the\ninstance may have been assigned early, so the caller\n(pcmk__assign_instances()) checks the pe_rsc_provisional flag\nexplicitly. Checking in the caller allows us to avoid other unnecessary\nwork, so keep the check there.\n\nKeep a CRM_CHECK() for sanity.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a977c1b5e925b0059cc3f24c011e74e3a0ef015", "commit_date": "2023-06-27T16:06:52Z", "commit_message": "Test: scheduler: Clone instances should not shuffle unnecessarily\n\nIn some cases, clone instances may be shuffled when a new instance is\nscheduled to start or promote. This can cause instances to be stopped\nand started unnecessarily.\n\nHere we add tests for three types of clones:\n* \"Bare\" clones of primitives\n* Clones of groups\n* Clones of primitives within bundles (clone is bundle child resource)\n\nFor each clone type, we add four tests. In each test, no clone instance\nis running on node 1, and a new instance should be started and possibly\npromoted there.\n* No constraints or stickiness\n* Location constraint preferring node 1\n* Promotable clone where node 1 has the highest promotion score\n* Promotable clone where node 1 does not have the highest promotion\n  score\n\nThe following tests are currently incorrect:\n* clone-no-recover-shuffle-4 (shuffling)\n* clone-no-recover-shuffle-5 (all instances of an anonymous clone move\n  to one node)\n* clone-no-recover-shuffle-6 (shuffling)\n* clone-no-recover-shuffle-7 (shuffling)\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e99d63359bc95aff9f520d0cd850e5eff7895c8a", "commit_date": "2023-06-27T16:06:50Z", "commit_message": "Test: scheduler: Promotable bundle location constraint doesn't work\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e52bc57402ffa8d904063617f7764dfea11d965", "commit_date": "2023-06-26T15:37:41Z", "commit_message": "Merge pull request #3138 from kgaillot/scheduler\n\nMiscellaneous follow-ups", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "494d58083668c07dd8923fa880cec93f5681bbe6", "commit_date": "2023-06-26T14:59:46Z", "commit_message": "Merge pull request #3139 from clumens/more-unit-tests\n\nUnit test related stuff", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff1e52cdb354af3466054702f75492606f140a15", "commit_date": "2023-06-22T19:00:04Z", "commit_message": "Test: libcrmcommon: Test an error case in pcmk__guint_from_hash.\n\nIt seems extremely unlikely this situation will ever be hit.  It\nrequires adding a value to the table that isn't a valid number, and I'm\nnot sure that anywhere will actually do that.  Still, we check for it so\nwe might as well have a test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b03329b57a2d843334698cef0782e6b40898039", "commit_date": "2023-06-22T19:00:04Z", "commit_message": "Test: libcrmcommon: Add unit tests for pcmk__scan_ll.\n\nMost of this is done in scan_ll, which is already pretty thoroughly\ntested elsewhere.  We still need to cover the possibility where\npcmk__scan_ll is used for validation only.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea76fb36beea4991dba8287bdd827016b20c12c2", "commit_date": "2023-06-22T18:59:59Z", "commit_message": "Build: devel: Filter directories out of the coverage report.\n\nFor now (and probably for a long time to come) there's no point in\ngenerating coverage numbers for things in the daemons/ and tools/\ndirectories.  For that matter, we never care about lib/gnu/ or replace/.\n\nThe impetus for this is that generating the man pages for these things\nresults in them being counted towards covered code, and I can't see any\nobvious reason why this is the case.  Rather than spend more time\ntrying to fix it, I could just remove them entirely.\n\nWhile I'm here, change from running \"make core\" to just \"make\".  All\nthis stuff ends up happening anyway.  We might as well control when.\n\nAlso, give the coverage report a title.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8fb2a33de4e503cad9c6a3d3cd5fdc701ae6e85", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "doc: Pacemaker Development: Update code coverage instructions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37b683cca2831626d2cc821d59eeb5953eada426", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "Test: libcrmcommon: Add unit tests for some attribute name functions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07376dc6d3bed1f6f3e189007e87a5fc8b4b1677", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "Test: libcrmcommon: Add a unit test for pcmk__new_common_args.\n\nThis is a pretty lame test.  The point of it was to develop the new\npcmk__assert_exits macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b079e2fb1e224195363ee4156ea043fc5075418", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "Test: includes: Add pcmk__assert_exits.\n\nThis is very similar to pcmk__assert_asserts, except it checks that the\nstatement exits with the specified exit code.  This can be used for\ntesting things that call crm_exit.\n\nNote that while the implementation of this is pretty close to\npcmk__assert_asserts, it's different enough to where I think it's worth\nkeeping them as separate macros.  Trying to do too much macro\nrefactoring makes it weird and hard to follow.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1ce51e2269618ca43e21b4b891f19e6f12ebbe6d", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "Test: libcrmcommon: Add a test case for 3819b3507c.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00710cc8e85db850bace796e2ac0f0e8745f68e0", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "Test: libcrmcommon: Fix test coverage for crm_parse_agent_spec.\n\nBy passing NULL for all the output parameters every time, we were\nbailing out at the CRM_CHECK at the beginning of the function and\navoiding testing various other error paths.  This brings coverage of\nthis file up to 100%.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e6936f2d13bbf9b4b794fe51d71a5534577ff24", "commit_date": "2023-06-22T18:59:18Z", "commit_message": "Test: libcrmcommon: Test some corner cases in pcmk__add_scores.\n\nThis brings the coverage in this file up to 100%, hooray.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5812014cb8cb8c64c87511f052e85f04245ce7da", "commit_date": "2023-06-21T17:20:45Z", "commit_message": "Test: cts-scheduler: avoid legacy terminology in regression test inputs", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2fced2b84f8fea684d39bcd92e29ca8c7d15b01", "commit_date": "2023-06-21T16:48:16Z", "commit_message": "Test: scheduler: update test summaries for display change", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb2d91dda283ab3ec0428245c94a7e922f3e93d0", "commit_date": "2023-06-21T16:48:15Z", "commit_message": "Low: scheduler: distinguish unrunnable from migration unrunnable in displays\n\nPreviously, clearing the runnable or migrate_runnable flags from an action\ncaused a reason of \"unrunnable <action>\" to be displayed, and migrate_runnable\nwas the only flag that would overwrite an exiting reason if cleared.\n\nThe overwrite behavior was never relevant in existing regression tests, and\nshowing unmigrateable tasks as \"unrunnable\" was a bit confusing.\n\nDrop the overwrite behavior, and distinguish \"unrunnable\" from \"unmigrateable\".\nThis slightly improves the understandability.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af9806c031d706eca925ab1c0cca78d20d571420", "commit_date": "2023-06-21T16:48:15Z", "commit_message": "Doc: Pacemaker Explained: add detail about asymmetric ordering", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aee0aeabb202311ddb65ccee224a4ba99c614e7c", "commit_date": "2023-06-21T16:48:15Z", "commit_message": "Doc: scheduler: add compatibility note for recent change", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44647f62c012f4305bf5d2e03cfde89356d831bd", "commit_date": "2023-06-21T16:47:07Z", "commit_message": "Merge pull request #3125 from clumens/cts-tests-batch-3\n\nThird batch of CTS test refactorings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31f9e8b5174c66861526c262653cd661e012a197", "commit_date": "2023-06-21T15:58:12Z", "commit_message": "Merge pull request #3128 from waltdisgrace/t514\n\nFeature: cts-cli: Add cts-cli option to display failures", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "758f53c279ca92cc87d88bd08d0082aa75a6f3c1", "commit_date": "2023-06-21T14:36:19Z", "commit_message": "Feature: cts-cli: Add cts-cli option to display failures\n\nAdding this option to cts-cli means that all regression tests\nnow have this option.\n\ncts-cli was writing error messages to a file only.\nThese now get written to the command line when the\nverbose option is used.\n\nAll other regression tests either always write errors\nto the command line (attrd, exec, fencing) or\nalready have the behavior that cli now has\n(scheduler).\n\ncloses T514", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d2075be0377b2bbe3a4168b5742d80307b5b6d81", "commit_date": "2023-06-21T14:35:26Z", "commit_message": "Refactor: python, cts: Move the last parts of CTStests into _cts.\n\nThis is just the list of tests to run.  It was called TestList, but it\nis now renamed to test_list.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e9cba73264741cdd65508d2428292d95a360ea0b", "commit_date": "2023-06-21T14:35:26Z", "commit_message": "Refactor: python: Improve comments and whitespace in remoterscfailure.py.\n\nAnd because the only code changes are disabling some pylint warnings and\na few minor things in is_applicable, add them into this commit too.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d935a8353584aa6ede4edf4820d2885c625aa219", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python, cts: Move RemoteRscFailure into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03ad3e9736c5c1facabb30212f6597f9ff1a0e05", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python: Improve comments and whitespace in remotemigrate.py.\n\nAnd because the only code changes are disabling some pylint warnings and\na few minor things in is_applicable, add them into this commit too.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab576c5f501c259bf841156e5b0dc355f7da9ac9", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python, cts: Move RemoteMigrate into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c651988c1c4f25a4e37d83196e4e83141e4b5110", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python: Improve comments and whitespace in remotestonithd.py.\n\nAnd because there was only one code style thing to change in this file,\nadd it into the same commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aeb6034b6bd71ebcdf46032acad22b872cb3e06a", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python, cts: Move RemoteStonithd into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f18609ec3b992df54250f6aee4432202085f66a9", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python: Improve comments and whitespace in remotebasic.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "38bca048b92e335e195a2ea37fc7ff7d8bb3cf61", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: python, cts: Move RemoteBasic into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "560767cc56fe18a6ce3a57b4877f350f7fed69ef", "commit_date": "2023-06-21T14:35:25Z", "commit_message": "Refactor: cts: Remove LXC container tests support.\n\nThese don't do anything useful and aren't really supported.  Remove\nthem, the lxc_autogen.sh script that generates the containers, all\nmentions in the docs, and the --container-tests command line argument\nfrom cts.\n\nFixes T264", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "94c2831a06a4afd06cc2a0948347429a4cb77f58", "commit_date": "2023-06-21T00:22:14Z", "commit_message": "Merge pull request #3136 from nrwahl2/nrwahl2-T489_new\n\nTest: scheduler: Promotable bundle colocations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a5a1318cd488f5b95657d3e991a1bf679e2dee5", "commit_date": "2023-06-20T22:59:44Z", "commit_message": "Test: scheduler: Promotable bundle colocations\n\nCurrently, bundle colocations aren't considered properly with respect to\npromotion, including in the determination of instance ordering. These\ntests set a baseline for the behavior of a promotable bundle in various\ncolocations with a primitive IPaddr2 resource and with another bundle.\n\nHere we add 12 tests covering all combinations of:\n* Resource types:\n  * Primary bundle promoted instance, dependent primitive\n  * Dependent bundle promoted instance, primary primitive\n  * Primary and dependent bundle promoted instances\n* colocation or anti-colocation\n* mandatory or optional\n\nCurrently only bundle-promoted-colocation-1 is correct.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40a261ccc332ce018138288e91d833323da3b37c", "commit_date": "2023-06-20T19:29:31Z", "commit_message": "Merge pull request #3134 from kgaillot/best-practices\n\nFinish best practices for libpacemaker", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b14eb1668cca54b56d8efa5c94d41dda64f4df46", "commit_date": "2023-06-20T18:08:01Z", "commit_message": "Refactor: libpacemaker: keep all lines to maximum 80 characters\n\nA couple of these changes involve naming a pe_working_set_t variable \"sched\"\ninstead of the more common \"data_set\", but that is in line with planned future\nchanges.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0a9ce2b20ebf8a88a4d9c2c20dcc9ad40f596b5", "commit_date": "2023-06-20T17:56:49Z", "commit_message": "Low: scheduler: check pointer for NULL *before* dereferencing it\n\n... per coverity and review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d056e00faba9f58469f1103ef1af8ae2353de91", "commit_date": "2023-06-20T17:52:09Z", "commit_message": "Refactor: libpacemaker: use pcmk__str_eq() instead of pcmk__strcmp()\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b56aec036b7206a518621067c1fe824e234f862", "commit_date": "2023-06-20T17:51:32Z", "commit_message": "Refactor: libpacemaker: improve formatting for consistency\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76a564a27cef69b1db814949b76e68e7133a5262", "commit_date": "2023-06-20T16:10:02Z", "commit_message": "Doc: scheduler: correct doxygen blocks\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b845620975093067217eb68ad3bef775997cb85", "commit_date": "2023-06-15T20:26:34Z", "commit_message": "Merge pull request #3133 from kgaillot/build\n\nBuild: rpm: enforce libcmocka-devel version dependency", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69925f1af4d366186a3c7b99bcd45f6f5854fd4e", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Low: scheduler: compare strings case-sensitively where appropriate\n\n... in libpacemaker.\n\nResource IDs, XML element names, and action names should be case-sensitive,\nwhile other user-provided values should generally be case-insensitive.\n\nFixes T223", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7551cc989b9ddd8654f1c04b6e6daeaa7651ba9a", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Low: scheduler: assert on invalid usage of assignment methods\n\nEnsure that all assignment method implementations assert on invalid arguments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "93badc6892653713652da9f9dd561d42cff287e8", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: libpacemaker: use space after control statements", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12b92c9dd3e2c7f669f63f3d0d7b4c179186ad2b", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: libpacemaker: break up long lines\n\n... where convenient. Some remain that would require more significant\nrefactoring.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc343eeeb11e2143bcb8ffac26a9cbe6de627ec5", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: libpacemaker: improve capitalization in variable names\n\nThese slipped by in past refactors", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a6c4a42bb88b86e17799a68ebd69284b151da8d", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: libpacemaker: best practices for add_maintenance_nodes()\n\nThis one must have slipped by. Improve log messages, comments, variable names,\nand formatting. Use const where appropriate.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee48ec50f0ffca513aba3dcd6acfe20a2d31b293", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: scheduler: make schedule_reload() match GFunc signature\n\n... instead of casting to GFunc. One caller now needs to cast the arguments\nbut that's less potentially problematic than casting a function signature.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a13f7ab6e20e74a99fdbe59d3e77f327a8b44a1", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: scheduler: make node criteria functions match GFunc signature\n\n... rather than casting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb64a6fd2fbff865a6dadb6e395dcc1c69a28665", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: scheduler: make set_assignment_methods_for_rsc() match GFunc signature\n\n... instead of casting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28db254ec3759628cc067cfccb459017a8109f35", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: scheduler: create GFunc wrapper for pcmk__update_action_for_orderings()\n\n... instead of casting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b092f8276de9c2d7b3ba1397bb8dfd9016b8fab3", "commit_date": "2023-06-15T19:06:36Z", "commit_message": "Refactor: scheduler: create GFunc wrapper for action_flags() method\n\n... instead of casting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eba94abf35ad1b0eb6b7507d3836121820db0098", "commit_date": "2023-06-15T19:06:25Z", "commit_message": "Merge pull request #3131 from kgaillot/best-practices\n\nDrop redundant working set argument from libpacemaker functions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16fc250dc34610a11eba47b749147c00db8f8aeb", "commit_date": "2023-06-15T16:00:10Z", "commit_message": "Merge pull request #3127 from nrwahl2/nrwahl2-T186\n\nFix: controller: Replace node state atomically at DC join ack step", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "207df13a2a1bcf51d911b8d74881bc22151eae2a", "commit_date": "2023-06-15T15:43:24Z", "commit_message": "Merge pull request #3132 from nrwahl2/nrwahl2-fixes\n\nFix: libpacemaker: Get container attr from assigned node, if any", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a4aca626c250162b6df3f6cc672a36abd4d12b3", "commit_date": "2023-06-15T14:39:30Z", "commit_message": "Build: rpm: enforce libcmocka-devel version dependency", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb6910333ef54bfd4a0d01df09b6f1dfe4cbb4cd", "commit_date": "2023-06-15T14:33:02Z", "commit_message": "Refactor: scheduler: fix some doxygen/const issues\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd53a34f71199e5b22ba3f54dae7439cbf2661e7", "commit_date": "2023-06-15T07:40:09Z", "commit_message": "Refactor: controller: Simplify DC join ack update step\n\nDetermine what we're using for the state update, and keep only one call\nto controld_update_cib().\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e3b3d142cc41376e8a1a88faa12d6062e726035", "commit_date": "2023-06-15T07:40:09Z", "commit_message": "Fix: controller: Replace node state atomically at DC join ack step\n\nCurrently, do_dc_join_ack() deletes part of the joining node's resource\nhistory from the CIB and then updates the remaining portion. If we\nquery the CIB or we're interrupted in some way between the delete and\nthe update, then we get a bad view of the state, where pieces are\nmissing.\n\nHere, we use a CIB transaction to ensure that the update happens\natomically as a replacement.\n\nOf note: anything passed as user_data to a CIB client callback must be\nfreeable by the function passed to cib_client_register_callback_full()\nas the free_func argument. That argument is of type\nvoid (*free_func)(void *).\n\nfree_xml() can't be passed as the free_func() argument to a CIB client\ncallback. The behavior is undefined by the C standard, and GCC throws an\nerror. (void *) and (xmlNode *) are not compatible.\n- https://stackoverflow.com/a/559671/7660197\n\nCasting might be safe in practice though:\n- https://stackoverflow.com/a/14044244/7660197\n\nCloses T186\nCloses CLBZ#5306\nCloses RHBZ#2000595\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a074c480139e6bd584bcfe3858585d1ba31636a", "commit_date": "2023-06-15T07:40:09Z", "commit_message": "Refactor: libcrmcommon: Drop xmlSetTreeDoc() from getDocPtr()\n\nxmlDocSetRootElement() includes xmlSetTreeDoc(). No need to call it\nexplicitly.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91e7c180db3899fe60c0c963d42f151cca2ccbe7", "commit_date": "2023-06-15T07:40:09Z", "commit_message": "Refactor: controller: Accept user data in controld_update_cib()\n\nAccept user data to pass to callback. Nothing uses this yet.\n\nAlso change the data argument to [in], since nothing can modify it.\nxmlDocCopyNode() in add_node_copy() requires that it be non-const.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2aa2448d09f0e60df29bdd6d83d95c19a34dddc8", "commit_date": "2023-06-15T07:40:09Z", "commit_message": "Refactor: controller: Functionize getting node state deletion strings\n\nRef T186\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e66e812c477d910eb8d3eb81e95f570d1b88051", "commit_date": "2023-06-15T07:40:09Z", "commit_message": "Refactor: controller: Better error checks in controld_delete_node_state\n\nAssert if cib == NULL. This is an internal programming error and we have\nbigger problems. Likewise assert instead of check if uname == NULL; we\nshould be catching that before calling this function.\n\nAdd a trivial default case to the switch statement.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5086b6d9105e5cdb87d1284bd716a0badfc210b", "commit_date": "2023-06-15T07:39:25Z", "commit_message": "Test: scheduler: Update outputs for promotion_attr_value() fix\n\nUpdate outputs after previous commit (get container's promotion score\nfrom assigned host).\n\nThere are a few changes to scores, as well as dot and exp files. The\nbehavior in the bundle-interleave-start test appears to be an\nimprovement.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "870e74dbfb7db8fc50b7700d29963ef3ff66c4b3", "commit_date": "2023-06-15T07:34:39Z", "commit_message": "Fix: libpacemaker: Get container attr from assigned node, if any\n\npromotion_attr_value() should get a container's promotion score from\nthe host to which it's assigned (if it's been assigned), rather than the\nhost on which it's running.\n\nRef T489\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "770f55b6c909cdb4bf59c687cbf58162e4bfea44", "commit_date": "2023-06-15T07:31:19Z", "commit_message": "Refactor: libpe_status: pe_node_attribute_calculated() accepts node type\n\nUse enum pe__rsc_node in pe_node_attribute_calculated() to determine\nwhich container host (assigned or current) to get the attribute value\nfrom. For now, there's no use case for pending.\n\nPass pe__rsc_node_current for existing calls, since that maintains the\nexisting behavior.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6fa62060c9291d2b3d5cbb47ac0aa2dffe8fb703", "commit_date": "2023-06-15T07:31:18Z", "commit_message": "Refactor: libpe_status: Add pe__rsc_node flag enum\n\nThis commit adds a new pe__rsc_node flag enum containing values for\nassigned, current, and pending. This indicates the criterion used to\nlook up a resource's location.\n\nAfter a compatibility break, native_location() could use these flags\ninstead of an int.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa4da0f8af75d1529ac5bf497210f61838befa90", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from static functions\n\n... in pcmk_sched_ordering.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c84234d9e389c404aabc39b116b782528384ccb9", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler,tools: drop redundant argument from locations-and-colocations message", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f17c62b3a39adc0192491b8d0c48e6a30bbc7cf6", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant arguments from static functions\n\n... in pcmk_sched_remote.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0704a1c197903b383a50aa9b0f7e98db32cb52ec", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from new_load_stopped_op()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3bf7050e836f442bc15f0d83f54b76e9e94832d9", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant arguments from static functions\n\n... in pcmk_scheduler.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8326d67e64ef06b1d6bbefcac0df2dd886514cb", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: make clear_failcounts_if_orphaned() a GFunc\n\n... instead of casting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9aeb11919fa6212db0ca718324ffc0a2beed10c1", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: make apply_stickiness() a GFunc instead of casting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f5706c0dd462723204caafe17ea102fe39b5271", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: make add_start_restart_orderings_for_rsc() a GFunc\n\n... instead of casting. Also drop a redundant argument from\nadd_restart_orderings_for_probe().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cfd6c69e947cb951f0342a39cfcedaa9bab2b1cf", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from static functions\n\n... in pcmk_sched_location.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a41968cc69f49f7616d1601139ebc2ce0d1a09f", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from add_downed_nodes()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2bd54835c9167dc114c01e1d0b6702b8d4cb3918", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from best_op()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f3f56f925c80bd74a073a5ea3f17d245c73cd11e", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant arguments from static functions\n\n... in pcmk_sched_tickets.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01cd51bce727fa29ff94a60ec716b15a8aac0570", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop unused argument from pcmk__block_colocation_dependents()\n\n... and create separate function for g_list_foreach() to call, instead of\ncasting it to GFunc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c82a7bb82376363092eb86613d7ceff68f29d6ac", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from pcmk__new_colocation()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fba0cc9a5d85992e42d48a174399eae1ddec1c77", "commit_date": "2023-06-14T22:17:29Z", "commit_message": "Refactor: scheduler: drop redundant argument from pcmk__new_location()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c04fbf9021d3d18a592b3b74d9c84691d686e5", "commit_date": "2023-06-14T22:17:18Z", "commit_message": "Merge pull request #3126 from kgaillot/best-practices\n\nMore best practices for libpacemaker", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e4a0be89dba196b1cb4d84f9766421f5aeaabc0", "commit_date": "2023-06-14T20:39:42Z", "commit_message": "Low: libpacemaker: use \"Assignment\" instead of \"Allocation\"\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb497a3b2ee85e917f4df7f348cf232ead76b69b", "commit_date": "2023-06-14T20:39:42Z", "commit_message": "Refactor: tools: let implicit cast happen\n\n... for readability, per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0417fc0a4c8512977993ec5dc8e7b5890987a17", "commit_date": "2023-06-14T20:39:40Z", "commit_message": "Refactor: scheduler: improve formatting of header\n\n... and drop an unnecessary include, per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebb8be32682f13440afb79619fd7e65516133979", "commit_date": "2023-06-14T00:43:51Z", "commit_message": "Refactor: scheduler: use pe__same_node() where appropriate", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e66d21f81d9727bda0ca362801e1eeccb95720ca", "commit_date": "2023-06-14T00:43:51Z", "commit_message": "Log: libpacemaker: avoid \"weight\" in log messages\n\n... as well as comments and internal symbol names", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc9b9281d39ae70d67f2ebfb8852eb03175b943a", "commit_date": "2023-06-14T00:43:51Z", "commit_message": "Refactor: scheduler: rename pe__show_node_weights()\n\n... to pe__show_node_scores(), for more consistent terminology", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "031aa0b2a62a989d41a5f01b8e230cf92624f111", "commit_date": "2023-06-14T00:43:51Z", "commit_message": "Doc: Pacemaker Explained, Pacemaker Development: use assignment terminology consistently", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2de8fc10e144ea849976d115c68e5fb5388def76", "commit_date": "2023-06-14T00:43:51Z", "commit_message": "Log: libpacemaker: use \"assignment\" terminology consistently\n\n... in log messages, comments, and internal symbol names", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fce16664452bc2adf5a5885fcb736a6cfc9f88d1", "commit_date": "2023-06-14T00:43:50Z", "commit_message": "Refactor: scheduler, tools: use boolean types more appropriately", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebf98b4e15991b25f845b1f232fa41471f459368", "commit_date": "2023-06-14T00:36:30Z", "commit_message": "Refactor: scheduler: consolidate scheduler headers\n\nNow that most stuff has been moved to libpacemaker_private.h, there's no need\nfor multiple scheduler headers.\n\nAlso trim down the list of includes to those needed for the header, which\nexposed a lot of files that were relying on transitive includes, which are now\nexplicit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c8debe4d3671e4d51e6352fefb62896d6f932b", "commit_date": "2023-06-14T00:36:10Z", "commit_message": "Merge pull request #3123 from kgaillot/best-practices\n\nBest practices for libpacemaker bundle methods", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aca7b8ad83b75f0799a4a63dc75b0a96b13c0c40", "commit_date": "2023-06-13T14:45:24Z", "commit_message": "Doc: scheduler: comment why bundled resource is used for some actions\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34fb9fdf418a4bdf990d2a64ddd91f2a7f5cfebb", "commit_date": "2023-06-13T14:42:14Z", "commit_message": "Refactor: scheduler: use uint32_t for action flags in method\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65abdafcb317a8b5c1fd2259ce72dfe77cc07556", "commit_date": "2023-06-13T14:30:16Z", "commit_message": "Refactor: scheduler: rename variable for clarity\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "452b902ae86107bb7406fad356cf7cdaa07d8190", "commit_date": "2023-06-13T14:28:52Z", "commit_message": "Refactor: scheduler: rearrange bundle internal constraint creation\n\n... for readability, per review. Nothing substantial changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18e523df3afc200fcc29af2703f0cd4cb2204d7b", "commit_date": "2023-06-13T13:57:45Z", "commit_message": "Merge pull request #3124 from nrwahl2/nrwahl2-fixes\n\nBuild: INSTALL: Add libcmocka version dependency", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "575e1b1555ec3db5e77117ea21305bb583dafb5d", "commit_date": "2023-06-13T05:32:21Z", "commit_message": "Build: INSTALL: Add libcmocka version dependency\n\nWe call function_called(), which was added in cmocka v1.1.0:\nhttps://gitlab.com/cmocka/cmocka/-/commit/443b0280.\n\nCloses CLBZ#5518\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ff7317c76c973b48c514f0aa0224ea2b4ea7977", "commit_date": "2023-06-12T19:02:48Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_shutdown_lock()\n\nDeclare in library-private header, and improve error checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9493d2327a8f142fea7d2534c2f0fc478c815c04", "commit_date": "2023-06-12T19:02:48Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_add_utilization()\n\nDeclare in library-private header, and improve error checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "caa33b1929cad2f6afa425f4bf985b944e2bf021", "commit_date": "2023-06-12T19:02:48Z", "commit_message": "Refactor: scheduler: best practices for pcmk__output_bundle_actions()\n\nAdd a doxygen block, and improve error checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99c568a9e8b3abb496926ad5816d85eca1f8cb20", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_create_probe()\n\nDeclare in library-private header, and improve error checking and comments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3ac82d5e911f490b7ad48eb57753b327495ca303", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_expand()\n\nRename to pcmk__bundle_add_actions_to_graph(), declare in library-private\nheader, and improve error checking and comments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "094cadbf45a315a09f265a959c6f21b77658b91c", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_rsc_location()\n\nRename to pcmk__bundle_apply_location(), declare in library-private header,\nadd a doxygen block, and improve error checking, variable names, and\nformatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97ae3a682ac1393e9d77a1e6909df8f5c3adce54", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: best practices for pcmk__bundle_action_flags()\n\nDeclare in library-private header, add a doxygen block, improve error checking,\nand avoid an unnecessary variable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cf7f4eda08926480a6f14d401d5699e0ebbb354", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_apply_coloc_score()\n\nImprove error checking, log messages, comments, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "968b347fbe1e61ce9ee7aa3c6edb05eaee5788f3", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for compatible_replica()\n\nRename to compatible_container(), add a doxygen block, drop unused argument,\nand improve variable names, comments, and formatting.\n\nSince the sole caller logs a better message, drop the redundant log here.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41c8e314407b4e22e0e20aebb8a4afe6b2edfbf1", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: de-functionize compatible_replica_for_node()\n\nBoth its only caller, compatible_replica(), and that function's only caller\nlogged the same information. Without the redundant log messages, it's just a\ncouple of lines.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d90d04f27e1b8c633027bee036b21a08419d9dd4", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: remove dead code in pcmk__bundle_internal_constraints()\n\nThe bundled resource is always a clone, so it always has children.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "551648ec62370818f3f151b8fd0ca542726bd1e8", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_internal_constraints()\n\nDeclare in library-private header, add a doxygen block, and improve\nerror checking, comments, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "435885725bc650ec5d01fe33f683f1d72b3b847a", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_create_actions()\n\nDeclare in library-private header, add a doxygen block, and improve\nerror checking, comments, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ef01ef2292e1191bc1f7d4426cfc276456b4a80", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Test: cts-cli,cts-scheduler: update expected scores for function rename", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c5b7392ac83c54b0a70ecf98655998b4606577f", "commit_date": "2023-06-12T18:47:27Z", "commit_message": "Refactor: scheduler: best practices for pcmk__bundle_allocate()\n\nRename to pcmk__bundle_assign(), declare in library-private header,\nand improve error checking, log messages, comments, and formatting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "834ca1e2dd3ed0ab1683a90daee07fbe20f7ab72", "commit_date": "2023-06-12T18:47:11Z", "commit_message": "Merge pull request #3112 from kgaillot/scheduler\n\nImprove handling of negative preferences of anti-colocation dependents", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "582691772286231298406a1863c37336d8e5be39", "commit_date": "2023-06-12T18:28:11Z", "commit_message": "Merge pull request #3120 from kgaillot/best-practices\n\nIsolate bundle variant data to bundle.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c47b98284e902d2ea368f95202dbab86fc75181", "commit_date": "2023-06-12T16:07:36Z", "commit_message": "Merge pull request #3122 from clumens/cts-tests-batch-2\n\nSecond batch of CTS test refactorings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcecc9db0a43f483f4df70a6c062e86e5a3dbc09", "commit_date": "2023-06-12T15:33:37Z", "commit_message": "Merge pull request #3031 from gao-yan/pending-node-no-uname\n\nFix: scheduler: Do not fence a pending node that doesn't have an uname in node state yet", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6e89f8030106526cbe72676253c96472e105ed9", "commit_date": "2023-06-12T13:53:58Z", "commit_message": "Merge pull request #3116 from xuezhixin/main\n\nDoc:add translation for zh_CN", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bdacffdcde2e67b80e138265f57a623ca931a4a3", "commit_date": "2023-06-08T22:37:11Z", "commit_message": "Refactor: scheduler: make bundle argument to pe__foreach_bundle_replica() not const\n\n... because the iterator function may modify it", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe556be14129a14221ad2790cba1c9f3541aa751", "commit_date": "2023-06-08T22:33:50Z", "commit_message": "Refactor: scheduler: make primary argument to apply_coloc_score() not const\n\n... so implementations can modify it", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d958d420447f4d769df884ad24e7ca955e57ee76", "commit_date": "2023-06-08T22:17:07Z", "commit_message": "Low: scheduler: fix regression introduced by d0e103782f1\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03fe3f28319c68748a4c1ad4b3d2d53a90b75730", "commit_date": "2023-06-08T22:11:05Z", "commit_message": "Refactor: scheduler: drop unnecessary casts to void *\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea6adb16b296b3636e925308567dc2ede99ea035", "commit_date": "2023-06-08T22:00:22Z", "commit_message": "Refactor: scheduler: improve some bundle internal colocation tags\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cfcf8fe9d634bbaf81d34c6f5123824d6050a15f", "commit_date": "2023-06-08T22:00:06Z", "commit_message": "Refactor: python: Improve nearquorumpointtest.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Use %r instead of repr in format strings.\n\n* Simplify list testing.\n\n* Remove is_applicable.  It doesn't do anything that the superclass\n  version doesn't do.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "005be85c3cd8d60bbc302c7af007cb49680fe4eb", "commit_date": "2023-06-08T22:00:06Z", "commit_message": "Refactor: python: Improve comments and whitespace in nearquorumpointtest.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88d573f2a94a589b767f7dab530b6131af8fe2b5", "commit_date": "2023-06-08T22:00:06Z", "commit_message": "Refactor: python, cts: Move NearQuorumPointTest into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5f032d6619d51496f6fa94e2a6a1791ae0a68ce", "commit_date": "2023-06-08T22:00:06Z", "commit_message": "Refactor: python: Improve resynccib.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Rename restart1 and stopall to be private attributes.\n\n* Use substitution strings instead of adding where possible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20ca568ead143b387279fd16dbd09ee8fa1f8661", "commit_date": "2023-06-08T22:00:06Z", "commit_message": "Refactor: python: Improve comments and whitespace in resynccib.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fed498ddaf1cce6a2290ffb411ea0b2fa7131f5", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python, cts: Move SpecialTest1 into the _cts module.\n\nAnd rename it to ResyncCIB.  No other code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1da792388625db7daf3e4b3d1f2e91f597fef88b", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve reattach.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Use %r instead of repr in format strings.\n\n* Rename stopall to _stopall since it is a private attribute.\n\n* Remove the unused restart1 attribute.\n\n* Use the correct return values in setup and teardown.  This will ensure\n  errors in these functions count towards the success/failure stats.\n\n* Get rid of is_unsafe and is_applicable.  These don't do anything\n  different from the superclass versions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aeccae1aefa7cd1fab9775992bc9a53739c672d7", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve comments and whitespace in reattach.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "877402f4c25f17a65a83309698d84772ae8d6f11", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python, cts: Move Reattach into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "630090fc16e22ae73c768a432fca0c0b94d5b6f9", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve splitbraintest.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Rename all methods to be private and follow python naming\n  conventions.\n\n* Use %r instead of repr in format strings.\n\n* _isolate_partition and _heal_partition no longer return any value.\n  It wasn't being used anywhere or even consistently returned.\n\n* Simplify iterating over dicts by using values(), items(), or\n  simply using \"for x in xyz\" as appropriate.\n\n* Use the should_continue function.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44e55f977dc7e5ba8b0b7c9d99b99e2521c60b2b", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve comments and whitespace in splitbraintest.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a56b14fba971b300ef19e1c48088953259a208eb", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python, cts: Move SplitBrainTest into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca19758cd1ee37623bd052ce8a11a39d5673af0d", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve componentfail.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Simplify how the patterns lists are built.  In one spot, use copy() to\n  make it more obvious what is happening in the code.\n\n* Rename most attributes to use a leading underscore, since they are\n  private.\n\n* Rename all methods to be private and follow python naming\n  conventions.\n\n* Use %r instead of repr in format strings.\n\n* Get rid of unnecessary elif statements.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5958d48c32d5c6370b6ee2bebfd257a28d3d60b0", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve comments and whitespace in componentfail.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4bae23149ddc494f0af60fe825805f80b1991015", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python, cts: Move ComponentFail into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4a770db2fc34373e6d718a5755a3c168d3b80ab", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve resourcerecover.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Simplify how the pats lists are built.\n\n* Get rid of the max attribute.  It is unused.\n\n* Rename most attributes to use a leading underscore, since they are\n  private.\n\n* Rename all methods to be private and follow python naming\n  conventions.\n\n* Use %r instead of repr in format strings.\n\n* Use a list comprehension instead of map(str.strip, lst).  You're not\n  really supposed to use map anymore, though I'm not sure why pylint\n  isn't warning on this.\n\n* Get rid of unnecessary elif statements.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d5b91a950781ca7712f546cd05ccdbeab790510", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve comments and whitespace in resourcerecover.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78bbef774dfa4cd8ed5d2f6c38d6010073ce0559", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python, cts: Move ResourceRecover into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fac21772d8dd35b42459fa5480b55bd7eb27a85a", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve maintenancemode.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Simplify how the pats lists are built.\n\n* Get rid of interval.  This is only used in one place in the bottom of\n  the file.\n\n* Get rid of the max attribute.  It is unused.\n\n* Rename the rid attribute to _rid.  It is used all over the place, but\n  only ever within this class.  Likewise, rename action to _action.\n\n* Rename all methods to be private and follow python naming conventions.\n  Rename various parameters and variables to do the same.\n\n* _toggle_maintenance_mode should take a boolean for what to do instead\n  of a string.\n\n* Get rid of unnecessary elif statements.\n\n* Use += where possible.\n\n* Fix comparisons to use \"not\" where possible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c573ef62179213c4b094a4662bed7b78a0b660a", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python: Improve comments and whitespace in maintenancemode.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "942b0fe8b4165a1758ea06ae02a87ba1b4ef41fe", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: python, cts: Move MaintenanceMode into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad8e668c96065375571204b319c469d5bf604f9c", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Refactor: cts: Remove the RollingUpgrade test.\n\nFor various reasons, this isn't a great test.  It assumes RPM packaging,\nwhile pacemaker supports various other platforms.  The lab requires\ncertain patterns to be present in log files, and these can change across\nreleases.  There is currently no way to get the needed values (rpm-dir,\ncurrent-version, previous-version) into the environment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d80127fe4c3961ac4d97345d995a2936560f6bbd", "commit_date": "2023-06-08T22:00:05Z", "commit_message": "Low: cts: Fix list creation in RemoteDriver.\n\nThese remote tests require that the list being passed to create_watch is\nempty, and then finish assembling the list afterwards.  This was\nintroduced by 0b40f501.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3050425a94eead8b4ae09c33cf2cda4287b2c08f", "commit_date": "2023-06-08T21:48:16Z", "commit_message": "Log: scheduler: improve a couple of bundle messages\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "49c89820767ca0e549d4e179388898a071a68e49", "commit_date": "2023-06-08T21:42:43Z", "commit_message": "Doc: scheduler: improve doxygen blocks for some bundle functions\n\n... per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b02fbf5e33d7656388032bfef713ea762fc0c124", "commit_date": "2023-06-08T20:02:44Z", "commit_message": "Merge pull request #3094 from nrwahl2/nrwahl2-T185\n\nFeature: libcib, based: Support CIB transactions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e80be416ab57d8954bac3671d56d5e3a7f6bf9e2", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "API: libcib: New cib_api_operations_t transaction functions\n\nAdd new CIB API functions for initiating and ending (committing or\ndiscarding) transactions.\n\nCloses T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "052830a4201359c99ee3b4eb1d96d0955839718e", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Refactor: libcib: Support transactions for CIB file clients\n\nSee the commit \"Refactor: based: Support CIB transactions\" for details\non how this all works. This implementation for CIB file clients is\nvery similar to the pacemaker-based implementation, but simpler.\n\nAn upcoming commits will implement CIB transactions in the client API.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27dde6e71a31ef79f2425d4acfbaa52deed187fc", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "API: libcib: Deprecate cib_zero_copy value of enum cib_call_options\n\nThis enum value will be removed in a future release. It was already\nignored and did nothing.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24212a4ee81c77f2602270c2ace50c949a6552cd", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Refactor: based, libcib: Drop internal use of cib_zero_copy\n\nWe already ignore whether the client sets cib_zero_copy or not. We\ndecide internally whether to set or clear it, in pacemaker-based. This\nis correct: this flag is safe only in limited circumstances, so it would\nbe dangerous to allow a client to set it.\n\nIn cib_process_command(), we'll now check whether result_cib == the_cib,\nwhich is what we really cared about in the first place. result_cib ==\nthe_cib if we didn't make a scratch copy, and result_cib != the_cib if\nwe did.\n\nWe add a new boolean called \"make_copy\" to cib_perform_op() and put the\ndecision logic in a static helper function. make_copy is the logical\ninverse of cib_zero_copy.\n\nThis change has a small side effect. Previously, cib_zero_copy was never\nset or cleared for the cib_file cib_t variant. A user could change the\nbehavior by passing cib_zero_copy to a cib_file client, even though the\nflag did nothing when passed to a cib_native or cib_remote client.\n\nI consider that a bug and dangerous behavior. There's no known use case\nfor it. Any attempt to use it would either produce no user-visible\ndifference in behavior compared to making a scratch copy, or break the\nCIB. I'm comfortable with letting cib_perform_op() decide whether to\nmake a copy.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0ee8cffb76fdaa8b56476003d83b07b21c855f4", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Refactor: libcib: Check doc in cib_file_perform_op_delegate()\n\nFor safety, make a copy of output if it's in the same XML doc as the\nin-memory CIB, instead of only making a copy if they both point to the\nsame location. The hope is to reduce the likelihood of tricky libxml2\nbugs.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b973826176f1e176d4e0829ed908a04b407a1284", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Refactor: libcrmcommon: Drop xmlSetTreeDoc() from copy_xml()\n\nxmlDocSetRootElement() includes a call to xmlSetTreeDoc(). The explicit\ncall is redundant.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "afbe952ec6c6a5060180a748147d21c1cd65438d", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Refactor: libcrmcommon: Skip unnecessary doc in replace_xml_child()\n\nThe copy of the update argument doesn't need a doc of its own, so we\ndon't need copy_xml(). When it replaces child, it becomes part of the\ndoc that child was originally in.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "123511c208128ccfb4c0e8106cfba1ce5d589c02", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Low: libcrmcommon: replace_xml_node() segfaults when doc is shared\n\nIf the child and update arguments share the same doc, replace_xml_node()\nwill seg fault during its free_xml(old) call. The exact cause is\ndifficult to trace; it lies somewhere in the intricacies of libxml2.\nIf memory serves, the seg fault occurs in a libxml2 call to\nDICT_FREE(doc->name), but it's not obvious why that's a problem.\n\nThis doesn't cause any known issues with existing code, but it would be\na problem in future commits that involve CIB replaces without making a\ncopy beforehand (extending cib_zero_copy logic to cib_file and adding\ncib_transaction support to cib_file).\n\nThe fix is to skip assigning old to the tmp doc (only one line). It\ndoesn't need to be attached to a doc after it's been replaced. It can\nsimply be freed, and we can free the doc separately.\n\nThe rest of the changes are for readability.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33f49dd57c5c1e976da369b8eade0b3e792100ce", "commit_date": "2023-06-08T08:25:46Z", "commit_message": "Refactor: libcib: Functionize processing cib_file request\n\nThis will allow us to process requests in a transaction in an upcoming\ncommit.\n\nPulling parameters out of the request argument (instead of accepting the\nparameters as arguments directly) will simplify the implementation of\ntransactions.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41f2c3c40a16a6b72b55db812eb57466361b98f5", "commit_date": "2023-06-08T08:24:29Z", "commit_message": "Refactor: libcib: Cache CIB op name-to-details mappings in cib_file.c\n\nThis prevents repeated loop iterations. The table doesn't change.\n\nThis is almost identical to what we're doing in\nbased_common.c:cib_get_operation(). The hope is to merge cib_server_ops\nand cib_file_ops in the future, using shared helper functions and some\nother shared data structures.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73c6f30f443e5a7edeca70d69befab5de1c8e0ac", "commit_date": "2023-06-07T22:11:31Z", "commit_message": "Low: libcib: Allow multiple cib_file clients simultaneously\n\nCurrently, if a process creates two cib_file clients, they will share an\nin_mem_cib object, even if they operate on different files. This would\ncause obvious conflicts.\n\nThis should be a rare use case but there's no reason for an artificial\nlimitation. It also makes more sense for the client to own its in-memory\ncopy of the CIB.\n\nMore importantly, this fix addresses another upcoming issue. In order to\nprocess CIB transactions correctly in cib_file.c, we'll need a way to\nfetch the cib_t object in the commit-transaction processor function.\nEach client's transaction data will be stored in its cib_file_opaque_t\nobject. However, cib_perform_op() does not pass a cib_t object.\n\nThis is true even in the common case where only one client is signed on\nat a time. The commit-transaction processor needs a way to fetch the\nclient's cib_t object, so that it can get that client's transaction\nrequest queue.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "def934ca34bca6841b0fd3bee6175223cc167c1b", "commit_date": "2023-06-07T16:56:39Z", "commit_message": "Merge pull request #3115 from waltdisgrace/t111\n\nFeature: crm_verify: Add --quiet option to crm_verify", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "730523cd12749036ea8e21085aa71094e4cc31b0", "commit_date": "2023-06-07T14:22:47Z", "commit_message": "Merge pull request #3118 from clumens/cts-tests-batch-2-prep\n\nCTS updates before the next batch of refactorings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca67eaef21e97fbfb589450727c562f457f16598", "commit_date": "2023-06-07T14:17:06Z", "commit_message": "Feature: crm_verify: Add --quiet option to crm_verify\n\ncloses T111", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb0b4f82d30d1678683ac23ace7679d5f9b32d3c", "commit_date": "2023-06-07T14:15:45Z", "commit_message": "Merge pull request #3121 from clumens/coverage-bug\n\nLow: libcrmservice: Fix an error when coverage is enabled.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "958ecfbff6c083f3e93906f0d4fb6dde027c0534", "commit_date": "2023-06-07T06:56:40Z", "commit_message": "Refactor: libcib: Use cib_operation_t in cib_file.c\n\nThis way we can add support for transactions without adding another\nboolean to cib_func_entry. This also facilitates merging cib_server_ops\nand cib_file_ops in the future, if we think of a nice way to handle\ndiffering fn members.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8262c8eef79bfe511a09c86ec104fe91f093d156", "commit_date": "2023-06-07T06:56:36Z", "commit_message": "Refactor: libcib, based: Move two definitions from based to libcib\n\nSo that we can use them in cib_file.c.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "401a05d84b415660eddc7f16829d330ad04d8ad3", "commit_date": "2023-06-07T06:56:33Z", "commit_message": "Refactor: libcib: Best practices in cib_file_perform_op_delegate()\n\nCleanups in preparation for adding transaction support for CIB files.\n\nNote that cib_inhibit_bcast and cib_scope_local were ignored completely\nfor CIB files.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e3c0c6ef661d09dbe93cc9159d6dfeb534d4b4c", "commit_date": "2023-06-07T05:35:27Z", "commit_message": "Refactor: libcib, based: Use bool in cib_perform_op()\n\nAnd for its arguments in callers.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22250c049f5d5add054b63db0e6912f7d784b314", "commit_date": "2023-06-07T05:35:27Z", "commit_message": "API: libcrmcommon: Deprecate XML_TAG_FRAGMENT\n\nXML_TAG_FRAGMENT was already unused as of Pacemaker-0.6.0 (the oldest\ntag in git).\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d62b9f892e5a820b7dffe10fbda5ec67a21d43fb", "commit_date": "2023-06-07T05:35:27Z", "commit_message": "Refactor: based: Drop XML_TAG_FRAGMENT check\n\nXML_TAG_FRAGMENT was already unused as of Pacemaker-0.6.0 (the oldest\ntag in git).\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c252b7b17302be2c8c5c91ef8f11bf71841e16f3", "commit_date": "2023-06-07T05:35:24Z", "commit_message": "Refactor: based: Support CIB transactions\n\nThis commit implements CIB transactions in pacemaker-based. Upcoming\ncommits will implement CIB transactions on the library side for CIB file\nconnections and in the client API.\n\npacemaker-based now stores up to one uncommitted transaction for each\nconnected client. Each transaction is a queue of normal CIB requests.\nIf a client has initiated a transaction and an incoming request's call\noptions contain cib_transaction, the request is appended to the\ntransaction for later processing.\n\nWhen a client commits a transaction, all requests in the queue are\nprocessed in a FIFO manner until either a request fails or all requests\nhave been processed. Changes are applied to a working copy of the CIB.\nIf a request fails, the transaction and working CIB copy are discarded,\nand an error is returned. If all requests succeed, the working CIB copy\nreplaces the initial CIB copy.\n\nSupported requests are those that meet the following conditions:\n* can be processed synchronously at commit time, with any changes\n  applied to a working copy of the CIB (for atomicity)\n* are not queries (because the state is atomic, and because we can't\n  return output data)\n* do not involve other nodes (because this is inherently asynchronous\n  and usually non-atomic)\n* do not affect the state of pacemaker-based itself (because this is\n  difficult to implement atomically, and because transactions are\n  intended for CIB modifications)\n\nIf the cib_transaction call option is given, the request's return code\nat the client side (received synchronously or via an asynchronous\ncallback) is the result of adding the request to the client's\ntransaction. Due to atomicity, no replies or notifications are triggered\nwhen individual requests in a transaction are actually processed.\n\nThe commit request itself behaves similarly to a replace operation,\nsending a reply and triggering any notifications that are registered.\nThe init and discard requests also send a reply. Therefore, clients can\ncan check the results of init, commit, and discard via callbacks or\nsynchronous calls.\n\nA client's transaction is freed upon disconnect or commit. The entire\ntransaction table is freed upon pacemaker-based shutdown.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78192eebc33be04b533bc21b955445449655e46a", "commit_date": "2023-06-06T18:04:54Z", "commit_message": "Low: libcrmservice: Fix an error when coverage is enabled.\n\nFor some reason that I haven't been able to track down, the following\nwarning occurs only when you build with coverage enabled:\n\ndbus.c: In function 'handle_query_result':\ndbus.c:598:9: error: 'error' may be used uninitialized [-Werror=maybe-uninitialized]\n  598 |     if (pcmk_dbus_find_error((void*)&error, reply, &error)) {\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou don't even have to \"make coverage\".  Just configuring with coverage\nenabled and then building normally is enough.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d6bcc97d71a863df3e14c9ad24c998fc73f54bce", "commit_date": "2023-06-06T16:11:11Z", "commit_message": "Merge pull request #3093 from clumens/python-reformat\n\nRFC: Reformat python code with black", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db2b70cab2f347b401470d4cabf9fb7402d012d3", "commit_date": "2023-06-05T20:42:15Z", "commit_message": "Refactor: python: Move NextIP into its own function.\n\nThis is a good candidate to be a little utility function.  I've improved\nthe comments and style somewhat so it's easier to see what's going on,\nas well as removed its reliance on the environment and added a unit\ntest.\n\nAlso, raise ValueError if we run out of IP addresses instead of silently\nmaking something invalid.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "510af4019c04e7c05bbd5a05e747c3d9699bee53", "commit_date": "2023-06-05T20:39:56Z", "commit_message": "Refactor: cts: Remove the BSC_AddResource test.\n\nThis doesn't do much beyond the default setup, aside from add a resource\nor two.  So we don't need to keep it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "835e61470ed2b0e462d967e7d37beaec71fca6a9", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: isolate bundle variant data to lib/pengine/bundle.c\n\n... which allows us to drop lib/pengine/variant.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b51a0889f98d24fe5450f24b07bd0e5f0aaec391", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Test: libpe_status: use bundle iterator in native_find_rsc_test.c\n\n... so we can isolate bundle variant data to lib/pengine/bundle.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17e9f22a21623438b5cf7ab30ccf5c1adcd1e54a", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: functionize getting bundle's first container\n\n... and use it in pcmk__bundle_add_utilization(), so pcmk_sched_bundle.c no\nlonger needs to access variant.h or pe__bundle_variant_data_t.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f51d6e286897733f5b4905b0664cc4e8de4677d", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: move pcmk__get_rsc_in_container() to libpe_status\n\n... to help isolate bundle variant data to lib/pengine/bundle.c.\nAlso rename to pe__get_rsc_in_container().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "498796827a7f472815cb4269b5150e5a1faa64b3", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__output_bundle_actions()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da30d5042d54afe27d118993eb64d358ecd2d6f1", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__bundle_create_probe()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c66e38e49ff7f3d85ad9157f7af0706bee7f3be9", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__bundle_expand()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90033a5bd56ce1b15c1330e0eaec3b75be8c6e7e", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__bundle_rsc_location()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e693e9981fda2d79a0cfbf14342be668ff56c40", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__bundle_apply_coloc_score()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21d366d9f1131c51bae1ba358d391980667490de", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in compatible_replica_for_node()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0be9027c7d7b542d93615561c5bc8760a0c166b", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: drop redundant arguments from compatible_replica()\n\nfilter was always RSC_ROLE_UNKNOWN, and current was always FALSE", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "094835d92ba18ee5d8f380398836e787ffe3c5c9", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__bundle_internal_constraints()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7fdb0423263eca33202cee538c4fe580c0b05d60", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use replica iterator in pcmk__bundle_create_actions()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0e103782f11db8fde2b73ff68504bc79d732f57", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: add iterator function for bundle replicas\n\n... and use it in pcmk__bundle_allocate(), to help isolate bundle variant data\nto lib/pengine/bundle.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b186f83411b544793911664b71c454123f3f650", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: expose pe__bundle_replica_t internally", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "939ffda3a7fa1fb483f2c5afe88b5d1da0c707f4", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: add accessor for a bundle's inner resource\n\n... and use it in pcmk_sched_bundle.c, to help isolate bundle variant data to\nlib/pengine/bundle.c.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b93fbddd1d94ee7e9c5efeb72c0114169dec51eb", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: use bundle convenience functions\n\n... where appropriate, to help isolate bundle variant data to\nlib/pengine/bundle.c.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eb43282aa4324f7af5c86b2f543da9b8eb38df6", "commit_date": "2023-06-05T19:19:36Z", "commit_message": "Refactor: scheduler: move is_bundle_node() to libpe_status\n\n... as pcmk__node_is_bundle_instance(), to help isolate bundle variant data to\nlib/pengine/bundle.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3eaefe52236cda628640c6e56625187a8ec1097c", "commit_date": "2023-06-05T19:19:08Z", "commit_message": "Merge pull request #3119 from kgaillot/best-practices\n\nFollow-up", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ec7c145dd34bce2b0b4e4920b910a5adf62144b", "commit_date": "2023-06-05T18:15:51Z", "commit_message": "Merge pull request #3101 from waltdisgrace/t583\n\nlow: xml: XML attribute improvements", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ddc05e7ecaa432e41df58faf9d1021ec4c3ab04", "commit_date": "2023-06-05T15:45:36Z", "commit_message": "low: xml: Separate XML attribute code into new file\n\n... and:\n\n- rename newly exposed functions so that they start with pcmk__\n- move a function to xml_internal.h\n\ncloses T583", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efedd88ca237a1184874914a57ebbace1534a6c7", "commit_date": "2023-06-05T14:51:02Z", "commit_message": "Low: scheduler: revert recently introduced regression", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3e82e4547e8f7dbc413d8d8aa2ae44aa0e6a79d9", "commit_date": "2023-06-05T14:37:17Z", "commit_message": "Refactor: scheduler: improve method argument validation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd690dfb1bcd5c724286c47b173b01518580b313", "commit_date": "2023-06-05T14:37:17Z", "commit_message": "Refactor: scheduler: rename variable to match method prototype", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0869ffea1ae57b2501f7040db955524dca41989d", "commit_date": "2023-06-05T14:37:17Z", "commit_message": "Doc: scheduler: correct comments per review", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f83fa99eed8db824acccf2e0677ea31b7f313a7", "commit_date": "2023-06-05T14:32:42Z", "commit_message": "Refactor: cts: Remove the HAE-related tests.\n\nThese rely on a schema extension that is no longer relevant.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd7e8f44b2ed6ba4f87f2a09754d1bc58936219e", "commit_date": "2023-06-05T14:32:42Z", "commit_message": "Refactor: cts: Remove BandwidthTest.\n\nThis has been disabled via the is_applicable method returning False\nsince at least 2008.  It can also live on in our memories via git.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b183a4236b07def26a96c698ce210db81cb5a209", "commit_date": "2023-06-05T14:32:42Z", "commit_message": "Refactor: cts: Remove ValgrindTest and StandbyLoopTest.\n\nThese have been disabled since d4dddae6dcfbb7b3350012cb0809cf05b2a039ea\nin 2018 and we haven't found a need to bring them back to life.  They\ncan live on in git's memory in case we need them for some reason.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "100641c3849a550fac9fb9e88295c63bc13b89d1", "commit_date": "2023-06-05T14:32:42Z", "commit_message": "Low: cts: self.rsh returns a tuple, not a single value.\n\nThis only appears to happen in the SplitBrain test, which itself only\nruns if you use --experimental-tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12e06137f149c83d2468c8a1354dff48d3d3f543", "commit_date": "2023-06-05T14:32:42Z", "commit_message": "Refactor: python: Add a get() method to Environment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6cc59c46ecc520795ab8730beb1541f8220fb25e", "commit_date": "2023-06-05T14:28:16Z", "commit_message": "Merge pull request #3117 from clumens/repr\n\nRefactor: python: Use %r instead of calling repr in format strings.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "873e7ea3f2b233753424a80975309bce5fdc887b", "commit_date": "2023-06-01T15:42:05Z", "commit_message": "Merge pull request #3111 from kgaillot/best-practices\n\nBest practices for clone-related functions in libpacemaker", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "afd03cfb9118a1afe5b3be9fd609b771611b720c", "commit_date": "2023-06-01T14:28:06Z", "commit_message": "Refactor: python: Use %r instead of calling repr in format strings.\n\nThis is the same thing, but without the explicit call to repr, which\nmakes the lines a little shorter and gets rid of closing parens in\nplaces where there's already a pile of them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c2bced1a766b7caa5c343c0d8faca3857df611b", "commit_date": "2023-06-01T07:36:49Z", "commit_message": "Doc:add translation for zh_CN", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f59a952cf1cb21bd1993b600429a9a65bb2985c", "commit_date": "2023-05-31T20:32:54Z", "commit_message": "low: xml: Improve efficiency of attribute value obtainment", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e19ffb1109f07f1ba8c09d341c4d5c237909f556", "commit_date": "2023-05-31T19:20:02Z", "commit_message": "Refactor: libcib, based: Make cib_zero_copy work with more op types\n\nPossibly \"all op types,\" but hard to say...\n\nIf cib_zero_copy is set, then *result_cib == existing_cib in the op\nprocessor functions. This causes problems for the processor functions\nthat free *result_cib and point it at a newly created CIB XML object.\n\nThe main part of the solution is to pass cib_perform_op() an\n(xmlNode **) instead of (xmlNode *) for current_cib and adjust the\nfunction body accordingly.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e40801951443f5aa7d5c0d514822a7c596d81139", "commit_date": "2023-05-31T19:20:01Z", "commit_message": "Test: cts-cli: Update output for pcmk_rc_no_transaction\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "585f707feb4ff8c57c8ccda321ab4197fc9bccd3", "commit_date": "2023-05-31T19:20:01Z", "commit_message": "API: libcrmcommon: New pcmk_rc_no_transaction return code\n\npcmk_rc_no_transaction indicates that no active transaction was found.\nAtomic transactions will soon be supported for CIB changes. This code\ncould theoretically be used for other types of transactions later, if\nand when they exist.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "721868f4654a2cfe019e7a8eabb97c3ba566dd93", "commit_date": "2023-05-31T19:20:01Z", "commit_message": "API: libcib: New cib_transaction value in enum cib_call_options\n\nThis option will be used to add a CIB request to a client's existing CIB\ntransaction.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5332899cfc4c5455d33bdb64d7598f55c164e88", "commit_date": "2023-05-31T19:20:01Z", "commit_message": "Refactor: based: Move do_local_notify()\n\nMove it above cib_common_callback_worker() because we'll use it there in\nan upcoming commit. No code changes otherwise.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "348b46f691c941514e160b1bac4bde25bb5dafd0", "commit_date": "2023-05-31T19:20:01Z", "commit_message": "Refactor: based: Expose cib_process_request internally\n\nAnd return a legacy Pacemaker return code.\n\nIn an upcoming commit, it will be much simpler to call\ncib_process_request() from another file, compared to adding special case\nhandling and calling cib_common_callback_worker(). It will also be\nnecessary to check the return code for errors.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4326ae5e74df7f586065cba98e19e57760ea58dc", "commit_date": "2023-05-31T19:20:01Z", "commit_message": "Refactor: based: Make OUR_NODENAME macro global\n\nWe'll need this for validating a request that is being added to a CIB\ntransaction.\n\nRef T185\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3630b8137d0c07262b76ef246daa5077207634bf", "commit_date": "2023-05-31T14:46:58Z", "commit_message": "Merge pull request #3113 from nrwahl2/nrwahl2-fixes\n\nMinor pacemaker-based fixes and improvements", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f9757dd98c6f389210103495d137124dfff23f6", "commit_date": "2023-05-31T14:13:10Z", "commit_message": "Merge pull request #3114 from clumens/cts-tests-batch-1\n\nConvert the first batch of CTS test classes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "115f1a2ee0c54b75bd77002a873241bb105a9f76", "commit_date": "2023-05-31T13:41:48Z", "commit_message": "Refactor: python: Improve standbytest.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Simplify how the watchpats list is built.\n\n* Get rid of the initial check of what resources are running.  We don't\n  do anything with this, and checking has no side effects aside from\n  printing the list of resources out.\n\n* Rename bad_run to rscs_on_node to better explain what it does.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac3ba1ed55fce10b24089c163f55a3d3940f39d8", "commit_date": "2023-05-31T13:39:54Z", "commit_message": "Refactor: python: Improve comments and whitespace in standbytest.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8933bc4dd8e4bfc2e655b3c68ec67cec6490a9d4", "commit_date": "2023-05-31T13:39:54Z", "commit_message": "Refactor: python, cts: Move StandbyTest into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6939a0c7f03a96b4c6096f84110a16fe8cc6c551", "commit_date": "2023-05-31T13:39:54Z", "commit_message": "Refactor: python: Improve partialstart.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Rename stopall to _stopall.  This is a private attribute, so name it\n  like one.\n\n* Simplify how the watchpats list is built.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c10310fba86cbcda0e2bbf02acaaaef5c6f66b96", "commit_date": "2023-05-31T13:39:54Z", "commit_message": "Refactor: python: Improve comments and whitespace in partialstart.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95041f6ece1a845f6ec44a7d5092f7c2d5279668", "commit_date": "2023-05-31T13:39:54Z", "commit_message": "Refactor: python, cts: Move PartialStart into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4c3cd621311425748fa16b30b0d282883d7e3d8", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python: Improve restartonebyone.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Rename restart to _restart and make sure to define it in __init__.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a6d7c296658c4b6bf73074a91cc7d467939b0de", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python: Improve comments and whitespace in restartonebyone.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8489dbbd34f03b767148dba0a863889d6d197904", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python, cts: Move RestartOnebyOne into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8973cd869cef9b07b45169ba7d47cf6c6b494758", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python: Improve stoponebyone.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Simplify how the failed list is checked.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "240184938d99a52a62b1941546002b71f8541bb6", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python: Improve comments and whitespace in stoponebyone.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b1785454af676c7924575e3e3fe19a88395da7cc", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python, cts: Move StopOnebyOne into the _cts module.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68ff9b490f9a89be7235e1e450a9564f369541b3", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python: Improve simulstop.py.\n\n* Rename stopall to _stopall.  This is a private attribute, so name it\n  like one.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b31d7fe15ead0e5fa485e0aa490251587baba8c4", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python: Improve comments and whitespace in simulstop.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c05876f6939644022639928e60437704b384d738", "commit_date": "2023-05-31T13:39:53Z", "commit_message": "Refactor: python, cts: Move SimulStop into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdf9d60f718fb7aab190de33262aff1631f1d41c", "commit_date": "2023-05-31T13:39:48Z", "commit_message": "Refactor: python: Improve simulstart.py.\n\n* Rename stopall to _stopall.  This is a private attribute, so name it\n  like one.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be0c4fb9767713f64ec4830f158e5cf0029a11b9", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Pass operation to cib_process_command()\n\nAvoid looking it up twice. We only call cib_process_command() once, from\ncib_process_request() after verifying that operation is non-NULL.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c0ecff72846b7b614585d9d84bb91c6a1cbd3ea", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Improve functionization of forward_request()\n\ncib_process_request() is overlong and this helps slightly. The \"if\nneeds_forward\" block contained several lines that can be moved inside\nforward_request().\n\nWhile we're here, consolidate the redundant \"client not interested\"\ntrace messages into one place, add doxygen for forward_request, and\nimplement a few other best practices as appropriate.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "766c4471770f0a033512e72b3cd27fef1e00a5fe", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Functionize checking if we should send replace notify\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40c25b29631dba8c21bbb6073f18150c63ef5889", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Functionize comparing digests before and after CIB op\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84975b53abd62044db7e998231b21b180d8bd4ab", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Functionize getting CIB section digests for notify\n\nAlso change \"//\" to \"/\" at the beginning of the XPath defined constants.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83dbd7921d563cedf812488a96716437bf445e8b", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: libcib, based: New pcmk__set_change_section() macro\n\nThis new macro sets enum cib_change_section_info flags.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "25169cca029d94c3ac18444a878181813044e5e9", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Set cib_change_section_info flags instead of clearing\n\nFeels more readable now that we're treating erase and replace the same.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c380572f28d604622185038d29be023853978f67", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: New cib_op_attr_{replaces,writes_through} flags\n\ncib_op_attr_replaces is necessarily a superset of cib_op_attr_modifies\nand implies that the latter is set. However, we set cib_op_attr_modifies\nexplicitly to make callers simpler.\n\nThis handles the cases in cib_process_command() where we currently use\npcmk__str_any_of() (except for one case in a legacy code block that\nwould require yet another new cib_op_attr flag).\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "987c7bf3ef3954a6f5db9fcab21471550982e976", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Check cib_change_section of erase op for replace notify\n\nTechnically, any of these fields could be empty before the erase op. We\nshould treat erase like replace and check which specific fields have\nchanged.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11b6ff51bad873b98e1863562ca2318b299ca248", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Low: based: NULL-check digest strings in cib_process_command()\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c49ed97bf789f28b1c45f104c445b7694039311", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Fix use-after-free in cib_process_command()\n\nactivateCibXml() frees the_cib on success. current_cib holds a pointer\nto the_cib. So the crm_trace() called crm_element_value() on a\nfreed-but-not-nulled XML node.\n\nAlso improve the message and log at error level on failure.\n\nFinally, drop the local current_cib variable completely. It only\nmarginally improves readability, while it makes the function more error-\nprone. We risk forgetting to update the current_cib pointer when we\nupdate or free the_cib, as we've seen here.\n\nThere are more improvements we could (and should) make to tracing and to\nthe use and documentation of activateCibXml(), but those can wait.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f29048d52eebdc3b1599deb626f87c0c415eff01", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Drop needs_forward argument from parse_peer_options()\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3cb1844f49dbbf8898224a1f3a04278e76b07537", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Clean up parse_local_options_v2()\n\nImprove clarity of conditions. Use consistent order when setting\nbooleans. Add a trace message for always-local ops.\n\nIf needs_forward is TRUE, then cib_process_request() ignores all the\nother booleans. For clarity, set them to FALSE.\n\nIn particular, needs_reply = TRUE is nonsense if needs_forward is TRUE.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4e15cc36a48885675877933c9ce5227e788f01e8", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Refactor: based: Remove PCMK__CIB_REQUEST_ALL_SECONDARY\n\nIt was unused as of Pacemaker-1.1.11, so it should be fine to drop.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2dd23fffdef44d5a788ed08b70e8fffa87f9e5ad", "commit_date": "2023-05-31T09:47:55Z", "commit_message": "Doc: based: Add some COMPAT flags to legacy code\n\nThese are blocks that don't involve cib_legacy_mode() or the legacy_mode\nvariable explicitly. The COMPAT flags make them slightly easier to find\nwhen we're cleaning up at a compatibility break.\n\nF_CIB_GLOBAL_UPDATE can be set either by legacy code (the broadcast\nblock in send_peer_reply) or by sync_our_cib(). The sync_our_cib() case\nmight remain useful outside of a legacy context, I'm not entirely sure.\nI've only marked the uses that are definitely legacy.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "853c202ca9ba0a105bc8a2d734d32f2c80d55d31", "commit_date": "2023-05-30T06:02:03Z", "commit_message": "Refactor: based: Move cib_msg_copy() to based_messages.c\n\nAnd make it static. It's logically message-related, and the only caller\nis sync_our_cib().\n\nAlso remove the CRM_CHECK() for replace_request non-NULL. cib_msg_copy()\nasserts if it's NULL.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "825a62f12660dbf27d9d065b0db4a3885420f0a3", "commit_date": "2023-05-30T06:02:03Z", "commit_message": "Refactor: based: Fix bad sync check in sync_our_cib()\n\nPreviously, if host was NULL, we would try to print it in the\ncrm_debug() call. Instead of just adding a pcmk__s() call, here we bail\nout early and return an error if neither `all` nor `host` is set.\n\nWe could add a crm_log_xml_info() call for the request but it seems\nunnecessary. Especially since the request itself would be fine if `all`\nwere set.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4145a585e4071d75784da573dffce802830e0cff", "commit_date": "2023-05-30T06:02:03Z", "commit_message": "Doc: based: Remove meaningless comment from sync_our_cib()\n\nThe comment was added in 5815c22a. It describes the reason for removing\na particular condition. However, the condition no longer exists (because\nit was removed), so the comment doesn't refer to anything in the code.\n\nThis comment should have been part of the commit message instead.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60cb5ff525e3947ffc2dc396f0db949d2d132079", "commit_date": "2023-05-30T06:02:03Z", "commit_message": "Refactor: based: COMPAT note for cib_op_attr_modifies in primary request\n\nPCMK__CIB_REQUEST_PRIMARY does not modify the CIB. It only puts the\nlocal CIB manager into primary (read/write) mode.\n\nThe \"modifies CIB\" boolean was set to true via commit dd4f9887 in 2008.\nNo context was given besides \"master now needs the config so that it can\nset the correct schema version.\" However, processing a\nPCMK__CIB_REQUEST_PRIMARY does not set the schema version.\n\nThere might be side effects in legacy mode if we drop the attribute\ncompletely now.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b1c54f6bd0e343adcc12a5953c4e0afd873d6d7", "commit_date": "2023-05-30T06:02:03Z", "commit_message": "Refactor: based: New cib_op_attr_local value in enum cib_op_attr\n\nThis simplifies checking for primary and secondary requests in\nparse_local_options_v2(), and it's extensible if more local-only\nrequests are added in the future.\n\nThis does have a side effect: PCMK__CIB_REQUEST_SECONDARY never had the\ncib_op_attr_modifies flag (or its equivalent boolean in older code) set.\nSo we never matched it in the if condition. Now we do.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "175bf08f01c4148c2916ca97b7b8e54868b5fae7", "commit_date": "2023-05-30T06:02:03Z", "commit_message": "Refactor: based: Functionize CIB request reply creation\n\nPlace it above cib_common_callback_worker() now because we'll call it\nthere later.\n\nSigned-off-by: Reid Wahl <nrwahl@protonmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aff626c08b3b0dad06f822e78fbec48d5da515f8", "commit_date": "2023-05-25T19:36:48Z", "commit_message": "Refactor: python: Improve comments and whitespace in simulstart.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0b08afe5b84682c327c8af352c44f5270222235", "commit_date": "2023-05-25T19:36:48Z", "commit_message": "Refactor: python, cts: Move SimulStart into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e635c958d64e81f6c41dbb0928f3894b757e5daf", "commit_date": "2023-05-25T19:36:48Z", "commit_message": "Refactor: python: Improve startonebyone.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Get rid of the unused ns variable.  The ClusterManager object cares\n  about NodeStatus, but this individual test does not.  This seems like\n  a leftover from a previous refactoring.\n\n* Rename stopall to _stopall.  This is a private attribute, so name it\n  like one.\n\n* Simplify how the failed list is checked.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8cf646d5c73b838bec0cbd2fa8fd86329147b38", "commit_date": "2023-05-25T19:36:48Z", "commit_message": "Refactor: python: Improve comments and whitespace in startonebyone.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e10c663e31122840a85e82df2bd0d0aee4aa3750", "commit_date": "2023-05-25T19:36:48Z", "commit_message": "Refactor: python, cts: Move StartOnebyOne into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0236b9783c9bb1252cc01dabe6b305edac7dd9b1", "commit_date": "2023-05-25T19:36:42Z", "commit_message": "Refactor: python: Improve stonithdtest.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Use ExitStatus instead of hardcoding a return value.\n\n* Remove the unused is_dc variable.\n\n* Simplify how the watchpats list is built.\n\n* Get rid of an unnecessary elif block.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74347ead84d9e1e314573b70866db4bc5158573a", "commit_date": "2023-05-25T19:36:42Z", "commit_message": "Refactor: python: Improve comments and whitespace in stonithdtest.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca1c114775be670d445fcda70b17fdb5cf98fbd4", "commit_date": "2023-05-25T19:36:42Z", "commit_message": "Refactor: python, cts: Move StonithdTest into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cb0b8bf2a620cc373016213cd9acf8e6d7f5ffe", "commit_date": "2023-05-25T19:36:36Z", "commit_message": "Refactor: python: Improve restarttest.py.\n\n* Remove the unused ret1 variable.\n\n* Use substitution strings instead of adding.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fce3d4b06dd1df4325446c24081dafe1669747fc", "commit_date": "2023-05-25T19:11:36Z", "commit_message": "Refactor: python: Improve comments and whitespace in restarttest.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffc90365f2d50369b00e6c76bf1bd583bc54610b", "commit_date": "2023-05-25T19:11:36Z", "commit_message": "Refactor: python, cts: Move RestartTest into the _cts module.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c734c027d7ed683ddc09c88f9039f1ddf7033c95", "commit_date": "2023-05-25T19:11:36Z", "commit_message": "Refactor: python: Improve fliptest.py.\n\n* Disable pylint warnings we can't really do anything about.\n\n* Get rid of an unnecessary else block.\n\n* Rename \"type\" to \"kind\" so we're not using a reserved word.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "462577aff7cbdca9657f67fda33e7a21c099b014", "commit_date": "2023-05-25T19:11:36Z", "commit_message": "Refactor: python: Improve comments and whitespace in fliptest.py.\n\nNo code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71f49c5fcdc843814e4251d839ad23893fa56708", "commit_date": "2023-05-25T19:11:36Z", "commit_message": "Refactor: python, cts: Move FlipTest into the _cts module.\n\nNo significant code changes here.  I changed the import in CTStests.py\nbecause it's rapidly going to get out of control.  On the other hand,\nonce all the tests are rearranged, I'm probably going to have to do\nsomething totally different with how the list of tests is built which\nmight mean I won't need the import glob.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b46afe4b62e4f82719deda262ad3e167e462290", "commit_date": "2023-05-25T14:38:45Z", "commit_message": "Merge pull request #3110 from clumens/membership\n\nSupport the python membership protocol in cts", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1298840dbad8889220b92dd442dbd5abee84389", "commit_date": "2023-05-24T20:17:44Z", "commit_message": "Merge pull request #3109 from ClusterLabs/2.1\n\nPull 2.1.6 back into main branch", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "070fac89a540b3904a6536d9818e4f3bd22588e4", "commit_date": "2023-05-24T19:20:38Z", "commit_message": "Refactor: python, cts: Support membership protocol in CtsLab.\n\nThis is just like in Environment, but for the CtsLab class instead.  I'm\nnot actually sure that anything was using has_key on this class, but if\nit wants to look like a dict we should at least add the methods that\nmake it act like one.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23c76571f509a874cea3914166110f0d3fe9ab91", "commit_date": "2023-05-24T19:19:07Z", "commit_message": "Refactor: python, cts: Support membership protocol in Environment.\n\nBasically, just rename has_key to __contains__.  We can then use \"xyz in\nself._env\" everywhere instead of making a list out of the keys and then\nchecking in that.\n\nAlso, simplify a block at the end of __getitem__.  We can use get() to\nreturn a default value of None if the key is not present instead of\nwriting this exact same behavior by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}