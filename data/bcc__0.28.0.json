{"master": [{"commit_oid": "37eb41af37eddfe497892cc458655737ac993fc8", "commit_date": "2023-10-17T15:04:17Z", "commit_message": "Merge pull request #4765 from inwardvessel/memleak_dual_license\n\nmemleak: dual license bpf prog", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions \"fixing a memleak\" and \"dual license bpf program\", which suggests that the commit is related to resolving an issue with memory leaks in the code."}}, {"commit_oid": "e78a90ca28bc0a6fff0858019d2d510da649cd45", "commit_date": "2023-10-16T21:25:04Z", "commit_message": "dual license memleak bpf prog", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions \"memleak bpf prog\", which suggests that there was a memory leak in the BPF program."}}, {"commit_oid": "b1bd28e785b4231aba99dd02a239102db56564af", "commit_date": "2023-10-16T14:30:38Z", "commit_message": "Merge pull request #4742 from chantra/fix_vla_bound\n\nsanitizer: Fix UndefinedBehaviorSanitizer: non-positive-vla-index", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "7d1ece0a6759c80590eaa30cd6c3a998c10b0ce3", "commit_date": "2023-10-16T14:29:39Z", "commit_message": "Merge pull request #4737 from chantra/llvm_config\n\nUse LLVM_VERSION_MAJOR from llvm-config.h instead of inferred LLVM_MAJOR_VERSION", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "cab1f40a9b223d5ddc2236a25dce9b834a64390a", "commit_date": "2023-10-09T15:15:43Z", "commit_message": "tools/ppchcalls: fix incorrect hypercall name\n\nHypercall name 'H_DISABLE_AND_GETC' is incorrect. In this commit, it\nhas been corrected to 'H_DISABLE_AND_GET' to align with this linux\nkernel commit 0f10228c6ff6 (\"KVM: PPC: Fix typo on H_DISABLE_AND_GET\nhcall\")\n\nSigned-off-by: Aboorva Devarajan <aboorvad@linux.vnet.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions fixing an incorrect hypercall name, which is a bug in the code."}}, {"commit_oid": "89ae23dea338a4550ca1b9a06ae444eca46ce825", "commit_date": "2023-10-09T15:15:43Z", "commit_message": "tools/ppchcalls: added additional hypercall list\n\nDuring the analysis of hypercalls using this script, it was observed\nthat certain hypercall names were absent. To ensure comprehensive\ncoverage, officially supported hypercalls have been incorporated into\nthe list.\n\nList of additional hypercalls that have been included with their\nrespective opcodes:\n\n456:  'H_GET_CPU_CHARACTERISTICS'\n672:  'H_VASI_SIGNAL'\n680:  'H_VIOCTL'\n732:  'H_REG_SUB_CRQ'\n736:  'H_FREE_SUB_CRQ'\n740:  'H_SEND_SUB_CRQ'\n744:  'H_SEND_SUB_CRQ_INDIRECT'\n1108: 'H_PKS_SIGNED_UPDATE'\n\nSigned-off-by: Aboorva Devarajan <aboorvad@linux.vnet.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions that certain hypercall names were absent and have been incorporated into the list, which suggests that there was a bug or issue with the previous list that has been fixed."}}, {"commit_oid": "ec981a5d583d5dadd812387b622d48fb2aaa6f17", "commit_date": "2023-10-05T23:33:11Z", "commit_message": "Adding needed packages for Ubuntu 23.04", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Package Installation\" or \"Other\"."}}, {"commit_oid": "e6775c49ff1eb13a541a9c68c9edb586e909ce34", "commit_date": "2023-10-05T14:28:03Z", "commit_message": "ksnoop: use bpf_get_func_ip() where helper is available\n\nbpf_get_func_ip(ctx) will get the function address; use it where\navailable using the BPF core enum value check for the function.\nThis avoids needing to get the caller IP via KSNOOP_IP_FIX()\nfor more up-to-date kernels.\n\nThis fixes issue #4746 for kernels newer than 5.13; an additional\nfollowup will be needed to address this for older kernels.\n\nKindly tested by https://github.com/matthew-olson-intel on a\nrecent kernel.\n\nReported-by: dubeyabhishek (https://github.com/dubeyabhishek)\nSigned-off-by: Alan Maguire <alan.maguire@oracle.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing issue #4746 for kernels newer than 5.13, which suggests that there was a bug or error in the code that needed to be addressed."}}, {"commit_oid": "32be0a338e9fc89f21168ac7fa3eb6557baa9ba1", "commit_date": "2023-10-04T08:57:04Z", "commit_message": "use tid instead of tgid", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "85c0e1eb567a2946fe2afecbbd651116be57526a", "commit_date": "2023-09-19T05:04:32Z", "commit_message": "sanitizer: Fix UndefinedBehaviorSanitizer: non-positive-vla-index\n\nWhen running a test leveraging bcc, and with sanitization enabled, the following\nerror was triggered:\n```\n...\nthird-party/bcc/master/src/cc/api/BPF.cc:123:21: runtime error: variable length array bound evaluates to non-positive value 0\n    #0 0x7f3fc6f06d13 in ebpf::BPF::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, std::vector<ebpf::USDT, std::allocator<ebpf::USDT>> const&) third-party/bcc/master/src/cc/api/BPF.cc:123\n...\n...\nSUMMARY: UndefinedBehaviorSanitizer: non-positive-vla-index third-party/bcc/master/src/cc/api/BPF.cc:123:21 in\n...\n```\n\nThis change uses a vector instead of initializing a possibly 0-length array.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " This commit message can be categorized as \"Bug Fix\". The commit message mentions a specific bug in the code, specifically a runtime error caused by a variable length array bound evaluating to a non-positive value, and provides a fix by using a vector instead of initializing a possibly 0-length array."}}, {"commit_oid": "6f11bf7e2806658c4bd69415b921cedf85d9ebfe", "commit_date": "2023-09-13T23:24:35Z", "commit_message": "Use LLVM_VERSION_MAJOR from llvm-config.h instead of inferred LLVM_MAJOR_VERSION\n\nInstead of inferring this from within the CMakeList.txt file, we can pull it\ndirectly from llvm-config.h.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions fixing a bug by using a different variable from llvm-config.h instead of inferring it from within the CMakeList.txt file."}}, {"commit_oid": "ec49363e2e9daec026ee6cae4c5fc316f8fab0ff", "commit_date": "2023-09-01T11:21:30Z", "commit_message": "tools/ppchcalls : Add new hcalls introduced for nested KVM support", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"New Feature or Functions\"."}}, {"commit_oid": "a22bd2548dc8616e38c9b5b95cc4a22f53a6b2d6", "commit_date": "2023-08-31T12:32:18Z", "commit_message": "tools: Remove manual `KBUILD_MODNAME` definition", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "0fcb3461197d360e963688f5985fe36a0d3337cd", "commit_date": "2023-08-31T12:22:47Z", "commit_message": "cc: remove a spurious check for UID 0\n\nThis drops an hardcoded check for the root user-ID before accessing\n`/proc/kallsyms`, in order to fix a bug which is preventing proper\nkernel symbols resolution by non-root users.\n\nThe `/proc/kallsyms` file is generally available to non-privileged\nusers:\n```\n> runuser -u nobody -- wc -l /proc/kallsyms\n\n217514 /proc/kallsyms\n```\n\nIts content is further controlled by the `CAP_SYSLOG` capability\nthrough `/proc/sys/kernel/kptr_restrict`:\nhttps://man7.org/linux/man-pages/man7/capabilities.7.html\n\nAs such, it is better to directly open it and rely on `fopen()`\nfor privileges checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing a bug by removing a spurious check for UID 0, which suggests that the commit is related to resolving an issue or problem in the code."}}, {"commit_oid": "6813fbce8718bede5075272cdc3ab9314eb91b5c", "commit_date": "2023-08-31T12:17:59Z", "commit_message": "Allow for installing python as a non-system package\n\nDebian's python, unlike stock python, expects system packages to be\ninstalled in `/usr/local/lib/python3.X/dist-packages/` and not `/usr/local/lib/python3.X/site-packages/`. As such\ndebian's python setuptools has a flag `--install-layout deb` which\nplaces library files in the correct place. `src/python/CMakeLists.txt`\nchecks if the system is debian and adds this flag.\n\nHowever, if you're trying to use BCC with a non-system version of python\n(for example miniconda) the different package layout (and setuptools\nflag) aren't there. Also, libraries aren't expected to be placed in\n/usr, but whatever prefix the alternative python install is using.\n\nThis PR adds two flags to the CMAke build:\n* PY_SKIP_DEB_LAYOUT - which skips adding the `--install-layout deb`\n  flag to the python install command\n* PYTHON_PREFIX which (if set) takes the place of CMAKE_INSTALL_PREFIX\n  as a target for installing python packages\n\nBoth are needed to allow installing python bindings into python\ninstalls that aren't the system install on debian hosts. For example,\nfor a miniconda install on ubuntu:\n\nWith this PR, I can get a working install with miniconda on ubuntu 22\nusing:\n\n```\ncmake ..  -DPY_SKIP_DEB_LAYOUT=true  -DPYTHON_PREFIX=/home/vagrant/miniconda3/envs/ddpy3/\n```", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions that the previous installation layout for Debian's python was incorrect, and the new flag `--install-layout deb` is added to fix this issue."}}, {"commit_oid": "176fc2eceaa3c0c6679a2e18b3a99183522b0778", "commit_date": "2023-08-31T12:10:59Z", "commit_message": "tools/{filegone.py,filelife.py}: Check btf struct field for CO-RE\n\nSince kernel commit abf08576afe3(\"fs: port vfs_*() helpers to struct\nmnt_idmap\"), the vfs_unlink/create function use 'struct mnt_idmap' instead\nof 'struct user_namespace'.\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions fixing a bug related to the vfs_unlink/create function using the wrong struct in kernel commit abf08576afe3."}}, {"commit_oid": "442f658dc22d70bb024cac448932e27090d4a965", "commit_date": "2023-08-31T11:46:16Z", "commit_message": "tools/profile: add support for PID-namespacing (#4709)\n\nThis adds translation logic to perform PID translation across\r\nPID-namespaces.\r\nIt is now possible to profile a target process from within a\r\nnested PID-namespace (e.g. in a container).\r\nAlso add a note in profile_example.txt file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions fixing a bug (#4709) and adds details about the fix, including the new translation logic and the ability to profile a target process from within a nested PID-namespace."}}, {"commit_oid": "9596edb9415197aa52d771b65581a73b89f3f4dc", "commit_date": "2023-08-27T14:41:18Z", "commit_message": "libbpf-tools/filelife: Check btf struct field for CO-RE\n\ncommit abf08576afe3(\"fs: port vfs_*() helpers to struct mnt_idmap\") [0] use\n`struct mnt_idmap *new_mnt_idmap` instead of `struct user_namespace *\nold_mnt_userns`.\n\n[0] https://github.com/torvalds/linux/commit/abf08576afe3\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing a bug by changing the code to use `struct mnt_idmap *new_mnt_idmap` instead of `struct user_namespace *old_mnt_userns`."}}, {"commit_oid": "173282d39b98e3e7e6391d1159c5031bb4adb230", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Removing leftovers", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Sure! Based on the commit message you provided, I would categorize it as \"Other\"."}}, {"commit_oid": "cdb834d837c7c3bb991649870dc0124696d6b286", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Allowing to get the histagram in a variable for deeper work", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"New Feature or Functions\"."}}, {"commit_oid": "cbd24ffd767911acbc1a54c65e8da1f8ad4d3153", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "libbpf-tools/tcprtt: use the same options to filter IPv4 and IPv6 adresses\n\nThere is no need for the extra options. We can distinguish IPv4 and\nIPv6 adresses by their format.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "697f1cfc8e051a57a0c1c4c6a11a52fe1052d7c3", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcprtt: Allow to filter on IPv6 addresses\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions \"Allow to filter on IPv6 addresses\", which suggests that a bug or issue related to filtering on IPv6 addresses has been fixed."}}, {"commit_oid": "1efe708889b1775108ed7a8d7b65032a0ec1b8b2", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcptracer: remove custom inet_ntoa function\n\nIt isn't used, and it doesn't look like it ever was.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions removing a custom function called \"inet_ntoa\" that is no longer used and was never actually implemented. This suggests that the commit is focused on fixing a bug or issue related to the function's absence."}}, {"commit_oid": "01673352497d3a170fcf43e35a2df992b1f4c39e", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools, libpf-tools: increase IPv6 address width to 39 characters\n\nSeveral tcp tools have a --wide option to accommodate longer IPv6\naddress. However, they seem to assume that IPv6 addresses are at most\n26 characters. I don't know where that numbers comes from, but that's\nobviously not right: 8 number of 4 digits plus the colons, that would\nmake 39.\n\nINET6_ADDRSTRLEN is defined as 46 (so 45 characters) probably to\naccommodate for IPv6 mixed notation\n(ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255).\n\nI don't think that we have to align on 45 characters as I doubt\ninet_ntop would return a mixed notation address, but 39 is a must.\n\nCloses #4460\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " This commit message can be categorized as \"Bug Fix\". The commit message mentions increasing the IPv6 address width to 39 characters to accommodate longer IPv6 addresses, which fixes a bug in several tcp tools."}}, {"commit_oid": "9d78fb4c3cae11fab2d2494b9ce474ea4452846b", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcpstates: fix IPv6 journal\n\nWhen logging ipv6 state change, journal_fields tries to pack\nevent.addr and event.daddr, which is not an integer in this, to\npresent a bytes-like object to socket.inet_ntop. This can be fixed by\nhaving a similar type for [sd]addr for IPv4 and IPv6. Making both an\narray of u32 solves the issue by presenting a bytes-like object\ndirectly to inet_ntop, without the need for the struct packing stage.\n\nAlso  now, the similar behavior, makes it easier to factor code for\nIPv4 and IPv6.\n\nIt solves the following error:\n/usr/share/bcc/tools/tcpstates  -Y\nSKADDR           C-PID C-COMM     LADDR           LPORT RADDR           RPORT OLDSTATE    -> NEWSTATE    MS\nffff8b2e83e56180 0     swapper/9  ::              22    ::              0     LISTEN      -> SYN_RECV    0.000\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\nffff8b2e83e56180 0     swapper/9  2620:52:0:2580:5054:ff:fe6b:6f1f 22    2620:52:0:2b11:2f5e:407d:b35d:4663 60396 SYN_RECV    -> ESTABLISHED 0.010\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing an issue with the `journal_fields` function in the `tcpstates` tool, specifically an error related to the `struct.error: required argument is not an integer` message. This suggests that the commit fixes a bug in the tool's code that was causing issues with integer arguments."}}, {"commit_oid": "652bf244cd0e3eee560e3479d952474c2c26c9d3", "commit_date": "2023-08-20T22:22:26Z", "commit_message": "examples/perf/ipc: Use generic hardware events\n\nThe use of hardcoded raw events breaks compatibility as these are tied\nto specific processors. On other processors, it could also be the case\nthat the raw event codes represent something completely different.\n\nHence, use the generic events for cycles and instructions as these are\navailable on most platforms with a core PMU.\n\nFixes: 59a753da (\"Add perf event data collection example for an userspace application\")\nSigned-off-by: Sandipan Das <sandipan.das@amd.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Performance Optimization\". The commit message mentions the use of generic hardware events to improve compatibility and avoid platform-specific issues, which is a common optimization technique in performance-related work."}}, {"commit_oid": "b11d0f234a82a7c907ad31c1cab798dbda579343", "commit_date": "2023-08-20T02:43:47Z", "commit_message": "Fix memory leak in capable.c\n\nThis commit adds a cleanup step to free the perf_buffer, fixing a memory leak in the\ncapable.c file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "66cb619e75ad2679ca529af8958f68d57e209777", "commit_date": "2023-08-13T16:21:14Z", "commit_message": "fix. backport compilation with llvm9 and earlier\n\nllvm::SectionRef changed the `getName` interface since LLVM10, in\nparticular, in commit llvm/llvm-project@a11d302fa0.\n\nIn llvm-9 and early version, `getName` required a StringRef reference as\na parameter, and returned a std::error_code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "64fd851c09ea301ecadfae0726e57dcd1d421228", "commit_date": "2023-08-13T16:20:23Z", "commit_message": "tools/statsnoop: Add more stat() variansts\n\nThe underlying system call employed by the Golang Stat() wrapper\nfunction is newfstatat().\nSee https://cs.opensource.google/go/go/+/refs/heads/master:src/syscall/zsyscall_linux_amd64.go;l=1453;drc=94e40d5603797fe4d9302421682bb5b997d9c568\n\nSigned-off-by: Jian Wen <wenjianhn@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the provided commit message, I would categorize it as \"Bug Fix\". The message mentions adding more statistics variables in the \"statsnoop\" tool, which suggests that there was a bug or issue with the current implementation that was fixed by adding these new variables."}}, {"commit_oid": "e219551690133a5dd46d3f68575c59c50e603c16", "commit_date": "2023-08-13T05:14:28Z", "commit_message": "tools/tcprtt: use simple cast instead of tcp_sk() and inet_sk()\n\ntcp_sk() and inet_sk() has been redefined to use the new\ncontainer_of_const() macro. It confuses something in bcc toolchain.\n\n/virtual/main.c:38:144: error: expected expression\n    struct tcp_sock *ts = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)cp_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\n/virtual/main.c:40:36: error: statement expression not allowed at file scope\n    const struct inet_sock *inet = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)net_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\nFor our use, it's safe to use simple casts as tcp/inet_sk() used to be\ndefined. The common struct sock is always the first field of struct\ntcp_sock and inet_sock and we only use read access.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message, I would categorize it as \"Bug Fix\". The commit message mentions fixing a bug in the `tools/tcprtt` file, and also mentions that the `tcp_sk()` and `inet_sk()` functions have been redefined to use a new container_of_const macro, which is causing issues in the BCC toolchain."}}, {"commit_oid": "18a6e04a4db2ef3b3f3297b4f369b82c39a93905", "commit_date": "2023-08-13T04:54:58Z", "commit_message": "tool/slabratetop: add definition of freelist_aba_t\n\nWith recent kernel containing the commit 6801be4f2653 (\"slub: Replace\ncmpxchg_double()\"), slabratetop fails to compiles with the following\nerror:\n\nIn file included from /virtual/main.c:86:\ninclude/linux/slub_def.h:56:3: error: unknown type name 'freelist_aba_t'\n                freelist_aba_t freelist_tid;\n                ^\n2 warnings and 1 error generated.\nTraceback (most recent call last):\n  File \"/usr/share/bcc/tools/slabratetop\", line 187, in <module>\n    b = BPF(text=bpf_text)\n        ^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/site-packages/bcc/__init__.py\", line 479, in __init__\n    raise Exception(\"Failed to compile BPF module %s\" % (src_file or \"<text>\"))\nException: Failed to compile BPF module <text>\n\nAdding the definition of freelist_aba_t fixes the issue.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "ddf49613c8b0a99dfc33b6fac83e15b0e12994ec", "commit_date": "2023-08-05T03:58:50Z", "commit_message": "tools/tcptop: Check the presence of tcp_sendpage before attaching it\n\nIn recent kernels, tcp_sendpage() has been replaced by\nsendmsg(MSG_SPLICE_PAGES). Check the presence of the k(ret)probes\nbefore attaching them.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions checking the presence of a function (tcp_sendpage) before attaching it, which suggests that there was a bug or issue related to the function's presence or usage."}}, {"commit_oid": "37c13009e4a96c7afe31a15fd5fde8b9b645b476", "commit_date": "2023-08-05T03:29:31Z", "commit_message": "libbpf-tools/execsnoop: fix ret type of bpf_probe_read_user*.\n\nThe bpf_probe_read_user_str* manpage says: On success, the strictly positive length of the output string, including the trailing NUL\ncharacter. On error, a negative value.\n\nSigned-off-by: opsnull <mingduo.zj@alibaba-inc.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions fixing the return type of a function, which suggests that there was a bug in the previous implementation."}}, {"commit_oid": "ed1c98047e0c68126bfb04c8c3ea2455f3b7674d", "commit_date": "2023-08-02T16:06:14Z", "commit_message": "tools: Add support for the new block_io_* tracepoints\n\nThe bio tools currently depends on blk_account_io_done/start functions\nthat can be inlined. To fix that, a couple of tracepoints have been\nadded upstream (block:block_io_start/done). This patch add the support\nfor those tracepoints when they are available.\n\nUnfortunately, the bio tools relies on data that is not available to\nthe tracepoints (mostly the struct request). So the tracepoints can't\nbe used as drop in replacement for blk_account_io_*. Main difference,\nis that we can't use the struct request as the hash key anymore, so it\nnow uses the couple (dev_t, sector) for that purpose.\n\nFor the biolatency tool, the -F option is disabled when only the\ntracepoints are available because the flags are not all accessible\nfrom the tracepoints. Otherwise, all features of the tools should\nremain.\n\nCloses #4261\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing a bug (#4261) and making changes to support new tracepoints for block_io*."}}, {"commit_oid": "41f8010e2e85616ad37303af20f77c1c717b9b11", "commit_date": "2023-07-30T23:49:40Z", "commit_message": "README: add rdmaucma\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the information provided in the commit message, I would categorize it as \"Document Improvement\"."}}, {"commit_oid": "34988cd7726b0fb8c7d58074043c35cf2ec2bb72", "commit_date": "2023-07-30T19:15:25Z", "commit_message": "tools/rdmaucma: Add new command\n\nAdd rdmaucma tools to trace RDMA UCMA events.\nThis can be useful to analyze issues on RDMA CM.\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"New Feature or Functions\". The message mentions adding a new command to the \"tools/rdmaucma\" tool, which is a new feature or function."}}, {"commit_oid": "ecf70a76a60d61bf29cdc560e06507580af69e4c", "commit_date": "2023-07-30T17:31:42Z", "commit_message": "tools/runqlat: fix data structure initialization with padding", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "612399d2d9e1eda7f61584543aecf3582d3a08d3", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Edit perf_event cc and python tests with pid argument", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Performance Optimization\"."}}, {"commit_oid": "3360c798bfefa891f1c122239101d57f014856b8", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Expose pid parameter in bpf_open_perf_event", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "a9e381f2dcdf693b5da48e5beb8481ab68f9b21b", "commit_date": "2023-07-30T16:35:55Z", "commit_message": "libbpf-tools: add block_io_{start,done} tracepoints support to bio tools\n\nSome bio tools fail to kprobe blk_account_io_{start,done} after v5.17,\nbecause they become inlined, see [0]. To fix this issue, tracepoints\nblick_io_{start,done} are introcuded in kernel, see[1].\n\nUpdate related bio tools to support new tracepoints, and also simplify\nattach.\n\n[0] Kernel commit 450b7879e345 (block: move blk_account_io_{start,done} to blk-mq.c)\n[1] Kernel commit 5a80bd075f3b (block: introduce block_io_start/block_io_done tracepoints)\n\nChange-Id: I62b957abd7ce2901eb114bd57c78938e4f083e4d\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " This commit message can be categorized as \"Bug Fix\". The commit message mentions that some bio tools fail to kprobe blk_account_io_{start,done} after v5.17, and tracepoints are introduced in the kernel to fix this issue. This is a bug fix for the issue with the bio tools."}}, {"commit_oid": "7ce3d7db44880312e7101874808f3468c8e4e1b4", "commit_date": "2023-07-25T12:00:46Z", "commit_message": "libbpf-tools: fix tcppktlat show wrong ports\n\nSigned-off-by: Wenbo Zhang <etherflow@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\"."}}, {"commit_oid": "18b00a903955950f796db85d1f24815f7a6f2177", "commit_date": "2023-07-10T18:19:05Z", "commit_message": "tools/statsnoop: bring back the syscall__ prefix\n\nfn_name of a syscall should start with \"syscall__\".\n\nSee\nhttps://github.com/iovisor/bcc/blob/v0.28.0/src/cc/frontends/clang/b_frontend_action.cc#L818\n\nWithout the patch, file names will not be printed.\n\nFixes: c743fcb17b46 (\"tools/statsnoop: Add some stat() variants (#4367)\")\n\nSigned-off-by: Jian Wen <wenjianh@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing a bug related to the printing of file names in the \"tools/statsnoop\" tool."}}, {"commit_oid": "4f91c89381325cd90eb66a9b11f806b8a453b68c", "commit_date": "2023-07-10T18:15:21Z", "commit_message": "libbpf-tools: Allow tcppktlat to run on old kernels\n\nCurrently, tcppktlat can only run on kernel v5.12+\nbecause of the usages of bpf_get_socket_cookie().\nThis commit gets the tool run on old kernels in a CO-RE\nway. While at it, also adds tcp_destroy_sock tracepoint.\nThis is necessary since there are cases where the socket\ndoes not get the chance to reach the tcp_rcv_space_adjust\ntracepoint and entries in start map never get removed.\n\nSigned-off-by: Hengqi Chen <hengqi.chen@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The commit message mentions fixing a bug in the `libbpf-tools` project by allowing the `tcpacktlat` tool to run on old kernels."}}, {"commit_oid": "51623b7fbe1bcb0dc3f7cf11bf9993191da6d3d4", "commit_date": "2023-07-10T18:06:41Z", "commit_message": "tools/tcpstates: fix context ptr modified error\n\nIntroduce local variable tcp_new_state,\nto avoid llvm optimization of args->newstate,\nwhich will cause context ptr args modified.\nspilt event.ports to lport and dport.\nswitch type of TCP state from unsigned int to int.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions fixing an error related to the context pointer being modified, which suggests that there was a bug in the code that needed to be addressed."}}, {"commit_oid": "e8ee4466e70b5ade69b1eca62fd1c14c0fbd6891", "commit_date": "2023-07-10T17:57:04Z", "commit_message": "libbpf-tools: Add support for IPv6 to tcprtt.\n\nSigned-off-by: Francis Laniel <flaniel@linux.microsoft.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions adding support for IPv6 to tcprtt, which suggests that a bug or issue related to IPv6 was fixed."}}, {"commit_oid": "71b5141659aaaf4a7c2172c73a802bd86a256ecd", "commit_date": "2023-07-09T09:24:00Z", "commit_message": "libbpf-tools: fallback to tracefs mount point if debugfs is not mounted\n\nChange-Id: Icab8356f9b43b4f28ad77fa4b21e826f74a25be8\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": ["bugfix", "new-security-features"], "llama2-7b-chat": " Based on the commit message you provided, I would categorize it as \"Bug Fix\". The message mentions \"fallback to tracefs mount point if debugfs is not mounted\", which suggests that the commit is related to fixing an issue with the debugfs mount point."}}]}