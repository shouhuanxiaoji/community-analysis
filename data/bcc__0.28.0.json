{"master": [{"commit_oid": "ec49363e2e9daec026ee6cae4c5fc316f8fab0ff", "commit_date": "2023-09-01T11:21:30Z", "commit_message": "tools/ppchcalls : Add new hcalls introduced for nested KVM support", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a22bd2548dc8616e38c9b5b95cc4a22f53a6b2d6", "commit_date": "2023-08-31T12:32:18Z", "commit_message": "tools: Remove manual `KBUILD_MODNAME` definition", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fcb3461197d360e963688f5985fe36a0d3337cd", "commit_date": "2023-08-31T12:22:47Z", "commit_message": "cc: remove a spurious check for UID 0\n\nThis drops an hardcoded check for the root user-ID before accessing\n`/proc/kallsyms`, in order to fix a bug which is preventing proper\nkernel symbols resolution by non-root users.\n\nThe `/proc/kallsyms` file is generally available to non-privileged\nusers:\n```\n> runuser -u nobody -- wc -l /proc/kallsyms\n\n217514 /proc/kallsyms\n```\n\nIts content is further controlled by the `CAP_SYSLOG` capability\nthrough `/proc/sys/kernel/kptr_restrict`:\nhttps://man7.org/linux/man-pages/man7/capabilities.7.html\n\nAs such, it is better to directly open it and rely on `fopen()`\nfor privileges checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6813fbce8718bede5075272cdc3ab9314eb91b5c", "commit_date": "2023-08-31T12:17:59Z", "commit_message": "Allow for installing python as a non-system package\n\nDebian's python, unlike stock python, expects system packages to be\ninstalled in `/usr/local/lib/python3.X/dist-packages/` and not `/usr/local/lib/python3.X/site-packages/`. As such\ndebian's python setuptools has a flag `--install-layout deb` which\nplaces library files in the correct place. `src/python/CMakeLists.txt`\nchecks if the system is debian and adds this flag.\n\nHowever, if you're trying to use BCC with a non-system version of python\n(for example miniconda) the different package layout (and setuptools\nflag) aren't there. Also, libraries aren't expected to be placed in\n/usr, but whatever prefix the alternative python install is using.\n\nThis PR adds two flags to the CMAke build:\n* PY_SKIP_DEB_LAYOUT - which skips adding the `--install-layout deb`\n  flag to the python install command\n* PYTHON_PREFIX which (if set) takes the place of CMAKE_INSTALL_PREFIX\n  as a target for installing python packages\n\nBoth are needed to allow installing python bindings into python\ninstalls that aren't the system install on debian hosts. For example,\nfor a miniconda install on ubuntu:\n\nWith this PR, I can get a working install with miniconda on ubuntu 22\nusing:\n\n```\ncmake ..  -DPY_SKIP_DEB_LAYOUT=true  -DPYTHON_PREFIX=/home/vagrant/miniconda3/envs/ddpy3/\n```", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "176fc2eceaa3c0c6679a2e18b3a99183522b0778", "commit_date": "2023-08-31T12:10:59Z", "commit_message": "tools/{filegone.py,filelife.py}: Check btf struct field for CO-RE\n\nSince kernel commit abf08576afe3(\"fs: port vfs_*() helpers to struct\nmnt_idmap\"), the vfs_unlink/create function use 'struct mnt_idmap' instead\nof 'struct user_namespace'.\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "442f658dc22d70bb024cac448932e27090d4a965", "commit_date": "2023-08-31T11:46:16Z", "commit_message": "tools/profile: add support for PID-namespacing (#4709)\n\nThis adds translation logic to perform PID translation across\r\nPID-namespaces.\r\nIt is now possible to profile a target process from within a\r\nnested PID-namespace (e.g. in a container).\r\nAlso add a note in profile_example.txt file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9596edb9415197aa52d771b65581a73b89f3f4dc", "commit_date": "2023-08-27T14:41:18Z", "commit_message": "libbpf-tools/filelife: Check btf struct field for CO-RE\n\ncommit abf08576afe3(\"fs: port vfs_*() helpers to struct mnt_idmap\") [0] use\n`struct mnt_idmap *new_mnt_idmap` instead of `struct user_namespace *\nold_mnt_userns`.\n\n[0] https://github.com/torvalds/linux/commit/abf08576afe3\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "173282d39b98e3e7e6391d1159c5031bb4adb230", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Removing leftovers", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb834d837c7c3bb991649870dc0124696d6b286", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Allowing to get the histagram in a variable for deeper work", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbd24ffd767911acbc1a54c65e8da1f8ad4d3153", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "libbpf-tools/tcprtt: use the same options to filter IPv4 and IPv6 adresses\n\nThere is no need for the extra options. We can distinguish IPv4 and\nIPv6 adresses by their format.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "697f1cfc8e051a57a0c1c4c6a11a52fe1052d7c3", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcprtt: Allow to filter on IPv6 addresses\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1efe708889b1775108ed7a8d7b65032a0ec1b8b2", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcptracer: remove custom inet_ntoa function\n\nIt isn't used, and it doesn't look like it ever was.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01673352497d3a170fcf43e35a2df992b1f4c39e", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools, libpf-tools: increase IPv6 address width to 39 characters\n\nSeveral tcp tools have a --wide option to accommodate longer IPv6\naddress. However, they seem to assume that IPv6 addresses are at most\n26 characters. I don't know where that numbers comes from, but that's\nobviously not right: 8 number of 4 digits plus the colons, that would\nmake 39.\n\nINET6_ADDRSTRLEN is defined as 46 (so 45 characters) probably to\naccommodate for IPv6 mixed notation\n(ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255).\n\nI don't think that we have to align on 45 characters as I doubt\ninet_ntop would return a mixed notation address, but 39 is a must.\n\nCloses #4460\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d78fb4c3cae11fab2d2494b9ce474ea4452846b", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcpstates: fix IPv6 journal\n\nWhen logging ipv6 state change, journal_fields tries to pack\nevent.addr and event.daddr, which is not an integer in this, to\npresent a bytes-like object to socket.inet_ntop. This can be fixed by\nhaving a similar type for [sd]addr for IPv4 and IPv6. Making both an\narray of u32 solves the issue by presenting a bytes-like object\ndirectly to inet_ntop, without the need for the struct packing stage.\n\nAlso  now, the similar behavior, makes it easier to factor code for\nIPv4 and IPv6.\n\nIt solves the following error:\n/usr/share/bcc/tools/tcpstates  -Y\nSKADDR           C-PID C-COMM     LADDR           LPORT RADDR           RPORT OLDSTATE    -> NEWSTATE    MS\nffff8b2e83e56180 0     swapper/9  ::              22    ::              0     LISTEN      -> SYN_RECV    0.000\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\nffff8b2e83e56180 0     swapper/9  2620:52:0:2580:5054:ff:fe6b:6f1f 22    2620:52:0:2b11:2f5e:407d:b35d:4663 60396 SYN_RECV    -> ESTABLISHED 0.010\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "652bf244cd0e3eee560e3479d952474c2c26c9d3", "commit_date": "2023-08-20T22:22:26Z", "commit_message": "examples/perf/ipc: Use generic hardware events\n\nThe use of hardcoded raw events breaks compatibility as these are tied\nto specific processors. On other processors, it could also be the case\nthat the raw event codes represent something completely different.\n\nHence, use the generic events for cycles and instructions as these are\navailable on most platforms with a core PMU.\n\nFixes: 59a753da (\"Add perf event data collection example for an userspace application\")\nSigned-off-by: Sandipan Das <sandipan.das@amd.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b11d0f234a82a7c907ad31c1cab798dbda579343", "commit_date": "2023-08-20T02:43:47Z", "commit_message": "Fix memory leak in capable.c\n\nThis commit adds a cleanup step to free the perf_buffer, fixing a memory leak in the\ncapable.c file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66cb619e75ad2679ca529af8958f68d57e209777", "commit_date": "2023-08-13T16:21:14Z", "commit_message": "fix. backport compilation with llvm9 and earlier\n\nllvm::SectionRef changed the `getName` interface since LLVM10, in\nparticular, in commit llvm/llvm-project@a11d302fa0.\n\nIn llvm-9 and early version, `getName` required a StringRef reference as\na parameter, and returned a std::error_code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64fd851c09ea301ecadfae0726e57dcd1d421228", "commit_date": "2023-08-13T16:20:23Z", "commit_message": "tools/statsnoop: Add more stat() variansts\n\nThe underlying system call employed by the Golang Stat() wrapper\nfunction is newfstatat().\nSee https://cs.opensource.google/go/go/+/refs/heads/master:src/syscall/zsyscall_linux_amd64.go;l=1453;drc=94e40d5603797fe4d9302421682bb5b997d9c568\n\nSigned-off-by: Jian Wen <wenjianhn@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e219551690133a5dd46d3f68575c59c50e603c16", "commit_date": "2023-08-13T05:14:28Z", "commit_message": "tools/tcprtt: use simple cast instead of tcp_sk() and inet_sk()\n\ntcp_sk() and inet_sk() has been redefined to use the new\ncontainer_of_const() macro. It confuses something in bcc toolchain.\n\n/virtual/main.c:38:144: error: expected expression\n    struct tcp_sock *ts = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)cp_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\n/virtual/main.c:40:36: error: statement expression not allowed at file scope\n    const struct inet_sock *inet = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)net_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\nFor our use, it's safe to use simple casts as tcp/inet_sk() used to be\ndefined. The common struct sock is always the first field of struct\ntcp_sock and inet_sock and we only use read access.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18a6e04a4db2ef3b3f3297b4f369b82c39a93905", "commit_date": "2023-08-13T04:54:58Z", "commit_message": "tool/slabratetop: add definition of freelist_aba_t\n\nWith recent kernel containing the commit 6801be4f2653 (\"slub: Replace\ncmpxchg_double()\"), slabratetop fails to compiles with the following\nerror:\n\nIn file included from /virtual/main.c:86:\ninclude/linux/slub_def.h:56:3: error: unknown type name 'freelist_aba_t'\n                freelist_aba_t freelist_tid;\n                ^\n2 warnings and 1 error generated.\nTraceback (most recent call last):\n  File \"/usr/share/bcc/tools/slabratetop\", line 187, in <module>\n    b = BPF(text=bpf_text)\n        ^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/site-packages/bcc/__init__.py\", line 479, in __init__\n    raise Exception(\"Failed to compile BPF module %s\" % (src_file or \"<text>\"))\nException: Failed to compile BPF module <text>\n\nAdding the definition of freelist_aba_t fixes the issue.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ddf49613c8b0a99dfc33b6fac83e15b0e12994ec", "commit_date": "2023-08-05T03:58:50Z", "commit_message": "tools/tcptop: Check the presence of tcp_sendpage before attaching it\n\nIn recent kernels, tcp_sendpage() has been replaced by\nsendmsg(MSG_SPLICE_PAGES). Check the presence of the k(ret)probes\nbefore attaching them.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37c13009e4a96c7afe31a15fd5fde8b9b645b476", "commit_date": "2023-08-05T03:29:31Z", "commit_message": "libbpf-tools/execsnoop: fix ret type of bpf_probe_read_user*.\n\nThe bpf_probe_read_user_str* manpage says: On success, the strictly positive length of the output string, including the trailing NUL\ncharacter. On error, a negative value.\n\nSigned-off-by: opsnull <mingduo.zj@alibaba-inc.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed1c98047e0c68126bfb04c8c3ea2455f3b7674d", "commit_date": "2023-08-02T16:06:14Z", "commit_message": "tools: Add support for the new block_io_* tracepoints\n\nThe bio tools currently depends on blk_account_io_done/start functions\nthat can be inlined. To fix that, a couple of tracepoints have been\nadded upstream (block:block_io_start/done). This patch add the support\nfor those tracepoints when they are available.\n\nUnfortunately, the bio tools relies on data that is not available to\nthe tracepoints (mostly the struct request). So the tracepoints can't\nbe used as drop in replacement for blk_account_io_*. Main difference,\nis that we can't use the struct request as the hash key anymore, so it\nnow uses the couple (dev_t, sector) for that purpose.\n\nFor the biolatency tool, the -F option is disabled when only the\ntracepoints are available because the flags are not all accessible\nfrom the tracepoints. Otherwise, all features of the tools should\nremain.\n\nCloses #4261\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41f8010e2e85616ad37303af20f77c1c717b9b11", "commit_date": "2023-07-30T23:49:40Z", "commit_message": "README: add rdmaucma\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34988cd7726b0fb8c7d58074043c35cf2ec2bb72", "commit_date": "2023-07-30T19:15:25Z", "commit_message": "tools/rdmaucma: Add new command\n\nAdd rdmaucma tools to trace RDMA UCMA events.\nThis can be useful to analyze issues on RDMA CM.\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecf70a76a60d61bf29cdc560e06507580af69e4c", "commit_date": "2023-07-30T17:31:42Z", "commit_message": "tools/runqlat: fix data structure initialization with padding", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "612399d2d9e1eda7f61584543aecf3582d3a08d3", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Edit perf_event cc and python tests with pid argument", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3360c798bfefa891f1c122239101d57f014856b8", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Expose pid parameter in bpf_open_perf_event", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9e381f2dcdf693b5da48e5beb8481ab68f9b21b", "commit_date": "2023-07-30T16:35:55Z", "commit_message": "libbpf-tools: add block_io_{start,done} tracepoints support to bio tools\n\nSome bio tools fail to kprobe blk_account_io_{start,done} after v5.17,\nbecause they become inlined, see [0]. To fix this issue, tracepoints\nblick_io_{start,done} are introcuded in kernel, see[1].\n\nUpdate related bio tools to support new tracepoints, and also simplify\nattach.\n\n[0] Kernel commit 450b7879e345 (block: move blk_account_io_{start,done} to blk-mq.c)\n[1] Kernel commit 5a80bd075f3b (block: introduce block_io_start/block_io_done tracepoints)\n\nChange-Id: I62b957abd7ce2901eb114bd57c78938e4f083e4d\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ce3d7db44880312e7101874808f3468c8e4e1b4", "commit_date": "2023-07-25T12:00:46Z", "commit_message": "libbpf-tools: fix tcppktlat show wrong ports\n\nSigned-off-by: Wenbo Zhang <etherflow@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18b00a903955950f796db85d1f24815f7a6f2177", "commit_date": "2023-07-10T18:19:05Z", "commit_message": "tools/statsnoop: bring back the syscall__ prefix\n\nfn_name of a syscall should start with \"syscall__\".\n\nSee\nhttps://github.com/iovisor/bcc/blob/v0.28.0/src/cc/frontends/clang/b_frontend_action.cc#L818\n\nWithout the patch, file names will not be printed.\n\nFixes: c743fcb17b46 (\"tools/statsnoop: Add some stat() variants (#4367)\")\n\nSigned-off-by: Jian Wen <wenjianh@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f91c89381325cd90eb66a9b11f806b8a453b68c", "commit_date": "2023-07-10T18:15:21Z", "commit_message": "libbpf-tools: Allow tcppktlat to run on old kernels\n\nCurrently, tcppktlat can only run on kernel v5.12+\nbecause of the usages of bpf_get_socket_cookie().\nThis commit gets the tool run on old kernels in a CO-RE\nway. While at it, also adds tcp_destroy_sock tracepoint.\nThis is necessary since there are cases where the socket\ndoes not get the chance to reach the tcp_rcv_space_adjust\ntracepoint and entries in start map never get removed.\n\nSigned-off-by: Hengqi Chen <hengqi.chen@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "51623b7fbe1bcb0dc3f7cf11bf9993191da6d3d4", "commit_date": "2023-07-10T18:06:41Z", "commit_message": "tools/tcpstates: fix context ptr modified error\n\nIntroduce local variable tcp_new_state,\nto avoid llvm optimization of args->newstate,\nwhich will cause context ptr args modified.\nspilt event.ports to lport and dport.\nswitch type of TCP state from unsigned int to int.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8ee4466e70b5ade69b1eca62fd1c14c0fbd6891", "commit_date": "2023-07-10T17:57:04Z", "commit_message": "libbpf-tools: Add support for IPv6 to tcprtt.\n\nSigned-off-by: Francis Laniel <flaniel@linux.microsoft.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b5141659aaaf4a7c2172c73a802bd86a256ecd", "commit_date": "2023-07-09T09:24:00Z", "commit_message": "libbpf-tools: fallback to tracefs mount point if debugfs is not mounted\n\nChange-Id: Icab8356f9b43b4f28ad77fa4b21e826f74a25be8\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec49363e2e9daec026ee6cae4c5fc316f8fab0ff", "commit_date": "2023-09-01T11:21:30Z", "commit_message": "tools/ppchcalls : Add new hcalls introduced for nested KVM support", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a22bd2548dc8616e38c9b5b95cc4a22f53a6b2d6", "commit_date": "2023-08-31T12:32:18Z", "commit_message": "tools: Remove manual `KBUILD_MODNAME` definition", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fcb3461197d360e963688f5985fe36a0d3337cd", "commit_date": "2023-08-31T12:22:47Z", "commit_message": "cc: remove a spurious check for UID 0\n\nThis drops an hardcoded check for the root user-ID before accessing\n`/proc/kallsyms`, in order to fix a bug which is preventing proper\nkernel symbols resolution by non-root users.\n\nThe `/proc/kallsyms` file is generally available to non-privileged\nusers:\n```\n> runuser -u nobody -- wc -l /proc/kallsyms\n\n217514 /proc/kallsyms\n```\n\nIts content is further controlled by the `CAP_SYSLOG` capability\nthrough `/proc/sys/kernel/kptr_restrict`:\nhttps://man7.org/linux/man-pages/man7/capabilities.7.html\n\nAs such, it is better to directly open it and rely on `fopen()`\nfor privileges checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6813fbce8718bede5075272cdc3ab9314eb91b5c", "commit_date": "2023-08-31T12:17:59Z", "commit_message": "Allow for installing python as a non-system package\n\nDebian's python, unlike stock python, expects system packages to be\ninstalled in `/usr/local/lib/python3.X/dist-packages/` and not `/usr/local/lib/python3.X/site-packages/`. As such\ndebian's python setuptools has a flag `--install-layout deb` which\nplaces library files in the correct place. `src/python/CMakeLists.txt`\nchecks if the system is debian and adds this flag.\n\nHowever, if you're trying to use BCC with a non-system version of python\n(for example miniconda) the different package layout (and setuptools\nflag) aren't there. Also, libraries aren't expected to be placed in\n/usr, but whatever prefix the alternative python install is using.\n\nThis PR adds two flags to the CMAke build:\n* PY_SKIP_DEB_LAYOUT - which skips adding the `--install-layout deb`\n  flag to the python install command\n* PYTHON_PREFIX which (if set) takes the place of CMAKE_INSTALL_PREFIX\n  as a target for installing python packages\n\nBoth are needed to allow installing python bindings into python\ninstalls that aren't the system install on debian hosts. For example,\nfor a miniconda install on ubuntu:\n\nWith this PR, I can get a working install with miniconda on ubuntu 22\nusing:\n\n```\ncmake ..  -DPY_SKIP_DEB_LAYOUT=true  -DPYTHON_PREFIX=/home/vagrant/miniconda3/envs/ddpy3/\n```", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "176fc2eceaa3c0c6679a2e18b3a99183522b0778", "commit_date": "2023-08-31T12:10:59Z", "commit_message": "tools/{filegone.py,filelife.py}: Check btf struct field for CO-RE\n\nSince kernel commit abf08576afe3(\"fs: port vfs_*() helpers to struct\nmnt_idmap\"), the vfs_unlink/create function use 'struct mnt_idmap' instead\nof 'struct user_namespace'.\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "442f658dc22d70bb024cac448932e27090d4a965", "commit_date": "2023-08-31T11:46:16Z", "commit_message": "tools/profile: add support for PID-namespacing (#4709)\n\nThis adds translation logic to perform PID translation across\r\nPID-namespaces.\r\nIt is now possible to profile a target process from within a\r\nnested PID-namespace (e.g. in a container).\r\nAlso add a note in profile_example.txt file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9596edb9415197aa52d771b65581a73b89f3f4dc", "commit_date": "2023-08-27T14:41:18Z", "commit_message": "libbpf-tools/filelife: Check btf struct field for CO-RE\n\ncommit abf08576afe3(\"fs: port vfs_*() helpers to struct mnt_idmap\") [0] use\n`struct mnt_idmap *new_mnt_idmap` instead of `struct user_namespace *\nold_mnt_userns`.\n\n[0] https://github.com/torvalds/linux/commit/abf08576afe3\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "173282d39b98e3e7e6391d1159c5031bb4adb230", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Removing leftovers", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb834d837c7c3bb991649870dc0124696d6b286", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Allowing to get the histagram in a variable for deeper work", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbd24ffd767911acbc1a54c65e8da1f8ad4d3153", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "libbpf-tools/tcprtt: use the same options to filter IPv4 and IPv6 adresses\n\nThere is no need for the extra options. We can distinguish IPv4 and\nIPv6 adresses by their format.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "697f1cfc8e051a57a0c1c4c6a11a52fe1052d7c3", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcprtt: Allow to filter on IPv6 addresses\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1efe708889b1775108ed7a8d7b65032a0ec1b8b2", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcptracer: remove custom inet_ntoa function\n\nIt isn't used, and it doesn't look like it ever was.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01673352497d3a170fcf43e35a2df992b1f4c39e", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools, libpf-tools: increase IPv6 address width to 39 characters\n\nSeveral tcp tools have a --wide option to accommodate longer IPv6\naddress. However, they seem to assume that IPv6 addresses are at most\n26 characters. I don't know where that numbers comes from, but that's\nobviously not right: 8 number of 4 digits plus the colons, that would\nmake 39.\n\nINET6_ADDRSTRLEN is defined as 46 (so 45 characters) probably to\naccommodate for IPv6 mixed notation\n(ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255).\n\nI don't think that we have to align on 45 characters as I doubt\ninet_ntop would return a mixed notation address, but 39 is a must.\n\nCloses #4460\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d78fb4c3cae11fab2d2494b9ce474ea4452846b", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcpstates: fix IPv6 journal\n\nWhen logging ipv6 state change, journal_fields tries to pack\nevent.addr and event.daddr, which is not an integer in this, to\npresent a bytes-like object to socket.inet_ntop. This can be fixed by\nhaving a similar type for [sd]addr for IPv4 and IPv6. Making both an\narray of u32 solves the issue by presenting a bytes-like object\ndirectly to inet_ntop, without the need for the struct packing stage.\n\nAlso  now, the similar behavior, makes it easier to factor code for\nIPv4 and IPv6.\n\nIt solves the following error:\n/usr/share/bcc/tools/tcpstates  -Y\nSKADDR           C-PID C-COMM     LADDR           LPORT RADDR           RPORT OLDSTATE    -> NEWSTATE    MS\nffff8b2e83e56180 0     swapper/9  ::              22    ::              0     LISTEN      -> SYN_RECV    0.000\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\nffff8b2e83e56180 0     swapper/9  2620:52:0:2580:5054:ff:fe6b:6f1f 22    2620:52:0:2b11:2f5e:407d:b35d:4663 60396 SYN_RECV    -> ESTABLISHED 0.010\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "652bf244cd0e3eee560e3479d952474c2c26c9d3", "commit_date": "2023-08-20T22:22:26Z", "commit_message": "examples/perf/ipc: Use generic hardware events\n\nThe use of hardcoded raw events breaks compatibility as these are tied\nto specific processors. On other processors, it could also be the case\nthat the raw event codes represent something completely different.\n\nHence, use the generic events for cycles and instructions as these are\navailable on most platforms with a core PMU.\n\nFixes: 59a753da (\"Add perf event data collection example for an userspace application\")\nSigned-off-by: Sandipan Das <sandipan.das@amd.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b11d0f234a82a7c907ad31c1cab798dbda579343", "commit_date": "2023-08-20T02:43:47Z", "commit_message": "Fix memory leak in capable.c\n\nThis commit adds a cleanup step to free the perf_buffer, fixing a memory leak in the\ncapable.c file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66cb619e75ad2679ca529af8958f68d57e209777", "commit_date": "2023-08-13T16:21:14Z", "commit_message": "fix. backport compilation with llvm9 and earlier\n\nllvm::SectionRef changed the `getName` interface since LLVM10, in\nparticular, in commit llvm/llvm-project@a11d302fa0.\n\nIn llvm-9 and early version, `getName` required a StringRef reference as\na parameter, and returned a std::error_code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64fd851c09ea301ecadfae0726e57dcd1d421228", "commit_date": "2023-08-13T16:20:23Z", "commit_message": "tools/statsnoop: Add more stat() variansts\n\nThe underlying system call employed by the Golang Stat() wrapper\nfunction is newfstatat().\nSee https://cs.opensource.google/go/go/+/refs/heads/master:src/syscall/zsyscall_linux_amd64.go;l=1453;drc=94e40d5603797fe4d9302421682bb5b997d9c568\n\nSigned-off-by: Jian Wen <wenjianhn@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e219551690133a5dd46d3f68575c59c50e603c16", "commit_date": "2023-08-13T05:14:28Z", "commit_message": "tools/tcprtt: use simple cast instead of tcp_sk() and inet_sk()\n\ntcp_sk() and inet_sk() has been redefined to use the new\ncontainer_of_const() macro. It confuses something in bcc toolchain.\n\n/virtual/main.c:38:144: error: expected expression\n    struct tcp_sock *ts = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)cp_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\n/virtual/main.c:40:36: error: statement expression not allowed at file scope\n    const struct inet_sock *inet = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)net_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\nFor our use, it's safe to use simple casts as tcp/inet_sk() used to be\ndefined. The common struct sock is always the first field of struct\ntcp_sock and inet_sock and we only use read access.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18a6e04a4db2ef3b3f3297b4f369b82c39a93905", "commit_date": "2023-08-13T04:54:58Z", "commit_message": "tool/slabratetop: add definition of freelist_aba_t\n\nWith recent kernel containing the commit 6801be4f2653 (\"slub: Replace\ncmpxchg_double()\"), slabratetop fails to compiles with the following\nerror:\n\nIn file included from /virtual/main.c:86:\ninclude/linux/slub_def.h:56:3: error: unknown type name 'freelist_aba_t'\n                freelist_aba_t freelist_tid;\n                ^\n2 warnings and 1 error generated.\nTraceback (most recent call last):\n  File \"/usr/share/bcc/tools/slabratetop\", line 187, in <module>\n    b = BPF(text=bpf_text)\n        ^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/site-packages/bcc/__init__.py\", line 479, in __init__\n    raise Exception(\"Failed to compile BPF module %s\" % (src_file or \"<text>\"))\nException: Failed to compile BPF module <text>\n\nAdding the definition of freelist_aba_t fixes the issue.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ddf49613c8b0a99dfc33b6fac83e15b0e12994ec", "commit_date": "2023-08-05T03:58:50Z", "commit_message": "tools/tcptop: Check the presence of tcp_sendpage before attaching it\n\nIn recent kernels, tcp_sendpage() has been replaced by\nsendmsg(MSG_SPLICE_PAGES). Check the presence of the k(ret)probes\nbefore attaching them.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37c13009e4a96c7afe31a15fd5fde8b9b645b476", "commit_date": "2023-08-05T03:29:31Z", "commit_message": "libbpf-tools/execsnoop: fix ret type of bpf_probe_read_user*.\n\nThe bpf_probe_read_user_str* manpage says: On success, the strictly positive length of the output string, including the trailing NUL\ncharacter. On error, a negative value.\n\nSigned-off-by: opsnull <mingduo.zj@alibaba-inc.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed1c98047e0c68126bfb04c8c3ea2455f3b7674d", "commit_date": "2023-08-02T16:06:14Z", "commit_message": "tools: Add support for the new block_io_* tracepoints\n\nThe bio tools currently depends on blk_account_io_done/start functions\nthat can be inlined. To fix that, a couple of tracepoints have been\nadded upstream (block:block_io_start/done). This patch add the support\nfor those tracepoints when they are available.\n\nUnfortunately, the bio tools relies on data that is not available to\nthe tracepoints (mostly the struct request). So the tracepoints can't\nbe used as drop in replacement for blk_account_io_*. Main difference,\nis that we can't use the struct request as the hash key anymore, so it\nnow uses the couple (dev_t, sector) for that purpose.\n\nFor the biolatency tool, the -F option is disabled when only the\ntracepoints are available because the flags are not all accessible\nfrom the tracepoints. Otherwise, all features of the tools should\nremain.\n\nCloses #4261\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41f8010e2e85616ad37303af20f77c1c717b9b11", "commit_date": "2023-07-30T23:49:40Z", "commit_message": "README: add rdmaucma\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34988cd7726b0fb8c7d58074043c35cf2ec2bb72", "commit_date": "2023-07-30T19:15:25Z", "commit_message": "tools/rdmaucma: Add new command\n\nAdd rdmaucma tools to trace RDMA UCMA events.\nThis can be useful to analyze issues on RDMA CM.\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecf70a76a60d61bf29cdc560e06507580af69e4c", "commit_date": "2023-07-30T17:31:42Z", "commit_message": "tools/runqlat: fix data structure initialization with padding", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "612399d2d9e1eda7f61584543aecf3582d3a08d3", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Edit perf_event cc and python tests with pid argument", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3360c798bfefa891f1c122239101d57f014856b8", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Expose pid parameter in bpf_open_perf_event", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9e381f2dcdf693b5da48e5beb8481ab68f9b21b", "commit_date": "2023-07-30T16:35:55Z", "commit_message": "libbpf-tools: add block_io_{start,done} tracepoints support to bio tools\n\nSome bio tools fail to kprobe blk_account_io_{start,done} after v5.17,\nbecause they become inlined, see [0]. To fix this issue, tracepoints\nblick_io_{start,done} are introcuded in kernel, see[1].\n\nUpdate related bio tools to support new tracepoints, and also simplify\nattach.\n\n[0] Kernel commit 450b7879e345 (block: move blk_account_io_{start,done} to blk-mq.c)\n[1] Kernel commit 5a80bd075f3b (block: introduce block_io_start/block_io_done tracepoints)\n\nChange-Id: I62b957abd7ce2901eb114bd57c78938e4f083e4d\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ce3d7db44880312e7101874808f3468c8e4e1b4", "commit_date": "2023-07-25T12:00:46Z", "commit_message": "libbpf-tools: fix tcppktlat show wrong ports\n\nSigned-off-by: Wenbo Zhang <etherflow@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18b00a903955950f796db85d1f24815f7a6f2177", "commit_date": "2023-07-10T18:19:05Z", "commit_message": "tools/statsnoop: bring back the syscall__ prefix\n\nfn_name of a syscall should start with \"syscall__\".\n\nSee\nhttps://github.com/iovisor/bcc/blob/v0.28.0/src/cc/frontends/clang/b_frontend_action.cc#L818\n\nWithout the patch, file names will not be printed.\n\nFixes: c743fcb17b46 (\"tools/statsnoop: Add some stat() variants (#4367)\")\n\nSigned-off-by: Jian Wen <wenjianh@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f91c89381325cd90eb66a9b11f806b8a453b68c", "commit_date": "2023-07-10T18:15:21Z", "commit_message": "libbpf-tools: Allow tcppktlat to run on old kernels\n\nCurrently, tcppktlat can only run on kernel v5.12+\nbecause of the usages of bpf_get_socket_cookie().\nThis commit gets the tool run on old kernels in a CO-RE\nway. While at it, also adds tcp_destroy_sock tracepoint.\nThis is necessary since there are cases where the socket\ndoes not get the chance to reach the tcp_rcv_space_adjust\ntracepoint and entries in start map never get removed.\n\nSigned-off-by: Hengqi Chen <hengqi.chen@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "51623b7fbe1bcb0dc3f7cf11bf9993191da6d3d4", "commit_date": "2023-07-10T18:06:41Z", "commit_message": "tools/tcpstates: fix context ptr modified error\n\nIntroduce local variable tcp_new_state,\nto avoid llvm optimization of args->newstate,\nwhich will cause context ptr args modified.\nspilt event.ports to lport and dport.\nswitch type of TCP state from unsigned int to int.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8ee4466e70b5ade69b1eca62fd1c14c0fbd6891", "commit_date": "2023-07-10T17:57:04Z", "commit_message": "libbpf-tools: Add support for IPv6 to tcprtt.\n\nSigned-off-by: Francis Laniel <flaniel@linux.microsoft.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b5141659aaaf4a7c2172c73a802bd86a256ecd", "commit_date": "2023-07-09T09:24:00Z", "commit_message": "libbpf-tools: fallback to tracefs mount point if debugfs is not mounted\n\nChange-Id: Icab8356f9b43b4f28ad77fa4b21e826f74a25be8\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec49363e2e9daec026ee6cae4c5fc316f8fab0ff", "commit_date": "2023-09-01T11:21:30Z", "commit_message": "tools/ppchcalls : Add new hcalls introduced for nested KVM support", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a22bd2548dc8616e38c9b5b95cc4a22f53a6b2d6", "commit_date": "2023-08-31T12:32:18Z", "commit_message": "tools: Remove manual `KBUILD_MODNAME` definition", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fcb3461197d360e963688f5985fe36a0d3337cd", "commit_date": "2023-08-31T12:22:47Z", "commit_message": "cc: remove a spurious check for UID 0\n\nThis drops an hardcoded check for the root user-ID before accessing\n`/proc/kallsyms`, in order to fix a bug which is preventing proper\nkernel symbols resolution by non-root users.\n\nThe `/proc/kallsyms` file is generally available to non-privileged\nusers:\n```\n> runuser -u nobody -- wc -l /proc/kallsyms\n\n217514 /proc/kallsyms\n```\n\nIts content is further controlled by the `CAP_SYSLOG` capability\nthrough `/proc/sys/kernel/kptr_restrict`:\nhttps://man7.org/linux/man-pages/man7/capabilities.7.html\n\nAs such, it is better to directly open it and rely on `fopen()`\nfor privileges checking.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6813fbce8718bede5075272cdc3ab9314eb91b5c", "commit_date": "2023-08-31T12:17:59Z", "commit_message": "Allow for installing python as a non-system package\n\nDebian's python, unlike stock python, expects system packages to be\ninstalled in `/usr/local/lib/python3.X/dist-packages/` and not `/usr/local/lib/python3.X/site-packages/`. As such\ndebian's python setuptools has a flag `--install-layout deb` which\nplaces library files in the correct place. `src/python/CMakeLists.txt`\nchecks if the system is debian and adds this flag.\n\nHowever, if you're trying to use BCC with a non-system version of python\n(for example miniconda) the different package layout (and setuptools\nflag) aren't there. Also, libraries aren't expected to be placed in\n/usr, but whatever prefix the alternative python install is using.\n\nThis PR adds two flags to the CMAke build:\n* PY_SKIP_DEB_LAYOUT - which skips adding the `--install-layout deb`\n  flag to the python install command\n* PYTHON_PREFIX which (if set) takes the place of CMAKE_INSTALL_PREFIX\n  as a target for installing python packages\n\nBoth are needed to allow installing python bindings into python\ninstalls that aren't the system install on debian hosts. For example,\nfor a miniconda install on ubuntu:\n\nWith this PR, I can get a working install with miniconda on ubuntu 22\nusing:\n\n```\ncmake ..  -DPY_SKIP_DEB_LAYOUT=true  -DPYTHON_PREFIX=/home/vagrant/miniconda3/envs/ddpy3/\n```", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "176fc2eceaa3c0c6679a2e18b3a99183522b0778", "commit_date": "2023-08-31T12:10:59Z", "commit_message": "tools/{filegone.py,filelife.py}: Check btf struct field for CO-RE\n\nSince kernel commit abf08576afe3(\"fs: port vfs_*() helpers to struct\nmnt_idmap\"), the vfs_unlink/create function use 'struct mnt_idmap' instead\nof 'struct user_namespace'.\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "442f658dc22d70bb024cac448932e27090d4a965", "commit_date": "2023-08-31T11:46:16Z", "commit_message": "tools/profile: add support for PID-namespacing (#4709)\n\nThis adds translation logic to perform PID translation across\r\nPID-namespaces.\r\nIt is now possible to profile a target process from within a\r\nnested PID-namespace (e.g. in a container).\r\nAlso add a note in profile_example.txt file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9596edb9415197aa52d771b65581a73b89f3f4dc", "commit_date": "2023-08-27T14:41:18Z", "commit_message": "libbpf-tools/filelife: Check btf struct field for CO-RE\n\ncommit abf08576afe3(\"fs: port vfs_*() helpers to struct mnt_idmap\") [0] use\n`struct mnt_idmap *new_mnt_idmap` instead of `struct user_namespace *\nold_mnt_userns`.\n\n[0] https://github.com/torvalds/linux/commit/abf08576afe3\n\nSigned-off-by: Rong Tao <rongtao@cestc.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "173282d39b98e3e7e6391d1159c5031bb4adb230", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Removing leftovers", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb834d837c7c3bb991649870dc0124696d6b286", "commit_date": "2023-08-20T23:32:41Z", "commit_message": "Allowing to get the histagram in a variable for deeper work", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbd24ffd767911acbc1a54c65e8da1f8ad4d3153", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "libbpf-tools/tcprtt: use the same options to filter IPv4 and IPv6 adresses\n\nThere is no need for the extra options. We can distinguish IPv4 and\nIPv6 adresses by their format.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "697f1cfc8e051a57a0c1c4c6a11a52fe1052d7c3", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcprtt: Allow to filter on IPv6 addresses\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1efe708889b1775108ed7a8d7b65032a0ec1b8b2", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcptracer: remove custom inet_ntoa function\n\nIt isn't used, and it doesn't look like it ever was.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01673352497d3a170fcf43e35a2df992b1f4c39e", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools, libpf-tools: increase IPv6 address width to 39 characters\n\nSeveral tcp tools have a --wide option to accommodate longer IPv6\naddress. However, they seem to assume that IPv6 addresses are at most\n26 characters. I don't know where that numbers comes from, but that's\nobviously not right: 8 number of 4 digits plus the colons, that would\nmake 39.\n\nINET6_ADDRSTRLEN is defined as 46 (so 45 characters) probably to\naccommodate for IPv6 mixed notation\n(ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255).\n\nI don't think that we have to align on 45 characters as I doubt\ninet_ntop would return a mixed notation address, but 39 is a must.\n\nCloses #4460\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d78fb4c3cae11fab2d2494b9ce474ea4452846b", "commit_date": "2023-08-20T23:05:33Z", "commit_message": "tools/tcpstates: fix IPv6 journal\n\nWhen logging ipv6 state change, journal_fields tries to pack\nevent.addr and event.daddr, which is not an integer in this, to\npresent a bytes-like object to socket.inet_ntop. This can be fixed by\nhaving a similar type for [sd]addr for IPv4 and IPv6. Making both an\narray of u32 solves the issue by presenting a bytes-like object\ndirectly to inet_ntop, without the need for the struct packing stage.\n\nAlso  now, the similar behavior, makes it easier to factor code for\nIPv4 and IPv6.\n\nIt solves the following error:\n/usr/share/bcc/tools/tcpstates  -Y\nSKADDR           C-PID C-COMM     LADDR           LPORT RADDR           RPORT OLDSTATE    -> NEWSTATE    MS\nffff8b2e83e56180 0     swapper/9  ::              22    ::              0     LISTEN      -> SYN_RECV    0.000\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\nffff8b2e83e56180 0     swapper/9  2620:52:0:2580:5054:ff:fe6b:6f1f 22    2620:52:0:2b11:2f5e:407d:b35d:4663 60396 SYN_RECV    -> ESTABLISHED 0.010\nException ignored on calling ctypes callback function: <function PerfEventArray._open_perf_buffer.<locals>.raw_cb_ at 0x7f894c8d7f70>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.9/site-packages/bcc/table.py\", line 982, in raw_cb_\n    callback(cpu, data, size)\n  File \"/usr/share/bcc/tools/tcpstates\", line 419, in print_ipv6_event\n    journal.send(**journal_fields(event, AF_INET6))\n  File \"/usr/share/bcc/tools/tcpstates\", line 348, in journal_fields\n    'OBJECT_' + addr_pfx + '_SOURCE_ADDRESS': inet_ntop(addr_family, pack(\"I\", event.saddr)),\nstruct.error: required argument is not an integer\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "652bf244cd0e3eee560e3479d952474c2c26c9d3", "commit_date": "2023-08-20T22:22:26Z", "commit_message": "examples/perf/ipc: Use generic hardware events\n\nThe use of hardcoded raw events breaks compatibility as these are tied\nto specific processors. On other processors, it could also be the case\nthat the raw event codes represent something completely different.\n\nHence, use the generic events for cycles and instructions as these are\navailable on most platforms with a core PMU.\n\nFixes: 59a753da (\"Add perf event data collection example for an userspace application\")\nSigned-off-by: Sandipan Das <sandipan.das@amd.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b11d0f234a82a7c907ad31c1cab798dbda579343", "commit_date": "2023-08-20T02:43:47Z", "commit_message": "Fix memory leak in capable.c\n\nThis commit adds a cleanup step to free the perf_buffer, fixing a memory leak in the\ncapable.c file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66cb619e75ad2679ca529af8958f68d57e209777", "commit_date": "2023-08-13T16:21:14Z", "commit_message": "fix. backport compilation with llvm9 and earlier\n\nllvm::SectionRef changed the `getName` interface since LLVM10, in\nparticular, in commit llvm/llvm-project@a11d302fa0.\n\nIn llvm-9 and early version, `getName` required a StringRef reference as\na parameter, and returned a std::error_code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64fd851c09ea301ecadfae0726e57dcd1d421228", "commit_date": "2023-08-13T16:20:23Z", "commit_message": "tools/statsnoop: Add more stat() variansts\n\nThe underlying system call employed by the Golang Stat() wrapper\nfunction is newfstatat().\nSee https://cs.opensource.google/go/go/+/refs/heads/master:src/syscall/zsyscall_linux_amd64.go;l=1453;drc=94e40d5603797fe4d9302421682bb5b997d9c568\n\nSigned-off-by: Jian Wen <wenjianhn@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e219551690133a5dd46d3f68575c59c50e603c16", "commit_date": "2023-08-13T05:14:28Z", "commit_message": "tools/tcprtt: use simple cast instead of tcp_sk() and inet_sk()\n\ntcp_sk() and inet_sk() has been redefined to use the new\ncontainer_of_const() macro. It confuses something in bcc toolchain.\n\n/virtual/main.c:38:144: error: expected expression\n    struct tcp_sock *ts = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)cp_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\n/virtual/main.c:40:36: error: statement expression not allowed at file scope\n    const struct inet_sock *inet = ({ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *){ typeof(struct sock) _val; __builtin_memset(&_val, 0, sizeof(_val)); bpf_probe_read(&_val, sizeof(_val), (void *)net_sk); _val; })); _val; })); _val; })); _val; })); _val; })(sk);\n\nFor our use, it's safe to use simple casts as tcp/inet_sk() used to be\ndefined. The common struct sock is always the first field of struct\ntcp_sock and inet_sock and we only use read access.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18a6e04a4db2ef3b3f3297b4f369b82c39a93905", "commit_date": "2023-08-13T04:54:58Z", "commit_message": "tool/slabratetop: add definition of freelist_aba_t\n\nWith recent kernel containing the commit 6801be4f2653 (\"slub: Replace\ncmpxchg_double()\"), slabratetop fails to compiles with the following\nerror:\n\nIn file included from /virtual/main.c:86:\ninclude/linux/slub_def.h:56:3: error: unknown type name 'freelist_aba_t'\n                freelist_aba_t freelist_tid;\n                ^\n2 warnings and 1 error generated.\nTraceback (most recent call last):\n  File \"/usr/share/bcc/tools/slabratetop\", line 187, in <module>\n    b = BPF(text=bpf_text)\n        ^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/site-packages/bcc/__init__.py\", line 479, in __init__\n    raise Exception(\"Failed to compile BPF module %s\" % (src_file or \"<text>\"))\nException: Failed to compile BPF module <text>\n\nAdding the definition of freelist_aba_t fixes the issue.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ddf49613c8b0a99dfc33b6fac83e15b0e12994ec", "commit_date": "2023-08-05T03:58:50Z", "commit_message": "tools/tcptop: Check the presence of tcp_sendpage before attaching it\n\nIn recent kernels, tcp_sendpage() has been replaced by\nsendmsg(MSG_SPLICE_PAGES). Check the presence of the k(ret)probes\nbefore attaching them.\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37c13009e4a96c7afe31a15fd5fde8b9b645b476", "commit_date": "2023-08-05T03:29:31Z", "commit_message": "libbpf-tools/execsnoop: fix ret type of bpf_probe_read_user*.\n\nThe bpf_probe_read_user_str* manpage says: On success, the strictly positive length of the output string, including the trailing NUL\ncharacter. On error, a negative value.\n\nSigned-off-by: opsnull <mingduo.zj@alibaba-inc.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed1c98047e0c68126bfb04c8c3ea2455f3b7674d", "commit_date": "2023-08-02T16:06:14Z", "commit_message": "tools: Add support for the new block_io_* tracepoints\n\nThe bio tools currently depends on blk_account_io_done/start functions\nthat can be inlined. To fix that, a couple of tracepoints have been\nadded upstream (block:block_io_start/done). This patch add the support\nfor those tracepoints when they are available.\n\nUnfortunately, the bio tools relies on data that is not available to\nthe tracepoints (mostly the struct request). So the tracepoints can't\nbe used as drop in replacement for blk_account_io_*. Main difference,\nis that we can't use the struct request as the hash key anymore, so it\nnow uses the couple (dev_t, sector) for that purpose.\n\nFor the biolatency tool, the -F option is disabled when only the\ntracepoints are available because the flags are not all accessible\nfrom the tracepoints. Otherwise, all features of the tools should\nremain.\n\nCloses #4261\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41f8010e2e85616ad37303af20f77c1c717b9b11", "commit_date": "2023-07-30T23:49:40Z", "commit_message": "README: add rdmaucma\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34988cd7726b0fb8c7d58074043c35cf2ec2bb72", "commit_date": "2023-07-30T19:15:25Z", "commit_message": "tools/rdmaucma: Add new command\n\nAdd rdmaucma tools to trace RDMA UCMA events.\nThis can be useful to analyze issues on RDMA CM.\n\nSigned-off-by: zhenwei pi <pizhenwei@bytedance.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecf70a76a60d61bf29cdc560e06507580af69e4c", "commit_date": "2023-07-30T17:31:42Z", "commit_message": "tools/runqlat: fix data structure initialization with padding", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "612399d2d9e1eda7f61584543aecf3582d3a08d3", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Edit perf_event cc and python tests with pid argument", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3360c798bfefa891f1c122239101d57f014856b8", "commit_date": "2023-07-30T17:28:32Z", "commit_message": "Expose pid parameter in bpf_open_perf_event", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9e381f2dcdf693b5da48e5beb8481ab68f9b21b", "commit_date": "2023-07-30T16:35:55Z", "commit_message": "libbpf-tools: add block_io_{start,done} tracepoints support to bio tools\n\nSome bio tools fail to kprobe blk_account_io_{start,done} after v5.17,\nbecause they become inlined, see [0]. To fix this issue, tracepoints\nblick_io_{start,done} are introcuded in kernel, see[1].\n\nUpdate related bio tools to support new tracepoints, and also simplify\nattach.\n\n[0] Kernel commit 450b7879e345 (block: move blk_account_io_{start,done} to blk-mq.c)\n[1] Kernel commit 5a80bd075f3b (block: introduce block_io_start/block_io_done tracepoints)\n\nChange-Id: I62b957abd7ce2901eb114bd57c78938e4f083e4d\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ce3d7db44880312e7101874808f3468c8e4e1b4", "commit_date": "2023-07-25T12:00:46Z", "commit_message": "libbpf-tools: fix tcppktlat show wrong ports\n\nSigned-off-by: Wenbo Zhang <etherflow@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18b00a903955950f796db85d1f24815f7a6f2177", "commit_date": "2023-07-10T18:19:05Z", "commit_message": "tools/statsnoop: bring back the syscall__ prefix\n\nfn_name of a syscall should start with \"syscall__\".\n\nSee\nhttps://github.com/iovisor/bcc/blob/v0.28.0/src/cc/frontends/clang/b_frontend_action.cc#L818\n\nWithout the patch, file names will not be printed.\n\nFixes: c743fcb17b46 (\"tools/statsnoop: Add some stat() variants (#4367)\")\n\nSigned-off-by: Jian Wen <wenjianh@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f91c89381325cd90eb66a9b11f806b8a453b68c", "commit_date": "2023-07-10T18:15:21Z", "commit_message": "libbpf-tools: Allow tcppktlat to run on old kernels\n\nCurrently, tcppktlat can only run on kernel v5.12+\nbecause of the usages of bpf_get_socket_cookie().\nThis commit gets the tool run on old kernels in a CO-RE\nway. While at it, also adds tcp_destroy_sock tracepoint.\nThis is necessary since there are cases where the socket\ndoes not get the chance to reach the tcp_rcv_space_adjust\ntracepoint and entries in start map never get removed.\n\nSigned-off-by: Hengqi Chen <hengqi.chen@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "51623b7fbe1bcb0dc3f7cf11bf9993191da6d3d4", "commit_date": "2023-07-10T18:06:41Z", "commit_message": "tools/tcpstates: fix context ptr modified error\n\nIntroduce local variable tcp_new_state,\nto avoid llvm optimization of args->newstate,\nwhich will cause context ptr args modified.\nspilt event.ports to lport and dport.\nswitch type of TCP state from unsigned int to int.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8ee4466e70b5ade69b1eca62fd1c14c0fbd6891", "commit_date": "2023-07-10T17:57:04Z", "commit_message": "libbpf-tools: Add support for IPv6 to tcprtt.\n\nSigned-off-by: Francis Laniel <flaniel@linux.microsoft.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b5141659aaaf4a7c2172c73a802bd86a256ecd", "commit_date": "2023-07-09T09:24:00Z", "commit_message": "libbpf-tools: fallback to tracefs mount point if debugfs is not mounted\n\nChange-Id: Icab8356f9b43b4f28ad77fa4b21e826f74a25be8\nSigned-off-by: Mickey Zhu <mickey_zhu@realsil.com.cn>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}