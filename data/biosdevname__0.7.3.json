{"master": [{"commit_oid": "495ab76e0d5f0eba83f9c86baf779a244ea1b60d", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Add SMBIOS 3.x support\n\nHandle only the path from sysfs for now.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3bb4ed21e8802cb38eb693952da058f52cf76b0", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Read DMI entries from /sys/firmware/dmi/tables/DMI\n\nA kernel with Secure Boot lockdown may prohibit reading the contents\nof /dev/mem, hence biosdevname fails.  The recent kernel provides the\nDMI byte contents in /sys/firmware/dmi/tables/*, and we can use this\ninstead of poking /dev/mem.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f64c3f549eda36d11b5690117173b0847535ebbe", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Add buffer read helper using read explicitly\n\nSince mmap can't work well with a sysfs file, we need to read the\ncontents explicitly via read, even if USE_MMAP is enabled.\nProvide a new helper, __mem_cunk(), that does behave like mem_chunk()\nbut with the extra use_mmap argument to specify the method to read a\nfile.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42abae6e56f22245ac8d693ab88ad1e3ea75a220", "commit_date": "2019-01-27T13:45:09Z", "commit_message": "man: fix all_ethN indentation\n\nall_ethN is not another .TP block under the physical policy, it is a paragraph of its own right.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f2d9991d50e09ba9af842fb592b37d0c2021a06", "commit_date": "2018-11-12T07:29:24Z", "commit_message": "Netronome biosdevname support (#8)\n\n* Add support for Netronome netdevices\r\n\r\nNetronome netdevices also provide multiple ports through the same\r\nfunction.\r\n\r\n* Set devID with phys_port_name index for nfp devices\r\n\r\nNetronome netdevices should rather use the index from the phys_port_name \r\nattribute instead of the dev_port/dev_id\r\nattributes.\r\n\r\n* Exclude naming Netronome logical devices\r\n\r\nSome drivers, like the Netronome nfp driver, expose logical devices such\r\nas representors and switchdev uplink devices.\r\n\r\nThere isn't currently a naming scheme for such devices, so exclude them\r\nfrom the biosdevname naming policy.\r\n\r\nSplit ports also don't have a naming scheme defined for biosdevname, so\r\nits better to exclude them from naming.\r\n\r\nIdentification of such devices will always be driver dependent.\r\nAt the moment, only 'nfp' driver devices are considered for exclusion.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d6fa84f8a80d5e1c526fe675c345f709a700e33e", "commit_date": "2018-07-20T06:56:48Z", "commit_message": "Prevent infinite recursion in dmidecode.c::smbios_setslot by (#7)\n\nChecking that subordinate bus has a number greater than the\r\ncurrent bus.\r\nFixes SUSE bug#1093625", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7460046a5430e92cd6a4ef0c938f80e95669b5bc", "commit_date": "2017-09-01T05:33:56Z", "commit_message": "Add support for ExaNIC network cards (#5)\n\nExaNIC cards have multiple physical ports on the same PCI function and\r\nneed to be numbered using the dev_port attribute.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "495ab76e0d5f0eba83f9c86baf779a244ea1b60d", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Add SMBIOS 3.x support\n\nHandle only the path from sysfs for now.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3bb4ed21e8802cb38eb693952da058f52cf76b0", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Read DMI entries from /sys/firmware/dmi/tables/DMI\n\nA kernel with Secure Boot lockdown may prohibit reading the contents\nof /dev/mem, hence biosdevname fails.  The recent kernel provides the\nDMI byte contents in /sys/firmware/dmi/tables/*, and we can use this\ninstead of poking /dev/mem.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f64c3f549eda36d11b5690117173b0847535ebbe", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Add buffer read helper using read explicitly\n\nSince mmap can't work well with a sysfs file, we need to read the\ncontents explicitly via read, even if USE_MMAP is enabled.\nProvide a new helper, __mem_cunk(), that does behave like mem_chunk()\nbut with the extra use_mmap argument to specify the method to read a\nfile.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42abae6e56f22245ac8d693ab88ad1e3ea75a220", "commit_date": "2019-01-27T13:45:09Z", "commit_message": "man: fix all_ethN indentation\n\nall_ethN is not another .TP block under the physical policy, it is a paragraph of its own right.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f2d9991d50e09ba9af842fb592b37d0c2021a06", "commit_date": "2018-11-12T07:29:24Z", "commit_message": "Netronome biosdevname support (#8)\n\n* Add support for Netronome netdevices\r\n\r\nNetronome netdevices also provide multiple ports through the same\r\nfunction.\r\n\r\n* Set devID with phys_port_name index for nfp devices\r\n\r\nNetronome netdevices should rather use the index from the phys_port_name \r\nattribute instead of the dev_port/dev_id\r\nattributes.\r\n\r\n* Exclude naming Netronome logical devices\r\n\r\nSome drivers, like the Netronome nfp driver, expose logical devices such\r\nas representors and switchdev uplink devices.\r\n\r\nThere isn't currently a naming scheme for such devices, so exclude them\r\nfrom the biosdevname naming policy.\r\n\r\nSplit ports also don't have a naming scheme defined for biosdevname, so\r\nits better to exclude them from naming.\r\n\r\nIdentification of such devices will always be driver dependent.\r\nAt the moment, only 'nfp' driver devices are considered for exclusion.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d6fa84f8a80d5e1c526fe675c345f709a700e33e", "commit_date": "2018-07-20T06:56:48Z", "commit_message": "Prevent infinite recursion in dmidecode.c::smbios_setslot by (#7)\n\nChecking that subordinate bus has a number greater than the\r\ncurrent bus.\r\nFixes SUSE bug#1093625", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7460046a5430e92cd6a4ef0c938f80e95669b5bc", "commit_date": "2017-09-01T05:33:56Z", "commit_message": "Add support for ExaNIC network cards (#5)\n\nExaNIC cards have multiple physical ports on the same PCI function and\r\nneed to be numbered using the dev_port attribute.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "495ab76e0d5f0eba83f9c86baf779a244ea1b60d", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Add SMBIOS 3.x support\n\nHandle only the path from sysfs for now.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3bb4ed21e8802cb38eb693952da058f52cf76b0", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Read DMI entries from /sys/firmware/dmi/tables/DMI\n\nA kernel with Secure Boot lockdown may prohibit reading the contents\nof /dev/mem, hence biosdevname fails.  The recent kernel provides the\nDMI byte contents in /sys/firmware/dmi/tables/*, and we can use this\ninstead of poking /dev/mem.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f64c3f549eda36d11b5690117173b0847535ebbe", "commit_date": "2020-09-04T16:51:30Z", "commit_message": "Add buffer read helper using read explicitly\n\nSince mmap can't work well with a sysfs file, we need to read the\ncontents explicitly via read, even if USE_MMAP is enabled.\nProvide a new helper, __mem_cunk(), that does behave like mem_chunk()\nbut with the extra use_mmap argument to specify the method to read a\nfile.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nCC: Thomas Renninger <trenn@suse.de>\nCC: Michal Suchanek <msuchanek@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42abae6e56f22245ac8d693ab88ad1e3ea75a220", "commit_date": "2019-01-27T13:45:09Z", "commit_message": "man: fix all_ethN indentation\n\nall_ethN is not another .TP block under the physical policy, it is a paragraph of its own right.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f2d9991d50e09ba9af842fb592b37d0c2021a06", "commit_date": "2018-11-12T07:29:24Z", "commit_message": "Netronome biosdevname support (#8)\n\n* Add support for Netronome netdevices\r\n\r\nNetronome netdevices also provide multiple ports through the same\r\nfunction.\r\n\r\n* Set devID with phys_port_name index for nfp devices\r\n\r\nNetronome netdevices should rather use the index from the phys_port_name \r\nattribute instead of the dev_port/dev_id\r\nattributes.\r\n\r\n* Exclude naming Netronome logical devices\r\n\r\nSome drivers, like the Netronome nfp driver, expose logical devices such\r\nas representors and switchdev uplink devices.\r\n\r\nThere isn't currently a naming scheme for such devices, so exclude them\r\nfrom the biosdevname naming policy.\r\n\r\nSplit ports also don't have a naming scheme defined for biosdevname, so\r\nits better to exclude them from naming.\r\n\r\nIdentification of such devices will always be driver dependent.\r\nAt the moment, only 'nfp' driver devices are considered for exclusion.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d6fa84f8a80d5e1c526fe675c345f709a700e33e", "commit_date": "2018-07-20T06:56:48Z", "commit_message": "Prevent infinite recursion in dmidecode.c::smbios_setslot by (#7)\n\nChecking that subordinate bus has a number greater than the\r\ncurrent bus.\r\nFixes SUSE bug#1093625", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7460046a5430e92cd6a4ef0c938f80e95669b5bc", "commit_date": "2017-09-01T05:33:56Z", "commit_message": "Add support for ExaNIC network cards (#5)\n\nExaNIC cards have multiple physical ports on the same PCI function and\r\nneed to be numbered using the dev_port attribute.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}