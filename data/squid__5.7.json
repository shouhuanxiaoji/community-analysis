{"v5-next-backports": [], "v5": [{"commit_oid": "052cf082b0faaef4eaaa4e94119d7a1437aac4a3", "commit_date": "2023-10-17T15:50:56Z", "commit_message": "Fix stack buffer overflow when parsing Digest Authorization (#1517)\n\nThe bug was discovered and detailed by Joshua Rogers at\r\nhttps://megamansec.github.io/Squid-Security-Audit/digest-overflow.html\r\nwhere it was filed as \"Stack Buffer Overflow in Digest Authentication\".\r\n\r\n---------\r\n\r\nCo-authored-by: Alex Bason <nonsleepr@gmail.com>\r\nCo-authored-by: Amos Jeffries <yadij@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05f6af2f4c85cc99323cfff6149c3d74af661b6d", "commit_date": "2023-10-15T22:25:48Z", "commit_message": "RFC 9112: Improve HTTP chunked encoding compliance (#1498)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12de20b12eaa11bdaddd536b2126b796b678e154", "commit_date": "2023-09-29T16:33:23Z", "commit_message": "Bug 5301: cachemgr.cgi not showing new manager interface URLs (#1479)\n\nAlso fix several related UI issues uncovered during testing:\n\n* Prune the list of servers accessible via the CGI tool login.\n Their responses would be badly mangled if accessed via\n the old tools parse logic.\nAlso, hide the old login form if all servers use the new\nmanager interface.\n\n* Ensure the 'menu' report is always used by default after\nthe CGI tool login. This prevents errors about MGR_INDEX\nnot being available on recent Squid releases. Restoring the\nexpected CGI tool behavior.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "112a34b8d147f7a2355d12e96aed13842cd5a8bb", "commit_date": "2023-09-27T06:14:16Z", "commit_message": "Bug 5300: cachemgr.cgi assertion (#1478)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14ec8b26aca6d8b9107ebbce49616cd660f311c5", "commit_date": "2023-07-30T03:19:42Z", "commit_message": "Maintenance: improve release notes automation (#1264)\n\n* auto-update the text version numbers\n* add template for automatic series creation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e46a1002d8ff747b8a5d4226e1752e7146e618ba", "commit_date": "2023-07-30T03:19:42Z", "commit_message": "negotiate_kerberos_auth: Fix build [-Wunused-but-set-variable] (#1294)\n\nUnused variable discovered by clang v15.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc0149afd7acb415abf1a3d39fd7b8f79ecf6196", "commit_date": "2023-07-30T03:19:42Z", "commit_message": "Fix fatalf() undefined for environments without syslog (#1356)\n\nsrc/debug/debug.cc:1087\nerror: 'fatalf' was not declared in this scope", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31f20fda51799e873f57d11c8fb9a72900e8cf05", "commit_date": "2023-06-27T09:00:37Z", "commit_message": "Fix reported assertion condition being always \"EX\" (#1397)\n\nFATAL: assertion failed: foobar.cc:123: \"EX\"\r\n\r\nAutoconf v2.71 provides AC_HEADER_STDC that does not define\r\nSTDC_HEADERS. As a result, our assert() macro definitions print \"EX\"\r\ninstead of the actual failed condition when Squid is bootstrapped with\r\nAutoconf v2.71 or later.\r\n\r\nAutoconf documentation suggests writing code as if STDC_HEADERS is true\r\n(but without actually checking it). This change follows that suggestion:\r\nSquid no longer uses AC_HEADER_STDC and STDC_HEADERS.\r\n\r\nA `#define STDC_HEADERS 1` line may still be present in generated\r\n./configure because AC_USE_SYSTEM_EXTENSIONS places it there. However,\r\nin Squid v5 ./configure, AC_USE_SYSTEM_EXTENSIONS only runs on Solaris.\r\n\r\n----\r\n\r\nThis change contains a tiny portion of master/v6 commit a1c2236, a\r\ncommit that does not disclose the assert() message fix and contains many\r\nmore changes (some of which needed fixups). That commit also did not\r\nremove STDC_HEADERS from compat/GnuRegex.c.\r\n\r\nCo-authored-by: Amos Jeffries <squid3@treenet.co.nz>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50243625ee1b258f9c01407133f5fff333d358cd", "commit_date": "2023-04-30T22:29:35Z", "commit_message": "Maintenance: improve release notes automation (#1264)\n\n* auto-update the text version numbers\n* add template for automatic series creation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20d1c7236c7493b1f8b7e47f2e2afc529232071c", "commit_date": "2023-04-30T18:25:39Z", "commit_message": "5.9", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "980929b1d3435e74e4dc607e6b045aba889095ec", "commit_date": "2023-04-29T15:23:51Z", "commit_message": "Fix default build with libgnutls but absent GnuTLS headers (#1332)\n\nEnsure that when libgnutls is found but any of the required GnuTLS\nheaders cannot be used, GnuTLS support is not enabled by default and an\nexplicit request for GnuTLS support is fatally rejected during\n./configure. Otherwise, the build fails later anyway, during \"make\".\n\nThe problem was exposed by a mingw-cross build.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83305505c4592b232683b41252ab3ef3bbfcb484", "commit_date": "2023-04-26T09:58:19Z", "commit_message": "Improve reply_body_max_size matching accuracy (#1324)\n\n    HttpReply.cc(553) receivedBodyTooLarge: -4096 >? -1\n\nClientHttpRequest::out.offset is documented to only count body bytes,\nand that is what receivedBodyTooLarge() needs. We should not subtract\nthe guessed header size, occasionally violating reply_body_max_size\nconfiguration and often leading to a confusing negative body size in\nreceivedBodyTooLarge() debugging.\n\nPossibly broken since 2003 commit b51aec6: out.offset was not documented\nback then, but, AFAICT, it was already used just for the body bytes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab48eca183e41d2a81d3a13e16fa546b7a22ba71", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "Update GnuRegex.c\n\npolish touched lines to meet Squid coding style guidelines", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e73e48879b4e4479cc49e7f2da62dfa06d4880d6", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "port K&R function delcarations in GnuRegex.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c1809907741918519fa35e08b520d02efc16339", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "GnuRegex: port prototypes from K&R to ANSI", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffab82673fdf7953a10e922d79b4432366a83442", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "Adapt ip/libip.la stub to v5\n\nThe changes in commit 6ab5d388ae8cffc4ac0e99b0bfac4f0c6356e81f\n(PR#1254) are targeting code post commit 96f97829e13 (PR#1062)\nwhich will not be backported to v5.\nAdapting the stub file to the v5 methods signature.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd5455a2bd4f467c1a3b95a8dd080bf059d54b02", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "Fix build with clang v15.0.6 [-Warray-parameter] (#1297)\n\nAdapt a mismatching function signature in stub_libip.cc to the\ncorresponding declaration.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "236d1b4b2cfa703ab17c3b3dafaf573c0b0d66eb", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "Fix stub for ip/libip.la (#1254)\n\nUse to build disk I/O tests which do not need IP address\noperations. This also ensures bitrot does not reappear.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dbcb75abc031e9dcdc7ba292f12d77f28d9b3e8f", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "Fix several broken or missing copyright statements (#1300)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66ade3646c4cb735e36e28bb55bd0cbc5108e250", "commit_date": "2023-04-21T04:26:12Z", "commit_message": "Fix GCC v13 build [-Warray-bounds] (#1318)\n\n    src/ipc/mem/FlexibleArray.h:34:52: error: array subscript -1 is\n    below array bounds of 'int [1]' [-Werror=array-bounds]\n\nWe suspect this warning is a GCC v13 regression bug because the callers\nmarked as problematic by GCC (e.g., Rock::LoadingEntry::LoadingEntry) do\nnot use \"array subscript -1\", and the Ipc::StoreMapItems::at() operator\nthey use even asserts that the subscript is not negative. It might be\nGCC bug 107699: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107699\n\nThis change replaces the fake one-item array hack with a properly\naligned byte (still used as the \"start of the real array\" marker).\n\nAlso removed some unused and problematic code (instead of polishing it).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df8da56b14065bf6337f861105a830a7e5a3cb0b", "commit_date": "2023-03-27T10:21:31Z", "commit_message": "ESI: Fix build [-Wdeprecated-declarations] (#1295)\n\nReplaced deprecated htmlDefaultSAXHandlerInit() libxml2 initialization\ncall with xmlInitParser().", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8837118c77da81f1d016bb4048134cbd1df677af", "commit_date": "2023-03-27T10:21:31Z", "commit_message": "Fix build with clang v15 [-Wunused-but-set-variable] (#1296)\n\nRemove unused variable in neigbours.cc:neighborsUdpPing", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c29363438e41acdb10932f37ad2a810efe2141e", "commit_date": "2023-03-27T10:21:31Z", "commit_message": "bootstrap.sh: Polish output (#1301)\n\nWe use bootstrap.sh a lot in maintenance scripts but do not\nneed to see its output on success.\n\n * Fix some incorrect uses of stderr and stdout such that\n   all (and only) errors appear on stderr\n\n * Polish the message display when an error does occur\n    detecting one of the tools.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7459934f6ef1def0a259132fc8c2297ef5de7929", "commit_date": "2023-02-28T09:53:22Z", "commit_message": "5.8", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f70adcd383c357fec38c5b959ec3820a4f791cec", "commit_date": "2023-02-23T12:34:13Z", "commit_message": "Removed unused storeClientCopyPending() (#1282)\n\nUnused since 2002 commit edce4d9.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b98187a8c31eba7b4168be8bdeb9c7089f5da00", "commit_date": "2023-02-23T12:34:13Z", "commit_message": "CI: Disable optimizations in \"minimal\" build tests (#1278)\n\nOur \"minimal\" layer tests had to stop disabling optimizations in 2019\ncommit 4f3c41b due to problems specific to GCC v9 (v9.1 or earlier). GCC\nv9.4 (and later) appear to work OK (at least on Ubuntu 22.04), so let's\ntry to resume testing --disable-optimizations ./configure option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e2e1e23c3e3388bf46dafd92b06ab6b1be7f9eb", "commit_date": "2023-02-23T12:34:13Z", "commit_message": "Fix --disable-optimizations build: Undefined RetryGapUsec (#1276)\n\nSince inception (2017 commit e99fa72), FileOpeningConfig::RetryGapUsec\nwas declared but not defined in any translation unit (a bug). The build\nprobably \"worked\" because compilers simply inlined the value of the\nconstant data member when calling xusleep(). Commit 5eee0e4 removed code\nthat passed RetryGapUsec to that external \"C\" function. Now, the same\nmember is passed to a heavily-inlined and convoluted STL code, and at\nleast some compilers (e.g., GCC v10-v12 on Ubuntu 22.04) stopped\ninlining RetryGapUsec unless optimization is enabled. Our CI tests\npassed because we do not test --disable-optimizations builds (yet).\n\nWe do not need FileOpeningConfig::RetryGapUsec to be static, breaking\nbuilds, requiring extra code, and triggering questions. We do not even\nneed it to be constant, but removing \"const\" is an arguably out-of-scope\nchange, as is improving its type.\n\nFile::InvalidHandle is missing a definition as well, except on Windows,\nbut we are leaving that code \"as is\" for now, until we can test whether\nWindows is OK with removing that \"static\" keyword.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d077980672c0433f31ecf7c6e849dd1043c2281", "commit_date": "2023-02-23T12:34:13Z", "commit_message": "Documentation: Polish \"refresh_pattern percent\" description (#1260)\n\nThe original text contained a \"last modification age\" typo and was\nmisinterpreted by some admins as if Squid applied the configured percent\nto the current object age.\n\nThe text also did not make it clear that the percent-based heuristic is\neffectively only applied to responses with a Last-Modified header (in\naddition to the usual \"without an explicit expiry time\" precondition).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0dff06676e8acec5f864a547cf25292226ade534", "commit_date": "2023-02-23T12:34:13Z", "commit_message": "Fix build with clang v15.0.6 [-Wunused-but-set-variable] (#1247)\n\nclang v15.0.6 distributed with Fedora Rawhide complains about a variable\nthat is updated but never used:\n\n    net_db.cc:230:9: error: variable 'removed' set but not used\n    [-Werror,-Wunused-but-set-variable]`", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc3cada6edbfb69639a1be0dafbf3dce21fec111", "commit_date": "2023-02-23T12:34:13Z", "commit_message": "Fix build with clang v15.0.6 [-Wdeprecated-non-prototype] (#1246)\n\nclang v15.0.6 distributed with Fedora Rawhide complains about function\ndefinitions using K&R style:\n\n    lib/snmplib/mib.c:229:1: error: a function definition without a\n    prototype is deprecated in all versions of C and is not supported in\n    C2x [-Werror,-Wdeprecated-non-prototype]", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d1a5d20d027d6f262792b528a75d7c29eab643e", "commit_date": "2023-01-17T15:27:30Z", "commit_message": "Fix ACL type typo in req_header, rep_header key-changing ERRORs (#1208)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "edad3f150de8af0aeb2f629508be3219b83369b9", "commit_date": "2023-01-17T15:27:30Z", "commit_message": "ext_kerberos_ldap_group_acl: Support -b with -D (#1207)\n\nWhen both '-b' (i.e. bind DN) and '-D' (i.e. Kerberos domain) options\nare specified, '-b' is ignored completely. This breaks the helper when a\nsearch subtree has to be limited (e.g., when using FreeIPA).\n\nFix it to take '-b' into account if it was specified with '-D'.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b6e209c11152397b8c36b0dac89094278150608", "commit_date": "2023-01-11T11:12:42Z", "commit_message": "Source Format Enforcement (#1235)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d0b81efb3b814b8d8e40e0d3f1030e8594d2a4f", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Fix cppunit version detection (#1142)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d7da2a30ad35abb678bf023fe707eb316cbb215", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Do not check unused RECV_ARG_TYPE (#1146)\n\nThe check and corresponding defined preprocessor value\nare not used anywhere in the code; remove the check", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1107aa54a75331d4af95755d0eea90b37a2667d", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Fix escaping leading regex dashes in ./configure sources (#1152)\n\n    grep: invalid option -- 't'\n    Usage: grep [OPTION]... PATTERNS [FILE]...\n    Try 'grep --help' for more information.\n\n    Usage: grep [OPTION]... PATTERNS [FILE]...\n    Try 'grep --help' for more information.\n    ./configure: line 27524: test: too many arguments\n\n    Usage: grep [OPTION]... PATTERNS [FILE]...\n    Try 'grep --help' for more information.\n    ./configure: line 27698: test: too many arguments\n\nConfigure scripts are written in m4, not shell. M4 treats [square\nbrackets] specially. We could use quadrigraphs instead (as documented in\nautoconf manual) but `(-)` looks a lot simpler than `@<:@-@:>@`!", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "926d7c2962002a4793f37e5df15a6d3a3a7f86d4", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Fix 'warning: stray \\ before white space' (#1150)\n\ngrep 3.8 started detecting overly-escaped regex patterns", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd2c13d5b1b8d6ab8961d85ac904817e8eb4c15b", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Fix GCC build on macos-11: -Wunused-parameter (#1159)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a5f3101c4032d53f1cf56e4e98704667c7dfb74", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Bug 5241: Block all non-localhost requests by default (#1164)\n\nThis change goes one step further than commit 6d2f8ed in satisfying the\nsame \"by default, introduce no new attack vectors\" principle.\n\nCommit 6d2f8ed blocked access to localhost and to-link-local services\nbut still allowed access to potentially vulnerable popular cloud\ninstance metadata services running on site-local IPv6 addresses. It also\nstill allowed external access to localnet services that could be\ncompletely unprepared for such dangers! This change closes those holes.\n\nThis default configuration has two extra deny rules. These rules become\nnecessary only when the admin adds an \"http_access allow\" rule below\nthem. We enabled these rules despite their overheads, including more DNS\nqueries in some environments, so that the admin does not have to\nremember to enable them when following our \"INSERT...HERE\" instructions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baae3d47c99c912f23eacc4ff4a63d4475068388", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Bug 5241: Block to-localhost, to-link-local requests by default (#1161)\n\nSquid suggested blocking to-localhost access since 2001 commit 4cc6eb1.\nAt that time, the default was not adjusted because some use cases were\nknown to require to-localhost access. However, the existence of special\ncases should not affect defaults! The _default_ configuration should\neither block all traffic or only allow traffic that is unlikely to\nintroduce new attack vectors into the network.\n\nAlso block to-link-local traffic (by default), for very similar reasons:\nPopular cloud services use well-known IPv4 link-local (i.e. RFC 3927)\naddresses (a.k.a. APIPA), to provide sensitive instance metadata\ninformation, via HTTP, to instance users and scripts. Given cloud\npopularity, those special addresses become nearly as ubiquitous as\n127.0.0.1. Cloud provider networks shield metadata services from\nexternal accesses, but proxies like Squid that forward external HTTP\nrequests may circumvent that protection.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f13f721263a4cc75e4b798a230022561047899c", "commit_date": "2022-12-07T12:59:44Z", "commit_message": "Bug 5162: mgr:index URL do not produce MGR_INDEX template (#1191)\n\nSatisfy mgr:index requests using\n\n* a 200 OK response with a body derived from the MGR_INDEX template (if\n  that template file was found during (re)configuration) or\n* a 404 (Not Found) error response (otherwise).\n\nBroken in 2019 commit 7e6eabb, when Squid started replying using a 200\nOK response with a hard-coded \"mgr_index\" text as a body, ignoring any\nconfigured MGR_INDEX template.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}