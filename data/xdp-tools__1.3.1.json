{"master": [{"commit_oid": "1df4bcb67eba4cfaa1a72b6c1d9ab4c04aaa7a8d", "commit_date": "2023-09-26T12:14:07Z", "commit_message": "need to detach link for skb and native modes\n\nSigned-off-by: Mohamed Mahmoud <mmahmoud@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ce30637951949212344f1968c3fd5e5adf1ffc3", "commit_date": "2023-09-21T20:42:42Z", "commit_message": "Fix build on arm64\n\nFix the arm64 build by adding arch specific header files to\nCFLAGS and BPF_CFLAGS. Also, use `gcc -print-multiarch` to get\narch name instead of `uname -m` which is not the right way.\n\nSigned-off-by: Sachin Tiptur <coolsachints@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eccba7ea952f75091c0313609545344301965206", "commit_date": "2023-09-21T20:35:42Z", "commit_message": "xdp-trafficgen: Cast argument to getsockname() to struct sockaddr\n\nThe must C library doesn't have the fancy union define that glibc has for\nthe various sockaddr structs, so it barfs on the use of a sockaddr_in6 as\nan argument to getsockname(). Add an explicit cast to avoid the error.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4738472b70b227d3df49d3d4efc3c72c2a058fed", "commit_date": "2023-09-21T20:30:10Z", "commit_message": "configure: Add check for presence of readelf\n\nSince we're now using $READELF in the libxdp Makefile, we should make sure the\nutility is present (and the variable set), or we may get weird 'make' errors.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4ba50ecbac4dce10a700a61606feb82d843d621", "commit_date": "2023-09-21T20:27:39Z", "commit_message": "Merge branch 'fix_xdp_loader' [#362]", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aace04604dc05cee0bbd19ac9eed11b13fc0de0c", "commit_date": "2023-09-21T20:27:03Z", "commit_message": "Add test case for link_detach\n\nSigned-off-by: Mohamed Mahmoud <mmahmoud@redhat.com>\n[ fixup whitespace, rename test from link_dispatch to link_detach ]\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "667c0e4fc366628830697ec34fdfc8ebc17162da", "commit_date": "2023-09-21T20:18:01Z", "commit_message": "Support detaching bpf_link-based attachments\n\nWhen explicitly detaching from an interface we should also handle bpf_link-based\nattachments (by force-detaching the link).\n\nFixes #361.\n\nSigned-off-by: Mohamed Mahmoud <mmahmoud@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9aba9e9aee38ee69ac2be4e728b82873cc2b3c03", "commit_date": "2023-08-09T21:12:33Z", "commit_message": "packaging/rpm: Change License field to be SPDX-compliant\n\nFedora has a policy that the License field of all packages should be in SPDX\nformat, so update the values in the .spec file in this repo. Also add separate\nlicense fields for the libxdp subpackages since they are licensed differently\nthan the main xdp-tools package.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d99364b6a43865f4e0b6cd41f69eb7a88d2946c", "commit_date": "2023-08-08T18:16:46Z", "commit_message": "xdp-bench: flushing output buffers after printing stats\n\nHaving buffering enabled (by default in linux) for `stdout`\ncauses issues for pipes. Since pipe buffer is pretty large\n(64KiB) it would take ages to fill that up. Therefore,\napplications in pipe are \"unable\" to reliably read\n`xdp-bench`'s `stdout`.\n\nThis approach may affect performance but since `xdp-bench` tool\ndoes not rely on `stdout`/`stderr` operations, it's safe to flush both\n`stdout` and `stderr` buffers immediately.\n\nSigned-off-by: Samuel Dobron <sdobron@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48ad94bb782ecd3ffe18ea28e28024ac8a2af383", "commit_date": "2023-08-08T09:26:05Z", "commit_message": "libxdp: Fix bpf program original file  descriptor management\n\nSigned-off-by: Marcin Knap <m.knap@falconvsystems.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e711a9283035e46660bd095f10ddfec46f558cac", "commit_date": "2023-08-07T19:00:14Z", "commit_message": ".github/workflows: Bump Clang version to clang-16\n\nNew versions of bpftool fail to compile on clang-11, so let's just bump the\nversion used in the CI to clang-16.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "498e51ce830af599e482daff737dfab4577ede25", "commit_date": "2023-08-07T14:59:07Z", "commit_message": "libxdp: don't use direct call to readelf for symbol table comparison\n\nGentoo CI previously reported symbol mismatches in libxdp\n(see #302 and https://bugs.gentoo.org/899742). This was\ncaused by a direct call to 'readelf' instead of using the\ncommand injected by the environment/toolchain.\nThe fix is simple: use $(READELF).\n\nSigned-off-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00ff5bf76f28f518acbd40a7aed7606ff21dc364", "commit_date": "2023-07-07T22:52:25Z", "commit_message": "libxdp: Add selftest for non-privileged xsk creation\n\nTest loads a program, creates bare AF_XDP socket, then drops all the\ncapabilities and tries to create umem and xsk with previously created\nresources.\n\nUses libcap-ng as a dependency for capability management.  Skipped\nif the library is not available at the configuration time.\n\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8e8c7bb7ab6447594a9feb52e51d05fc127d780", "commit_date": "2023-07-05T22:58:13Z", "commit_message": "Bump version to v1.4.0\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05df26b82c70bd2de22e970880b1da7f3b69e623", "commit_date": "2023-07-05T22:12:02Z", "commit_message": "libxdp: Rebuild man page\n\nOne of the updates to the man page weren't carried over to the committed\nversion.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9aa1ceaa5350d160b7a17920d5b99ab792271ce9", "commit_date": "2023-07-05T14:06:19Z", "commit_message": "xdp-bench: Error out if load-bytes mode is set without setting parse-ip\n\nSilently ignoring the incompatible options is way too error prone, so lets\njust error out with the invalid combination.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "740c839806a02517da5bce7bd0ccaba908b3f675", "commit_date": "2023-06-29T11:45:33Z", "commit_message": "libxdp: Allow creation of xsk with exclusive umem without CAP_NET_RAW\n\nAdding a new API xsk_umem__create_with_fd() that accepts an extra file\ndescriptor of already open AF_XDP socket.  This function can be used\nas a substitute of a regular xsk_umem__create() in case where process\ndoesn't have CAP_NET_RAW privileges.  Privileged process may open a\nsocket beforehand and send the file descriptor via UNIX domain socket\nor pass it during exec().  Subsequent xsk_socket__create() will re-use\nthis socket.  No other operations require privileges in case the\nprogram load is inhibited.\n\nThis change allows use of AF_XDP with libxdp by processes with no\nextra privileges.\n\nxsk_socket__create_shared() requires opening a new socket for each\nqueue after the first one, so it will require more work in order to\ncreate a pretty API.  Not doing that right now.  The target use-case\nis AF_XDP network backend in QEMU that doesn't need shared umem, but\nrequires running without any privileges.\n\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8ee97c527d11656bb919e183ad7cf94c7aa33b9", "commit_date": "2023-06-13T15:13:18Z", "commit_message": "lib: Install BPF objects as non-executable\n\nThe BPF/XDP objects installed into BPF_OBJECT_DIR are not meant to be\nexecuted directly, so don't install them as executable. This should also\nprevent find-debuginfo from stripping away their symbol table.\n\nSigned-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e542accab2454d02d303bfe2d0e4a7fe92443730", "commit_date": "2023-06-13T15:13:18Z", "commit_message": "util/xdp_samples: Only ignore -Wstringop-truncation diagnostic on GCC 8 or greater\n\nString truncation detection is only available on GCC 8 or greater.\nIgnore it only when it is recognized by GCC.\n\nSigned-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7963ac8694641383d4d647907666df4877fe80d9", "commit_date": "2023-06-08T13:47:19Z", "commit_message": "lib/export-man: Delete trailing whitespace from man pages after export\n\nWhen generating man pages, the header line is written with a trailing\nspace. Add a (delete-trailing-whitespace) invocation to the file\npostprocessing to get rid of this.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "310f645357810c66c27d5f356d60ff163266dd1a", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Change the -l option to be a mode setting option\n\nIn anticipation of adding more modes in the future, change the -l option to\nbe a mode option setting instead of a boolean switch. Also add\ndocumentation for the option.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "968ce1fd99a8858252cb2c7bdc06386711d7786d", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "util/params: Load defaults before parsing options\n\nInstead of copying the default values one-by-one at the end of option\nparsing, copy the whole struct from the defaults version before parsing.\nThis allows multiple options to modify the same field, which is useful for\ncompatibility options marked as hidden.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca0ba834a10979e606fff9b192144a7cd0d1226d", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Update long option for -p to match documentation\n\nThe documentation for the -p option of xdp-bench (in the basic modes) was\nupdated in the documentation, but not the value actually being accepted by\nthe program. The --packet-operation option name is actually the better one,\nso change the code to accept that, but keep accepting the old\n--program-mode since that was in a release already.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "297d5ab77174baad7b7352b3ad7aa7b65c8d7670", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "util/compat: fix const error for bpf_program__get_expected_attach_type()\n\nThe older bpf_program__get_expected_attach_type() didn't declare its\nargument as const, so the compiler complains about the compatibility\nwrapper dropping the const qualifier. Add an explicit cast to silence the\nwarning.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b926b3158ac5b022fab862a5c531d1595b7147b7", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "libxdp: clear frags flag before loading single prog if kernel support is missing\n\nWhen building a dispatcher we make sure to not set the frags flag if the\nkernel doesn't support frags. However, if for whatever reason we end up\nfalling back to loading a single program, we didn't clear the flag which\ncan lead to errors. Remedy this by performing the feature check in\nxdp_program__attach_single(), and clearing the flag if the check fails.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b4257bf53b57ec043cc6feb162e1ef8b7acb5a1", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "util/xdp_sample: Don't output number of queues on error\n\nWhen the ethtool ioctl fails to get the number of queues for a device, skip\nthe meaningless log message with the number.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "39e8c21aaffa2682d296e6c8376b6c2386199cc0", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: restucture the program options\n\nInstead of having the program operating modes of the basic runner be part\nof the BPF program (and selected with vars in the rodata), turn each mode\ninto its own program. This way the selection can be done in userspace by\njust selecting the right program, and we reduce the complexity of the\nbranches on the BPF side, and rely less on dead code elimination by the\nverifier.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95b813fb1a0b7d5676cc282455cf706d53593d18", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench/tests: skip xdp_load_bytes test if the kernel doesn't support it\n\nAdd detection of whether the kernel supports the xdp_load_bytes helper and\nskip the test if it isn't supported.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81a198dbc0e32184f15822dc351face8a802657d", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Add missing 'pass' command from the man page overview\n\nThe summary at the start of the man page was missing the 'pass' command.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0bb7390256636f07e500410448d1c4458d1fdd1", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Enable the xdp_frags flag for all kernel programs\n\nWe always set the frags support bit: nothing the XDP programs do\nis incompatible with multibuf, and it's perfectly fine to load a\nprogram with frags support on an interface with a small MTU. We don't\nrisk setting any flags the kernel will balk at, either, since libxdp\nwill do the feature probing for us and skip the flag if the kernel\ndoesn't support it.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcb982284478a9cfca9bb1f1a8bc3c8ed082340f", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Add option to use xdp_load_bytes() helper when parsing IP\n\nThis adds an option to xdp-bench to use the xdp_load_bytes() helper when\nparsing the IP header (for the basic options). This can be used to\nbenchmark the overhead of xdp_load_bytes() relative to DPA.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b43595e2f60d7e77ceb3f992d9bcb2247f32c4c6", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Add parse-ip packet operation to basic actions\n\nAdd a 'parse-ip' packet operation to the basic actions (for drop, pass and\ntx commands). This will parse the packet all the way down to the IP header\ninstead of just touching a single field in the ethernet header like the\n'touch' operation does.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7fa5ef3b99f6e9a2a4a4789f40f9717d78334caa", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Use basic_program_mode enum in BPF code as well\n\nInstead of converting the basic_program_mode enum into boolean variables,\njust use it directly in the BPF code. This makes it easier to add new modes\nin the future, as the boolean variables quickly explodes. Move the struct\ndefinition itself into its own shared header file so it's kept in sync.\n\nThis includes a small functional change in that we no longer perform the\n\"touch data\" action when we're swapping MACs. However, since swapping MACs\ntouches the same part of the packet data, the performance impact of this\nshould be negligible (it's just a single inline branch that's being\nremoved).\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "870db97493df7007ee157ad44709e128734908e4", "commit_date": "2023-06-08T11:47:08Z", "commit_message": "xdp-loader: introduce features command\n\nAdd features command to xdp-loader in order to dump XDP features\nsupported by the NIC.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "404fbd595d61dc7c76ba142bccbbf86b538766fb", "commit_date": "2023-06-08T11:47:08Z", "commit_message": "libbpf: update to v1.2.0\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81ea740f5c363bbe026529c775eb803f3fcfc9a7", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "xdp-trafficgen: Turn off debugging if we don't have vprintk\n\nCompilation of xdp-trafficgen with DEBUG set fails if libbpf is too old to\nhave the vprintk helper and associated macros. Since these are only used\nfor debug output anyway, fix this by just turning off debug mode if the\nhelper is not available.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4cbb40a4aefdedbeae11564ff5980de0baeea00", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "lib/testing: Include compat.h instead of using locai ifdef\n\nThe test-tool binary was using its own ifdef'ed compatibility define\ninstead of just including compat.h, which leads to errors when one of the\nother headers in util does include compat.h. So remove the local define and\njust include compat.h directly instead.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7bc4c74c3a890d7b4b6f7020f526339727a46a5", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "util/compat.h: Fix compilation errors with unknown functions\n\nOne of the compatibility functions in compat.h was not declared as static\ninline, which causes the compiler to complain if it is not used. Fix this\nand also add #include directives to the file so it works even when included\nby another file that doesn't include all the libbpf headers.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55f593d575bff35440420cdc9b2b8e4b22af1b7c", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "util/xdp_samples: Add compatibility defines for libbpf\n\nThe xdp_samples.h file was using some newer libbpf functions without the\nrequired compatibility defines, leading to compilation errors on older\nlibbpf versions. Add the required defines to util/compat.h and include that\nfrom xdp_sample.h. This includes a new configure check for\nbpf_program__expected_attach_type(), which was renamed in libbpf 1.0.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33326e14a5f55357bc0185e3e5c4ab3cd6f1141d", "commit_date": "2023-05-31T08:10:44Z", "commit_message": "util: Move program locking out of dispatch_commands()\n\nThe dispatch_commands() helper takes a program lock and holds it while the\ncommand is being executed. This was added for the use of xdp_filter, and is\nreally only needed for that; none of the other utilities really need\nlocking to synchronise with itself (and libxdp has its own locking for the\ndispatcher).\n\nMove the locking out of dispatch_commands() and instead add explicit lock\nand unlock calls to each of the xdp-filter commands. While doing so, also\nmove the locking to use the same directory-fd based approach as the libxdp\nlocking uses. This has the benefit of not writing any lock files, so the\nlock is automatically cleared when the application exits, even if it\ncrashes. This should fix any issues with stale lock files sticking around,\nwhich we did not have any good way to clean up.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc27e70aac3cd4c6144fe4e4301f13954b7dd804", "commit_date": "2023-05-30T11:21:54Z", "commit_message": "xdp-loader: also silence libbpf logging on unload\n\nIn xdp-loader we explicitly silence libbpf logging before loading a program\nbecause the output is unhelpful in most cases. With the addition of\nmultiprog probing we also get unhelpful output on unload, so also silence\nthe output there.\n\nReported-by: Simon Sundberg <Simon.Sundberg@kau.se>\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d20055d8104c9ffa05c0304a3442c4352b3d1a9e", "commit_date": "2023-05-11T11:21:54Z", "commit_message": "util/xdp_sample: define bpf_trace_vprintk() if it doesn't exist\n\nThe bpf_trace_vprintk() helper was added to the libbpf headers in 0.6.0, so\ndefine it if it doesn't exist. We already detect the bpf_program__flags()\nhelper which was added in the same version, so just use that define to\nguard the definition.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1eec9ed587598320c2d6acd32cd29496637aad8", "commit_date": "2023-05-10T18:38:14Z", "commit_message": "util: Use bpf_trace_vprintk() directly in sample detection program\n\nThe dummy program we use to feature detect for xdp-sample doesn't compile\non old versions of libbpf that don't have the macro feature that selects\nbpf_trace_vprintk() if the number of args exceeds what bpf_trace_printk()\nsupports. To get around this, just use the bpf_trace_vprintk() helper\ndirectly, which should hopefully work on old libbpf versions as well.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c8662f4bb44445454c8f66df56ccd11274d4e30", "commit_date": "2023-04-24T10:24:40Z", "commit_message": "test_xdp_frags: check for privs early\n\nAs currently written, `test_xdp_frags` if run without\nnecessary permissions will loudly print \"this kernel\ndoes NOT support xdp frags\", and then exit on the\nsetrlimit(). The same thing happens if the argument list\nis invalid. Instead, verify all this before performing\nthe frag support check, so as not to dismay users using\nthis program to check for frag support.\n\nSigned-off-by: nick black <dankamongmen@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b76c2ccd7987202be6cea58bfe954bcab655191d", "commit_date": "2023-04-12T09:50:42Z", "commit_message": "configure: Correctly detect bpftool skeleton generation\n\nWe use the 'name' argument to bpftool skeleton generation, so detect if\nthis is not available and refuse to use the bpftool version if it is.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "308ec00b10c8428b65279e064f3f7a792ed1460f", "commit_date": "2023-04-12T09:50:42Z", "commit_message": "configure: Detect presence of libbpf_program__flags()\n\nOld versions of libbpf didn't expose the program flags. Add detection for\nthis, and (effectively) disable the XDP frags support in libxdp for those\nold versions of libbpf. Which is fine because systems with such an old\nlibbpf most likely doesn't have a recent enough kernel to support frags\nanyway.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "92d379e1e60866bafb57afa6b755294753a85548", "commit_date": "2023-04-12T09:50:42Z", "commit_message": "configure: Detect presence of bpf_program__type()\n\nThe bpf_program__type() helper was renamed from bpf_program__get_type() in\nlibbpf 0.7.0, so add detection for this and redefine the new name as a\nwrapper if it is not present.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a76e7a2b156b8cfe38992206abe9df1df0a29e38", "commit_date": "2023-03-29T11:03:14Z", "commit_message": "libxdp: fix build on musl\n\nIn musl, PATH_MAX is defined in limits.h. Include it in libxdp.c to fix\nbuilding systems using musl libc.\n\nlibxdp.c: In function 'find_bpffs':\nlibxdp.c:406:33: error: 'PATH_MAX' undeclared (first use in this function)\n  406 |         static char bpf_wrk_dir[PATH_MAX];\n      |                                 ^~~~~~~~\n\nSigned-off-by: Stijn Tintel <stijn@linux-ipv6.be>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "344b241da22a5358c714d6db1ea6f225f951dbdb", "commit_date": "2023-03-08T19:49:49Z", "commit_message": "xdpdump: fix build with clang\n\nWhen building all of xdp-tools with clang, the xdp-dump build fails\ndue to 'classic' use of variable-length arrays and -Werror.\nDisable the warning and leave a breadcrumb to the discussion.\n\nFixes: #304\nSigned-off-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb6d06219d1b49b07980b481a383e1dea74a0702", "commit_date": "2023-03-04T21:28:07Z", "commit_message": "make: disable stack protector for BPF bits built by clang\n\nThe clang toolchain might have stack-protection enabled by default\n(e.g. via platform configuration) and that won't work for BPF,\nso unconfitionally disable it via -fno-stack-protector.\n\nSigned-off-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7df567634af77381832a2212c5f5099b07734f3", "commit_date": "2023-03-04T20:27:18Z", "commit_message": "configure: Fix function detection for btf__type_cnt()\n\nThe configure check for btf__type_cnt() swapped two arguments in the\ncheck_libbpf_function() call in the configure script, leading to the check\nfailing if LIBBPF_CFLAGS is non-empty. Make sure the arguments are in the\nright order, and also pass a proper NULL parameter in the check instead of\na 0.\n\nReported-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}], "musl-compat": [], "xdp-forward": [{"commit_oid": "5045e93b1b556f788bcbdc410612c002e07fc77e", "commit_date": "2023-09-28T17:21:05Z", "commit_message": "Add xdp-forward utility\n\nAdd the xdp-forward utility, the beginning of an XDP forwarding plane utility.\nThis is a port of the xdp_fwd utility from samples/bpf in the kernel tree, with\nthe userspace component converted to the xdp-tools command structure (with\n'load' and 'unload' commands), and using libxdp to load and unload.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ce30637951949212344f1968c3fd5e5adf1ffc3", "commit_date": "2023-09-21T20:42:42Z", "commit_message": "Fix build on arm64\n\nFix the arm64 build by adding arch specific header files to\nCFLAGS and BPF_CFLAGS. Also, use `gcc -print-multiarch` to get\narch name instead of `uname -m` which is not the right way.\n\nSigned-off-by: Sachin Tiptur <coolsachints@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eccba7ea952f75091c0313609545344301965206", "commit_date": "2023-09-21T20:35:42Z", "commit_message": "xdp-trafficgen: Cast argument to getsockname() to struct sockaddr\n\nThe must C library doesn't have the fancy union define that glibc has for\nthe various sockaddr structs, so it barfs on the use of a sockaddr_in6 as\nan argument to getsockname(). Add an explicit cast to avoid the error.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4738472b70b227d3df49d3d4efc3c72c2a058fed", "commit_date": "2023-09-21T20:30:10Z", "commit_message": "configure: Add check for presence of readelf\n\nSince we're now using $READELF in the libxdp Makefile, we should make sure the\nutility is present (and the variable set), or we may get weird 'make' errors.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4ba50ecbac4dce10a700a61606feb82d843d621", "commit_date": "2023-09-21T20:27:39Z", "commit_message": "Merge branch 'fix_xdp_loader' [#362]", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aace04604dc05cee0bbd19ac9eed11b13fc0de0c", "commit_date": "2023-09-21T20:27:03Z", "commit_message": "Add test case for link_detach\n\nSigned-off-by: Mohamed Mahmoud <mmahmoud@redhat.com>\n[ fixup whitespace, rename test from link_dispatch to link_detach ]\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "667c0e4fc366628830697ec34fdfc8ebc17162da", "commit_date": "2023-09-21T20:18:01Z", "commit_message": "Support detaching bpf_link-based attachments\n\nWhen explicitly detaching from an interface we should also handle bpf_link-based\nattachments (by force-detaching the link).\n\nFixes #361.\n\nSigned-off-by: Mohamed Mahmoud <mmahmoud@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9aba9e9aee38ee69ac2be4e728b82873cc2b3c03", "commit_date": "2023-08-09T21:12:33Z", "commit_message": "packaging/rpm: Change License field to be SPDX-compliant\n\nFedora has a policy that the License field of all packages should be in SPDX\nformat, so update the values in the .spec file in this repo. Also add separate\nlicense fields for the libxdp subpackages since they are licensed differently\nthan the main xdp-tools package.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4d99364b6a43865f4e0b6cd41f69eb7a88d2946c", "commit_date": "2023-08-08T18:16:46Z", "commit_message": "xdp-bench: flushing output buffers after printing stats\n\nHaving buffering enabled (by default in linux) for `stdout`\ncauses issues for pipes. Since pipe buffer is pretty large\n(64KiB) it would take ages to fill that up. Therefore,\napplications in pipe are \"unable\" to reliably read\n`xdp-bench`'s `stdout`.\n\nThis approach may affect performance but since `xdp-bench` tool\ndoes not rely on `stdout`/`stderr` operations, it's safe to flush both\n`stdout` and `stderr` buffers immediately.\n\nSigned-off-by: Samuel Dobron <sdobron@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48ad94bb782ecd3ffe18ea28e28024ac8a2af383", "commit_date": "2023-08-08T09:26:05Z", "commit_message": "libxdp: Fix bpf program original file  descriptor management\n\nSigned-off-by: Marcin Knap <m.knap@falconvsystems.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e711a9283035e46660bd095f10ddfec46f558cac", "commit_date": "2023-08-07T19:00:14Z", "commit_message": ".github/workflows: Bump Clang version to clang-16\n\nNew versions of bpftool fail to compile on clang-11, so let's just bump the\nversion used in the CI to clang-16.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "498e51ce830af599e482daff737dfab4577ede25", "commit_date": "2023-08-07T14:59:07Z", "commit_message": "libxdp: don't use direct call to readelf for symbol table comparison\n\nGentoo CI previously reported symbol mismatches in libxdp\n(see #302 and https://bugs.gentoo.org/899742). This was\ncaused by a direct call to 'readelf' instead of using the\ncommand injected by the environment/toolchain.\nThe fix is simple: use $(READELF).\n\nSigned-off-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00ff5bf76f28f518acbd40a7aed7606ff21dc364", "commit_date": "2023-07-07T22:52:25Z", "commit_message": "libxdp: Add selftest for non-privileged xsk creation\n\nTest loads a program, creates bare AF_XDP socket, then drops all the\ncapabilities and tries to create umem and xsk with previously created\nresources.\n\nUses libcap-ng as a dependency for capability management.  Skipped\nif the library is not available at the configuration time.\n\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8e8c7bb7ab6447594a9feb52e51d05fc127d780", "commit_date": "2023-07-05T22:58:13Z", "commit_message": "Bump version to v1.4.0\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05df26b82c70bd2de22e970880b1da7f3b69e623", "commit_date": "2023-07-05T22:12:02Z", "commit_message": "libxdp: Rebuild man page\n\nOne of the updates to the man page weren't carried over to the committed\nversion.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9aa1ceaa5350d160b7a17920d5b99ab792271ce9", "commit_date": "2023-07-05T14:06:19Z", "commit_message": "xdp-bench: Error out if load-bytes mode is set without setting parse-ip\n\nSilently ignoring the incompatible options is way too error prone, so lets\njust error out with the invalid combination.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "740c839806a02517da5bce7bd0ccaba908b3f675", "commit_date": "2023-06-29T11:45:33Z", "commit_message": "libxdp: Allow creation of xsk with exclusive umem without CAP_NET_RAW\n\nAdding a new API xsk_umem__create_with_fd() that accepts an extra file\ndescriptor of already open AF_XDP socket.  This function can be used\nas a substitute of a regular xsk_umem__create() in case where process\ndoesn't have CAP_NET_RAW privileges.  Privileged process may open a\nsocket beforehand and send the file descriptor via UNIX domain socket\nor pass it during exec().  Subsequent xsk_socket__create() will re-use\nthis socket.  No other operations require privileges in case the\nprogram load is inhibited.\n\nThis change allows use of AF_XDP with libxdp by processes with no\nextra privileges.\n\nxsk_socket__create_shared() requires opening a new socket for each\nqueue after the first one, so it will require more work in order to\ncreate a pretty API.  Not doing that right now.  The target use-case\nis AF_XDP network backend in QEMU that doesn't need shared umem, but\nrequires running without any privileges.\n\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8ee97c527d11656bb919e183ad7cf94c7aa33b9", "commit_date": "2023-06-13T15:13:18Z", "commit_message": "lib: Install BPF objects as non-executable\n\nThe BPF/XDP objects installed into BPF_OBJECT_DIR are not meant to be\nexecuted directly, so don't install them as executable. This should also\nprevent find-debuginfo from stripping away their symbol table.\n\nSigned-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e542accab2454d02d303bfe2d0e4a7fe92443730", "commit_date": "2023-06-13T15:13:18Z", "commit_message": "util/xdp_samples: Only ignore -Wstringop-truncation diagnostic on GCC 8 or greater\n\nString truncation detection is only available on GCC 8 or greater.\nIgnore it only when it is recognized by GCC.\n\nSigned-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7963ac8694641383d4d647907666df4877fe80d9", "commit_date": "2023-06-08T13:47:19Z", "commit_message": "lib/export-man: Delete trailing whitespace from man pages after export\n\nWhen generating man pages, the header line is written with a trailing\nspace. Add a (delete-trailing-whitespace) invocation to the file\npostprocessing to get rid of this.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "310f645357810c66c27d5f356d60ff163266dd1a", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Change the -l option to be a mode setting option\n\nIn anticipation of adding more modes in the future, change the -l option to\nbe a mode option setting instead of a boolean switch. Also add\ndocumentation for the option.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "968ce1fd99a8858252cb2c7bdc06386711d7786d", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "util/params: Load defaults before parsing options\n\nInstead of copying the default values one-by-one at the end of option\nparsing, copy the whole struct from the defaults version before parsing.\nThis allows multiple options to modify the same field, which is useful for\ncompatibility options marked as hidden.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca0ba834a10979e606fff9b192144a7cd0d1226d", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Update long option for -p to match documentation\n\nThe documentation for the -p option of xdp-bench (in the basic modes) was\nupdated in the documentation, but not the value actually being accepted by\nthe program. The --packet-operation option name is actually the better one,\nso change the code to accept that, but keep accepting the old\n--program-mode since that was in a release already.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "297d5ab77174baad7b7352b3ad7aa7b65c8d7670", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "util/compat: fix const error for bpf_program__get_expected_attach_type()\n\nThe older bpf_program__get_expected_attach_type() didn't declare its\nargument as const, so the compiler complains about the compatibility\nwrapper dropping the const qualifier. Add an explicit cast to silence the\nwarning.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b926b3158ac5b022fab862a5c531d1595b7147b7", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "libxdp: clear frags flag before loading single prog if kernel support is missing\n\nWhen building a dispatcher we make sure to not set the frags flag if the\nkernel doesn't support frags. However, if for whatever reason we end up\nfalling back to loading a single program, we didn't clear the flag which\ncan lead to errors. Remedy this by performing the feature check in\nxdp_program__attach_single(), and clearing the flag if the check fails.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b4257bf53b57ec043cc6feb162e1ef8b7acb5a1", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "util/xdp_sample: Don't output number of queues on error\n\nWhen the ethtool ioctl fails to get the number of queues for a device, skip\nthe meaningless log message with the number.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "39e8c21aaffa2682d296e6c8376b6c2386199cc0", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: restucture the program options\n\nInstead of having the program operating modes of the basic runner be part\nof the BPF program (and selected with vars in the rodata), turn each mode\ninto its own program. This way the selection can be done in userspace by\njust selecting the right program, and we reduce the complexity of the\nbranches on the BPF side, and rely less on dead code elimination by the\nverifier.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95b813fb1a0b7d5676cc282455cf706d53593d18", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench/tests: skip xdp_load_bytes test if the kernel doesn't support it\n\nAdd detection of whether the kernel supports the xdp_load_bytes helper and\nskip the test if it isn't supported.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81a198dbc0e32184f15822dc351face8a802657d", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Add missing 'pass' command from the man page overview\n\nThe summary at the start of the man page was missing the 'pass' command.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0bb7390256636f07e500410448d1c4458d1fdd1", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Enable the xdp_frags flag for all kernel programs\n\nWe always set the frags support bit: nothing the XDP programs do\nis incompatible with multibuf, and it's perfectly fine to load a\nprogram with frags support on an interface with a small MTU. We don't\nrisk setting any flags the kernel will balk at, either, since libxdp\nwill do the feature probing for us and skip the flag if the kernel\ndoesn't support it.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcb982284478a9cfca9bb1f1a8bc3c8ed082340f", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Add option to use xdp_load_bytes() helper when parsing IP\n\nThis adds an option to xdp-bench to use the xdp_load_bytes() helper when\nparsing the IP header (for the basic options). This can be used to\nbenchmark the overhead of xdp_load_bytes() relative to DPA.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b43595e2f60d7e77ceb3f992d9bcb2247f32c4c6", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Add parse-ip packet operation to basic actions\n\nAdd a 'parse-ip' packet operation to the basic actions (for drop, pass and\ntx commands). This will parse the packet all the way down to the IP header\ninstead of just touching a single field in the ethernet header like the\n'touch' operation does.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7fa5ef3b99f6e9a2a4a4789f40f9717d78334caa", "commit_date": "2023-06-08T11:48:01Z", "commit_message": "xdp-bench: Use basic_program_mode enum in BPF code as well\n\nInstead of converting the basic_program_mode enum into boolean variables,\njust use it directly in the BPF code. This makes it easier to add new modes\nin the future, as the boolean variables quickly explodes. Move the struct\ndefinition itself into its own shared header file so it's kept in sync.\n\nThis includes a small functional change in that we no longer perform the\n\"touch data\" action when we're swapping MACs. However, since swapping MACs\ntouches the same part of the packet data, the performance impact of this\nshould be negligible (it's just a single inline branch that's being\nremoved).\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "870db97493df7007ee157ad44709e128734908e4", "commit_date": "2023-06-08T11:47:08Z", "commit_message": "xdp-loader: introduce features command\n\nAdd features command to xdp-loader in order to dump XDP features\nsupported by the NIC.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "404fbd595d61dc7c76ba142bccbbf86b538766fb", "commit_date": "2023-06-08T11:47:08Z", "commit_message": "libbpf: update to v1.2.0\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "81ea740f5c363bbe026529c775eb803f3fcfc9a7", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "xdp-trafficgen: Turn off debugging if we don't have vprintk\n\nCompilation of xdp-trafficgen with DEBUG set fails if libbpf is too old to\nhave the vprintk helper and associated macros. Since these are only used\nfor debug output anyway, fix this by just turning off debug mode if the\nhelper is not available.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4cbb40a4aefdedbeae11564ff5980de0baeea00", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "lib/testing: Include compat.h instead of using locai ifdef\n\nThe test-tool binary was using its own ifdef'ed compatibility define\ninstead of just including compat.h, which leads to errors when one of the\nother headers in util does include compat.h. So remove the local define and\njust include compat.h directly instead.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7bc4c74c3a890d7b4b6f7020f526339727a46a5", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "util/compat.h: Fix compilation errors with unknown functions\n\nOne of the compatibility functions in compat.h was not declared as static\ninline, which causes the compiler to complain if it is not used. Fix this\nand also add #include directives to the file so it works even when included\nby another file that doesn't include all the libbpf headers.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55f593d575bff35440420cdc9b2b8e4b22af1b7c", "commit_date": "2023-05-31T19:46:58Z", "commit_message": "util/xdp_samples: Add compatibility defines for libbpf\n\nThe xdp_samples.h file was using some newer libbpf functions without the\nrequired compatibility defines, leading to compilation errors on older\nlibbpf versions. Add the required defines to util/compat.h and include that\nfrom xdp_sample.h. This includes a new configure check for\nbpf_program__expected_attach_type(), which was renamed in libbpf 1.0.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33326e14a5f55357bc0185e3e5c4ab3cd6f1141d", "commit_date": "2023-05-31T08:10:44Z", "commit_message": "util: Move program locking out of dispatch_commands()\n\nThe dispatch_commands() helper takes a program lock and holds it while the\ncommand is being executed. This was added for the use of xdp_filter, and is\nreally only needed for that; none of the other utilities really need\nlocking to synchronise with itself (and libxdp has its own locking for the\ndispatcher).\n\nMove the locking out of dispatch_commands() and instead add explicit lock\nand unlock calls to each of the xdp-filter commands. While doing so, also\nmove the locking to use the same directory-fd based approach as the libxdp\nlocking uses. This has the benefit of not writing any lock files, so the\nlock is automatically cleared when the application exits, even if it\ncrashes. This should fix any issues with stale lock files sticking around,\nwhich we did not have any good way to clean up.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc27e70aac3cd4c6144fe4e4301f13954b7dd804", "commit_date": "2023-05-30T11:21:54Z", "commit_message": "xdp-loader: also silence libbpf logging on unload\n\nIn xdp-loader we explicitly silence libbpf logging before loading a program\nbecause the output is unhelpful in most cases. With the addition of\nmultiprog probing we also get unhelpful output on unload, so also silence\nthe output there.\n\nReported-by: Simon Sundberg <Simon.Sundberg@kau.se>\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d20055d8104c9ffa05c0304a3442c4352b3d1a9e", "commit_date": "2023-05-11T11:21:54Z", "commit_message": "util/xdp_sample: define bpf_trace_vprintk() if it doesn't exist\n\nThe bpf_trace_vprintk() helper was added to the libbpf headers in 0.6.0, so\ndefine it if it doesn't exist. We already detect the bpf_program__flags()\nhelper which was added in the same version, so just use that define to\nguard the definition.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1eec9ed587598320c2d6acd32cd29496637aad8", "commit_date": "2023-05-10T18:38:14Z", "commit_message": "util: Use bpf_trace_vprintk() directly in sample detection program\n\nThe dummy program we use to feature detect for xdp-sample doesn't compile\non old versions of libbpf that don't have the macro feature that selects\nbpf_trace_vprintk() if the number of args exceeds what bpf_trace_printk()\nsupports. To get around this, just use the bpf_trace_vprintk() helper\ndirectly, which should hopefully work on old libbpf versions as well.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c8662f4bb44445454c8f66df56ccd11274d4e30", "commit_date": "2023-04-24T10:24:40Z", "commit_message": "test_xdp_frags: check for privs early\n\nAs currently written, `test_xdp_frags` if run without\nnecessary permissions will loudly print \"this kernel\ndoes NOT support xdp frags\", and then exit on the\nsetrlimit(). The same thing happens if the argument list\nis invalid. Instead, verify all this before performing\nthe frag support check, so as not to dismay users using\nthis program to check for frag support.\n\nSigned-off-by: nick black <dankamongmen@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b76c2ccd7987202be6cea58bfe954bcab655191d", "commit_date": "2023-04-12T09:50:42Z", "commit_message": "configure: Correctly detect bpftool skeleton generation\n\nWe use the 'name' argument to bpftool skeleton generation, so detect if\nthis is not available and refuse to use the bpftool version if it is.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "308ec00b10c8428b65279e064f3f7a792ed1460f", "commit_date": "2023-04-12T09:50:42Z", "commit_message": "configure: Detect presence of libbpf_program__flags()\n\nOld versions of libbpf didn't expose the program flags. Add detection for\nthis, and (effectively) disable the XDP frags support in libxdp for those\nold versions of libbpf. Which is fine because systems with such an old\nlibbpf most likely doesn't have a recent enough kernel to support frags\nanyway.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "92d379e1e60866bafb57afa6b755294753a85548", "commit_date": "2023-04-12T09:50:42Z", "commit_message": "configure: Detect presence of bpf_program__type()\n\nThe bpf_program__type() helper was renamed from bpf_program__get_type() in\nlibbpf 0.7.0, so add detection for this and redefine the new name as a\nwrapper if it is not present.\n\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a76e7a2b156b8cfe38992206abe9df1df0a29e38", "commit_date": "2023-03-29T11:03:14Z", "commit_message": "libxdp: fix build on musl\n\nIn musl, PATH_MAX is defined in limits.h. Include it in libxdp.c to fix\nbuilding systems using musl libc.\n\nlibxdp.c: In function 'find_bpffs':\nlibxdp.c:406:33: error: 'PATH_MAX' undeclared (first use in this function)\n  406 |         static char bpf_wrk_dir[PATH_MAX];\n      |                                 ^~~~~~~~\n\nSigned-off-by: Stijn Tintel <stijn@linux-ipv6.be>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "344b241da22a5358c714d6db1ea6f225f951dbdb", "commit_date": "2023-03-08T19:49:49Z", "commit_message": "xdpdump: fix build with clang\n\nWhen building all of xdp-tools with clang, the xdp-dump build fails\ndue to 'classic' use of variable-length arrays and -Werror.\nDisable the warning and leave a breadcrumb to the discussion.\n\nFixes: #304\nSigned-off-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb6d06219d1b49b07980b481a383e1dea74a0702", "commit_date": "2023-03-04T21:28:07Z", "commit_message": "make: disable stack protector for BPF bits built by clang\n\nThe clang toolchain might have stack-protection enabled by default\n(e.g. via platform configuration) and that won't work for BPF,\nso unconfitionally disable it via -fno-stack-protector.\n\nSigned-off-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7df567634af77381832a2212c5f5099b07734f3", "commit_date": "2023-03-04T20:27:18Z", "commit_message": "configure: Fix function detection for btf__type_cnt()\n\nThe configure check for btf__type_cnt() swapped two arguments in the\ncheck_libbpf_function() call in the configure script, leading to the check\nfailing if LIBBPF_CFLAGS is non-empty. Make sure the arguments are in the\nright order, and also pass a proper NULL parameter in the check instead of\na 0.\n\nReported-by: Holger Hoffst\u00e4tte <holger@applied-asynchrony.com>\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}