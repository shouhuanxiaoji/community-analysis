{"master": [{"commit_oid": "1d1347e38a55e657dcc4c8f1c77bb3a26bfc9ff3", "commit_date": "2023-08-30T11:34:46Z", "commit_message": "Update jbig2dec stuff for 0.20 release.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fbf863cfff8d8563fa2ca40b9299ecb3f8195cbe", "commit_date": "2023-08-28T18:05:16Z", "commit_message": "jbig2dec: Work around exponentiation warning from clang.\n\nclang complains like so:\n\n    jbig2_arith.c:258:17: warning: result of '10 ^ 9' is 3;\n    did you mean '1e9'? [-Wxor-used-as-pow]\n        {0x3801, 10 ^ 9, 14 ^ 9},\n\nBut 10 ^ 9 is indeed meant to be xor, not exponentiation.\nThe const values are identical to those in table E.1 in\nthe JBIG2 spec.\n\nThe workaround is to wrap everything in macros, adding extra\nparenthesis, which causes the compiler warning not to trip.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd26fa78e3a109b92c0d9f3f1afbddf090981a5e", "commit_date": "2023-05-19T14:12:52Z", "commit_message": "Refer to Discord, and point to new test suite location.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c7ea451a61324708d7d5a35a642f71b20eb3e80", "commit_date": "2023-05-03T10:49:16Z", "commit_message": "Update postal address in file headers", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5b9b7cd7b9ed349964eb89883c4b22c410b3398", "commit_date": "2021-08-10T19:43:31Z", "commit_message": "jbig2dec: Update contact information and fix typo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c4cb846ba1634f1e149833090beb7376f216157", "commit_date": "2021-08-09T15:36:17Z", "commit_message": "jbig2dec: Improve reporting from custom allocator that limits memory use.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5df83bbe3aebbe292b51e172aa78a4f64cb64551", "commit_date": "2021-08-09T15:36:17Z", "commit_message": "jbig2dec: Avoid underflow in custom allocator.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a2a6a5edf61df4cb64f0180146f8ab9c5380999", "commit_date": "2021-08-09T15:36:17Z", "commit_message": "jbig2dec: Use silent rules when building as a separate project.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f4d7aa04b125939032bf27064397f19e4c3da4c", "commit_date": "2021-08-09T10:42:51Z", "commit_message": "jbig2dec: Do not redefine inline until all systemwide headers are included.\n\nWhen cross-compiling jbig2dec like so:\n\n./configure --host=i686-w64-mingw32 --disable-static && make clean && make\n\n... you get linker errors about multiple definintions of llabs, lltoa, etc.\n\nThe reason for this is that the inline keyword has been redfined to the empty\nstring. After that has been done in jbig2.h it includes jbig2_priv.h which\nincludes memento.h which includes stdlib.h. The inline redefinition causes\nall declarations in stdlib.h to then be done without inline causing the\nfunctions to be present at least twice in in the set of object files.\nThe redefine was introduced in commit cb456c92a550e1af70a4e268b2f5b02f2df5b8c6\n\nSince jbig2.h is jbig2dec's public header this would affect any program that\nincludes jbig2.h and then includes system-wide headers after that.\n\nThis commit circumvents the issue by moving the inline redefine from the end\nof the public jbig2.h header to later in the internal jbig2_priv.h header,\nimmediately after memento.h has been included. This way the redefine still\naffects any jbig2dec internal source code, but not any users of jbig2dec.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6cc1dace9e08159766a45798a69fe4c4a6a881c", "commit_date": "2021-03-15T10:46:13Z", "commit_message": "Update copyright to 2021", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ade8a556af40d67e0762809d5136db8f3b4b3d09", "commit_date": "2021-03-10T12:40:00Z", "commit_message": "Bug 703653: jbig2dec: Use correct freeing function for JBIG2 images.\n\nWhen jbig2_image_compose() errors out, remember to release all allocated\npattern images. Previously the most recently allocated image would not\nbe release.\n\nFinally remember to free the array of images itself.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f93f613aa9873026ccf7b0d625eb86c27b6b42b9", "commit_date": "2020-11-27T15:20:54Z", "commit_message": "Searching for a marker in a stream, honor alignment\n\nWhen searching for markers in a stream buffer, we were \"seeking\" to the point\nin the buffer, and casting to either a byte, ushort or a uint to make the\nvalue comparison. But we cannot do that on SPARC because of the strict\nalignment on that hardware.\n\nSo, we have to \"unpack\" the individual bytes from the stream to do the value\ncomparison.\n\nNote: there are slightly confusing comments in the code that mention being\n\"on a 16 bit boundary\" and \"on a 32 bit boundary\" - that's referring to the\noffset into the buffer, *not* the actual memory address alignment.\n\nFound in testing on Solaris/SPARC", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8294b25104e9033408c18b68567281ae8e9d5e0", "commit_date": "2020-11-06T17:21:08Z", "commit_message": "jbig2dec: Add casts to silence a compiler warning.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}