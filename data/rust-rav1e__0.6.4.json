{"0.6": [{"commit_oid": "7c9db10494c2fffa98a572027d756e55bf754036", "commit_date": "2023-05-16T06:49:42Z", "commit_message": "Prepare for release", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da3f7854ef04398244433a3b2b766a4becc2bfc8", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Integrate SSSE3 directional prediction assembly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b93423ec36519397b3df70ddc81785e4253b2150", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: Add high bit-depth ipred z3 SSSE3 asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f9aa68ab6d50de61272d85b441399b6491b857d", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: Add high bit-depth ipred z1 SSSE3 asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b964d2510fa6a4e39ccb756fa5b8bb4aabb75a5d", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Integrate AVX512-ICL 10-bit DCT transforms", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c971b1ac76c13edcae337f9240e0a960ff872d3", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: add AVX512-IceLake implementation of HBD 64x64 DCT^2\n\nAlso implement \"fast3\" path for pass2.dct64 (where 1/8th of the\ncoefficients are non-zero), which affects 32x64 as well as 64x64.\n\nBefore:\ninv_txfm_add_32x64_dct_dct_1_10bpc_c:          51008.6 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_sse4:        3351.9 (15.22x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_avx2:        1419.5 (35.93x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_avx512icl:    744.8 (68.49x)\n\nAfter:\ninv_txfm_add_32x64_dct_dct_1_10bpc_c:          51019.5 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_sse4:        3276.1 (15.57x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_avx2:        1420.7 (35.91x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_avx512icl:    668.3 (76.34x)\n\n(Not sure why the SSE4 speed changed.)\n\nAnd speed for 64x64:\ninv_txfm_add_64x64_dct_dct_0_10bpc_c:           3506.9 ( 1.00x)\ninv_txfm_add_64x64_dct_dct_0_10bpc_sse4:         535.6 ( 6.55x)\ninv_txfm_add_64x64_dct_dct_0_10bpc_avx2:         223.5 (15.69x)\ninv_txfm_add_64x64_dct_dct_0_10bpc_avx512icl:    252.4 (13.89x)\ninv_txfm_add_64x64_dct_dct_1_10bpc_c:         108353.7 ( 1.00x)\ninv_txfm_add_64x64_dct_dct_1_10bpc_sse4:        6551.9 (16.54x)\ninv_txfm_add_64x64_dct_dct_1_10bpc_avx2:        2876.8 (37.66x)\ninv_txfm_add_64x64_dct_dct_1_10bpc_avx512icl:   1310.1 (82.70x)\ninv_txfm_add_64x64_dct_dct_2_10bpc_c:         108347.6 ( 1.00x)\ninv_txfm_add_64x64_dct_dct_2_10bpc_sse4:        7985.4 (13.57x)\ninv_txfm_add_64x64_dct_dct_2_10bpc_avx2:        3561.8 (30.42x)\ninv_txfm_add_64x64_dct_dct_2_10bpc_avx512icl:   1962.6 (55.20x)\ninv_txfm_add_64x64_dct_dct_3_10bpc_c:         108455.5 ( 1.00x)\ninv_txfm_add_64x64_dct_dct_3_10bpc_sse4:        9709.0 (11.17x)\ninv_txfm_add_64x64_dct_dct_3_10bpc_avx2:        4220.5 (25.70x)\ninv_txfm_add_64x64_dct_dct_3_10bpc_avx512icl:   2991.1 (36.26x)\ninv_txfm_add_64x64_dct_dct_4_10bpc_c:         108349.9 ( 1.00x)\ninv_txfm_add_64x64_dct_dct_4_10bpc_sse4:       11048.0 ( 9.81x)\ninv_txfm_add_64x64_dct_dct_4_10bpc_avx2:        4898.1 (22.12x)\ninv_txfm_add_64x64_dct_dct_4_10bpc_avx512icl:   3108.1 (34.86x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eba890c1355cce5574fc71530d8e55ccd4066e7c", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: add AVX512-IceLake implementation of HBD 64x32 DCT^2\n\ninv_txfm_add_64x32_dct_dct_0_10bpc_c:           1760.6 ( 1.00x)\ninv_txfm_add_64x32_dct_dct_0_10bpc_sse4:         271.1 ( 6.49x)\ninv_txfm_add_64x32_dct_dct_0_10bpc_avx2:         121.3 (14.52x)\ninv_txfm_add_64x32_dct_dct_0_10bpc_avx512icl:    116.3 (15.14x)\ninv_txfm_add_64x32_dct_dct_1_10bpc_c:          66507.4 ( 1.00x)\ninv_txfm_add_64x32_dct_dct_1_10bpc_sse4:        3712.4 (17.91x)\ninv_txfm_add_64x32_dct_dct_1_10bpc_avx2:        1830.5 (36.33x)\ninv_txfm_add_64x32_dct_dct_1_10bpc_avx512icl:    805.4 (82.58x)\ninv_txfm_add_64x32_dct_dct_2_10bpc_c:          66491.6 ( 1.00x)\ninv_txfm_add_64x32_dct_dct_2_10bpc_sse4:        5325.3 (12.49x)\ninv_txfm_add_64x32_dct_dct_2_10bpc_avx2:        2578.5 (25.79x)\ninv_txfm_add_64x32_dct_dct_2_10bpc_avx512icl:   1394.5 (47.68x)\ninv_txfm_add_64x32_dct_dct_3_10bpc_c:          66490.2 ( 1.00x)\ninv_txfm_add_64x32_dct_dct_3_10bpc_sse4:        6418.5 (10.36x)\ninv_txfm_add_64x32_dct_dct_3_10bpc_avx2:        3305.6 (20.11x)\ninv_txfm_add_64x32_dct_dct_3_10bpc_avx512icl:   2571.5 (25.86x)\ninv_txfm_add_64x32_dct_dct_4_10bpc_c:          66508.6 ( 1.00x)\ninv_txfm_add_64x32_dct_dct_4_10bpc_sse4:        8671.2 ( 7.67x)\ninv_txfm_add_64x32_dct_dct_4_10bpc_avx2:        4054.2 (16.40x)\ninv_txfm_add_64x32_dct_dct_4_10bpc_avx512icl:   2691.6 (24.71x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24356933215e0eca2b0aa726b0980d2bc4a53fb0", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: add AVX512-IceLake implementation of HBD 64x16 DCT^2\n\ninv_txfm_add_64x16_dct_dct_0_10bpc_c:            892.0 ( 1.00x)\ninv_txfm_add_64x16_dct_dct_0_10bpc_sse4:         131.5 ( 6.78x)\ninv_txfm_add_64x16_dct_dct_0_10bpc_avx2:          63.4 (14.07x)\ninv_txfm_add_64x16_dct_dct_0_10bpc_avx512icl:     56.8 (15.71x)\ninv_txfm_add_64x16_dct_dct_1_10bpc_c:          29253.7 ( 1.00x)\ninv_txfm_add_64x16_dct_dct_1_10bpc_sse4:        1639.7 (17.84x)\ninv_txfm_add_64x16_dct_dct_1_10bpc_avx2:        1106.8 (26.43x)\ninv_txfm_add_64x16_dct_dct_1_10bpc_avx512icl:    532.9 (54.89x)\ninv_txfm_add_64x16_dct_dct_2_10bpc_c:          29249.8 ( 1.00x)\ninv_txfm_add_64x16_dct_dct_2_10bpc_sse4:        3065.6 ( 9.54x)\ninv_txfm_add_64x16_dct_dct_2_10bpc_avx2:        1791.0 (16.33x)\ninv_txfm_add_64x16_dct_dct_2_10bpc_avx512icl:   1108.0 (26.40x)\ninv_txfm_add_64x16_dct_dct_3_10bpc_c:          29269.1 ( 1.00x)\ninv_txfm_add_64x16_dct_dct_3_10bpc_sse4:        3738.2 ( 7.83x)\ninv_txfm_add_64x16_dct_dct_3_10bpc_avx2:        1790.9 (16.34x)\ninv_txfm_add_64x16_dct_dct_3_10bpc_avx512icl:   1203.8 (24.31x)\ninv_txfm_add_64x16_dct_dct_4_10bpc_c:          29337.7 ( 1.00x)\ninv_txfm_add_64x16_dct_dct_4_10bpc_sse4:        3749.7 ( 7.82x)\ninv_txfm_add_64x16_dct_dct_4_10bpc_avx2:        1791.0 (16.38x)\ninv_txfm_add_64x16_dct_dct_4_10bpc_avx512icl:   1203.8 (24.37x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5681143ab61f210e51953da40979c05b8ac96ff", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: add AVX512-IceLake implementation of HBD 32x64 DCT^2\n\ninv_txfm_add_32x64_dct_dct_0_10bpc_c:           1783.5 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_0_10bpc_sse4:         243.3 ( 7.33x)\ninv_txfm_add_32x64_dct_dct_0_10bpc_avx2:         119.1 (14.97x)\ninv_txfm_add_32x64_dct_dct_0_10bpc_avx512icl:    142.6 (12.50x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_c:          50422.5 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_sse4:        2880.5 (17.50x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_avx2:        1423.4 (35.43x)\ninv_txfm_add_32x64_dct_dct_1_10bpc_avx512icl:    741.6 (67.99x)\ninv_txfm_add_32x64_dct_dct_2_10bpc_c:          50433.6 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_2_10bpc_sse4:        4015.1 (12.56x)\ninv_txfm_add_32x64_dct_dct_2_10bpc_avx2:        1767.7 (28.53x)\ninv_txfm_add_32x64_dct_dct_2_10bpc_avx512icl:    960.8 (52.49x)\ninv_txfm_add_32x64_dct_dct_3_10bpc_c:          50422.2 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_3_10bpc_sse4:        4500.5 (11.20x)\ninv_txfm_add_32x64_dct_dct_3_10bpc_avx2:        2111.7 (23.88x)\ninv_txfm_add_32x64_dct_dct_3_10bpc_avx512icl:   1777.1 (28.37x)\ninv_txfm_add_32x64_dct_dct_4_10bpc_c:          50444.2 ( 1.00x)\ninv_txfm_add_32x64_dct_dct_4_10bpc_sse4:        5592.8 ( 9.02x)\ninv_txfm_add_32x64_dct_dct_4_10bpc_avx2:        2458.1 (20.52x)\ninv_txfm_add_32x64_dct_dct_4_10bpc_avx512icl:   1867.2 (27.02x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3e8b98fae9e127b5059e4750e5d3c022cc46514e", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: add AVX512-IceLake implementation of HBD 16x64 DCT^2\n\nnop:                                              39.4\ninv_txfm_add_16x64_dct_dct_0_10bpc_c:           2208.0 ( 1.00x)\ninv_txfm_add_16x64_dct_dct_0_10bpc_sse4:         133.5 (16.54x)\ninv_txfm_add_16x64_dct_dct_0_10bpc_avx2:          71.3 (30.98x)\ninv_txfm_add_16x64_dct_dct_0_10bpc_avx512icl:    102.0 (21.66x)\ninv_txfm_add_16x64_dct_dct_1_10bpc_c:          25757.0 ( 1.00x)\ninv_txfm_add_16x64_dct_dct_1_10bpc_sse4:        1366.1 (18.85x)\ninv_txfm_add_16x64_dct_dct_1_10bpc_avx2:         657.6 (39.17x)\ninv_txfm_add_16x64_dct_dct_1_10bpc_avx512icl:    378.9 (67.98x)\ninv_txfm_add_16x64_dct_dct_2_10bpc_c:          25771.0 ( 1.00x)\ninv_txfm_add_16x64_dct_dct_2_10bpc_sse4:        1739.7 (14.81x)\ninv_txfm_add_16x64_dct_dct_2_10bpc_avx2:         772.1 (33.38x)\ninv_txfm_add_16x64_dct_dct_2_10bpc_avx512icl:    469.3 (54.92x)\ninv_txfm_add_16x64_dct_dct_3_10bpc_c:          25775.7 ( 1.00x)\ninv_txfm_add_16x64_dct_dct_3_10bpc_sse4:        1968.1 (13.10x)\ninv_txfm_add_16x64_dct_dct_3_10bpc_avx2:         886.5 (29.08x)\ninv_txfm_add_16x64_dct_dct_3_10bpc_avx512icl:    662.6 (38.90x)\ninv_txfm_add_16x64_dct_dct_4_10bpc_c:          25745.9 ( 1.00x)\ninv_txfm_add_16x64_dct_dct_4_10bpc_sse4:        2330.9 (11.05x)\ninv_txfm_add_16x64_dct_dct_4_10bpc_avx2:        1008.5 (25.53x)\ninv_txfm_add_16x64_dct_dct_4_10bpc_avx512icl:    662.3 (38.88x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "93f7479d1c281d39a9ff9b7bc2be84d0db635820", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Integrate AVX2 12-bit identity transforms", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59a46f7fafa1aa2dca28c9e6136c6f734c0d9f7c", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86/itx: Fix identation of macro instructions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48e21db247a6a1b58fad343e8b0b38ae403b9762", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86/itx: Add 32x32 12bpc AVX2 idtx\n\ninv_txfm_add_32x32_identity_identity_0_12bpc_c:      5785.8 ( 1.00x)\ninv_txfm_add_32x32_identity_identity_0_12bpc_avx2:     20.7 (279.65x)\ninv_txfm_add_32x32_identity_identity_1_12bpc_c:      5896.9 ( 1.00x)\ninv_txfm_add_32x32_identity_identity_1_12bpc_avx2:     20.7 (285.01x)\ninv_txfm_add_32x32_identity_identity_2_12bpc_c:      5799.5 ( 1.00x)\ninv_txfm_add_32x32_identity_identity_2_12bpc_avx2:     68.9 (84.20x)\ninv_txfm_add_32x32_identity_identity_3_12bpc_c:      5798.1 ( 1.00x)\ninv_txfm_add_32x32_identity_identity_3_12bpc_avx2:    140.6 (41.25x)\ninv_txfm_add_32x32_identity_identity_4_12bpc_c:      5803.3 ( 1.00x)\ninv_txfm_add_32x32_identity_identity_4_12bpc_avx2:    308.2 (18.83x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ef03c5ce7db0f1b3629101646cbe1e32241c1ed", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86/itx: Add 32x16 12bpc AVX2 idtx\n\ninv_txfm_add_32x16_identity_identity_0_12bpc_c:      4138.7 ( 1.00x)\ninv_txfm_add_32x16_identity_identity_0_12bpc_avx2:     30.4 (136.26x)\ninv_txfm_add_32x16_identity_identity_1_12bpc_c:      4147.5 ( 1.00x)\ninv_txfm_add_32x16_identity_identity_1_12bpc_avx2:     30.7 (135.25x)\ninv_txfm_add_32x16_identity_identity_2_12bpc_c:      4138.2 ( 1.00x)\ninv_txfm_add_32x16_identity_identity_2_12bpc_avx2:     98.9 (41.84x)\ninv_txfm_add_32x16_identity_identity_3_12bpc_c:      4136.6 ( 1.00x)\ninv_txfm_add_32x16_identity_identity_3_12bpc_avx2:    167.7 (24.67x)\ninv_txfm_add_32x16_identity_identity_4_12bpc_c:      4156.3 ( 1.00x)\ninv_txfm_add_32x16_identity_identity_4_12bpc_avx2:    242.1 (17.17x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb6ed3071c09fccbd783c110e61050a210954882", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86/itx: Add 16x32 12bpc AVX2 idtx\n\ninv_txfm_add_16x32_identity_identity_0_12bpc_c:      4287.9 ( 1.00x)\ninv_txfm_add_16x32_identity_identity_0_12bpc_avx2:     31.4 (136.66x)\ninv_txfm_add_16x32_identity_identity_1_12bpc_c:      4293.7 ( 1.00x)\ninv_txfm_add_16x32_identity_identity_1_12bpc_avx2:     30.9 (139.07x)\ninv_txfm_add_16x32_identity_identity_2_12bpc_c:      4273.8 ( 1.00x)\ninv_txfm_add_16x32_identity_identity_2_12bpc_avx2:     97.3 (43.92x)\ninv_txfm_add_16x32_identity_identity_3_12bpc_c:      4269.0 ( 1.00x)\ninv_txfm_add_16x32_identity_identity_3_12bpc_avx2:    165.2 (25.83x)\ninv_txfm_add_16x32_identity_identity_4_12bpc_c:      4284.4 ( 1.00x)\ninv_txfm_add_16x32_identity_identity_4_12bpc_avx2:    235.2 (18.22x)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b054457a649be1a8d7edbba664aaa25c91efb254", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: Add 8-bit ipred z2 SSSE3 asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1ad79aa507de21fa5c4eee3acb4f46755e03623c", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Integrate aarch64 assembly for ipred_z1 and ipred_z3", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4896097982a6c1a6d1ec45be5657c3ec0060df9a", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Extract internal functions of pred_directional for reuse", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f01f864a7cc00eecda1d9f1a4ae054dea4ec9c9", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: 16 bpc NEON implementation of the Z3 function\n\nRelative speedup over the C code:\n                          Cortex A53    A55    A72    A73    A76   Apple M1\nintra_pred_z3_w4_16bpc_neon:    3.06   2.87   2.17   1.97   2.33   7.75\nintra_pred_z3_w8_16bpc_neon:    3.90   3.94   2.97   3.16   2.93   4.43\nintra_pred_z3_w16_16bpc_neon:   4.08   4.48   3.31   4.68   3.13   5.00\nintra_pred_z3_w32_16bpc_neon:   4.43   4.85   3.50   4.02   3.33   5.62\nintra_pred_z3_w64_16bpc_neon:   4.68   5.30   3.72   3.96   3.52   5.78", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ecae31551555ba90ae9dbb9c28620ad0a0cdec0", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: 16 bpc NEON implementation of the Z1 function\n\nRelative speedup over the C code:\n                          Cortex A53    A55    A72    A73    A76   Apple M1\nintra_pred_z1_w4_16bpc_neon:    3.49   2.63   2.83   3.85   3.14   9.00\nintra_pred_z1_w8_16bpc_neon:    6.19   4.39   3.65   6.58   4.99   6.50\nintra_pred_z1_w16_16bpc_neon:   6.65   4.64   3.97   7.78   4.87   7.00\nintra_pred_z1_w32_16bpc_neon:   7.76   5.49   5.17   7.83   5.59   8.24\nintra_pred_z1_w64_16bpc_neon:   8.02   5.80   5.33   8.41   5.77   8.70", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3ffa67803bdca64528bfdbb0074b37beed3d06", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm: ipred: Make a SIMD pixel_set function for padding\n\nFor 8 bpc, there's probably not much difference to a decent memset,\nbut for 16 bpc, there might be a bigger difference.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d07ef765cb140831ba8349b1f5b363f6a5665145", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: Use fewer registers for table lookups in w=8 in z3_fill1 for 8bpc\n\nAdd comments explaining the exact dimensions of the gather tables\nused currently. That reasoning shows that the w=8 case can do with\none register less.\n\nBefore:                  Cortex A53     A55     A72     A73    A76  Apple M1\nintra_pred_z3_w8_8bpc_neon:   356.2   376.2   218.9   246.4  176.1  0.6\nAfter:\nintra_pred_z3_w8_8bpc_neon:   339.6   357.3   205.6   232.3  160.0  0.5", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60588270b992c3a543c426d1730abcb40c011ae2", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: Improve accumulation ordering in 8bpc z1\n\nStart out the multiplication/accumulation with a register that is\navailable sooner.\n\nBefore:                    Cortex A53      A55      A72      A73     A76   Apple M1\nintra_pred_z1_w8_8bpc_neon:     266.3    268.9    146.6    155.3   103.9   0.4\nintra_pred_z1_w16_8bpc_neon:    528.6    574.4    333.9    364.3   209.1   0.7\nintra_pred_z1_w32_8bpc_neon:   1149.3   1245.4    752.3    811.5   503.4   1.3\nintra_pred_z1_w64_8bpc_neon:   2198.4   2360.6   1462.9   1575.0  1007.6   2.4\nAfter:\nintra_pred_z1_w8_8bpc_neon:     266.3    269.1    146.6    155.0   100.1   0.4\nintra_pred_z1_w16_8bpc_neon:    528.6    573.3    347.9    352.4   204.3   0.7\nintra_pred_z1_w32_8bpc_neon:   1149.2   1245.3    763.4    759.6   474.8   1.3\nintra_pred_z1_w64_8bpc_neon:   2198.8   2360.6   1430.0   1417.4   943.5   2.3", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c652a5a216122c3092de6db389ac50711a5a52d1", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: Optimize the 3tap filter padding in z1_filter_edge\n\nThe second register will at most contain one valid pixel, the\npadding pixel. Thus skip padding the register and just fill it\nwith the padding pixel.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1401f26966229f9aaefd088b71f935675e83623b", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: Remove leftover instructions at the start of z3_fill2\n\nThere were redundant leftovers from copypasting bits when writing this\nfunction.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "524af69c5544f7d11a2325ba25d2b6a96737bfcc", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: Rename a misnamed local label in the assembly\n\nThis is for cases with h >= 16.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f4c6f8a503952acd67ed67d0a3629eccc0febfb", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "arm64: ipred: Fix a misindented operand in the assembly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b01f5b6b54d3128ea45e5898c0a9a4c7d3c3ebc1", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "x86: Add 8-bit ipred z3 SSSE3 asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e30b64480866f45b3145eca14a86d9f2911e08be", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "fixup: Rust-only CpuFeatureLevel::all()\n\nRemove NEON copy-pasta and silence warning with no default features.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7b8cf7b672864f40440301623251acaa78d9f53", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Remove unnecessary mut when iterating mv_stack", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f673f2ce599c3b62ff88658326351f864fa9486", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Replace Vec temporaries in ipred_directional with array slices", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b020e6a2430c5adc4e8927eee77e01c8567bf17", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "CI: Add aarch64 tests with decode_test_dav1d", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34a772ff54a2cfb6b3c23854342346979b2a678e", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Generalise inverse transform tests to all bit depths", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb97568f49e6af323e334314c5da347904bf1977", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Move inverse transform tests to asm::shared", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad62f84d71aa3f530bb2fb6c8d4876cde3aad27d", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Cover all kernels in x86 8-bit inverse transform tests", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba429587281b39fdcb8df3dec793b9ab55a39307", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Cover pred_cfl_ac in intra tests for assembly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5e4bf2fbb0bb936cde1904bc48710b9900ea345", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "Cover essential IntraEdgeFilterParameters values in intra tests\n\nChange the fixed input to a sawtooth pattern, to detect smoothing.\nAdmit edge filter at the frame boundary in the Rust implementation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41da9715b29bd2302dbd44eeab2c6186676abb78", "commit_date": "2023-05-15T12:42:38Z", "commit_message": "fix(deps): update all non-major dependencies\n\nCo-authored-by: David Michael Barr <b@rr-dav.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fdd931e9d5274ea1c77b2a53186d758e8db6e290", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "Increase test coverage for intra prediction\n\nExpand asm::shared::predict::test::pred_matches_u8 to cover all\navailable CPU feature levels and bit depths.\nAdd UV_CFL_PRED to the list of modes to test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90b64fbc203df92ac24f09cfebb40f58d339b013", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "CI: Use Intel SDE to execute tests with AVX-512ICL", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34a774fc631868cf7a4b29b445eb35a002fccfdc", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "Enable AVX-512 and 12-bit inverse transform assembly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6a8803500b09d7abbb4f37733f2b37cbcb213af", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "Enable additional x86 ipred implementations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b471a3c91ef1bf18d5885473eef7370d8e24ab21", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "Enable additional x86 cdef_dir implementations\n\nDrop rav1e fork of cdef_dir_8bpc.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa7ecc8d16d44e9f509c6b72bf2e90ddfb0264e2", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "Improve CDEF x86 assembly tests", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a53d88d8e8dd910ddcfb62f791cda83552c5d022", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "Update list of included x86 assembly files\n\nAdd new AVX-512 assembly files and disambiguate cdef_dir_8bpc.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1f4d1c7d87491f76e769677c38bdf486b1950a0", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "x86: Add 8-bit ipred z1 SSSE3 asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1ea7eda0cb308cc77d7745940bc18507b910d27", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "arm64: ipred: 8 bpc NEON implementation of the Z3 function\n\nThe implementation is a hybrid between two approaches; one generic\n(but non-ideal) for cases with large max_base_y, which fills two\npixel columns at a time, i.e. looping over pixels first vertically,\nthen horizontally - i.e. in a non-optimal manner.\n\nFor cases with smaller max_base_y, it does two rows at a time, essentially\ndoing gathers with the TBX instruction.\n\nRelative speedup over the C code:\n\n                         Cortex A53    A55    A72    A73    A76   Apple M1\nintra_pred_z3_w4_8bpc_neon:    3.32   2.89   2.78   3.52   2.52   9.67\nintra_pred_z3_w8_8bpc_neon:    6.24   5.55   4.76   5.60   4.11   6.40\nintra_pred_z3_w16_8bpc_neon:   7.64   7.07   4.37   6.23   4.18   8.60\nintra_pred_z3_w32_8bpc_neon:   7.51   7.21   4.34   5.92   4.27   7.88\nintra_pred_z3_w64_8bpc_neon:   6.82   6.25   4.08   5.83   3.52   7.31", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab18d30ea5722a74e01041764e828f6defa2aa39", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "arm64: ipred: 8 bpc NEON implementation of the Z1 function\n\nRelative speedup over the C code:\n\n                         Cortex A53    A55    A72    A73    A76  Apple M1\nintra_pred_z1_w4_8bpc_neon:    4.09   3.15   3.63   4.16   3.27  13.00\nintra_pred_z1_w8_8bpc_neon:    6.93   5.66   5.57   6.76   5.51   5.50\nintra_pred_z1_w16_8bpc_neon:   7.81   6.85   6.24   7.78   6.59   9.00\nintra_pred_z1_w32_8bpc_neon:  10.56   9.95   8.72  10.95   8.28  13.33\nintra_pred_z1_w64_8bpc_neon:  11.00  11.38   9.11  11.62   8.65  14.61\n\n(The speedup numbers for M1 are kinda noisy due to the very coarse\ngranularity of the timer used there.)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "82d7e3ae4006a495ec21ca51ea4ec6bba3edb4a6", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "x86: Add 10bpc 16x32/32x16/32x32 itx AVX-512 (Ice Lake) asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "049ea44dcb012f0de6d2d597bed87c874409421e", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "x86: Remove stack alignment compiler flags\n\nThe intent was good, but in practice it results in a significant\namount of problems due to various compiler bugs for negligible gains.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f3845d93bdb9eb02fbfc440d7bdf1e56c8daa80", "commit_date": "2023-05-15T12:30:48Z", "commit_message": "x86: Add 10bpc 8x32/32x8 itx AVX-512 (Ice Lake) asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07dc231b7807ffad51e45b1a90a16bed5a1587fa", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Add minor DC-only IDCT optimizations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f8d3b47ff52efe372c0e589e94aafa8a3dd99f5", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Add 10-bit 8x8/8x16/16x8/16x16 itx AVX-512 (Ice Lake) asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7115302d5d306f044749252b45ecab5eed5a4423", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix incorrect 32-bit parameter usage in high bit-depth AVX-512 mc\n\nThe 32-bit width parameter was used directly as a pointer offset, but\nthe upper half is undefined. Fix it by replacing 'cmp' with 'sub' to\nexplicitly zero those bits.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f9de0c774f8bb12018624e82ffd7967bc00bcc17", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "arm: itx: Add clipping to row_clip_min/max in the 10 bpc codepaths\n\nThis fixes conformance with the argon test samples, in particular\nwith these samples:\n    profile0_core/streams/test10100_579_8614.obu\n    profile0_core/streams/test10218_6914.obu\n\nThis gives a pretty notable slowdown to these transforms - some\nexamples:\n\nBefore:                                 Cortex A53       A72       A73    Apple M1\ninv_txfm_add_8x8_dct_dct_1_10bpc_neon:       365.7     290.2     299.8    0.3\ninv_txfm_add_16x16_dct_dct_2_10bpc_neon:    1865.2    1384.1    1457.5    2.6\ninv_txfm_add_64x64_dct_dct_4_10bpc_neon:   33976.3   26817.0   24864.2   40.4\nAfter:\ninv_txfm_add_8x8_dct_dct_1_10bpc_neon:       397.7     322.2     335.1    0.4\ninv_txfm_add_16x16_dct_dct_2_10bpc_neon:    2121.9    1336.7    1664.6    2.6\ninv_txfm_add_64x64_dct_dct_4_10bpc_neon:   38569.4   27622.6   28176.0   51.0\n\nThus, for the transforms alone, it makes them around 10-13% slower\n(the Apple M1 measurements are too noisy to be conclusive here).\n\nMeasured on actual full decoding, it makes decoding of 10 bpc\nChimera around maybe 1% slower on an Apple M1 - close to measurement\nnoise anyway.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c94ec4d3b0798fc43cbc32111ea7fcde5f950fb7", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix overflows in 12bpc AVX2 IDCT/IADST", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a8ca110ae40c3922bac7ad393bd5f8cdd174e8e", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix overflows in 12bpc AVX2 DC-only IDCT\n\nUsing smaller immediates also results in a small code size reduction in\nsome cases, so apply those changes to the (10bpc-only) SSE code as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "93ead86a67db3bedce2664f8f2eed635ae4ab1ae", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix clipping in high bit-depth AVX2 4x16 IDCT\n\nCertain clips were incorrectly performed on negated values, which\ncaused things to be off-by-one in both directions. Correct this by\nnegating such values prior to clipping instead of afterwards.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0cf8db7ae2487eca77b86b524835852c22bac485", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Fix overflow in 8-bit NEON ADST\n\nIn 8-bit adst, it's possible that the final Round2(x[0], 12) can exceed\n16-bits signed\n\nSpecifically, in 7.13.2.6. Inverse ADST4 process, the precision requirement is:\n\"It is a requirement of bitstream conformance that all values stored in the\ns and x arrays by this process are representable by a signed integer using\nr + 12 bits of precision.\"\n\nFor 8 bits, r is 16 for both row and column, so x[] can be 28-bit signed.\nFor values [134215680, 134217727] (within 2047 of the maximum 28-bit value),\nthe final Round2(x[0], 12) evaluates to 32768, exceeding 16-bits signed.\n\nSo switch to using sqrshrn, which saturates to 16-bits signed\n\nThis is a continuation of: Commit b53ff29d80a21180e5ad9bbe39a02541151f4f53\narm: itx: Do clipping in all narrowing downshifts", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7d0703d355fd78cfa250a486f0109e0c3bf7465e", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix clipping in 10bpc SSE4.1 IDCT asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76889872a2752a768e797009bc310e5b554a39e9", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix overflows in 12bpc AVX2 identity itx asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "754ce19db115c5a685b2880ba850a1133ef475c8", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Fix an alignment issue in 8-bit AVX-512 loop restoration\n\nWe don't have a separate 8-bit AVX-512 5-tap Wiener filter so the 7-tap\nfunction is used for chroma as well, and in some esoteric edge cases\nchroma dst pointers may only have a 32-byte alignment despite having\na width larger than 32, so use an unaligned store as a workaround.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37fd55bbede6a7bee33b4ea21457165ff18d5464", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Remove leftover instruction in loopfilter AVX2 asm\n\nIn 0aca76c sequences of pand/pandn/por was replaced by pblendvb, but\none instruction (which now acts as a no-op) was accidentally left in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "808345c095db393cc102aba4adaaa8c8c190ea1b", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Enable pointer authentication in assembly when building arm64e", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ee11f327467556146cbe647bd06751578625426", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Don't trash the return stack buffer in the NEON loop filter\n\nThe NEON loop filter's innermost asm function can return to a different\nlocation than the address that called it. This messes up the return stack\npredictor, causing returns to be mispredicted\n\nInstead, rework the function to always return to the address that calls it,\nand instead return the information needed for the caller to short-circuit\nstoring pixels", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64144365b8f4efc1c668ac33df3a3b2edbcaae2e", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Add minor loopfilter asm improvements", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4511868645d012b9d7d05458dc130993e4ac988e", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Add high bit-depth loopfilter AVX-512 (Ice Lake) asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d182f96a6079898f042a345c636c77883d4aca08", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Add a workaround for quirky AVX-512 hardware behavior\n\nOn Intel CPUs certain AVX-512 shuffle instructions incorrectly\nflag the upper halves of YMM registers as in use when writing\nto XMM registers, which may cause AVX/SSE state transitions.\n\nThis behavior is not documented and only occurs on physical\nhardware, not when using the Intel SDE, so as far as I can tell\nit appears to be a hardware bug.\n\nWork around the issue by using EVEX-only registers. This avoids\nthe problem at the cost of a slightly larger code size.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "185178957bf99cbf9dc17d3916cdc462b4c0d9f7", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86: Add high bit-depth cdef_filter AVX-512 (Ice Lake) asm", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75ec18bd1d036c6bfee733f0de33eb3bb27203e5", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86/itx: Add 32x8 12bpc AVX2 transforms\n\ninv_txfm_add_32x8_dct_dct_0_12bpc_c: 286.7\ninv_txfm_add_32x8_dct_dct_0_12bpc_avx2: 20.1\ninv_txfm_add_32x8_dct_dct_1_12bpc_c: 7832.7\ninv_txfm_add_32x8_dct_dct_1_12bpc_avx2: 710.6\ninv_txfm_add_32x8_dct_dct_2_12bpc_c: 7838.1\ninv_txfm_add_32x8_dct_dct_2_12bpc_avx2: 711.6\ninv_txfm_add_32x8_dct_dct_3_12bpc_c: 7818.3\ninv_txfm_add_32x8_dct_dct_3_12bpc_avx2: 710.9\ninv_txfm_add_32x8_dct_dct_4_12bpc_c: 7820.6\ninv_txfm_add_32x8_dct_dct_4_12bpc_avx2: 710.5\ninv_txfm_add_32x8_identity_identity_0_12bpc_c: 1526.6\ninv_txfm_add_32x8_identity_identity_0_12bpc_avx2: 19.3\ninv_txfm_add_32x8_identity_identity_1_12bpc_c: 1519.4\ninv_txfm_add_32x8_identity_identity_1_12bpc_avx2: 19.9\ninv_txfm_add_32x8_identity_identity_2_12bpc_c: 1519.9\ninv_txfm_add_32x8_identity_identity_2_12bpc_avx2: 43.6\ninv_txfm_add_32x8_identity_identity_3_12bpc_c: 1519.4\ninv_txfm_add_32x8_identity_identity_3_12bpc_avx2: 67.8\ninv_txfm_add_32x8_identity_identity_4_12bpc_c: 1523.2\ninv_txfm_add_32x8_identity_identity_4_12bpc_avx2: 91.6", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59f06144a7cbd6887399725672ecff5b6b6386d4", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86/itx: Add 8x32 12bpc AVX2 transforms\n\ninv_txfm_add_8x32_dct_dct_0_12bpc_c: 334.6\ninv_txfm_add_8x32_dct_dct_0_12bpc_avx2: 66.0\ninv_txfm_add_8x32_dct_dct_1_12bpc_c: 7929.7\ninv_txfm_add_8x32_dct_dct_1_12bpc_avx2: 489.3\ninv_txfm_add_8x32_dct_dct_2_12bpc_c: 7925.8\ninv_txfm_add_8x32_dct_dct_2_12bpc_avx2: 547.1\ninv_txfm_add_8x32_dct_dct_3_12bpc_c: 7928.9\ninv_txfm_add_8x32_dct_dct_3_12bpc_avx2: 647.8\ninv_txfm_add_8x32_dct_dct_4_12bpc_c: 7916.1\ninv_txfm_add_8x32_dct_dct_4_12bpc_avx2: 701.0\ninv_txfm_add_8x32_identity_identity_0_12bpc_c: 2413.1\ninv_txfm_add_8x32_identity_identity_0_12bpc_avx2: 28.6\ninv_txfm_add_8x32_identity_identity_1_12bpc_c: 2415.2\ninv_txfm_add_8x32_identity_identity_1_12bpc_avx2: 28.6\ninv_txfm_add_8x32_identity_identity_2_12bpc_c: 2413.7\ninv_txfm_add_8x32_identity_identity_2_12bpc_avx2: 55.1\ninv_txfm_add_8x32_identity_identity_3_12bpc_c: 2415.4\ninv_txfm_add_8x32_identity_identity_3_12bpc_avx2: 85.3\ninv_txfm_add_8x32_identity_identity_4_12bpc_c: 2401.8\ninv_txfm_add_8x32_identity_identity_4_12bpc_avx2: 116.8", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cf51a160be8bba92bb453780955418ae563bff9", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "x86/itx: Deduplicate dconly code", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1892de92397606d08a7cb36a3e4399642cf06977", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Include identity transform aarch64 assembly functions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "503d9db7978fb7fdfd7088f1cc39eff223b74a30", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Integrate CfL AC aarch64 assembly functions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f803233346016cc9f556f84f44d7c3e0a071ca53", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Use is_x86_feature_detected only in CpuFeatureLevel", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99e0deebd6bc7916bc0c0337ec3d033a4e0f46c0", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "CI: Allow new deprecated warning for rustc 1.69\n\nCPU features avx512gfni, avx512vaes and avx512vpclmulqdq are renamed.\nThe avx512 prefix is removed but the original names remain as aliases.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8c9d493dfa46ea490c6e0332ca89e285465d4f9", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Change cbuild to cinstall", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef7c059b10e8fbfdd7898ed1747412bca1a32611", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "feat: deploy library artifacts, add i686 linux and aarch64 mac targets", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "655b81d3e9296c5a3f1a7d943d207446d9377983", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Cleanup and add more inspection to hawktracer", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a2b6d32a949013c76d00c3ffca205488583275e8", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "quantize: Avoid second \"division\" in hot loop", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "714e1fbc71af14eb02b2839ac0d4bab247c1f91a", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "quantize: Compute eob_minus_one via iscan\n\nThis no longer short-circuits but admits vectorization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ffa6ebc6f5f7a91123001f01062299eee3417fa", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "Restore previously unused iscan arrays", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b610de9a5012b130d867e0c518c945e0eb329e63", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "CI: Remove deleted inputs for dtolnay/rust-toolchain action", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96d16750f039eb684db3d6f4ebd34abca8299ff2", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "CI: Replace deprecated set-output pattern in deploy workflow", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eea5a6d46b9aca7e5838a2b3dae67f45ff0469c0", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "CI: Fix release attachment paths in deploy job\n\nNames in binaries and deploy jobs were mismatched.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f04286e1114d31506d2b4c3218255cbf8a51459", "commit_date": "2023-05-15T12:30:47Z", "commit_message": "rav1e 0.6: Pin winnow crate to 0.4.1\n\nVersions 0.4.2 and above require rustc 1.64.0 or newer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4e69a9da111e28e76b872e657307ffa072d6e1b", "commit_date": "2023-05-08T11:59:40Z", "commit_message": "Prepare for release", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba88cc02f08c98d28e0d7ef78cabf9d70aa02435", "commit_date": "2023-05-08T09:26:58Z", "commit_message": "Remove const_fn_assert\n\nOur version of rust already support natively panic in const context.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}