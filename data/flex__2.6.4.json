{"feature/am_gettext_require_version": [{"commit_oid": "ff1814ad849afca87ff6a0bb1396566e000ae3a1", "commit_date": "2017-07-09T21:30:31Z", "commit_message": "build: require gettext at least 0.18, not exactly 0.18", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c2c0a2e85b78874fd69487d711011d639867a3", "commit_date": "2017-07-03T15:49:36Z", "commit_message": "doc: NEWS memory leak fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "faa877a8434a1d2f1b2ab5315eee6ca44dc79629", "commit_date": "2017-07-03T15:45:55Z", "commit_message": "scanner: memory leak free scanner generator.\n\n**Issue:**\nScanner generation leaks memory for transition tables when invoked\nwithout `--tables-file` option.\n\n**Root cause:**\n`gentabs` function has different memory acquire/release conditions.\n\n**Solution:**\nReclaim memory at the same scope where it was alloacated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a044dbe6d03877c3d8c205ae76be9c41f442237", "commit_date": "2017-07-03T15:45:37Z", "commit_message": "filter: memory leak free scanner postprocessing.\n\n**Issue:**\nScanner postprocessing leaks memory during correction of `#line`\ndirectives values and generation of C header file.\n\n**Root cause:**\n`filter_fix_linedirs` and `filter_tee_header` functions do not\ndispose allocated memory.\n\n**Solution:**\nAutomatically reclaim affected memory by allocating it on stack\ninsted of heap. Stack allocation should not be a problem as its\nonly 512 bytes and there is no recursive calls.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef32155253a100a774c087ae4a6be3fb5c6a375c", "commit_date": "2017-07-03T15:34:14Z", "commit_message": "doc: NEWS c{i,j}", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea4b0a129eebedba73eb08eb2639040fd758c51f", "commit_date": "2017-07-03T15:34:00Z", "commit_message": "scanner: c{i,j} should preserve case.\n\nFixes #193", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bebb264a94bdbfcf150a24e706c183896207e7b", "commit_date": "2017-07-03T13:46:48Z", "commit_message": "doc: document --backup-file in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c55bf919ccad3e0eff30da09c3d3e9f81cc123ad", "commit_date": "2017-07-03T13:41:42Z", "commit_message": "scanner: add optionn to specify backup filename.\n\nIn a directory containing multiple scanners, we want to allow\nspecifying the name of the backup file else the backup files will be\noverwritten.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bd14f13878e8b36e84c57561b86a863e3a1093c", "commit_date": "2017-06-18T17:56:06Z", "commit_message": "doc: new uk translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90c62441b3e848e3e526808c9e33c8172f31ebb1", "commit_date": "2017-06-18T17:55:11Z", "commit_message": "doc: new uk translation from the Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e00f250f66678eea21a4b5a4a25cb5b38f35f71", "commit_date": "2017-06-04T20:20:04Z", "commit_message": "doc: formatting fixes in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4735d6925d7864710421da1bd2707bb1bba43f3", "commit_date": "2017-06-04T20:15:23Z", "commit_message": "test: echo 'set -v' before setting so in shell.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b9c0cedcbb63f9a570687b977d8b00558920ad", "commit_date": "2017-05-26T15:23:12Z", "commit_message": "doc: tableopts rule portability mentioned in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0152a0c33061c63c928279e9bfcf496e1178a1", "commit_date": "2017-05-26T15:21:16Z", "commit_message": "test: remove duplicate shell options line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3db3aeb311b58d50e5a9eb0e3e78f271255bb0", "commit_date": "2017-05-24T07:33:09Z", "commit_message": "test: use portable pattern substitution in tableopts.sh\n\nFixes: #222", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db4f5e0fe5f2563e9d36b203f9fabb81aad2e4da", "commit_date": "2017-05-19T12:05:51Z", "commit_message": "doc: document NetBSD build crash fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae437ad54624883ecec3812bd225239a882954e", "commit_date": "2017-05-19T12:03:48Z", "commit_message": "build: remove automake check-news", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b290d8ebdfa73b8f4665847fb689884eceee269", "commit_date": "2017-05-19T11:29:15Z", "commit_message": "scanner: Use reallocarr() when available.\n\nNetBSD had a crash during build. Since the provided substitute for\nreallocarray() wasn't working, use NetBSD's reallocarr(). Let\nconfigure choose that function whenever it is available. Use\nreallocarray if available. Still fallback if neither is available.\n\nFixes #219", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a70bac04ac4743d64c23d5f5a3df55494bf6050", "commit_date": "2017-05-14T11:16:45Z", "commit_message": "doc: list line number directives in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7e34bb958ac5d083b2bab4c89907cd0669196d", "commit_date": "2017-05-14T10:31:56Z", "commit_message": "filter: Output correct #line value for current file.\n\nA #line pre-processor directive specifies the line number and source\nfile of the following lines. If the source file _is_ the current file,\nthe line number should be that of the line following the directive. So\nthe specified line number should be the current line number plus 1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "596a221844c8b13696f83183f44d3fcc7184f464", "commit_date": "2017-05-13T21:24:55Z", "commit_message": "scanner: corrected typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0be31989084e3a3265a9b34bf64bf8784779cb67", "commit_date": "2017-05-13T21:23:18Z", "commit_message": "doc: noyyget/set_column options documented", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cadd124f882290dff281b6de06d64d92ce73ecd", "commit_date": "2017-05-13T19:15:45Z", "commit_message": "scanner: finish support for noyy{get,set}_column.\n\nUnattributed patch carried over from sourceforge bug tracker.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7284970311c8b0c7c36da2d527b596d4699d1023", "commit_date": "2017-05-13T18:24:17Z", "commit_message": "build: .mailmap for cleaning up shortlog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3f4639099863b5d419d7c3442babb8ffc3f58a", "commit_date": "2017-05-07T00:46:20Z", "commit_message": "test: rename some files for non-case-sensitive filesystems.\n\n-C*f and -C*F option-specific test files collide on case-insensitive\nfile systems, and cause tests to either not be run at all, or to\noverwrite each other's files at build time.  So rename -C*F ones to\n-C*_F.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af72e9e222aab86d695225d4d440a1bf66fadff8", "commit_date": "2017-05-07T00:26:28Z", "commit_message": "build: 2.6.4 is previous version", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "385766c5cff544f2f96040e01a0be217a161a7ce", "commit_date": "2017-05-06T20:54:54Z", "commit_message": "build: ignore .sig files.\n\nWe generate gpg signatures in place for releases. Since these should\nnot be tracked in the flex repo itself, we tell git to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dfc45ef5a3134f6602e3b1784649b50958d100f", "commit_date": "2017-05-06T20:53:14Z", "commit_message": "build: no longer ignore *.tar.bz2\n\nSince we no longer generate *.tar.bz2 archives, we do not need to tell\ngit to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "go": [{"commit_oid": "04c5b7c9209801aa1bdbf279ccdcde0d57874a55", "commit_date": "2020-09-06T15:21:46Z", "commit_message": "remove some gcc warnings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a631f5da8d4fd60fbde7b06bcf43bc9a155c27d5", "commit_date": "2020-04-24T16:06:24Z", "commit_message": "correct some indentation in skeleton", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1fbf674f2e038df9cf1fe7725617e3837ae2a9", "commit_date": "2019-09-12T20:42:40Z", "commit_message": "doc: document release page in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3de49f84224b18c5287653f20525291b24cc26e", "commit_date": "2019-06-20T18:05:30Z", "commit_message": "doc: new translations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98018e3f58d79e082216d406866942841d4bdf8a", "commit_date": "2018-05-22T20:56:52Z", "commit_message": "scanner: Include-guard flexint_shared.h\n\nThis prevents compiler's \"redefinition of typedef\" warnings or errors\nwhen we could include flexint_shared.h twice, when building flex's own\nscanner (scan.c) or in the \"multiple_scanners\" test in the testsuite.\n\n(Depending on the compiler's flags this might or might not produce\nerrors, but it's good to guard it anyway.)\n\nFixes: #329\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21121feec917491db6f76cb54bd6441411632440", "commit_date": "2018-05-22T20:51:26Z", "commit_message": "scanner: no YYTABLES_NAME macro unless requested", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c7e3a5a676cfb98cc33382715dc6f6929688fdd", "commit_date": "2018-05-07T19:53:26Z", "commit_message": "po: include update_linguas script in distribution.\n\nSince automake takes a hands off approach to the po/ directory, we\nneed to list update_linguas.sh in the top Makefile.am. We list it as a\ndist_noinst_SCRIPT so that it will get distributed with executeable\npermissions. We also list autogen.sh in the same way for the same\nreason.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a752d7c1c27aa5ccd15ab2c89162b64154e106b7", "commit_date": "2018-05-07T18:58:48Z", "commit_message": "doc: display build status badge in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60b578fdaab4bf8d95203caaa947b476eeb03c10", "commit_date": "2018-04-07T17:26:34Z", "commit_message": "doc: describe mailing list usage in more detail", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33fd4c43a8faa5a04dcdd10fc4a5443378d9bf5", "commit_date": "2018-03-13T14:45:56Z", "commit_message": "doc: amend manual section on state stack functions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3971b6146aab12e1c54945dcb47ae92a25a3f3c3", "commit_date": "2018-03-13T14:45:42Z", "commit_message": "scanner: fix default of yy_top_state()\n\nextend fix when `YY_G` is used (reentrant scanner).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67b3e448727da3093cdc6f0ca7fd151fbf3c10ad", "commit_date": "2018-03-13T14:45:16Z", "commit_message": "scanner: fix default of yy_top_state()\n\nFor an _empty_ state stack the top of the state stack defaults to the state as if no state stack were present.\n\nNB: sanity check for `yy_start_stack_ptr` could be added in `yy_top_state()`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a6e69af761801aedeab0264246772cf60810246", "commit_date": "2018-03-12T02:34:36Z", "commit_message": "build: Add \"-f\" flag to \"mv\" in makefiles.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcd8e8b401c264702936eba6db8abef8399684ff", "commit_date": "2018-03-12T02:15:31Z", "commit_message": "build: Fix makefile dist-hook directory permissions.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1f6b4a26399b0e7849fd646fe5ee690231b32d4", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: More compatible flex integer type definitions.\n\nVisual C++ 2010 does not define __STDC_VERSION__, and (before Visual\nC++ 2013) has <stdint.h> and not <inttypes.h>.\n\nANSI/ISO C only requires at least 16 bits for int type (not 32 bits as\nrequired by POSIX since SUSv2), so check the bit length before the\ntypedef.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5574881ff4c9b08c73b6acc0087d6046c2b48de5", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Skeleton no longer includes integer limit macros.\n\nThe [U]INT{8,16,32}_{MIN,MAX} macros are never used in skeleton code.\nHaving them in skeleton just increases the chance of conflicts in case\nthat user defines them in non-C99 environment (see issue #307, when\nflex code is built in Visual C++ (before VS2013)).\n\nflexint.h is now split in two files. Only \"flexint_shared.h\" will be\nincluded in skeleton now, which defines flex integral types.\nflexint.h contains integer limits macros that would be used in flex\nonly.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec4f23d5d25dd33de99301956d2219b32860570e", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Add a fallback INT_MAX definition.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1985bb3c7abed940e91ad816504ef08a18c3b7c1", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: correct comments about __STDC_LIMIT_MACROS.\n\nNo code changes.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4081efa0831b15d7e4e4255401c225ad8262426d", "commit_date": "2018-03-08T02:04:36Z", "commit_message": "scanner: Fix glibc features.h dependency in skeleton.\n\nCommit a17d79e9c722a6735b6d2a8f152287404f27df32 defines _POSIX_C_SOURCE\nto the minimum of 1 if it's not defined in the user's scanner code or\nthe compiling environment. However in glibc the macros are not yet set\nup until one of the libc headers is included. This unfortunately have\nmade us overwrite the default _POSIX_C_SOURCE value that would be\ndefined by glibc (200809L at the time of writing), causing regressions\nin user code.\n\nNow in this patch:\n1. Ensure feature test macros have been set up in glibc before checking\nor defining any of them in our skeleton code.\n2. Have a more conservative logic when determining the need to define\n_POSIX_C_SOURCE (required for fileno()).\n\nFixes: #313\n\nNote:\nIt could be tricky for application code to ensure feature test macros\nhave been set up in glibc, since <features.h> is no portable header and\nnot meant to be included directly by applications. The way to do it is\nto include a libc header which in turn includes <features.h>. However,\nmany of the glibc headers check __USE_POSIX (a glibc internal macro\ndefined if _POSIX_C_SOURCE is defined) and determine which interfaces\nto expose already, making the headers inappropriate for our goal.\nThose which don't depend on _POSIX_C_SOURCE, and are also available\nsince ANSI C89, are only <assert.h>, <errno.h> and <math.h>.\n\n<assert.h> is finally favored due to other considerations:\n- <math.h> check for __USE_XOPEN in glibc, making a dependency on\n_XOPEN_SOURCE, besides it exposes much more interfaces than we need.\n- In djgpp, <errno.h> depends on _POSIX_SOURCE to hide definitions of\nsome errno values when it's defined.\n- <assert.h> exposes the fewest interfaces among the 3 headers and, at\nthe time of writing, checks for only C99 (for __func__), C11 (for\n_Static_assert), and _GNU_SOURCE when needed.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5023f5a48ac477916d43453a16afd792f422e85", "commit_date": "2018-03-04T12:51:38Z", "commit_message": "scanner: Fix scan.l xgettext warnings.\n\nxgettext was not very clever at interpreting lex patterns and can get\nconfused when seeing unquoted quotation marks, and emit warnings for\nthem. Now fix the warnings by properly quoting the quotation marks in\nlex regex patterns.\n\nExample\n    Original: \\\"[^\"\\n]*\\\" -> \"warning: unterminated string literal\"\n    Fixed:    \"\\\"\"[^\"\"\\n]*\"\\\"\" -> OK\n\nMy basic build test shows that the generated stage1scan.c is\nbit-identical to the original.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e104f5589c2365d5927de00d6a990ec33ef29493", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: '--disable-acl' when building gettext\n\nThis silences a configure warning about libacl not found in Travis\nbuild log.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6aa652b089f7ae3f2d9d0181f84733e88ce6443a", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Silence build output of automake and gettext\n\nOnly when a build error occurs on building any of these dependent\npackages do we dump some sensible logs to standard output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e63c0bb6b675c0093d8d39deaf4894297bce3041", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Hard-code hashes for verifying tarballs\n\nGPG signatures require an external keyserver which might be offline,\nwhich is undesirable for build server use. It's equally secure to just\nhard-code the hashes, provided they're trusted (i.e. you verify a hash\nagainst a GPG signature once).\n\nFixes: #311.\n\nAs a side note: the original two signatures\n(gettext-0.19.8.1.tar.lz.sig and automake-1.15.1.tar.gz.sig) are signed\nagainst the files' SHA-1 hash.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c42de062bbdc7c31d7181c10a74202d493280ada", "commit_date": "2018-03-01T00:30:56Z", "commit_message": "build: Move dnl comments out of AC_CHECK_FUNCS\n\nDue to a bug, autoheader (2.69) will treat M4 dnl comments in a quoted\nargument of AC_CHECK_FUNCS as function tokens and generate a lot of\nredundant and useless HAVE_* macros in config.h.in.\n(Examples: HAVE_DNL, HAVE_AVAILABLE_, HAVE_BY)\n\nIt seems to be this commit dbb4e94dc7bacbcfd4acef4f085ef752fe1aa03f of\nmine that revealed this autoheader bug, and the affected config.h.in\nhad been shipped within flex-2.6.4 release tarball.\n\nI have reported the autoheader bug here:\n<https://lists.gnu.org/archive/html/bug-autoconf/2018-02/msg00005.html>\n\nAs a workaround, let's move comments out of AC_CHECK_FUNCS.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065c9fbe22733e360e285ec4ce24d9c5065a0140", "commit_date": "2018-02-24T15:12:09Z", "commit_message": "test: Remove redundant '-o $@' in tableopts.am\n\n$(LINK) in Automake already contains the '-o $@' arguments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff7bc8af4680a6b16b07f8ddae8b5c64ad009de1", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "doc: list travis in NEWS [skip ci]", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0508df61da22a0a6f49e3c1d86404ea4ec37c85", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "initial .travis.yml file", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7d45afc6aeb49745f17d21ddba4848e0c0118fc", "commit_date": "2017-12-09T21:29:52Z", "commit_message": "scanner: Allow \"--\" as option argument.\n\nPreviously, invocations such as:\n\n    flex --outfile -- wc1.l\n\n would fail with \"requires an\nargument\" error message.\n\nFixes #285", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c984ab0fd0ad534a725019a7bf4f49a3571d87d1", "commit_date": "2017-12-08T14:56:18Z", "commit_message": "scanner: scanopt_err() now returns void", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa775c871137c570ded2bbd6ebbe7ca4ee39efe7", "commit_date": "2017-12-08T14:55:19Z", "commit_message": "scanner: simplify scanopt_usage().\n\nIn-function macro CALC_LEN removed and no longer needed.\n\nLocal variable renames:\n\n    maxlen[0] => opt_col_width\n\n    maxlen[1] => desc_col_width\n\n    indent now explicitly const", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23882383d45dcd37b5177835c873f4e1d9582db1", "commit_date": "2017-12-06T21:23:25Z", "commit_message": "scanner: prevent overflow in add_action()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e1b25b0ec17d4312f838efc6f910b64900b009", "commit_date": "2017-11-29T13:11:22Z", "commit_message": "scanner: use calloc to allocate new filter memory", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87472f5aa72431cd48755fa8537089e00d67e036", "commit_date": "2017-11-28T20:06:10Z", "commit_message": "Obsolete yypad64() macro.\n\nSlightly rewrite the logic in yytbl_data_load() and yytbl_write_pad64()\nso they simply check if the bytes read/written are in 8-byte boundary.\nNo need to calculate how many bytes we need to pad. (Incidentally this\nmakes smaller code in x86_64.)\n\nFor yytbl_hdr_init(), just expand the calculation from the macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12d2f8608046c5d43646e3c1dc277c0a2914ae1b", "commit_date": "2017-11-28T19:56:42Z", "commit_message": "scanner: temporarily protect against ccl overflow & overwriting.\n\nFor ccladd(), if cclp given is a non-last ccl, adding a char into it\nwill overflow the buffer and overwrite the first char in the next ccl.\n\nFor now, add a temporary detection and protection code.  (Not sure if\nthis could happen in user input, but if it could, then you can expect\nsome \"corrupted\" behavior for generated scanners.)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea1faa2d09693cf7f3a3c3c79a5ddb7fbd0d3ba5", "commit_date": "2017-11-28T19:09:04Z", "commit_message": "build: fix ENABLE_NLS preprocessor check.\n\nBecause ENABLE_NLS may be defined to 0 (manually, not through\nautoconf) and it's semantically incorrect to only check whether it's\ndefined.\n\nThis is a correction to commit\n661d603b65385f62f372acd2017e5af2e0f0cd50.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11b7512664c30cadd923f479c59bc3368a7b210d", "commit_date": "2017-11-03T23:12:49Z", "commit_message": "scanner: Rename genecs() local variables. No code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c0f34cf12e17a526978ee962d92a37f93e86160", "commit_date": "2017-11-03T22:41:16Z", "commit_message": "scanner: Remove unused BASENAME() macro.\n\n(Simply forgot to do so in commit fb731ac0221e1866534dfe072b84b8af7a5d88f3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "661d603b65385f62f372acd2017e5af2e0f0cd50", "commit_date": "2017-11-03T14:39:32Z", "commit_message": "build: use #ifdef for ENABLE_NLS check.\n\nconfig.h will have either define ENABLE_NLS or not define it. If it is\nnot defined we get a -Wundef warning due to using #if with an\nundefined macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a17d79e9c722a6735b6d2a8f152287404f27df32", "commit_date": "2017-11-03T14:19:21Z", "commit_message": "scanner: Define _POSIX_C_SOURCE when needed in skeleton.\n\nThe function fileno() is defined by POSIX. When flex would otherwise not provide that feature macro, we define it.\n\nFixes #263", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0db9f8903a446e7026874be519b8dc55a471f014", "commit_date": "2017-10-05T15:31:18Z", "commit_message": "build: Remove custom reallocarray() declaration.\n\nUse one from <stdlib.h> instead because that is more portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37a6184dabcd82fa1d17c24c000f3da469296195", "commit_date": "2017-10-05T15:27:54Z", "commit_message": "scanner: Simplify PRINT_SPACES() macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24fd0551333e7eded87b64dd36062da3df2f6380", "commit_date": "2017-09-04T15:22:30Z", "commit_message": "build: AC_USE_SYSTEM_EXTENSIONS in configure.ac.\n\nThis would, e.g. define _GNU_SOURCE in config.h, enabling the\nreallocarray() prototype in glibc 2.26+ on Linux systems with that\nversion of glibc.\n\nFixes #241.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d62d3eb24d06030ae2641fe4670de3a8da9e67e", "commit_date": "2017-09-04T01:25:57Z", "commit_message": "doc: document config.h inclusion by flex itself", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b5111d9772b5c160340ca96f08d30d7f6db5cda", "commit_date": "2017-09-04T01:17:59Z", "commit_message": "scanner: Include flexdef.h at %top block of scan.l\n\nconfig.h may define macros that alter the API of the standard library\nfuntions, and so it should be included before any other standard\nheader, even before the skeleton's standard header inclusion.\n\nFor example: config.h may #define _GNU_SOURCE that would expose the\nreallocarray() prototype from <stdlib.h> on glibc 2.26+ systems. If we\ninclude <stdlib.h> before config.h, reallocarray() would not be\navailable for use in lex file since the second include doesn't help\ndue to header guard.\n\nFor now our config.h might `#define malloc rpl_malloc` -- this\nsubstitution must work before including stdlib.h, or else the compiler\nwill complain about missing prototypes, and may result in incorrect\ncode in scan.l (gcc warning: return makes pointer from integer without\na cast [-Wint-conversion]).\n\nFixes #247.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2943389fd3ca776d25735c06ef94512a2bb5c20", "commit_date": "2017-09-02T19:09:28Z", "commit_message": "{re,}allocate_array code cleanup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71d3525ad21dde00d3665c61e27346e88dab30d9", "commit_date": "2017-09-02T19:07:52Z", "commit_message": "doc: document libfl targets in Makefile", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd1afa37e110563cfc25cf5703ae6288691c0657", "commit_date": "2017-08-31T19:54:02Z", "commit_message": "build: Add convenience targets to build libfl only\n\nThese are wrappers around automake- and libtool-generated targets,\nallowing users to build libfl only, without the main flex program.\n\nSee GH-256 for discussion.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b84ad149c90483d3bfe9f64dd7bfbfad3550116d", "commit_date": "2017-08-31T19:51:25Z", "commit_message": "doc: document src/libfl in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e19c55cab9eeedb59a0c4c1245d44ed51ff88f", "commit_date": "2017-08-26T16:18:44Z", "commit_message": "Don't install libfl.pc if --disable-libfl.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e199cb6bdf59e1513ac60132799c994bf28b283d", "commit_date": "2017-08-26T16:18:32Z", "commit_message": "libfl.pc: Rewrite descriptions, remove unneeded Cflags.\n\nThere's no need to include any header when linking with `-lfl`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e06407175ed235378624d8b75aa24179a27b876", "commit_date": "2017-08-26T16:17:57Z", "commit_message": "Move libfl.pc.in to src subdirectory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "931d29bdeacc66f561e44636f80f33782ca4bbb0", "commit_date": "2017-08-24T13:26:02Z", "commit_message": "doc: NEWS updates", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b115f389b284a13b974bba05c25896feeec716ec", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Hardcode flex name in --help text\n\nDon't use program_name in the description of -T/--trace or -V/--version\noption. It's ugly when user invokes flex with a long path like\n\"/home/username/tools/bin/my-custom-built-flex\".\n\nThis solution is not long term. If possible, the help text should be\nmodified so that the \"flex\" name is no longer needed below the first\n\"Usage:\" line. All translations of help text will need to be updated\nas well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a657f0c6f564d2edc6e34e0e9715a95b13bdb304", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Remove an unneeded gettext() in --version output\n\n\"%s %s\\n\" is not translatable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb731ac0221e1866534dfe072b84b8af7a5d88f3", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "scanner: remove BASENAME(); don't strip path from program_name\n\nThere's no technical need of stripping path from program_name. I think\nthe users should be fine if they see the path they use to invoke flex\nis diagnostic messages and help texts.\n\nYes, users will see \"Usage: ../flex [OPTIONS]...\" now if they invoke\nflex with the path \"../flex\".\n\nThe --version output has been changed so that the name field will be\nalways \"flex\" or \"flex++\". If the flex program has been renamed to\n\"lex\" (for compatibility or other reason) this will allow identifying\nthe implementation name (\"flex\"). (And it's a recommended practice in\nGNU Coding Standards)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d64a5263cfcd490a6a96b2d6c018fa40f1ed558a", "commit_date": "2017-08-24T12:18:11Z", "commit_message": "build: sort .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e73c4446841eda8d4ea01298e887059e8c1472", "commit_date": "2017-08-24T12:15:00Z", "commit_message": "have libobjs depend on libobjdir (#244)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa50a492fcbd45e9dfacf8d0483543f198d0f6a1", "commit_date": "2017-08-24T12:02:19Z", "commit_message": "build: git ignore libfl.pc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1ed5df2f61abcb201b770e29cea1082a117d0f9", "commit_date": "2017-08-24T11:52:13Z", "commit_message": "Create libfl.pc target for pkgconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "535524ea6b55f8f6a7dfc160cb19211c084795d6", "commit_date": "2017-07-18T01:12:44Z", "commit_message": "scanner: #define BASENAME, remove #include libgen.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f2b9a4d630b702f6dd8592014f89d40a6a4bcc1", "commit_date": "2017-07-18T00:03:45Z", "commit_message": "mkskel.sh: fix EOL issue for CRLF systems", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af066b952fc81eb1a29079c7206e50ffed80c40", "commit_date": "2017-07-15T22:52:28Z", "commit_message": "scanner: Ignore comment lines in skeleton files.\n\nIn skeleton files comments are indicated by leading `%#` and when\ndirectly read in using `flex -S <skeleton.skl>` they should be\nignored. Example: `flex.skl`.\n\nAmending commit 2f21edac99b5efc432417233e6e53326d630e08f which removed\nthis conditional branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e784a805ef8f33ab4de544eee1876f41d2bd9dbc", "commit_date": "2017-07-15T22:31:41Z", "commit_message": "filter: faster is_blank_line implementation\n\nUsing regex_t regex_blank_line is *slow*.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f370436e1cf0c731e74bcee806df6c7a43a3094", "commit_date": "2017-07-13T19:15:29Z", "commit_message": "filter: new internal function is_blank_line()\n\nIt's simply to return (regexec(&regex_blank_line, str, 0, NULL, 0) == 0);\nThe reason for encapsulation is to allow replacing this with a\nnon-regex method if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19cffb0ff001e24a278ab979ac7a49f788ab2eba", "commit_date": "2017-07-13T19:14:58Z", "commit_message": "build: require automake, gettext versions as per maintainer dev setup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c2c0a2e85b78874fd69487d711011d639867a3", "commit_date": "2017-07-03T15:49:36Z", "commit_message": "doc: NEWS memory leak fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "faa877a8434a1d2f1b2ab5315eee6ca44dc79629", "commit_date": "2017-07-03T15:45:55Z", "commit_message": "scanner: memory leak free scanner generator.\n\n**Issue:**\nScanner generation leaks memory for transition tables when invoked\nwithout `--tables-file` option.\n\n**Root cause:**\n`gentabs` function has different memory acquire/release conditions.\n\n**Solution:**\nReclaim memory at the same scope where it was alloacated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a044dbe6d03877c3d8c205ae76be9c41f442237", "commit_date": "2017-07-03T15:45:37Z", "commit_message": "filter: memory leak free scanner postprocessing.\n\n**Issue:**\nScanner postprocessing leaks memory during correction of `#line`\ndirectives values and generation of C header file.\n\n**Root cause:**\n`filter_fix_linedirs` and `filter_tee_header` functions do not\ndispose allocated memory.\n\n**Solution:**\nAutomatically reclaim affected memory by allocating it on stack\ninsted of heap. Stack allocation should not be a problem as its\nonly 512 bytes and there is no recursive calls.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef32155253a100a774c087ae4a6be3fb5c6a375c", "commit_date": "2017-07-03T15:34:14Z", "commit_message": "doc: NEWS c{i,j}", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea4b0a129eebedba73eb08eb2639040fd758c51f", "commit_date": "2017-07-03T15:34:00Z", "commit_message": "scanner: c{i,j} should preserve case.\n\nFixes #193", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bebb264a94bdbfcf150a24e706c183896207e7b", "commit_date": "2017-07-03T13:46:48Z", "commit_message": "doc: document --backup-file in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c55bf919ccad3e0eff30da09c3d3e9f81cc123ad", "commit_date": "2017-07-03T13:41:42Z", "commit_message": "scanner: add optionn to specify backup filename.\n\nIn a directory containing multiple scanners, we want to allow\nspecifying the name of the backup file else the backup files will be\noverwritten.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bd14f13878e8b36e84c57561b86a863e3a1093c", "commit_date": "2017-06-18T17:56:06Z", "commit_message": "doc: new uk translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90c62441b3e848e3e526808c9e33c8172f31ebb1", "commit_date": "2017-06-18T17:55:11Z", "commit_message": "doc: new uk translation from the Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e00f250f66678eea21a4b5a4a25cb5b38f35f71", "commit_date": "2017-06-04T20:20:04Z", "commit_message": "doc: formatting fixes in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4735d6925d7864710421da1bd2707bb1bba43f3", "commit_date": "2017-06-04T20:15:23Z", "commit_message": "test: echo 'set -v' before setting so in shell.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b9c0cedcbb63f9a570687b977d8b00558920ad", "commit_date": "2017-05-26T15:23:12Z", "commit_message": "doc: tableopts rule portability mentioned in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0152a0c33061c63c928279e9bfcf496e1178a1", "commit_date": "2017-05-26T15:21:16Z", "commit_message": "test: remove duplicate shell options line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3db3aeb311b58d50e5a9eb0e3e78f271255bb0", "commit_date": "2017-05-24T07:33:09Z", "commit_message": "test: use portable pattern substitution in tableopts.sh\n\nFixes: #222", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db4f5e0fe5f2563e9d36b203f9fabb81aad2e4da", "commit_date": "2017-05-19T12:05:51Z", "commit_message": "doc: document NetBSD build crash fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae437ad54624883ecec3812bd225239a882954e", "commit_date": "2017-05-19T12:03:48Z", "commit_message": "build: remove automake check-news", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b290d8ebdfa73b8f4665847fb689884eceee269", "commit_date": "2017-05-19T11:29:15Z", "commit_message": "scanner: Use reallocarr() when available.\n\nNetBSD had a crash during build. Since the provided substitute for\nreallocarray() wasn't working, use NetBSD's reallocarr(). Let\nconfigure choose that function whenever it is available. Use\nreallocarray if available. Still fallback if neither is available.\n\nFixes #219", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a70bac04ac4743d64c23d5f5a3df55494bf6050", "commit_date": "2017-05-14T11:16:45Z", "commit_message": "doc: list line number directives in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7e34bb958ac5d083b2bab4c89907cd0669196d", "commit_date": "2017-05-14T10:31:56Z", "commit_message": "filter: Output correct #line value for current file.\n\nA #line pre-processor directive specifies the line number and source\nfile of the following lines. If the source file _is_ the current file,\nthe line number should be that of the line following the directive. So\nthe specified line number should be the current line number plus 1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "596a221844c8b13696f83183f44d3fcc7184f464", "commit_date": "2017-05-13T21:24:55Z", "commit_message": "scanner: corrected typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0be31989084e3a3265a9b34bf64bf8784779cb67", "commit_date": "2017-05-13T21:23:18Z", "commit_message": "doc: noyyget/set_column options documented", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cadd124f882290dff281b6de06d64d92ce73ecd", "commit_date": "2017-05-13T19:15:45Z", "commit_message": "scanner: finish support for noyy{get,set}_column.\n\nUnattributed patch carried over from sourceforge bug tracker.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7284970311c8b0c7c36da2d527b596d4699d1023", "commit_date": "2017-05-13T18:24:17Z", "commit_message": "build: .mailmap for cleaning up shortlog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3f4639099863b5d419d7c3442babb8ffc3f58a", "commit_date": "2017-05-07T00:46:20Z", "commit_message": "test: rename some files for non-case-sensitive filesystems.\n\n-C*f and -C*F option-specific test files collide on case-insensitive\nfile systems, and cause tests to either not be run at all, or to\noverwrite each other's files at build time.  So rename -C*F ones to\n-C*_F.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af72e9e222aab86d695225d4d440a1bf66fadff8", "commit_date": "2017-05-07T00:26:28Z", "commit_message": "build: 2.6.4 is previous version", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "385766c5cff544f2f96040e01a0be217a161a7ce", "commit_date": "2017-05-06T20:54:54Z", "commit_message": "build: ignore .sig files.\n\nWe generate gpg signatures in place for releases. Since these should\nnot be tracked in the flex repo itself, we tell git to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dfc45ef5a3134f6602e3b1784649b50958d100f", "commit_date": "2017-05-06T20:53:14Z", "commit_message": "build: no longer ignore *.tar.bz2\n\nSince we no longer generate *.tar.bz2 archives, we do not need to tell\ngit to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "master": [{"commit_oid": "f2567970b0a3e44429dc3e900e9501db5cbe2c0f", "commit_date": "2023-09-18T15:12:07Z", "commit_message": "chore(deps): bump the github-actions group with 1 update\n\nBumps the github-actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).\n\n- [Release notes](https://github.com/github/codeql-action/releases)\n- [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/github/codeql-action/compare/00e563ead9f72a8461b24876bee2d0c2e8bd2ee8...04daf014b50eaf774287bf3f0f1869d4b4c4b913)\n\n---\nupdated-dependencies:\n- dependency-name: github/codeql-action\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0b6c791ba1919f02b64a35407b59a9591fafa0", "commit_date": "2023-09-06T14:49:51Z", "commit_message": "Fixed issue #416: Made YY_DO_BEFORE_ACTION a do-while loop to fix -Wextra-semi-stmt warnings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6db99ccd7aca802e1f9fe394d2b0a5a58b077188", "commit_date": "2023-09-06T14:44:07Z", "commit_message": "Add dependabot to keep Actions updated\n\nSigned-off-by: Pedro Kaj Kjellerup Nacht <pnacht@google.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac962cd512611374d73adf0a2461015cfb8c9927", "commit_date": "2023-09-06T14:44:07Z", "commit_message": "Hash-pin GitHub Actions\n\nSigned-off-by: Pedro Kaj Kjellerup Nacht <pnacht@google.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7d1c54362949978ca0d35eda8fd2fb734014758", "commit_date": "2023-08-22T15:35:15Z", "commit_message": "typos", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2fae24fa3d1678fcd7fcf81c3ec035962f2cebd", "commit_date": "2023-08-22T15:23:54Z", "commit_message": "Fixed typos", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "541645a888de0888af6ca84a196e50bd594d5b47", "commit_date": "2023-07-11T20:40:23Z", "commit_message": "doc: fix typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a97872a31146ddbd652994f3b05a7e86705a89c2", "commit_date": "2023-06-05T14:29:18Z", "commit_message": "Fix pattern documentation for case-insensitive ranges", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b38ae28e7ee881d6d1dc28ac83d94aba1245871", "commit_date": "2023-06-05T11:04:59Z", "commit_message": " ci: Add read-only permissions to workflows\n\nSigned-off-by: Pedro Kaj Kjellerup Nacht <pnacht@google.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a3022d064a87125dfa90d07765bd94d897ffc297", "commit_date": "2023-06-05T11:02:59Z", "commit_message": "Fix README typos\n\n* Update README\r\n\r\n* patch 1.5", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d30bdf45a88d59ae9fd2c893671dfa87f7363797", "commit_date": "2023-04-07T14:05:10Z", "commit_message": "fix(build): build man page when cross compiling\n\nfixes #560", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a4bac0b29c39d996adbd927d7164d2fb4b616d6", "commit_date": "2023-03-30T19:40:11Z", "commit_message": "doc(contrib): Alphabetize commit types\n\nThanks to @Explorer09 for the suggestion!", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2bb3bfd64f500a11baa2ad08396e4f71c7005923", "commit_date": "2023-03-30T19:40:11Z", "commit_message": "docs(contrib): Add CONTRIBUTING.md to EXTRA_DIST.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b822e533e1aa12f492560c4d3db2114c98b665d9", "commit_date": "2023-03-30T19:40:11Z", "commit_message": "docs: Add CONTRIBUTING manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3aedd286708aa4b5ac66238c54ffc5bb06103c23", "commit_date": "2023-03-15T17:36:52Z", "commit_message": "remove unused DO_COMPARISON", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3352d7f1c95ca5b9ddfe19bca126254c71ca1088", "commit_date": "2023-03-13T15:49:21Z", "commit_message": "Correctly refer to ctrl.traceline_template:\n\nThis was refactored in 0e32cd, but left a dangling reference to the\nprevious location here.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a57e165cc50265e6ca1f6e12313e3154c6a6f96c", "commit_date": "2023-03-09T19:45:08Z", "commit_message": "Fix #539 crash on Apple M1 by casting 0 to (char *) explicitly\n\nCurrently, when the NULL-terminated variadic function\nfilter_create_ext() is invoked, the value \"0\" is passed as\nthe last argument to act as a terminator. However, this is\nan integer value, which is incompatible with the pointer\ndata type expected by filter_create_ext().\n\nThis is undefined behavior in C, correct operation is not\nguaranteed. In fact, it causes flex to crash on Apple M1\nwhen GCC is used - the loop is not terminated when it should,\ninstead, it keeps running, corrupting the argument list for\ninvoking m4. As a result, it creates the following error:\n\n> flex: fatal internal error, exec of gm4 failed\n\nThis commit fixes the problem by explicitly casting the value 0 to\nthe correct pointer type (char *).\n\nSigned-off-by: Yifeng Li <tomli@tomli.me>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74e8c880fc043b765a5b2ea7ccdfee252d38beb4", "commit_date": "2023-03-09T19:41:26Z", "commit_message": "test(quotes): Add after action comment tests for m4quotes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1c2570502c40b9bf2f901afa7bb5355b9f43fa0", "commit_date": "2023-03-02T01:52:25Z", "commit_message": "removed output-beautification of YACC and INDENT\n\nper request from @Explorer09\r\nsaving one code line and its comment two times", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bf591762208198aac58fee8dff690ec3fd486e2b", "commit_date": "2023-03-02T01:52:25Z", "commit_message": "remove hard-wired bison lookup, check for \"GNU Bison\" in $YACC's version output instead\n\nadditional:\n* don't check for GNU indent if indent-check already found no indent\n* use common wording to check \"*whether* $BINARY is GNU stuff\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e34253f1caf301024e2c1e48f3aeca29bd43f5d6", "commit_date": "2023-03-02T01:47:23Z", "commit_message": "typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e69eff334b7fb05353817bae5a65acfd8d0c9ad", "commit_date": "2023-03-01T14:46:26Z", "commit_message": ".gitignore adjustments for WIN32", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf66c9e5f1af02c4b6f9fb5a10f83e28143a22d4", "commit_date": "2023-01-15T14:46:49Z", "commit_message": "doc(NEWS): mentioned new ka translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06adbc6f0fb04fea2cd162b2eb5d0be759e1df02", "commit_date": "2023-01-15T14:46:49Z", "commit_message": "doc(gettext): added new ka translation from translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac1dc0d757a873183ec2563bcf56570501daeb5e", "commit_date": "2023-01-15T14:40:44Z", "commit_message": "doc(gettext): updated eo translation from Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b746b2c3f6e1fa495867520dbf764e4dcdda5a87", "commit_date": "2023-01-15T14:40:44Z", "commit_message": "doc(gettext): added new eo translation to NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a24fa0366b4ac007c32a51dca99b5fc3755143c", "commit_date": "2023-01-15T14:27:49Z", "commit_message": "Merge pull request #399 from Explorer09/autotools-version\n\nbuild: correct and document minimum Autotools reqirement in configure.ac", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ec57cf108db178b13ec0baa6e7bf7f6424658bd", "commit_date": "2022-09-28T11:06:59Z", "commit_message": "tighten up markdown in INSTALL.md", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "853c232b7e41693158ae357f4591aef7c93a6fc3", "commit_date": "2022-09-28T11:00:11Z", "commit_message": "rename INSTALL to INSTALL.md", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13a2f02b80e383e8effc4d7fb844f9642623c911", "commit_date": "2022-09-28T10:57:11Z", "commit_message": "update and reformat installation instructions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c49f7e585acb337a0940a8fa80cebc5a1f3aa48", "commit_date": "2022-09-27T20:50:19Z", "commit_message": "Documented building and installation of flex\n\nSince GNU autotools no longer provides a stock INSTALLATION file, we provide one that speaks to flex specifically.\n\nfixes #402", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f5cd60976de92aaa61e6364cec7349a260c79a2", "commit_date": "2022-09-27T18:22:07Z", "commit_message": "updates from translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea6493d9b6f1915ba096160df666637a6e1b3f20", "commit_date": "2022-06-17T11:57:52Z", "commit_message": "Merge pull request #527 from Mightyjo/issue-525\n\nFix Issue #525 - Segfault in yyinput", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1a5285cbf368be75a5108081178ceb861d72030", "commit_date": "2022-06-17T11:54:37Z", "commit_message": "Merge pull request #529 from ggujjula/issue_369\n\nAdd documentation about option '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cba28b65b6f3e54548b29358d249e73b6e4534c", "commit_date": "2022-06-17T11:52:11Z", "commit_message": "Merge pull request #528 from xiaohanyu/fix-doc-error\n\nfix some tiny doc errors.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1656033045225767dd312ec24b067a9857084b69", "commit_date": "2022-06-17T11:46:28Z", "commit_message": "Merge pull request #531 from Explorer09/flexint-include\n\nAlso check for C++ standard version when deciding to include <stdint.h>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ab4ea7364641bf498ea2fc8c1078b9f871ae0ba", "commit_date": "2022-06-17T11:35:49Z", "commit_message": "Also check for C++ standard version when deciding to include <stdint.h>\n\nFixes: #517\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0e7091dc76d67a5b60647e4e0ddb45f8d7fa8bb", "commit_date": "2022-05-31T06:19:47Z", "commit_message": "Add anchors and refs to areas relevant to '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16ff9d01339a7ecd859ee619a8496ca878a3eb70", "commit_date": "2022-05-31T06:19:35Z", "commit_message": "Add documentation for option '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7535b35bf1dcf38ff449296741fcd85d0d491340", "commit_date": "2022-05-26T13:00:47Z", "commit_message": "fix some tiny doc error.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4581eccf1e9cb5c2b0646854a5b5b2024c4b602b", "commit_date": "2022-05-18T15:15:49Z", "commit_message": "fix(issue-525): Fail gracefully when yy_get_next_buffer can't find one.\n\nDemonstrate yyinput() error checking for this condition.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d9a039c31d1159fca492bf770403deef4c05cd2", "commit_date": "2022-05-18T15:13:46Z", "commit_message": "fix(issue-525): Add regression test for Issue 525.\n\nyyrestart should not set yy_fill_buffer to 1 when it was previously set to 0 (e.g. by yy_scan_buffer).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74a89fd6abf178f50f180f228613345682f7fd18", "commit_date": "2022-05-16T19:59:30Z", "commit_message": "Merge pull request #513 from ggujjula/issue_398\n\nIssue 398; Documentation fix; Additional command-line options", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00bfa85257ea06d55d9da7dcccda0a6083d9f067", "commit_date": "2022-05-16T19:55:38Z", "commit_message": "Merge pull request #524 from Mightyjo/issue-521\n\ndoc(manual): Character classes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c0345cc2823058ffd57428e5d3d462758a242f7", "commit_date": "2022-05-16T19:48:15Z", "commit_message": "Merge pull request #523 from Mightyjo/github-ci\n\nGitHub Actions (Replacing TravisCI)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2bacaef4cf8ab274edfa87fbb11dfb5bba5d17f0", "commit_date": "2022-05-11T21:41:53Z", "commit_message": "doc(manual): Correct character class examples and special meaning discussion.\n\nSee Issue 521 and 478.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "342104d61be15342898e9f2fbb9b99960d183dce", "commit_date": "2022-05-11T20:14:22Z", "commit_message": "chore(ci): Remove testing configs from GH Action workflows.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a42e91987d5a138a0e03b11fb05595987f31045", "commit_date": "2022-05-11T19:41:54Z", "commit_message": "chore(ci): Update GH Actions scripts to Ubuntu 20", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cdd61549d057a41fef1620cc000e90cb443e175", "commit_date": "2022-05-11T18:55:43Z", "commit_message": "chore(ci): Enable GitHub Actions on github-ci branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87ff2861e6e57148b307b9ff82fb557d498997e1", "commit_date": "2022-05-11T18:47:30Z", "commit_message": "chore(travisci): Remove Travis CI configs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0c76652f7bf3221f2bc5a15137aedfe2c278969", "commit_date": "2022-05-11T18:47:30Z", "commit_message": "chore(gh-actions): Build and test on GitHub Actions CI platform.\n    Use ubuntu-18.04.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fe96958fa3d730f6adcac5979a57f03b705a196", "commit_date": "2022-01-03T17:35:03Z", "commit_message": "new pl translation from the translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1677eff252854d10b29dd50d7fc520f763340f5e", "commit_date": "2021-12-29T22:47:43Z", "commit_message": "Add command-line options --noyyget_debug and --noyyset_debug", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c947396cda32f6f1f430fb3b128b7ecf0446498b", "commit_date": "2021-12-29T22:31:18Z", "commit_message": "Replace mention of input() in documentation with yyinput()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1565a740dbeb8284c6ad09cf712df6e6b3c8ffe7", "commit_date": "2021-12-29T22:23:14Z", "commit_message": "Add command-line options --noinput and --noyyinput", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "974bb68e107b93511051fb5744d54a95667e12e0", "commit_date": "2021-10-24T03:07:14Z", "commit_message": "Remove trailing whitespace\n\nMany projects have pre-commit hooks that check for pedantic things like trailing whitespace. No harm in removing it to pacify them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ea145a7e6c0b15270b0ea913e8afbbdc516f6ea", "commit_date": "2021-08-13T15:37:10Z", "commit_message": "Merge pull request #491 from Mightyjo/issue_469\n\nIssue 469; Compute length of yy_state_buf correctly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eac09011867e1c6afc9f0da028b82553a2d479f2", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "chore(action): Clean up dead code\n\nLeave clear instructions on what to do if the Autobuild step breaks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e864186c577bfcb12c0e148a437930e4a5a6cc2a", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "fix(action): Let Autobuild do most of the work\n\nTry preparing configure with autogen.sh, then letting codeql-action/autobuild do it's work prior to analysis.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af75357b170ee7c7a67e911e31fef66dc6798332", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "Update codeql-analysis.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fceec5d95a206745bf100c16f34f68201a9a03fd", "commit_date": "2021-07-02T22:52:14Z", "commit_message": "chore(skel): Fix permissions on cpp-flex.skl", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cccc82072c425bd5c7c2a0082225c7f01e4f67e", "commit_date": "2021-07-02T22:49:38Z", "commit_message": "chore(skel): Improve comment at state buffer init.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79da5dfa0fb837f97b1f1d71377a83efa90c8081", "commit_date": "2021-07-02T22:46:52Z", "commit_message": "fix(skel): Init state buffer correctly\n\nState buffer initialization in cpp-flex.skl got lost during a rebase. Added it back in from c99-flex.skl and made improvements suggested by smcpeak.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8100144eb4e2b5e82476a958ab9690ebccb54ee6", "commit_date": "2021-07-02T21:53:29Z", "commit_message": "chore(perm): Fix permissions 755->644", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b198864a75f73f1a125a048919fa849710d10fe0", "commit_date": "2021-06-22T18:27:20Z", "commit_message": "fix compile warning originating in cpp skeleton\n\n`gcount()` is of type `streamsize` which has a system-dependent size with at least `int`. Because of the `int max_size` limit no bigger value will be returned, the explicit cast fixes warnings from compilers/static analyzers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab783a0b996a91cae2522a7b37edecf142e88f34", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "chore(make): Ensure distcheck cleans up directories.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50819bb82a87e4e310690ce5a90ab798c50e2093", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Fix porting errors from the cpp to the c99 and go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d128474a79a1e781a67076c751ab773c11c65e2", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Use yypanic in place of YY_FATAL_ERROR.\n\nyypanic() is new in the c99 and go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "988d379eb082423274381656863c804b00f82427", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Add state buffer size handling to reentrant scanner skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "916636cb96a2334ca4c403f8ac293e202f72ca37", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "chore(test): Declare script variables before use.\n\nFor set -euvx", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1ed12a1b0355021c75e7aecaacc2a64dd11eb97", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Add state buffer size handling to non-reentrant scanner skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e61f190ef6d44e317bf4c28ec48c21779efab746", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Ensure size of Reject state buffer is sufficient each time yy_switch_to_buffer is called.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "379af7681d10ae78f4f334ec555d1f9e64123361", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Don't use C++ auto, it angers TravisCI.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4162d3653d07a55e05891d986da2a1a92386331", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Fix test failure on TravisCI.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "470c8a201ff2075f2e46823e68a0feafe6d5e097", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Test for reversion of CVE-2006-0459.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e6ad373b83473d2784133323eb42109e420f18b", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Test for reversion of CVE-2006-0459.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b073fdda2242a8e4a0f70244c0ae83d34f099b1", "commit_date": "2021-06-08T15:11:28Z", "commit_message": "Merge branch 'yy-init-buffer-nonnull' of git://github.com/Explorer09/flex into Explorer09-yy-init-buffer-nonnull", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60c4453b6ac1e29dbe039216ed948108eb9c6701", "commit_date": "2021-06-07T01:30:46Z", "commit_message": "scanner: Fix compiler confusion in yy_init_buffer()\n\nWhen complied with 'gcc -O3', the yy_init_buffer call can confuse gcc,\nthinking the 'b' pointer may be NULL. (gcc would warn that if\n'-Wnull-dereference' is used). Fix the confusion by never pass a NULL\nconstant to the function.\n\nFixes: #377\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dada40b50f6b5121ce439245815216d52afb537e", "commit_date": "2021-06-07T00:39:52Z", "commit_message": "Remove manual m4 search code. No more stat() dependency.\n\nThis reverts commit c34590c4bf067d4e749e5298a8ce9f90072d6332\nand all search code patches that followed it.\n\nThe execvp() would do the $PATH searching of m4 for flex. There's no\nneed to duplicate the effort.\n\nAnother reason for the removal is to remove dependency on stat()\nsystem call, which would cause a problem in a 32-bit OS accessing a\nfilesystem with 64-bit inode number (see #413).\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c26cd7bc13b30fcfafe394330f3fe70672d9e47a", "commit_date": "2021-06-05T18:37:20Z", "commit_message": "Merge branch 'autogen-sh' of git://github.com/Explorer09/flex into Explorer09-autogen-sh", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83aaf1b4ce146f0c2f7cf18e932457d5dba039b1", "commit_date": "2021-06-05T18:21:51Z", "commit_message": "Merge branch 'doc_fix_typo' of git://github.com/houtanb/flex into houtanb-doc_fix_typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb2e0aaccaa9b17dc00362fbac5aa294da466d64", "commit_date": "2021-06-05T15:36:21Z", "commit_message": "Merge branch 'westes:master' into esr_retargeting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bd5b0213a7fa2abb01cd9410886d6d5cc5768f7", "commit_date": "2021-06-05T11:24:00Z", "commit_message": "Create codeql-analysis.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d5d2dd4afdfe4f4cfb10556ffda540a34b92bd0", "commit_date": "2021-06-05T05:29:41Z", "commit_message": "chore(test): Clean up debugging in tests", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5772bb456e50299421cbd0da38d20ace9699d1e7", "commit_date": "2021-06-05T05:14:26Z", "commit_message": "fix(test): Re-add posix test input to repo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e893215c51fb0a8afa8d5be0c8965eec522733a", "commit_date": "2021-06-05T05:08:37Z", "commit_message": "chore(test): Enable shell '-eu' strictness", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90713678d88fd3d2bca71d8913de6f0e7ba9a681", "commit_date": "2021-06-05T04:46:26Z", "commit_message": "chore(test): Regenerate ruleset.am", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "455d913d34dd2bee32bdbeb1d68ac70cfd5ad8e4", "commit_date": "2021-06-05T04:29:05Z", "commit_message": "fix(test): Make test generating scripts work in VPATH builds", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aeb2cb553974b752f99de33a6951c815f44cb720", "commit_date": "2021-06-05T04:26:47Z", "commit_message": "fix(test): Re-add test inputs to tests/\n\nGenerating these test inputs on the fly breaks VPATH builds and 'make distcheck'.\nGlad we have a lot fewer of them now, at least.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fa412a3d95b3c2168dca1a4ad9139d273207756", "commit_date": "2021-06-04T04:37:59Z", "commit_message": "fix(build): Set texi2* include paths for VPATH.\n\nOverride the TEXI2DVI and TEXI2PDF automake variables to add an include directory so VPATH builds work.\nI'm not thrilled with doing this. The right thing is probably to move the included examples to doc/ and do the\nVPATH magic in examples/manual/ where LaTeX is better able to deal with it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46299d7dbc53be696b59bc7846bc0d9634349876", "commit_date": "2021-06-04T04:34:40Z", "commit_message": "fix(build): Expand wildcards in Makefile.am.\n\nWildcards were causing automake to generate spurious build targets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6472493e20fc1e604592b7a698f85e515d97856", "commit_date": "2021-06-04T04:33:30Z", "commit_message": "fix(build): Replace wildcards in Makefile.am.\n\nWildcards were causing automake to generate build rules for the *-filename dummies. They're not generally portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e50f889082e8a5ee301222b0495ad3d6aa312506", "commit_date": "2021-06-04T01:56:59Z", "commit_message": "fix(build): Prevent automake computing default _SOURCES for tests.\n\nAutomake attempts to compute default _SOURCES for the test-yydecl-*.sh runners generated by test-yydecl-gen.sh. Providing an intentionally empty _SOURCES variable for each script fixes the attendant errors.\n\nAlso removed EXTRA_DIST lines for deleted test inputs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a297d520ae8f0d718a7aab5975550eb8dc1f2cae", "commit_date": "2021-06-03T00:17:38Z", "commit_message": "Merge pull request #16 from eric-s-raymond/retargeting\n\nReviewing ESR's Retargeting branch from westes/flex", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d93876e2249adec9e3a1e8f02e28bdf9a64e4c1", "commit_date": "2021-02-05T12:33:45Z", "commit_message": "Remove prrequisite from .l.go suffix rule\n\nautogen gets indigestion iv you give a suffix rule a prerequisite,\nso don't do that.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5960fabbac43191b424c56a7cbb8befbff5dd42", "commit_date": "2020-12-04T16:31:27Z", "commit_message": "Go back end: More Goification of names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33bd31b74b23f5ba01046b3a492adb29acf75fc2", "commit_date": "2020-12-04T11:49:26Z", "commit_message": "Portability fix in tests - not all languages have ++ and --.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b022d451d83a285b1bb41d5f41692ee2ef29b16", "commit_date": "2020-11-26T21:47:37Z", "commit_message": "check that each skeleton we build has the correct number of sections (#7)\n\nProbably we could turn the section markers into m4 macros, but until\r\nthen this will prevent accidents.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5c3fcfb3ebacd2f98d508bbc00965afa60f1203", "commit_date": "2020-11-26T21:24:28Z", "commit_message": "Mollify picky C compilers some more (#8)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b528c7efdc06ec59ce354d9db63a475514884a10", "commit_date": "2020-11-26T12:25:25Z", "commit_message": "Improve standards conformance in C99 and Go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f1c6960ceea2903153e2d5d7a41bfe9b6808072", "commit_date": "2020-11-20T12:32:35Z", "commit_message": "Deal with a GCC warning elicited by upgrade to GCC 10.2.0.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd0fb2920b15fc7a5432c49299d3aad044ef1608", "commit_date": "2020-11-20T12:32:35Z", "commit_message": "In the Go back end, more moves towards Go conventions.\n\nAll documented in the go-flex.skl header comment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b3f8db536f318b272b24ca83523ea5aa61580aa", "commit_date": "2020-11-20T10:52:06Z", "commit_message": "Improve information hiding in C99 and Go back ends.\n\nThings that don't need to be declared before that DFA\ntables shouldn't be.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d6d37f246be553cb7fd68fe806549cafc174316", "commit_date": "2020-11-20T09:52:32Z", "commit_message": "In the Go back end, begin Go-ifying the public interface.\n\nstruct yyguts_t becomes FlexLexer typedef.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a9a913893c2c8309fb0f9ea9ab8e2331e5ba9dc", "commit_date": "2020-11-19T23:26:48Z", "commit_message": "Eliminate forwards in the C99 back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75da1e1d8a8dc0b89803495b951627e76e821822", "commit_date": "2020-11-19T22:33:02Z", "commit_message": "In the Go back end, elimate some forwards.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df34448330392a583a878b6a9990c63dde5aa412", "commit_date": "2020-11-19T22:07:37Z", "commit_message": "More Go back end cleanup.\n\nRemove the Bison-bdidge kludge.\n\nRearrange yyguts_t so the public members are grouped together.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "820199d2a90d01d9f06b57d0c56be6512788e7fa", "commit_date": "2020-11-19T14:29:22Z", "commit_message": "In the C99 and Go back ends, rearrange code...\n\n...to clean out a forward declaeation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c37e76ca59bd6d8828786121552d8c9b3b7f781", "commit_date": "2020-11-19T13:54:42Z", "commit_message": "Improve type checking in c99 and Go back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1105abd8bd914c86c9a8e75330c501b227f1b56", "commit_date": "2020-11-19T13:46:41Z", "commit_message": "In the Go back end, more moves towards Go-like names.\n\nNot touching the public interface yet.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e502c5d485dbba21b81692d1ae8305a3378f0bff", "commit_date": "2020-11-19T06:55:55Z", "commit_message": "More massaging of the fake Go skeleton in the direction of Go.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ce66818db5a26f2e3f20e9232b40278174b8e443", "commit_date": "2020-11-19T06:28:58Z", "commit_message": "Stop emitting unbalanced markup in the skeleton.\n\nIt was fixed up by generating matcing unbalanced markuo in dfa.c,\nbut a good idea this was not.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b0503e1684bcb7d586678fefce270f5f64e8ceb", "commit_date": "2020-11-19T06:20:31Z", "commit_message": "In C88 and Go back ends, remove remnant GENTABLES conditionals.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48a25d4966b68fa289dd66744bcef9467b9b9c17", "commit_date": "2020-11-19T06:00:11Z", "commit_message": "Partial move of Go back end to Go canelCasing in names.\n\nNo publicly visible names are touched yet. This is all preep work.\nAll tesrs pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "866e31dafd017755fe3e7fcf59e8a89a1accb4df", "commit_date": "2020-11-18T05:02:04Z", "commit_message": "Go back end: Change the prefix option to set Go package name...\n\n...presebtly commented out.  All tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d15dfae9cf386c9871dda39838fcef7827c4d2", "commit_date": "2020-11-17T12:28:40Z", "commit_message": "TYhis commit is a model for how to add a new back end.\n\nBegin the Go back end. Right now it's a fake that generates C...\n\n...but this commit puts all the build and testnmachinery in place\nfor when it's not.  All tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be50e74b5c58c786592948b22f389c95139ed5a4", "commit_date": "2020-11-17T10:52:08Z", "commit_message": "Improve cleanup of generated .txt after tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eaf12696afcf66668618ad3f2bdba854d919f3a4", "commit_date": "2020-11-17T10:42:50Z", "commit_message": "Convert the debug test to be ruleset-based,", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2a64fa1746c3a7d515a2bb1ab7bda9462bec10c", "commit_date": "2020-11-17T05:07:07Z", "commit_message": "Rename some rules files to make maintaining .gitignore simpler.\n\nDue to some limitayions in git ignore wildcarding.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52e6bb3e84d5ab23c692cc7636c01b486ca1bb71", "commit_date": "2020-11-17T04:24:30Z", "commit_message": "Fix error in testnmaker: shell case alternations evaluate easrky.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b068bede45b84ed80dac7f7d1943e093bf42bef4", "commit_date": "2020-11-17T00:36:31Z", "commit_message": "Merge remote-tracking branch 'westes/master' into retargeting\n\nAll tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad9f2d493ebd3ae9eabdb9bd62043909394af484", "commit_date": "2020-11-16T22:55:59Z", "commit_message": "In C99, remove unneeded forward declarations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "654ab2012f9345798ef3a214ccb6ebd1f1b4d12d", "commit_date": "2020-11-16T22:32:40Z", "commit_message": "Up-gun a test to use the lineno code in the array+BOL case...\n\n...and fix the bug that turned up.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a67532dd5799676b9e1629b8fd2dc9f526383e09", "commit_date": "2020-11-16T11:10:47Z", "commit_message": "Remove now-unused parts of test/testwrapper.sh.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22b9ea63bdc0a7ac1f9b8593cf19887cbe1d22fc", "commit_date": "2020-11-16T10:54:38Z", "commit_message": "Remove the \".one\" category of tests; they've been replaced by rulesets.\n\nThis reduces the complexitry of the test machinery as well as making\ntests less backend-specific.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0f53f6930bb3d8fc8878e3fc9996b95d59a6b4f", "commit_date": "2020-11-16T10:32:38Z", "commit_message": "Remove now-unused SOURCES declarations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eacb312e5b9868dba734996d6c72fc60e0d75036", "commit_date": "2020-11-16T09:51:00Z", "commit_message": "Improve instrumentation of test failures.\n\nAlso, yyinpt.txt is generated and does not need to be checked in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709c1724ed74bee614c9e35b99d630396822f8c3", "commit_date": "2020-11-16T03:37:24Z", "commit_message": "Repair some bitrotted variable-trailing-context code.\n\nIt decayed because the test for this feature only exercised the nr\nback end. We add a ruleset--based test to verify on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df632cf2eb1e1def8f63d08d54055862ac6d8978", "commit_date": "2020-11-15T17:24:35Z", "commit_message": "Fix typo revealed by Go porting work, and improve test coverage to match.\n\nWe a ruleset test for BOL matching and a test for the array case of yymore.\nImprove yymore testing by adding tests that require a BOL match in\nboth array and pointer cases.\n\nAlso, convert lineno sporadic test to be ruleset-based so it's\napplied on all back ends.\n\nNo cide changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3603f033509d5a214b603f60ce4dd6ed7819843e", "commit_date": "2020-11-13T13:23:10Z", "commit_message": "Minor build system fixes before starting the Go port.\n\nRemove two dependencies that the C99 back end no longer has.\n\nRepair to force in-time building of skel.h files.  This way of doing\nit reduces where a new skel dependency has to be declared in the\nvuilld recipe to the one spot where the flex.h file is made from the\nflex.skl file.\n\nThe posixly correct test only needs to be done once, since it only\naffects how the tables are genetated rather than setting code\nconditionals in the back end.\n\nAlso, some comment typo fixes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a48798ca94c0afd8ff5b5e2e26948948352a2ad", "commit_date": "2020-11-12T23:45:54Z", "commit_message": "In C99, more rearrangement to make public API calls visible in actions...\n\n..,without resorting to forward declarations. Last C99 cleanup before\nthe Go port begins.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3e0d791eaca3485dadfcb84530f23c360f61ec9", "commit_date": "2020-11-12T15:49:10Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "110899d69e54c206d599fae07480ddb6720d7ce2", "commit_date": "2020-11-12T14:53:26Z", "commit_message": "Clean up test/Makefile,am's EXTRA_DIST.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa6a0fc6665b5315fb72903f8b3d27cbde61901d", "commit_date": "2020-11-12T13:37:50Z", "commit_message": "Declare that rulset.am depends on *.rules files...\n\n...for automatic remake when a new one is added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1991ad515f102d2eeb858180d7aa2f6b9344da5e", "commit_date": "2020-11-12T12:53:29Z", "commit_message": "Fix another carnivorous typo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c8b6c1c1fb714ced0b43d945116f960bbe4136a", "commit_date": "2020-11-12T04:15:55Z", "commit_message": "Clean out some small C dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a973b0efd8b1860244323e4af34fceb6d1eacef", "commit_date": "2020-11-12T03:52:47Z", "commit_message": "Booleanization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43aed9f0c9d9ee82646a1985fdee2e1bb213b352", "commit_date": "2020-11-12T01:57:39Z", "commit_message": "Typo fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b27cb2366bab475d56b9ec530c7ea63ef9f98bb", "commit_date": "2020-11-11T23:37:31Z", "commit_message": "Fix two minor m4 errors found by Daniel Brooks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01850d3ba1f1d0bbfe45a24331fba2192da1f321", "commit_date": "2020-11-11T23:13:15Z", "commit_message": "Eliminate almost all forward declarations from C99.\n\nOne less C-ism to deal wit h when porting to a new target languages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3854cd2c67e31ddfacfe5a6b3aba1347e63be420", "commit_date": "2020-11-11T11:52:49Z", "commit_message": "Add a test for trailing conyext rules.  Fix the bug it turned up.\n\nAlso, roperly condition some variables related to trailing contexts.\nMakes generated parsers ever so slightly smaller in this case.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab32ad65bb13eff5c1210c56d564af2c71516262", "commit_date": "2020-11-11T00:56:39Z", "commit_message": "Repair some markup damage in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2056b2184d018c919b63abd26f1784ebf47077ac", "commit_date": "2020-11-10T12:33:10Z", "commit_message": "Add a trailing guard to the magic-rewrite recignizer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87686ff2fbb94978f8c8bf9dc79284bfcd8343a1", "commit_date": "2020-11-10T11:55:22Z", "commit_message": "Successful elimination of preprocessor dependencies fromm C99 skeleton.\n\nThere's only one left. in the prefix code.  We leave that in place\nbecause ity will be needed if we ever want to replace the default\nC back end with C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b68eb3634f1b9edc9e7d35f932661d0ba2a7e7c", "commit_date": "2020-11-09T20:39:49Z", "commit_message": "Change two member names to make rewite rules easier.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa782b6233e0914591b0e967d1662449744e9497", "commit_date": "2020-11-09T09:26:56Z", "commit_message": "Explain why 3 API functions don't have magic rewrite rules.\n\nThe functions are: yy_current_buffer(), yy_flush_current_buffer(), and\nyy_set_interactive().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2995af0eeb3792506f2b9975788443f67ac4b389", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "yy_flex_debug -> yyflexdebug.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db1dca76c1fd042516661218ba588a0aae682587", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "Make the rewrite flag visible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "191d7068c3045e3a966800428d64881590cf61a5", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "Fully m4ize yymore()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8aabc897cd0729b9961b8b919a6ed7331cc32aca", "commit_date": "2020-11-07T06:48:56Z", "commit_message": "Add a test for yymore, and fix a bug it turned up.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec140e6477c4bcd09ae6e92b24c351e8f006e0cd", "commit_date": "2020-11-06T17:04:20Z", "commit_message": "m4ize yyreject() handling.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d056db08e660c7513b5d57985e09c5a7e3e3e4b4", "commit_date": "2020-11-04T11:43:47Z", "commit_message": "Fix errors that were masking problems with yyreject().\n\nEnsure that derived skel.h includes are removed on every clean.\n\nFix a bad shell line that prevented proper cleaming of derived *.c\nfiles from tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9414d653c78baf0c795584aeb6404a863494994", "commit_date": "2020-11-04T07:40:37Z", "commit_message": "Revert \"Successful m4ization of yyreject().\"\n\nThere seems to be something in the build recipe or test system that\nmakes the yyreject test unreliable.  Reverting until I figure out\nwhat.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b27be4b2ef4fb44eda1ee0ff76a960c4d7b0819", "commit_date": "2020-11-03T17:58:06Z", "commit_message": "YY_AT_BOL() -> yyatbol(), yy_set_bol() -> yysetbol(), and make them magic.\n\nThe tradeoff is a bit delicate here; yy_set_bol() did not strictly\nspeaking need to change. On the other hand, squeezing the underscores\nout of YY_AT_BOL() but not yy_set_bol() would have been exactly the\nkind of irregularity that people trip over and curse.\n\nThe underlying issue is of course languages like Go and Python with\nvalidators that get upset by all caps and embedded underscores. On the\none hand, we want to not be churning the Flex API gratuitously.  On\nthe other hand it is desirable if as few entry point names as possible\nneed to change in different target languages.\n\nThe approach I'm taking to deciding this question in individual cases\nis this: if an entry point name is likely to appear in actions, and\nmust be recognized as magic by Flex itself in order to have a final\ncontext argument added or an object reference prepended, then it must\nbe multilanguage-safe - not all-caps and no underscores.\n\nAny name that does *not* need to be wired into Flex can be left\nalone. Users may have to change it when they port.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e6b59bb7ac98ab3eba374f6b44a6fa1e16c65ba", "commit_date": "2020-11-03T16:11:58Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35cdc7cabe0dc8733cfb1e8a76c868c8d7c71d26", "commit_date": "2020-11-03T07:00:09Z", "commit_message": "Implement and document the rewrite/norewrite option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2f38557eea8c18bc087d56e5afe74fe9728ded9", "commit_date": "2020-11-03T01:35:28Z", "commit_message": "Pull two random flags into the ctrl structure.\n\nAlso, some documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb6e30e9d51236f491785e7ba5537752be2c9ced", "commit_date": "2020-11-02T10:58:28Z", "commit_message": "Successful m4ization of yyreject().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22d0a5d19265bf1fbc507e39bf53d63d98817f7c", "commit_date": "2020-11-02T06:33:46Z", "commit_message": "yyless is successfully m4ized.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6499117d78f332a04e784778aff25cf9a99ab82", "commit_date": "2020-11-01T22:38:58Z", "commit_message": "Add a test for yyless.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9002f8f936c91c3907945df037712f809fe65e7", "commit_date": "2020-11-01T17:55:35Z", "commit_message": "Simplify and generalize the testmaker macros.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1d12f0cd72dc10b16436c17ef38dfa99b21286", "commit_date": "2020-11-01T08:54:07Z", "commit_message": "Portability improvement on the extended test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f449b421192edaebfdb1da0f29e69179493b00a", "commit_date": "2020-11-01T08:53:46Z", "commit_message": "shellcheck cleanup on all scripts. Turned up a minor bug in testmaker.sh.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a53aec8e86c4e62fe6c0ac48abd893dec502ef19", "commit_date": "2020-10-31T22:19:29Z", "commit_message": "Rulesets now carry their test loads with them.\n\nMakes it easier to see what the tests are doing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b5ef23d7043366b887d2207b5d085c25acbd6c7", "commit_date": "2020-10-31T15:59:59Z", "commit_message": "Modify the reject.rules ruleset so it actually tests yyreject().\n\nThis turns up the fact that m4ization of yyrehect() didn't work, so\nwe back that change out.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fe9c68941a7c74f461658c70c12fe886438d505", "commit_date": "2020-10-31T09:15:37Z", "commit_message": "m4ize handling of yyterminate, and translate another stray #define.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "076ee33fc4a815f8a35ff88c56944cdeb5b692d6", "commit_date": "2020-10-31T03:06:57Z", "commit_message": "More small steps towards taking cpp out of the required pipeline.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48d47f6423b2596e666ab96e4eaad2a8602d9ff8", "commit_date": "2020-10-31T03:06:00Z", "commit_message": "Convert yyreject() from a cpp macro to an m4 macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4de7a57a7f585f9570ddc2d9c8974f3ee01f4cc", "commit_date": "2020-10-31T02:32:28Z", "commit_message": "Fix a minor bug in gathering removables.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cc8835d3ce5924e369c4a6f542fc5e736643cac", "commit_date": "2020-10-30T00:34:14Z", "commit_message": "Add %option bufsize, required for testing under non-C targets...\n\n...since we can't count on the C preprocessor to do it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95efae546902ea23fb46aed9f26181e1b2cb2f6f", "commit_date": "2020-10-29T21:48:32Z", "commit_message": "Abolish a platform microtweak after consulting with Will Estes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bf1889ca76d66c37d8ea01c087a693aa296b5c6", "commit_date": "2020-10-29T21:19:47Z", "commit_message": "More de-preprocessorization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59c26779eb4e10130658f8067566c6813a086c54", "commit_date": "2020-10-29T04:18:25Z", "commit_message": "In C99, make --nounistd a no-op. Explain this in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc11ff302062ec7dd69d37811eac1d2be7fe97d0", "commit_date": "2020-10-29T03:09:26Z", "commit_message": "In C99, assume <stdint.h> is available to simplify the code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02237b18b280bf6a7ba4ca22e3b53d8b99b7f011", "commit_date": "2020-10-29T00:49:19Z", "commit_message": "Convert handling of USER_ACTION, YY_END_OF_BUFFER_CHAR, YY_STATE_BUF_SIZE...\n\n...to use pure m4, not cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbdc123fde857ed61fc450f887684e524e97167e", "commit_date": "2020-10-29T00:28:17Z", "commit_message": "In C99, de-cpp-izee processing of USER_INIT and RULE_SETUP.\n\nAlso, fix a harmless compiler warning introced three commits back.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15948a9b1405e53f7d6fc6e3fedf9ad7b5ca04e0", "commit_date": "2020-10-29T00:15:24Z", "commit_message": "In C99, process yylex declaration stting directly through m4...\n\n...instead of relying on cpp to do it. This commit also adds a\ntest for correctness of yydecl on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9de953f78fc011d8540cab203ae8aa761fb02cf0", "commit_date": "2020-10-28T17:01:21Z", "commit_message": "In C99, remove more preprocessor dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29116efd20d33cb41ac87d9fd4e81d0b840a287c", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove cpp from the way the extra type is handled, use pure m4 instead.\n\nHas the effect of making the code a bit smaller when no extra type\nis born.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aea2d30573d4d84e9d60ca43739d5a46efb26836", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Finally ever the dependency on the YY_FATAL_ERROR macro.\n\nStill supported as a legacy interface in the default back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "079b2d1c8643174610304f90f711a485d5186f96", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Eliminate YY_BREAK macro, replaced with an m4 hook.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baaaa45b40a843cfb1fdc438bf673df23d0e9cbc", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "A step towards getting rid of YY_FATAL_ERROR...\n\n...because we can no longer depend on cpp to be in the pipeline.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ba9f483bfd539d74bbb4c9152c7a80437d228e7", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove for cpp dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af8d41eb94ca9d15c7a5c33fddfb9ce0e0c559c2", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "In C99, abolish indirection through a void pointer...\n\n...to get to the scanner internals structure.  While this was a valiant\neffort at information hiding, it won't port out of C to any other plausible\ntarget language.  That being the case, we cut the LOC.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "169612a929ab64036c5fd904f0794f6adb74df4f", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove cpp dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1dc1c0911b48e6bb4137a4aeeeead49082236eb", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Sever a number of dependencies on cpp by adding rewrite rules...\n\n...in the flex scanner.  Presently this works for yyecho(), yyinput(),\nyystart(), yybegin(), and yyunput().  These no longer need to be nacros.\n\nA few more remain to be done, notably yyless() and yymore().\n\nAlong the way, deprecate YY_FATAL_ERROR and add a replacement option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f854b710512bb20ff41563e7ab9edfc10071fc08", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Clean C preprocessor assumptions out of C99.\n\nAlso, continue booleanizing where we can.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af5fa13bb376dc8ee1df0d4ff2a70950997e9de", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Outside cpp #define doesn't work, so deprecate YY_FLEX_SUBMINOR_VERSION.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b244d82cf0758daece2f764dd3fdc63cc9dff60f", "commit_date": "2020-10-27T03:26:28Z", "commit_message": "Remove an ugly little knor in the C99 yyunput code...\n\n..left there from a weird compromise when the default C back end also\nsupported C++.  Add a yyunput ruleset testing it on all back ends to\nverify that the change is good.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5d2d88a6d04333ac4a6655afa0613a36ce4aa2c", "commit_date": "2020-10-27T00:03:22Z", "commit_message": "Fix C emission lurking previously undiscovered in nfa.c.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baafce5c719cabfa63cb1cdd5e94ee02de1e3edf", "commit_date": "2020-10-26T19:45:23Z", "commit_message": "In C99, factor a nasty hunk of macrology into a function.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffcdee1fa2dae5d86082e199b17c85e09ab52630", "commit_date": "2020-10-26T18:26:49Z", "commit_message": "In C99, use bools where it is semantically reasonable.\n\nAlso, abandon the old-fashioned practice of using ! as a NULL\ntest on pointer-valued expressions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8de043be28e797b49ce86aead6db6dc79f5742d", "commit_date": "2020-10-26T14:52:53Z", "commit_message": "In C99, group macros for use in user actions...\n\n..and move the group as late in the generated code as we can.\nThere's no reason for those to be in scope when tables are\nbeing generated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9bfc5ce27d86f7c416aa2f9eadc7ca04d4edf868", "commit_date": "2020-10-26T13:56:18Z", "commit_message": "In C99, remove most code dependencies on yyin/yyout/yyleng/yytext macros.\n\nThese served a purpose when the code had to handle both reentrant and\nnon-reentrant cases.  Now, while they should still be available in user\nactions, the generated code is much less confusing if the yyg pointer\nin the references is explicit.\n\nAlso, drop VMS support and consolidate platform-specific references\nat one spot. This is in the same commit with the macro cleanup because\nit included getting rid of the last stray yyin/yyout references.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0504115662b1d1c09add43de135689e54173a88", "commit_date": "2020-10-26T12:07:06Z", "commit_message": "In C99, strip out ccp #ifndefs that can't fire if not using cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18b3523680d1e977950895a6bb7296cd3757397b", "commit_date": "2020-10-26T11:59:36Z", "commit_message": "Strip legacy macro definitions out of C99.\n\nThis is both a step towards Go/Rust and a demonstration that\nall the ruleset-based tests run wtout them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a4cd247ca6c1b92f450cb3fe71bca6dbc69e20b", "commit_date": "2020-10-26T02:34:23Z", "commit_message": "Polish documentation and fix up some uses of the old interface.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e71dbbf5ddb9ed42819fe46ac2325ae8e03f8a5", "commit_date": "2020-10-26T02:08:16Z", "commit_message": "Polish tests and test documentation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b758041c354ca28ce441615481abdd591c24fb", "commit_date": "2020-10-26T02:08:33Z", "commit_message": "Expand M4_HOOK_CONST_DEFINE into multiple macros for different types (#6)\n\nThe Rust backend needs to know the type of every constant; it can't\r\njust guess and it doesn't have text macros like C.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac97741a0b3f9d33beb2c081af2089de209290cd", "commit_date": "2020-10-26T02:08:18Z", "commit_message": "Fix Next link in the Overview of the Retargeting section of the manual (#3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "307645b7b7a21453fb8a777ddb7b0bf76df84dfd", "commit_date": "2020-10-25T13:53:18Z", "commit_message": "Narrow the interface between Flex and the skeleton file...\n\n...and reduce C preprocessor entanglement in the C99 skeleton.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "393b0b573325239ca16452dd5175feed2fd465ad", "commit_date": "2020-10-25T04:13:56Z", "commit_message": "yyconst is a pre-ANSI archaism. Remove it from the test code...\n\n...so the C99 back end doesn;'t have to carry it.  It's still defined\nin the default C back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68d658f60c42ad22f93f7b982934f29becce7428", "commit_date": "2020-10-25T04:00:47Z", "commit_message": "Sever a C99 dependency on ECHO,", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ec30d9fee286c619fbee457680821a43a0b610b", "commit_date": "2020-10-25T04:00:47Z", "commit_message": "Strip legacy support from the c99 back end.\n\nGone: C++ support, M4_YY_IN_HEADER. M4_YY_REENTRANT,\nand their negation symbols. The strange macrology\nrequitred to makecunction signatures conditionally\ncompile for npn-rentrant or reentrant is gone.\n\nThe default C back end is not touched by these changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eaf84e669dab968dd9ea0e4b5461e13486cd2d97", "commit_date": "2020-10-24T16:28:19Z", "commit_message": "Add tests for both senses of the Lex compatibility option...\n\n...fulfilling a promise made in \" Fix buggy handling of lex\ncompatibility...\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8301e241dcbfe50e1bc987e872c0b5e0ef2cbf18", "commit_date": "2020-10-24T12:52:51Z", "commit_message": "Move some boilerplate out of rules files.\n\nThey are now pure Flex rulesets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91b3016f9dd908db3b6271c73bbd245b7d2b4680", "commit_date": "2020-10-24T11:46:41Z", "commit_message": "Add a test for correctness of {n} behavior when posix_compat is off.\n\nAlso, document what the posix and posixlycorrect rulesets are doing\nnetter.  I lost a day because the dependency on setting POSIXLY_CORRECT\nomn the envoronment was not obvious.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bec427f3ea3d755dd039f2946340afb30f65a1e", "commit_date": "2020-10-24T11:10:58Z", "commit_message": "Turn the posixlycorrect test into a ruleset-based one.\n\nRequired generating the posixlycorrrect rules with tests/ruleset.sh\nso all platforms will have them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5b4a2ee966300982e8a19f17afe8e7ebe99a2e3", "commit_date": "2020-10-24T00:06:42Z", "commit_message": "Force reentrancy on on the c99 back end...\n\n...amd repair the one c99 test with a non-reentrant main.\nThe reentrant no longer needs to be specified in an %option line\nfor C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c92f5df6a1f52be3e665c05776d8fb1b3af6988e", "commit_date": "2020-10-23T01:03:59Z", "commit_message": "Make the ccl test ruleset-based for all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "683fa301a7575e019b96a1f19ed6d5ebe3226e56", "commit_date": "2020-10-22T23:50:54Z", "commit_message": "Documentation cleanup - fix a wrong assumption about tests.\n\nThe quotes test is backend-independent and doesn't need\nto be run anywhere but C.\n\nAlso, remove some debris from the C99 skeleton,\nit injects noise into C output comparisons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97b5bc730fef2f36e34ff6988252eb2d11da90e7", "commit_date": "2020-10-22T17:53:48Z", "commit_message": "Repair CLEANFILES and EXTRA_DIST in tests/Makefile.am/\n\nMy previous changes were based on incorrect assumptions\nabout time of evaluation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efb179b87d8301394d87221faf38ea488f52b75f", "commit_date": "2020-10-22T16:24:38Z", "commit_message": "Use wildcarding and negation toi cut the verbiage in tests/.gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5017c14b09926f0b5e862dc79ea5bd7feb0d76d", "commit_date": "2020-10-22T15:24:27Z", "commit_message": "Fix buggy handling of lex compatiblity option introduced during the retargeting work.\n\nNot caught because we don't test that option. It's on my TODO list.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee9f33ac5dfb09616987b148b55bc819dc73a71d", "commit_date": "2020-10-22T15:24:27Z", "commit_message": "Convert the \"posix\" test to be ruleset-based...\n\n...so it will run automatically on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dddcaa7c973e17db75d31966ce8a93b82781163f", "commit_date": "2020-10-22T12:29:28Z", "commit_message": "Another big sinmplification of the test machinery.\n\nIf you drop a file with the extension \".rules\" in tests/,\n\"make check\" will now automatically make and run tests\nfor all back ends - presently nr, r, and c99.\n\nIt would be trivial to change ruleset.sh so all table-compression\noptions are checked for all rulesets, and probably a good idea.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd6fdfdadf13575c3534838cdbd5925ae641ebfc", "commit_date": "2020-10-22T11:15:26Z", "commit_message": "Remove unused variable settings in tests/Makefile.am...\n\n...and group the log-compiler settings together where they can be\naudited.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ff19867ca4ea1c332f4c2230444e189c1cedcf6", "commit_date": "2020-10-22T11:06:23Z", "commit_message": "Abolish the cpp test extension. Those things are just tessts.\n\nThe distinction was intriduced when I was first feeling my way\nthrough the test machinery. It doesn't buy us anything.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf6e72bb3341b083a18ecba3fa3fb38097c625ce", "commit_date": "2020-10-22T03:02:40Z", "commit_message": "fix a few shellcheck lints that have shown up (#5)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7cc373669e9f3a51c2bd6be53d601d48e41f06a", "commit_date": "2020-10-22T01:58:24Z", "commit_message": "This commit adds c99 to the list of back ends for tableopts testing.\n\nThe overhaul of the test system is done for now, though there will be\nmore woro to do when testing has to support compilers for non-C\nback ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf0f126d13f03614de662b6f44d66d1f3eaf7abd", "commit_date": "2020-10-22T01:12:13Z", "commit_message": "The new test system now covers table option tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fb90cc835cdcc5ca942b9afac074850ac6ecc4f", "commit_date": "2020-10-21T23:45:27Z", "commit_message": "Generate some dependency relationships...\n\n...rather than maintaining them by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1200a3da64d773dd85246aaa9792e92bceafb9bf", "commit_date": "2020-10-21T22:02:12Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd8e62a1b732eacf77757867f6adb966965231b8", "commit_date": "2020-10-21T22:00:07Z", "commit_message": "Teach testwrapper.sh to parse compression options from testnames.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d9826a40d92c2546f1755e9ef82b34252dffac79", "commit_date": "2020-10-21T21:58:16Z", "commit_message": "Use CxF rather than C_F to prevent case ambiguity, so...\n\n......test names can be split on _ characters in order to parse\nthe compression options desired in the test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a110b3b67db86d757b4ccf88dba306b94ebf679d", "commit_date": "2020-10-21T21:13:01Z", "commit_message": "Simplify testwrapper.sh by abolishing the -t option.\n\nIt's easy enough to tell if a testfile wants a table by looking at its\nname.  Getting rid of this option is a step towards putting all\ntableopts tests in the generated set so they are trivially portable to\nnew back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8be9597d7d27b0db9f51922cbd9d3a87965b4445", "commit_date": "2020-10-21T21:08:22Z", "commit_message": "Use shellcheck on most of the shell scripts in the repository.\n\nAnd add a \"lint\" target that runs shellcheck on them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1726f1ca2dd92daa3c845034c8375171c867b85a", "commit_date": "2020-10-20T20:28:22Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30b86fbc07f691a9d534f5d548603cdbfa5d12e1", "commit_date": "2020-10-20T19:51:58Z", "commit_message": "Abolish reject.l4; all the reject tests are in the new system now.\n\nStill have the tableopts tests to do.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ea7800162ac9352b36b038e61196c21e39b2a5b", "commit_date": "2020-10-20T11:58:33Z", "commit_message": "Fold non-table-serialization reject tests into new test-generator system.\n\nEnables us to get rid of some spacial-purpose stuff in Makefile.am.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2034298f3d2efec1bc9b86fd2d43e89f89bd600c", "commit_date": "2020-10-20T10:47:15Z", "commit_message": "Integrate all possible simple tests into the new test templating system.\n\nStill to be folded in: all the reject and tableopts tests.\n\nNote: I understand VPATH builds just well enough to suspect that this\ncommit and my previous broke them, but not well enough to test\nor fix it. Mea culpa.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a1544256bf9515450d78cb9577e44f4cf6249d0", "commit_date": "2020-10-20T08:53:49Z", "commit_message": "Greatly simplify CLEANFILES and EXTRA_DIST by using wildcarding.\n\nThis reduces the amount of hand-work trquired to add a back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16f19cd7ae01e0fc097f5573d18994da02e88934", "commit_date": "2020-10-20T07:31:20Z", "commit_message": "Introduce testmaker.m4 and testmaker.sh\n\nThe existing method of generating multiple tests from l4 files is not\nflexible enough to handle multilanguage - reliance on the C\npreprocessor prevents that. This commit creates replacement machinery\nthat's more flexible and will greatly reduce the complexity of adding\nnew back ends.\n\nThe idea is to generate test .l files by combining a\nbackend-independent ruleset with backend-dependent boilerplate for\ntest mains and preambles.\n\nThis commit creates the rules files, the m4 to template them into\ntests, and a shell wrapper to drive the m4 expansion.  The autoconf\nintegration works OK, but requires additional rules at the\nend of tests/Makefile.am that probably ought to be autogenerated.\n\nThere was one other change forced by this.  In order for the new\ntestmaker to work, it needs to be possible to analyze test file names\ninto stems and option modifiers.  Having underscores in the stem\nwould make the analysis slower and bug-prone.\n\nI wanted to change them to \"-\" rather than deleting them, but this\ngives autoconf fits - it seems to not like filenames with embedded\ndashes in certain contexts.\n\nAt this commit, only one test - array_nr.l - is generated using the new\nsystem.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c23d0161dc2ebf374e1066e5f39f2f9fe6a19fba", "commit_date": "2020-10-18T02:12:25Z", "commit_message": "Cut down on input-file proliferation.\n\nWith a minor tweak to testwrapper we can allow all the versions of\na test for different back ends (counting _r and _nr as back ends)\nto share a common input file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b642977f1c6d8aab72eb4621766384c987578028", "commit_date": "2020-10-17T18:59:21Z", "commit_message": "MAINTAINERCLEANFILES typo fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f735bad052deedfff571e57145c5afc627e1f653", "commit_date": "2020-10-17T18:52:05Z", "commit_message": "Add C99 lineno test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07440122ca0a68e507bb2e03c00a4abba279af7d", "commit_date": "2020-10-17T18:13:12Z", "commit_message": "Improve explanation of m4 quoting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd08ddcf8f58658887c689e60194bc93556220e7", "commit_date": "2020-10-17T14:29:20Z", "commit_message": "Fix some minor typos recently introduced in tests/Makefile.am.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e85860015806c2684dc74b5c40f3d0dd475d4afb", "commit_date": "2020-10-17T14:19:36Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c439cfab2912e1e8b229ae7f21b635254180d80", "commit_date": "2020-10-17T12:40:29Z", "commit_message": "Finish up the simple-test set for C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff0f99585169a435a5638ed2c4fa3b13397ee615", "commit_date": "2020-10-16T18:27:46Z", "commit_message": "quick editing pass over recent changes to documentation and comments (#2)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f07c52fdc5273edf3c8fbd0c16d780f8c9900e5e", "commit_date": "2020-10-16T18:07:03Z", "commit_message": "Fix a gacomment garbled by an incautuius replace.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a4495add564cc8784ffc616ed651da83fcd365e", "commit_date": "2020-10-16T16:34:58Z", "commit_message": "Added exteded_c00 test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4615b6420cb941b382ab7673c8a6806cd8394632", "commit_date": "2020-10-16T16:27:07Z", "commit_message": "extended -> etended_cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3290c37223e5deb896c72578926e5d2e58b37689", "commit_date": "2020-10-16T16:07:22Z", "commit_message": "Actually *commit* the documentation on test conventions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6931c9f6c896aed55ab503f316c7551bc783975", "commit_date": "2020-10-16T15:56:13Z", "commit_message": "Docunent the -e/--emit backend switch and the new test convention.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4724e14e385c438e90699b1a8651e39fff420dc7", "commit_date": "2020-10-16T15:10:16Z", "commit_message": "Adding more c99 tests: alloc_extra_c99, array_c99, ccl_c99, debug_c99.\n\nalloc_extra -> alloc_extra_cpp\nccl -> ccl_cpp\n\nThese rena,es meam that the tests for all backends are in either two\nparallel series (*_cpp, *_c99) or three (*_nr, *_r, *_c99).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c9898eb1352388d17bc4cb97f644996b2c736f4", "commit_date": "2020-10-16T12:57:36Z", "commit_message": "Add first C99 backend test, the C99 spin of basic_r.l.\n\nIllustrates how to adapt an exisying test - in this case,\nbasic_r.l - for the new c99 back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "978a4a3a632bb399bb01ceca3007419ce512dc29", "commit_date": "2020-10-16T12:46:39Z", "commit_message": "Begin work on a C99 front end.\n\nThe idea behind this is to exploit the existing test suite - write a\nstripped-down, cleaned up C skeleton that only does reentrant scanners\nand tosses out features like loadable tables and header generation\nthat can't be ported to other languages.\n\nThe C99 skeleton can then serve both as a launch point for the Go back\nend and a model for back ends in procedural languages without OO.  The\ninitial version is identical to the cpp skeleton except for different\nname and suffix properties abd having M4_MODE_C_OLY forcrd on.  The\nlatter means it blows up on the C++ tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e32cd6ce31e509d4d8421b87eb06448181b6590", "commit_date": "2020-10-16T10:10:02Z", "commit_message": "Add and document machinery to choose a back end by name.\n\nBack end is now reported in the metadata comments near the top of\ngenerated files.\n\nAll is in readiness for the start of direct work on Go support.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c99e66b54df7828d48d5752686374df72befcbc5", "commit_date": "2020-10-15T20:47:42Z", "commit_message": "Change inner loops to use int not YY_CHAR, removing need for separate NUL table", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d0e5f95410fb7590b134e5a816da98d0bdaf2a", "commit_date": "2020-10-15T19:06:48Z", "commit_message": "Push some C-specific assumptions out of filter.c to the skel file.\n\nThe way this is done is by adding a capabiiliy to mine string-valued\nproperties out of skel files in Flex's binary.\n\nAlso, some reorganization to improve the encapsulation of\nknowledge about skel files.\n\nNo changes in generated test files from this patch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d658c1c167023d74ae8332f8d1b9d62435dbf8f5", "commit_date": "2020-10-15T11:36:02Z", "commit_message": "Make the format for detecting trace lines a backend property.\n\nNo changes in generated test code from this commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd60560bfd804f430924647bab625f9e887c367d", "commit_date": "2020-10-15T10:43:21Z", "commit_message": "Refactor filter.c to use line_directive_out().\n\nTo make this work, use line_directive_out() had to be servered from\nits deoendence on hidden globaks.  Which was a good idea anyway,\n\nNo diffs in generated test code from this commit.\n\nYet another well-hidden C assumption.  I begin to woner if I will\nexpire of old age before fkushing out all of these.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20779d47a7762e707b07889b48647cd08f97fb0f", "commit_date": "2020-10-15T10:13:24Z", "commit_message": "Factor C/C++ assumptions out of filter.c.\n\nNo diffs in generated test code from this commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65b508798fceb28fe0b5a7ddf316d3d728ed80c8", "commit_date": "2020-10-14T22:59:05Z", "commit_message": "More documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7f447793ab0c440159d51a3483c29463a8cea13", "commit_date": "2020-10-14T17:58:29Z", "commit_message": "Typo and markup fixes in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e740e500e21be7a95b5f19835c01bbdfd3f9fe07", "commit_date": "2020-10-14T17:16:44Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35c1cf34269654f6bf254be7cd5bd46e28d29bd3", "commit_date": "2020-10-14T15:57:24Z", "commit_message": "Remove unused code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10daafd5b4fbe8cd8c1b2d4ec34548329b14acd6", "commit_date": "2020-10-14T14:56:57Z", "commit_message": "Remove interpretation of %-markup.\n\nBefore this commit, \"rm cpp-skel.h\" may be required in addition\nto \"make clean\".\n\nSince there  no longer any pusging or poping operations, the sko\nstack goes away.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efed8275c5c047f0da75d65e9795d4b8daf56afe", "commit_date": "2020-10-14T10:48:07Z", "commit_message": "Replace all conditional markup in the skeleton with macro conditionals.\n\nBecause having two different consitionalization syntaxes was ugly\nand conducive to error.  After this change there are %% breakpoints\nand %# comments and nothing else.  Comments on %if lines have been\npreserved.\n\nI used the following script:\n\n========================================================================\n\nimport sys\n\nflagstack = []\nfor line in sys.stdin:\n    if (not line.startswith(\"%if\")) and (not line.startswith(\"%endif\")) and (not line.startswith(\"%ok-for\")) and (not line.startswith(\"%not-for\")):\n        sys.stdout.write(line)\n        continue\n    elif line.startswith(\"%endif\"):\n        if flagstack.pop():\n            sys.stdout.write(\"]])\\n\")\n        continue\n    fields = line.strip().split()\n    trailer = \" \".join(fields[1:]) + \"\\n\"\n    if line.startswith(\"%if-bison-bridge\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_BISON_LVAL]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c++-only\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_CXX_ONLY]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c-only\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_C_ONLY]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c-or-c++\"):\n        flagstack.append(False)\n    elif line.startswith(\"%if-not-reentrant\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_NOT_REENTRANT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-reentrant\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_REENTRANT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-tables-serialization\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_TABLESEXT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%not-for-header\"):\n        sys.stdout.write(\"m4_ifdef( [[M4_YY_IN_HEADER]],,[[m4_dnl\\n\")\n    elif line.startswith(\"%ok-for-header\"):\n        sys.stdout.write(\"]])\\n\")\n    else:\n        sys.stderr.write(\"depercent: unrecognized %r\\n\" % line)\n        raise SystemExit(1)\n    if trailer.strip():\n        sys.stdout.write(\"%# \" + trailer)\n\n========================================================================\n\nOne nasty little abuse if markup around yyread_r had to be fixed up by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee6ae49d671df0b149a9232843785bd51b5852b9", "commit_date": "2020-10-14T10:23:17Z", "commit_message": "Fix typo introduced when yyunput was added.\n\nThe bad commit was:\n\"Rename unput() to yyunput(); follow through in option switches.\"\n\nI shouldn't have missed this, but te build has normal warnings\nthat obscured the waning from Flex.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18ece7e2494dcd5eed3162e71f0f4ff673e6dec4", "commit_date": "2020-10-13T14:27:31Z", "commit_message": "Modernize the C in the skeleton file.\n\nGood modern style in C is to write it as though it were a strongly typed\nlanguage even though it isn't; thius, it's no l;onger considered good practice\nto apply ! to non-booleans.\n\nAlso, fix some indentation annd vraxe usage for uniformity.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bcd857589706e1b91eb2567bd2e68210198b5f4d", "commit_date": "2020-10-13T13:29:24Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7611bea3c14157d8531cd7dd7f439ac997a33bd", "commit_date": "2020-10-13T11:44:36Z", "commit_message": "Three more namespace cleanups for multilanguage.\n\nReplace YY_FLUSH_BUFFER with yy_flush_current_buffer()\nReplace YY_CURRENT_BUFFER with yy_current_buffer().\nReplace YY_BUFFER_STATE with yybuffer.\n\nThe following are the all-caps definitions still exposed:\n\nYY_FLEX_MAJOR_VERSION\nYY_FLEX_MINOR_VERSION\nYY_FLEX_SUBMINOR_VERSION\nYY_NULL\nYY_END_OF_BUFFER_CHAR\nYY_BUF_SIZE\nYYLMAX\n\nIt is not idea for this list to be nonempty, but\nat least these are all actual comple-time constants\nrather than function calls or type names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8d0162b80ac39fc3c682d39a14c490baccbcc5e9", "commit_date": "2020-10-13T01:07:14Z", "commit_message": "Update all the examples to use the new API elements.\n\nAdd a fully reentrant example.  And update to TODO file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68711fc4a755468b796aa23e0747179754e12340", "commit_date": "2020-10-12T20:23:59Z", "commit_message": "Replace YY_USER_INIT, YY_USER_ACION, and YY_BREAK #defines with Flex options.\n\nThese were the last preprocessor abuses in the Flex interface.\n\nAlso, add a TODO listing tests that need to be added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a4dd4772d26aa30a355fd15953c1cb2358143a0b", "commit_date": "2020-10-12T15:06:26Z", "commit_message": "Make yydecl an ordinary string-valued option rather than a special directive.\n\nThis corrects a minor mistake I made earlier because I did not yet understand\nthe full generality of the option syntax.\n\nAlso fixes some minor markup errors in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bd654ca0c768f2e9f3ba07f1292615a4a3b9269", "commit_date": "2020-10-12T14:38:18Z", "commit_message": "Deprecate #define YY_EXTRA_TYPE in favor of the extra-type option.\n\nFollow this through in the examples and manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da0cd947c38cc984a674827669f3396186a60db9", "commit_date": "2020-10-12T13:36:44Z", "commit_message": "Make flex --help work again.\n\nFixes a stupid, trivial initialization-time bug introduce\nduring methodizatiion.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aac8fe889600fbd15effeb8526987be34c0264d7", "commit_date": "2020-10-12T13:16:40Z", "commit_message": "Revise the manual so the reentrant interface is recommended early.\n\nAlso add the first example friom the manual, and a reentrant variant\nof it, to the example set.  And document how to integrate examples.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "721622ea6e6aaf3aa7e55d939679f21e98b76d86", "commit_date": "2020-10-12T10:56:56Z", "commit_message": "Rename unput() to yyunput(); follow through in option switches.\n\nThis change was not strictly necessary to sever a preprocessor\ndependency nor make the API uniform aross both C and C++.  But it\ncried out to be made, because now *all* the rule hooks are in the yy*\nnamespace.  This makes the API easier to document and remember.\n\nunput() is left in place as a compatibility macro for existing\nusers, but only documented as a legacy interface.  The \"unput\"\nvariants of switches and options have also been retained.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dad680611b8373cac2e5dc60e7552535bded79c2", "commit_date": "2020-10-12T09:35:24Z", "commit_message": "Deprecate input(); document yyinput() for the C back end...\n\n...leaving an \"input\" macro in place for legacy compatibility.\n\ninput() had already become yyinput() in the C++ back end in order to\navoid collision with predefibed C++ inoput. In a multi-language world,\nthis is good policy in general.  There's no real reason for C to\nbe different, and excellent reason to pull all possible entry\npoints into the yy namespace.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "526be1f459bdc907b9867609214e3667c040cdae", "commit_date": "2020-10-11T20:55:08Z", "commit_message": "Introduce the term \"rule hook\" so we can use the term \"macro\" less.\n\nNon-C/C++ back ends won't have macros, so the documentation should\ntreat macro-ness as an implementation detail when it has to be\nmentioned at all - and usually it doesn't.\n\nThe key thing about rule hooks like yyless(), yymore() etc. isn't that\nthey're macros, it's that they can only br used in rule actions (e.g.\ninside the body of the genetated tyylex code.\n\nThis documentation patch removes the term \"macro\" where it isn't needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8225f259e5b61b972381ad37c5d386a8119124c", "commit_date": "2020-10-11T19:46:05Z", "commit_message": "Implement and document yystart(), replacing YY_START.\n\nAs usual, legacy interface left in place but deprecated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cecae8b6aa36414dfb390108282a36f82535dfbe", "commit_date": "2020-10-11T17:04:57Z", "commit_message": "Implement and document %noyyread, replacing YY_INPUT.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "956ac03b7d84f260ada4a4ddeef7174e827442be", "commit_date": "2020-10-11T15:05:12Z", "commit_message": "Refactor YY_INPUT so it calls a new yyread() internal function....\n\n...rather than splicing a bunch of exposed guts into the middle of\nyylex().  yyread() is put in the set of functions that gets\nprefix-modified.\n\nThis means buffer refill can be documented without C-specific\nreferences to YY_INPUT.\n\nIt should also enable actually having a non-macro replacement\nfor YY_INPUT, with a bit more work.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1094c2a1370defc57ea14d2398a72f15ce4f9c43", "commit_date": "2020-10-11T09:14:41Z", "commit_message": "Revise Flex manual to say useful things about multilanguage support.\n\nNo specific thing can be said about a non-C/C++ backend yet, but\nthis patch prepares the way by explaining which features and aspects\nof the Flex interface are specific to C/C++.\n\nIt also fixes one pre-ANSI prototype - that of non-reentrant yylex(),\nwhich should be declared yylex(void) in this day and age.\n\nThese changes make one new commitment. Observing that the YY_INPUT\nmacro is impossible to port out of the C/C++ context, I have observed that\nit is probably extinct in the wild (due to the later introduction of\nthe multi-buffer primitives, though I don't say that explicitly). The\ntext says tat people who really need the equivalent of this capability\nin a non-C/C++ back end should file an issue with the Flex maintainers.\n\nI don't actually expect this to happen.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3158c7f0721f8558a1acdcf5c2dad12be0fa0e2e", "commit_date": "2020-10-10T23:25:32Z", "commit_message": "Implement and document %option yylmax to replace #define YYLMAX.\n\nTest in tests/test-yylmax.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d1959c5956173060389021e931091269af6216e", "commit_date": "2020-10-10T21:21:11Z", "commit_message": "Implement and document %yydecl directive to replace #define YY_DECL.\n\nAlso added a deprecation note abut the old mechanism.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76affdf8942bf5627a815edcb486f9dcc3067ae6", "commit_date": "2020-10-10T03:28:42Z", "commit_message": "Deprecate ECHO in favor of yyecho().\n\nI changed the tests to use yyecho(), but the ECHO macro is still\nexercised in the bootstrap scanner.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3612bc281e0ee68a8b9b5c609c42ced02366a82e", "commit_date": "2020-10-09T23:06:32Z", "commit_message": "Deprecate BEGIN in favor of yybegin(). Worst of the awkward squad.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62a13a3a3d45be1c053566fee502302368d4e579", "commit_date": "2020-10-09T12:29:55Z", "commit_message": "First step towards an interface independent of C macros.\n\nThis patch implements and documents a yyreject() macro to replace\nargumentless REJECT.  It does not remove REJECT, but warns that this\nmacro will not be supported in non-C languages and deprecates it.\n\nThis commit begins a new appendix in the Flex manual, to list\ndeprecated interfaces and explain why they have been superseded.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e9c36271ea388cd155f2b7808c71113301e1631", "commit_date": "2020-10-08T20:03:03Z", "commit_message": "Do consistent optimal packing of arrays.\n\nFlex has a strategy of packing its arrays with in32 or imt32 depending\non length, but it wasn't applied consistently. While I don't thinlk this\nkind of space optimization matters a lot in 2020, if we're going to do it at\nall we should do it thoroughly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "723fd2c3b416b428664494a3898e91fda14bdf11", "commit_date": "2020-10-08T18:13:28Z", "commit_message": "Remove unused code.\n\nIndepemdent of the retargeting changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "700f9d3b6a3bb39d110f4b95e7459f4b9cfe4062", "commit_date": "2020-10-08T18:13:28Z", "commit_message": "Eliminate the c_like backend member.\n\nNo need for it, since the skel content is in core\nand the relevant hook can be searched for.\n\nThis is a postscript to the retargeting series.  It's\nnot necessary, but it imoroves the code slightly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8da857acc6f948d69381a3f4d1c68d897c5ed0a7", "commit_date": "2020-10-07T23:11:19Z", "commit_message": "Update the documentation on writing a back end,\n\nIt will doubtless need expansion and revision when we actually\nwrite one.\n\nNo diffs in generated test code.\n\n#70 and last in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "102c7a0149251e24a351742626e8d85453d7c75f", "commit_date": "2020-10-07T21:19:31Z", "commit_message": "Finish up macro abstraction.\n\nEverything Flex ships to the skeleton-file expansion phase is\nnow either a macro expansion or a macro call.  This almost finishes\nthe retargeting patch series; the wrapup will be documentation.\n\nSadky, this does not get us *all* the way to target-syntax independence.\nThe probem is the inclusion of tables_shared.c when table serialization is\nenabled. Which ,eans table serialization is not practical to support\noutside the C/C++ back end.\n\nNo diffs in generated test code from this commit.\n\n#69 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de769336588d2537f0d1b5c36ccc3c4fe24d1107", "commit_date": "2020-10-07T20:35:59Z", "commit_message": "Macroize all the remaining code-generation methods.\n\nProduces a tediously large diff in generated test code that\nis all table moving around.  This is due to them being shipped\nas macros and being substitured in a fixed order determined\nby the calls in the skell file, rather than veing generated as\nthe functrions originally emitting the tables are called.\n\n#68 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34771445d5891e9d4adc1146c9e55858793ed770", "commit_date": "2020-10-07T10:28:09Z", "commit_message": "Inline all yydmap entries, get rid of %tables-yydmap.\n\nWhat it used to do is now handled entirely by macro conditionals.\nBesides being a good complexoty reduction in itself, this is one\nof the last steps in turning C backend methods into macro deliveries.\n\nOrder of the yydmap table is perturbed. No other non-whitespace\ndiffs and no logic changes,\n\n#67 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd8748a311ed2f3f849d4b0fb12ea8198c8039ac", "commit_date": "2020-10-06T18:25:56Z", "commit_message": "Preparationn for macroizing the last eight methods.\n\nThis commit collects several minor changes:\n\n* Fix a minor type specification bug in a tablesext initializer.\n\n* macroize the trans_offset, mkctbl, and mkftbl methods.\n\n* Fix a bug in footprint computation.\n\nThis commit oroduces no code diffs in the generated test code, but the\nfootprint reports change due to the bug fix.\n\n#66 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "716cb63ff210f082418c96f726a6d165eae565a5", "commit_date": "2020-10-06T05:17:19Z", "commit_message": "Tweak the indent style of tables with macroexpanded bodies...\n\n...to have an indent style uniform with the rest of the code,\nand one that makes it easier noy to miss the trailing table delimiters.\n\nNot all tables are generated this way yet.  I'm working on it.\n\nIs isolated in its own commit so the format change can't confuse a\nreviewer's eyeballs out of noticing real mutations in the table data.\n\n#65 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96e004a296edf2a6f6e0b60b3da6e5d8e09428de", "commit_date": "2020-10-06T01:02:51Z", "commit_message": "Macroize the yy_meta, gen_yy_trans and start_state_list methods.\n\nAlso macro-generate yydmap entry for the yymeta table.\n\nWe're npw about 75% of the way through pushing all\nC syntax out of the method table.\nPermutes table order in the generated code.\n\n#64 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64cf0328063cd97dec09536a8f2bb35ce7350ffe", "commit_date": "2020-10-06T00:55:47Z", "commit_message": "Eliminate a lurking cpp-ism from scan.l\n\nAlso, remove now-unused functions from buf.c.\nAnd corral another global.\n\nProduces no diffs in generated test code.\n\n#63 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fafc0ef10cc9b2f1c7f758cd6ad42939bf6d5d1f", "commit_date": "2020-10-05T13:28:02Z", "commit_message": "Replace the comment method with a hook macro.\n\nThis required addin a new 0.0 breakpoint right after the\nM4_HOOK_* definitions so they will be visible early.\n\nProduces no diffs in generated test code.\n\n#62 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83d8bd5fb9a3b46810099dd8d50ad4de49540b1e", "commit_date": "2020-10-05T09:12:49Z", "commit_message": "Enliminate several backend methods by shipping hook macros instead.\n\nThey were: geneol, fulltable, eecs, and debug.\n\nTo accomplish this, dataend's emission of trailing } needed to be\nsuppressable.\n\nAlso, remove a %% mark that is no longer required.\n\nThis doesn't change any of the generated tables, but does change the\norer in which they're generated, froducing large diffs in the\ngenerated test code that don't actually mean anything.  The reason for\nthis is that tables used to come out in a variable order as functions\nlike geneecs were called ar variable times depending on the\ncompressuion mode.  Now, instead, the order is fixed by where the\ntanle-body macros these functions define are expanded.\n\nMore methods remain to be turnerd into macro generators.\n\n#61 in the retargeting patch series, following an unnumbered\nbugfix patch that I shipped in too much of a hurry.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aea91d7e4b0c025b33f62284cff5b14b6a0b9a75", "commit_date": "2020-10-04T04:17:17Z", "commit_message": "Reopair a buuld recipe bug introduced in #52...\n\n...by an icatous replace operation.  Insidious because\nit's undetectibe until you run configure again,\n\nTwo-phase build systems suck.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5386ba36835b7ffab67bd30cb28a116bb1cea5c", "commit_date": "2020-10-03T17:03:28Z", "commit_message": "Refactor so all skelout calls are in visible sequence in flex_main().\n\nThis makes the overall control flow easier to understand.\n\n#59 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c1b4a95f9f81b4b381e7aff1cf998efe7906663", "commit_date": "2020-10-03T17:03:28Z", "commit_message": "Begin replacing method table entries with hook macros\n\nDo this for table opener/closer/continuation syntax, the trace-format\nstring, the state entry string, constant definitions, the state-dyad\nformat, and the three pieces of EOF state syntax.  The documentation\nappendix on how to write a back end is also updated.\n\nThere are comment diffs because I decided generating an\nexplicit fallthrough marker and some other new explanatory comments\nwas a good idea.\n\n#58 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea32296019ed0ce028bd018fcca4697c702a0022", "commit_date": "2020-10-03T01:57:54Z", "commit_message": "As of this commit, all mode symbolds are finally visible.\n\nAll symbols except a handful dependent on nultrans and the number of\nbackups are now written in one visible group right at the start of m4\ngeneration.  The exception are exceptions because their values\nare not known until after DFA computation.\n\nHas comment diffs in generated test code due to one symbol rename and\nsymbols beoming visible. Should be the last time the latter happens.\n\n#57 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fc45ce97ce30c74f1a8b2024bed2ac3e491665e", "commit_date": "2020-10-02T17:13:40Z", "commit_message": "Clean up various sporadic symbol definitions that weren't going through ctrl.\n\nIncludes handling of --nounistd, --always_interactive, --never_interactive, --stack,\ntheir corresponding lexer items, and and noinput.\n\nAn unavoidable side effect is that the place where \"#define\nYY_NO_INPUT 1\" is inserted, if it's inserted. has to move because it's\ndone by a different route - m4 expansion rather than the action_define\nfunction (which is now gone - this was the last use). I have put the\nnew insertion point just iin time for the first reference to the macro.\n\nOtherwise the only diffs in generarted test code are symbol\ndefinitions becoming visible.\n\n#56 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e77d8f4759724a125bc9ca53366fd1b760c7c9e", "commit_date": "2020-10-02T09:55:36Z", "commit_message": "Move almost all m4 symbol setting to one spot.\n\nFormerly, Flex's own lexer and the logic for pocessing command-line\noptions both did calls to write M4 conditionals to a buffer that was\nlater dumped into the befinning of the text that m4 expands, before\nthe body of the skel file.\n\nThis was bad layering.  Instead, both these places now set flags in\nthe ctrl structure.  Later, (almost) all the generated m4 conditionals\nare shipped at once.\n\nIt's \"almost\" because there are a couple of awkward cases to be\ncleaned up.  Again, this was the part that could be done\nsimply via almost mechanical cut and paste.\n\nIn generated code, there are some comment diffs because symbols that\nused to be invisibly set are now visibly set - that is, shown at the\nbeginning of the generated C.\n\n#55 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5d0e408e2e1bb6587cb0d6986964fab78f43c0f", "commit_date": "2020-10-02T08:55:37Z", "commit_message": "Methodize a suffix computation and move headerfile into ctrl.\n\nThis cleans up some loose ends before the next big move.\n\n#54 in the retargeting patch series. #53 slipped out unnumbered.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9dbc704ad47129dcd2c4846b94473d618e6869a8", "commit_date": "2020-10-02T04:17:31Z", "commit_message": "yytext_is_array moves to the ctrl structure.\n\nThis is separate from the big reorganization in commit #52 because\nthere's a comment about this variable in flexdef.h that makes me\nnervous.  According to the comment this variable is a trit, but\nit looks to me like flexinit sets it to false and I can't find\nanywhere in the code that sets it to a non-boolean value.\n\nThis commit asumes that the comment is stale and the member\ncan be typed boolean. Should be audited.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99e6b1c89a8e889991acf5de3da4a665dfeda023", "commit_date": "2020-10-01T21:40:06Z", "commit_message": "Impose some namespace control on the global variables.\n\nAs I was working on some layer separation.  I realized that I\nwas getting confused a lot by the huge pile of globals that\ncontrol this program.\n\nIn particular, I need to be able to clearly distinguish those that set\nm4 conditional symbols from those that don't.  So I've done something\nabout it. Almost all globals that can be set by options are now\nbundled into two context structures, \"ctrl\" for options that have\ncorresponding m4 symbols and \"env\" for options that don't.\n\nThe few I haven't moved have sufficiently tricky interdependencies\nthat I'm going to break out any changes related to them into smaller\npatches that can be easier to review.  In this one I did only the bulk\nof straightforward changes that could be done mechanically with search\nand replace.\n\nI changed one varuable name to reflext its senantics better;\nthe performance_report global is now env.performance_hint.\n\nIdeally there ought to be a third structure that bundles all the\nshared state used by DFA/NDFSA table computation, so all globals would\nlive in one of three context structures.  I may do that in a later\ncommit, but this patch is already unpleasantly large as it is.\n\nNo diffs in generated test code, nor any logic changes.\n\n#52 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c6661bb2eb65fab3924a493ee979b960708583f", "commit_date": "2020-10-01T05:34:07Z", "commit_message": "Eliminate all uses of buf_strdefine().\n\nThere were only two left, for YY_MAIN, and that definition\nwas moved so it's in the visible controls.\n\nThis is a step towards making *all* conditionalization symbols\nviible in generated comments.\n\nThis commit also cleans up some misnamed mode symbols.  There are\nstill a couple of duplicative pairs, to be cleaned up in a later\ncommit.\n\nWe can now report generated M4 symbols with values in the \"m4\ncontrols\" part of a generated file. Partly as a result, the following\nsymbols become visible in generare code from the tests:\nM4_MODE_PREFIX, M4_YY_TABLES_VERIFY, M4_YY_REENTRANT, and\nM4_MODE_PREFIX.\n\nNo other diffs.\n\n#51 in the retargeting patch series. #50 was accidentally\nunnumbered.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7877454e423c0707479b20316432df8dddbed738", "commit_date": "2020-10-01T01:18:34Z", "commit_message": "Eliminate the epilog member from the method table.\n\nIt was a no-op anyway in the C version, there as a placeholder\nin case other languages needed it.  But in the new organization\nof things, with everything being done by conditional expansion in\nthe skeleton file, there's no point.\n\nNo diffs at all in generated test code.\n\nThios does remove some cpde that was conditioned out, an abandoned\nattempt to undefine all #defines at the end of code generation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c2d23d9a8679961e9ca559d9fcca2a3d4e629c5", "commit_date": "2020-10-01T00:53:57Z", "commit_message": "Eliminate the prolog method from the method table.\n\nNow that all the mode conditionals are visible early, wverything that\nused to be done in the prolog can be done as conditionalized code in the\nskeleton.\n\nWhitespace and comment diffs only.\n\n#49 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "981867ff1519a807f9b69d8468f6f83fe2abec9f", "commit_date": "2020-09-30T12:37:39Z", "commit_message": "Land the footprint-reporting feature.\n\nAlso, clean up some unused and duplicative symbols.\n\nIn generated test code, comment and whitespace diffs only\nexcept for YY_INT_ALIGNED going away.\n\n#48 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31c3f7703dd0254558685669b5b6b3089b639e2d", "commit_date": "2020-09-30T11:29:43Z", "commit_message": "Methodize section marker output and refactor initialization.\n\nThe point of this change is to move the setting of the M4_MODE_*\ncontrols up to the front of the generated code so that they can be\nused for conditionalization earlier, notably in replacing the prolog\nmethod.  I tried to do this in #46 but dididn't move the mode\nsetting far enough up.\n\n(Also, rename instances of a duplicated mode switch.)\n\nIn generated code, the m4 controls move but nothing else changes.\n\n#47 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe2c1fe700dadb0dcdf52a649ef659a96a9fe3d", "commit_date": "2020-09-30T01:23:46Z", "commit_message": "Transplant where the mode controls are shipped to earlier.\n\nThis should make it possible to eliminate much of the C-specific\nprolog code.\n\nSadly, because of the moves of the generated comments this makes\na rather noisy diff.  All comments and whitespace, though;\nwhat looks like being other than that is pieces of generated code\nbeing shifteed around.\n\n#46 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9e86a3299fb5871306b36906b7c4f908f1520f0", "commit_date": "2020-09-29T21:18:43Z", "commit_message": "Eliminate two backend methods in favor of m4 expansion.\n\nProduces only whitespace diffs in generated code for tests, except the\norder of items in the initializer for table serialization changes.\n\n#45 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b952cbf80e76c57545611e4a0cccb48a73d0a71", "commit_date": "2020-09-29T20:53:47Z", "commit_message": "Eliminate ugly %define-yytables magic in skelout().\n\nThis feature is better implemented with m4 macroexpansion;\nthat way skelout() does not have to know that #define is a thing.\n\nAlso in skelout(), use the backend comment method rather than\nembedding knowledge about /* and */, and int_format_define\nto factor out knowedge about #define.\n\nProduces only comment diffs in the generated test code.\n\n#44 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34b84d582361a6ce44b0bb4328cb45f5b07071fb", "commit_date": "2020-09-29T08:53:46Z", "commit_message": "Narrow the driver interface.\n\nThis patch is a pure refactoring step.  It changes the\ninterface between gen.c and the back end so that the\nmethod table can shed a number of methods and no headers\nare generated in gen.c any more.\n\nMost methods now return the amount of memory they\nallocate.  Eventually this will be used to add\na report on this to the generated code.\n\nNo diffs in generated code, even without ignoring whitespace.\n\n#43 in the retargeting patch series, which turned out\nnot to be finished after all. These is ugly magic in skelout()\nthat needs to be factored out.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "103634e4ca84ff014b20ef0e9cf726ef5980592d", "commit_date": "2020-09-27T15:08:36Z", "commit_message": "Clean up the indentation and brace usage in the skeleton file.\n\nIt was in a mix of several different styles tht made it hard\nto read.  I've massaged it all ibto K&R with tabs and mandatory\nbraces.  No logic changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42a39df0f5663c038b5fd875041d177ae57ea560", "commit_date": "2020-09-26T02:14:32Z", "commit_message": "Fo;d documentation on how to write bac ends into the Texinfo manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c842b49f83a4fd07a261a05195e440765b8df585", "commit_date": "2020-09-25T22:09:44Z", "commit_message": "Finish the retargeting patch series with a couple of small fixups.\n\nPull the C mode setting for M4_YYL_BASE into m4.\n\nUse if/then/else extension of m4_ifdef to simplify how yy_flex_debug\nis set.  In the process, fix a bug introduced earlier in this patchest\nwhere yy_flex_debug initialization was inverted.\n\nRemove unused skel breakpoints and renumber those left.\n\nDiffs have only commenmt and whitespace changes *except* for the\ncorrected initialzation of yy_flex_debug.\n\n#40 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8521281aef33b47df7e372d16a495cec7f9a7e62", "commit_date": "2020-09-25T19:40:03Z", "commit_message": "indent_puts and friends go away, they're no longer needed.\n\nI did some indentation of the end-of-file case statements with tabs to\nmake the generated code a bit more readable.  So there are trivial\nwhitespace diffs in generated code.\n\n#39 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "219db78e6aedaa3e31f2e3884988a074abaa9b44", "commit_date": "2020-09-25T19:26:06Z", "commit_message": "Last procedural-code generation in C goes to m4.\n\nDiffs are comments and whiespace, as usual.\n\n#38 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efeb6ef019c221dfb725bb5ad83ac5556dd94c68", "commit_date": "2020-09-25T00:40:47Z", "commit_message": "m4ize the code for handling NUL transitions.\n\nFinally, scavenge trailing skel breakpoints that are no\nlonger used, as theey no longer carry information.\n\nDiffs in generated code are all comments and whitesoace, as usual\n\n#37 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31b751703fa3589dab34ff3ed93c3f3074ff8bf4", "commit_date": "2020-09-24T10:52:27Z", "commit_message": "Chase down some methodization details missed earlier.\n\nNo generated-code diffs from this change.\n\n#36 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7cb3bf631ae1197359f4ce698c73763a5b5ac46", "commit_date": "2020-09-24T09:14:05Z", "commit_message": "Dump the state of the m4 conditionals near start of generated code.\n\nOf course, this produces exactly that in diffs.\n\n#35 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cb26ac3f98c1e72cc3785a929e7b2ce00dd3bbe", "commit_date": "2020-09-24T02:21:03Z", "commit_message": "Conditionalization of the debug flag moves to m4.\n\nTurned out to be mildly trick because %if/%endif pairs have push/pop\nbehavior rather than combining.\n\nIn generated code, the location of the debug declarations moves,\nand that's all.\n\n#34 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9ade3f92bb952da5fac35f474f445d84dc18bd1", "commit_date": "2020-09-23T23:49:31Z", "commit_message": "Methodize whether fullspd mode can use a pointer table.\n\nPresently only C can do this.  Otherwise we fall through to storing\nnumeric indices for a tiny loss of performance.\n\nNo generated-code changes from this.\n\n#33 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca94d99782c1b2b0ac27c56b74d997e0906fc133", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "m4ize code generation associated with skel breakpoint 11.0.\n\nMoves one table initializer in the generated code, but doesn't alter\nit.\n\nLeaves one FIXME. The computation of M4_YYL_BASE really ought to be\ndone in m4, but for some unknown reason I couldn't beat it into\ndping the right thing.  Do be revisited, bu right now finishing\noff the last bits of code generation is more important.\n\n#32 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d45bd0692ed6c4c6c52ca9e31589075f86624f40", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Code formerly generated at skel breakpoint 8.0 goes to m4.\n\nNo generated-code diffs from this change.\n\n#31 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eb82096a4841e220759eed80f3eff1e95a082fa", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Move code generation of YY_DO_BEFORE_ACTION to m4.\n\nGenerated-code diffs are blank lines with ] continuations and\nshifted %% commends made by skel breakpoint directives.  I could garbage\ncollect those, but I plan to do that all at once in a commit of its\nown for clarity's sake.\n\n#30 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d694cb8d3f0305b3807cf1895dc08bf25353b72c", "commit_date": "2020-09-23T15:24:11Z", "commit_message": "Push C-generated code for YYINPUT to the m4 skeleton.\n\nDiffs in generated code are trivial, a couple of\nblank lines with continuations due to % directives.\n\n#29 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cfe5b9b09fdf6b4714113183c745d11a524902a", "commit_date": "2020-09-23T14:50:07Z", "commit_message": "All the M4_MODE settings now live in one place where they can be audited.\n\nNo changes in generated code.\n\n#28 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f2a58a818598559f150a7d9d42a7d8ba0b3bc16", "commit_date": "2020-09-23T14:20:48Z", "commit_message": "Partial m4ization of nultrans code.\n\nAlso, remove two insertion points in the skel file\nthat are no longer used because we're now using m4\nconditionals instead.\n\nIn the generated C, two magic comments from the insertion points go\naway.\n\n#27 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b101188a767f589340deed97125571db945d4865", "commit_date": "2020-09-23T00:52:58Z", "commit_message": "Push the definition of struct yy_trans_info out to m4.\n\nRequired defining a new method table entry and shuffling the order in\nwhich things are generated a bit, but the generated-code diffs are all\ntrivial.  Some comments from the previous C code are now in the\nskeleton.\n\n#26 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5574c7387573404129ea48be830094b8a67cc2c", "commit_date": "2020-09-22T22:44:26Z", "commit_message": "Banish gcc warnings so errors won't get lost in the clutter.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feeba9873f80dafbe96ff35787ac77ca7f2223cf", "commit_date": "2020-09-22T16:52:32Z", "commit_message": "Tie up loose ends in the abstraction of table initializer syntax...\n\n...and case statements.  Add guidance to backend.adoc.  This is the\n\"eventually\" promised in the comment on #10 of this series.\n\nNo diffs in generated code.\n\n#25 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a501a4238af4b5728d32d2dbfb01d3a50023a6b", "commit_date": "2020-09-22T15:52:50Z", "commit_message": "Replace last use of gen_next_compressed_state*( with equivalent m4...\n\n...and then inline the code of gen_NUL_trans() at its callsite.  This\ncontains all remaining procedural code generation in make_tables(),\non the way to moving it to m4.\n\nGenerated code diffs are like those of #20 and #22, for the same\nreasons.  They add comments, whitespace changes, and uses of the\nYY_NUL_EC and YY+JAMSTATE macros equivalent to the old numeric\nliterals.\n\n#24 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b3a67adff063fd4be4594f3b930899720b4279", "commit_date": "2020-09-22T14:59:30Z", "commit_message": "Code to do back-up for compressed tables and set up yy_cp goes to m4.\n\nAlso, move the yymatch label to the skeleton. Remove an unused\nprototype. And fix a typo.\n\nIn generated C, comment and whitespace changes only.\n\n#23 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f4aaddd993c77ed4e7cd9213c082f95909f380", "commit_date": "2020-09-22T14:51:23Z", "commit_message": "gen_next_state(true) becomes m4 code.\n\nAs with patch #20 in this series, the changes in generated code fall in the classes:\n\n1. Addition of comments.  I elected to copy the comments from the\n   generator functions into their corresponding m4 macros in hopes of\n   making the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\n   literal is replaced by YY_JAMSTATE + 1. This was a consequence of the\n   change in #15 to simplify the C code generators so they could be\n   translated into static nacros.\n\n3. \"YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : YY_NUL_EC);:\n   being replaced by \"YY_CHAR yy_c = (*yy_cp ?\n   *(yy_ec+YY_SC_TO_UI(*yy_cp)) : YY_NUL_EC);\" The strange way of\n   indexing yy_ec avoids a syntactic collision with the use of [] as\n   m4 quotes.\n\nThe gen_next_state(false) case was translated to m4 at patch #20\n\n#22 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6fa974cd7523f2e093ed70dca591dc89d19c061", "commit_date": "2020-09-22T10:08:10Z", "commit_message": "gen_bu_action() becomes m4 code.\n\nAlso, two GEN_START_STATE calls get inlined in the skeleton file.\n\nChanges in generated C from the tests are all comments and whitespace.\n\n#21 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30788806b98ae23151c921ad34c3a6f7ab1d0d76", "commit_date": "2020-09-22T08:47:05Z", "commit_message": "gen_next_match() becomes m4 code.\n\nTo verify this patch, notice that the non-whitespace changes in the\ngenerated C from the tests are of only three kinds:\n\n1. Addition of comments.  I elected to copy the comments from the\ngenerator functions into their corresponding m4 macros in hopes of\nmaking the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\nliteral is replaced by YY_JAMSTATE + 1. This was a consequence of the\nchange in #15 to simplify the C code generators so they could be\ntranslated into static nacros.\n\n3. \"YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)]\" being replaced by\n\"YY_CHAR yy_c = *(yy_ec+YY_SC_TO_UI(*yy_cp));\".  The strange way of indexing yy_ec\navoids a syntactic collision with the use of [] as m4 quotes.\n\n#20 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6711981a2d7e2fc3e3965156e0cb0887387f202a", "commit_date": "2020-09-22T07:16:04Z", "commit_message": "gen_backing_up() becomes an m4 macro.\n\nGenerated-code changes consist of whitespace and a comment.\n\nThus patch also fixes the computation of two guard symbols\nthat weren't actually used yet, prospectively introduced in\npatch #15 of this series. At the time I wrote that I didn't\nunderstand what num_backing_up was doing and failed to\ntranslate it properly.\n\n#19 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe63d33d1c48a136510441346c175d8801f11c4", "commit_date": "2020-09-22T05:32:40Z", "commit_message": "Push code generation for some housekeeping from gen.c to m4.\n\nThe pieces are BOL checking, yylineno updating, and YY_RULE_SETUP\ngeneration.\n\nNo generated code changes at all from this.\n\n#18 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feac8a6abf317090df62363f771e6487827629b0", "commit_date": "2020-09-22T04:14:56Z", "commit_message": "Clean up a couple of methodization loose ends.\n\nGenerated-code differences are trivial whitespace.\n\n#17 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ab6a3baf77f5284b035260d89c200c93157a9cb", "commit_date": "2020-09-22T03:04:50Z", "commit_message": "Move debug code generation from C to m4.\n\nDifferences in generated code are trivial. Some integer\nliterals turn into symbol expressions as a side effect\nof the previous patch.\n\n#16 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90bf7c7bcb621d0c2483a0383fa1e5c8db6d5521", "commit_date": "2020-09-22T02:01:41Z", "commit_message": "Create m4 symbols for things that used to be generated as int literals.\n\nChanges the generated C sources from the tests, but only by making\nthem easier to read.  In future patches this is going to make them\neasier to compare by eyeball as well.\n\n#15 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f858b63e23ce8e4d45926d1baa28d0fd1c67b339", "commit_date": "2020-09-21T21:11:29Z", "commit_message": "Turn gen_start_state() into an M4 macro.\n\nThis is the first patch in the retargeting series to substantively\nmodify the skeleton file.  (The only previous one to touch it just\nrenamed a mode switch.)\n\nAdds some comments and whitespace to the generated code in the tests,\nbut produces no logic changes.\n\n#14 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f41ac5a99f49cb2780115adf167f95b3d43690d", "commit_date": "2020-09-21T14:35:18Z", "commit_message": "Create a TESTOPTS variable that can be used to pass options to flex in testing.\n\nPresently this is used to pass -L, making it easier to compare changes\nin generared C code cross revisions.\n\nTo perform such comparisons, do this at a base (before) revision:\n\n# Make generated code\nmake clean; (cd tests; make clean); make check\n\n# Save a smashot of it\nrm -fr snapshot && mkdir snapshot && cp tests/*.c snapshot\n\nThen rebuild at the later revision and do this:\n\n# Compare gemerated code to snapshot\ndo diff -b -B -u $x tests/`basename $x`; done\n\n#13 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd01f7ff4e4aa5e9223df56d4ee04e0c039b7aff", "commit_date": "2020-09-21T04:45:47Z", "commit_message": "Remove a redundant macro guard setting....\n\n...and clean up some comments.\n\nRemoval should have happened in #11 when the\nguard symbol was renamed.\n\n#12 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb639cd7bbe1e4e2d8a0817c783ba48ceef8ba2", "commit_date": "2020-09-21T04:21:42Z", "commit_message": "Add code to initialize the macro conditional symbols we'll need.\n\nThese aren't used yet.  They will be as we push code feneration out\nof gen.c into the epansion of the m4 skeleton.\n\nThis is the first revision to touch the C skeleton file, changing\nM4_YY_USES_REJECT to M4_MODE_USES_REJECT for uniformity with the other\nmode switches.\n\nC code generated from the tests is still unchanged at this revision.\n\n#11 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef4f78f43b3b0b75de0e615d70949e0a460b90d2", "commit_date": "2020-09-21T04:05:05Z", "commit_message": "Continue methodization, with some target-language-specific formats...\n\n...and one additional method.\n\nThis almost finushes off all language-specfic detauks outside of\ngen.c.  The one exception is just below the comment \"add terminator\nfor initialization\" in dfa.c; we'll get to this eventually.\n\n#10 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0ca7faab9dce962e257c4da79133b67d5c0c6ee", "commit_date": "2020-09-21T03:17:00Z", "commit_message": "Two member name changes in the method table.\n\nCosmetic change,\n\n#9 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e58cdd1de0be09ac7258044ff13743538ee97c2b", "commit_date": "2020-09-21T02:38:31Z", "commit_message": "Start a HOWTO on writing target-language back ends.\n\n#8 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "673f2caf34fcbab9b6b2d2e3adeb1867b36b84a9", "commit_date": "2020-09-21T01:55:07Z", "commit_message": "Methodize generation of C initializers for automaton tables.\n\nA large patch, but conceptually simple. Takes a bunch of functions and\ncallsites that knew details of C initializer and declaration syntax\nand moves them into methods in the C backend table.\n\nThis is a pure refactoring step.  At this point in the patch series,\nnot only do all tests pass but nothing in the lex-generated C code\nfrom the tests has changed.\n\n#7 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cce209b584bf87a01038c33a09b361d82a18b0b", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "The C/C++ back end moves to its own source file.\n\nSomeday, there might be go-backend.c etc.\n\n#6 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb9f458eb18e32921b754c35415e09f08aaf8272", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "Generated skel data is now stuffed in an array in the C/C++ back end.\n\nThis means it's possible to have multiple language-specific skel\nfiles.  All go through the same double m4 macroexpansion.\n\n#5 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f754c608ff6e5ffdb8b1fc3893bb7573c8b6f734", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Pull the format for error-tracking lines into the method table.\n\n#4 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1bfe65b3dc2813bdc86e27ce3d03910d949ce93", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Create a method table for the C back end,\n\n#3 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a05e39ae47294aa2103e2f897f1979f6c7ccbdea", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Factor out the wrap function for C/C++ parser generation.\n\n#2 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0161f217e34ca77df2b1e687aa3c3f2d266c00c", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Refactoring step - separate output generation from option processing.\n\n#1 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a631f5da8d4fd60fbde7b06bcf43bc9a155c27d5", "commit_date": "2020-04-24T16:06:24Z", "commit_message": "correct some indentation in skeleton", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1fbf674f2e038df9cf1fe7725617e3837ae2a9", "commit_date": "2019-09-12T20:42:40Z", "commit_message": "doc: document release page in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3de49f84224b18c5287653f20525291b24cc26e", "commit_date": "2019-06-20T18:05:30Z", "commit_message": "doc: new translations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98018e3f58d79e082216d406866942841d4bdf8a", "commit_date": "2018-05-22T20:56:52Z", "commit_message": "scanner: Include-guard flexint_shared.h\n\nThis prevents compiler's \"redefinition of typedef\" warnings or errors\nwhen we could include flexint_shared.h twice, when building flex's own\nscanner (scan.c) or in the \"multiple_scanners\" test in the testsuite.\n\n(Depending on the compiler's flags this might or might not produce\nerrors, but it's good to guard it anyway.)\n\nFixes: #329\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21121feec917491db6f76cb54bd6441411632440", "commit_date": "2018-05-22T20:51:26Z", "commit_message": "scanner: no YYTABLES_NAME macro unless requested", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c7e3a5a676cfb98cc33382715dc6f6929688fdd", "commit_date": "2018-05-07T19:53:26Z", "commit_message": "po: include update_linguas script in distribution.\n\nSince automake takes a hands off approach to the po/ directory, we\nneed to list update_linguas.sh in the top Makefile.am. We list it as a\ndist_noinst_SCRIPT so that it will get distributed with executeable\npermissions. We also list autogen.sh in the same way for the same\nreason.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a752d7c1c27aa5ccd15ab2c89162b64154e106b7", "commit_date": "2018-05-07T18:58:48Z", "commit_message": "doc: display build status badge in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60b578fdaab4bf8d95203caaa947b476eeb03c10", "commit_date": "2018-04-07T17:26:34Z", "commit_message": "doc: describe mailing list usage in more detail", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33fd4c43a8faa5a04dcdd10fc4a5443378d9bf5", "commit_date": "2018-03-13T14:45:56Z", "commit_message": "doc: amend manual section on state stack functions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3971b6146aab12e1c54945dcb47ae92a25a3f3c3", "commit_date": "2018-03-13T14:45:42Z", "commit_message": "scanner: fix default of yy_top_state()\n\nextend fix when `YY_G` is used (reentrant scanner).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67b3e448727da3093cdc6f0ca7fd151fbf3c10ad", "commit_date": "2018-03-13T14:45:16Z", "commit_message": "scanner: fix default of yy_top_state()\n\nFor an _empty_ state stack the top of the state stack defaults to the state as if no state stack were present.\n\nNB: sanity check for `yy_start_stack_ptr` could be added in `yy_top_state()`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a6e69af761801aedeab0264246772cf60810246", "commit_date": "2018-03-12T02:34:36Z", "commit_message": "build: Add \"-f\" flag to \"mv\" in makefiles.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcd8e8b401c264702936eba6db8abef8399684ff", "commit_date": "2018-03-12T02:15:31Z", "commit_message": "build: Fix makefile dist-hook directory permissions.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1f6b4a26399b0e7849fd646fe5ee690231b32d4", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: More compatible flex integer type definitions.\n\nVisual C++ 2010 does not define __STDC_VERSION__, and (before Visual\nC++ 2013) has <stdint.h> and not <inttypes.h>.\n\nANSI/ISO C only requires at least 16 bits for int type (not 32 bits as\nrequired by POSIX since SUSv2), so check the bit length before the\ntypedef.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5574881ff4c9b08c73b6acc0087d6046c2b48de5", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Skeleton no longer includes integer limit macros.\n\nThe [U]INT{8,16,32}_{MIN,MAX} macros are never used in skeleton code.\nHaving them in skeleton just increases the chance of conflicts in case\nthat user defines them in non-C99 environment (see issue #307, when\nflex code is built in Visual C++ (before VS2013)).\n\nflexint.h is now split in two files. Only \"flexint_shared.h\" will be\nincluded in skeleton now, which defines flex integral types.\nflexint.h contains integer limits macros that would be used in flex\nonly.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec4f23d5d25dd33de99301956d2219b32860570e", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Add a fallback INT_MAX definition.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1985bb3c7abed940e91ad816504ef08a18c3b7c1", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: correct comments about __STDC_LIMIT_MACROS.\n\nNo code changes.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4081efa0831b15d7e4e4255401c225ad8262426d", "commit_date": "2018-03-08T02:04:36Z", "commit_message": "scanner: Fix glibc features.h dependency in skeleton.\n\nCommit a17d79e9c722a6735b6d2a8f152287404f27df32 defines _POSIX_C_SOURCE\nto the minimum of 1 if it's not defined in the user's scanner code or\nthe compiling environment. However in glibc the macros are not yet set\nup until one of the libc headers is included. This unfortunately have\nmade us overwrite the default _POSIX_C_SOURCE value that would be\ndefined by glibc (200809L at the time of writing), causing regressions\nin user code.\n\nNow in this patch:\n1. Ensure feature test macros have been set up in glibc before checking\nor defining any of them in our skeleton code.\n2. Have a more conservative logic when determining the need to define\n_POSIX_C_SOURCE (required for fileno()).\n\nFixes: #313\n\nNote:\nIt could be tricky for application code to ensure feature test macros\nhave been set up in glibc, since <features.h> is no portable header and\nnot meant to be included directly by applications. The way to do it is\nto include a libc header which in turn includes <features.h>. However,\nmany of the glibc headers check __USE_POSIX (a glibc internal macro\ndefined if _POSIX_C_SOURCE is defined) and determine which interfaces\nto expose already, making the headers inappropriate for our goal.\nThose which don't depend on _POSIX_C_SOURCE, and are also available\nsince ANSI C89, are only <assert.h>, <errno.h> and <math.h>.\n\n<assert.h> is finally favored due to other considerations:\n- <math.h> check for __USE_XOPEN in glibc, making a dependency on\n_XOPEN_SOURCE, besides it exposes much more interfaces than we need.\n- In djgpp, <errno.h> depends on _POSIX_SOURCE to hide definitions of\nsome errno values when it's defined.\n- <assert.h> exposes the fewest interfaces among the 3 headers and, at\nthe time of writing, checks for only C99 (for __func__), C11 (for\n_Static_assert), and _GNU_SOURCE when needed.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5023f5a48ac477916d43453a16afd792f422e85", "commit_date": "2018-03-04T12:51:38Z", "commit_message": "scanner: Fix scan.l xgettext warnings.\n\nxgettext was not very clever at interpreting lex patterns and can get\nconfused when seeing unquoted quotation marks, and emit warnings for\nthem. Now fix the warnings by properly quoting the quotation marks in\nlex regex patterns.\n\nExample\n    Original: \\\"[^\"\\n]*\\\" -> \"warning: unterminated string literal\"\n    Fixed:    \"\\\"\"[^\"\"\\n]*\"\\\"\" -> OK\n\nMy basic build test shows that the generated stage1scan.c is\nbit-identical to the original.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e104f5589c2365d5927de00d6a990ec33ef29493", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: '--disable-acl' when building gettext\n\nThis silences a configure warning about libacl not found in Travis\nbuild log.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6aa652b089f7ae3f2d9d0181f84733e88ce6443a", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Silence build output of automake and gettext\n\nOnly when a build error occurs on building any of these dependent\npackages do we dump some sensible logs to standard output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e63c0bb6b675c0093d8d39deaf4894297bce3041", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Hard-code hashes for verifying tarballs\n\nGPG signatures require an external keyserver which might be offline,\nwhich is undesirable for build server use. It's equally secure to just\nhard-code the hashes, provided they're trusted (i.e. you verify a hash\nagainst a GPG signature once).\n\nFixes: #311.\n\nAs a side note: the original two signatures\n(gettext-0.19.8.1.tar.lz.sig and automake-1.15.1.tar.gz.sig) are signed\nagainst the files' SHA-1 hash.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c42de062bbdc7c31d7181c10a74202d493280ada", "commit_date": "2018-03-01T00:30:56Z", "commit_message": "build: Move dnl comments out of AC_CHECK_FUNCS\n\nDue to a bug, autoheader (2.69) will treat M4 dnl comments in a quoted\nargument of AC_CHECK_FUNCS as function tokens and generate a lot of\nredundant and useless HAVE_* macros in config.h.in.\n(Examples: HAVE_DNL, HAVE_AVAILABLE_, HAVE_BY)\n\nIt seems to be this commit dbb4e94dc7bacbcfd4acef4f085ef752fe1aa03f of\nmine that revealed this autoheader bug, and the affected config.h.in\nhad been shipped within flex-2.6.4 release tarball.\n\nI have reported the autoheader bug here:\n<https://lists.gnu.org/archive/html/bug-autoconf/2018-02/msg00005.html>\n\nAs a workaround, let's move comments out of AC_CHECK_FUNCS.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065c9fbe22733e360e285ec4ce24d9c5065a0140", "commit_date": "2018-02-24T15:12:09Z", "commit_message": "test: Remove redundant '-o $@' in tableopts.am\n\n$(LINK) in Automake already contains the '-o $@' arguments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff7bc8af4680a6b16b07f8ddae8b5c64ad009de1", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "doc: list travis in NEWS [skip ci]", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0508df61da22a0a6f49e3c1d86404ea4ec37c85", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "initial .travis.yml file", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7d45afc6aeb49745f17d21ddba4848e0c0118fc", "commit_date": "2017-12-09T21:29:52Z", "commit_message": "scanner: Allow \"--\" as option argument.\n\nPreviously, invocations such as:\n\n    flex --outfile -- wc1.l\n\n would fail with \"requires an\nargument\" error message.\n\nFixes #285", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c984ab0fd0ad534a725019a7bf4f49a3571d87d1", "commit_date": "2017-12-08T14:56:18Z", "commit_message": "scanner: scanopt_err() now returns void", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa775c871137c570ded2bbd6ebbe7ca4ee39efe7", "commit_date": "2017-12-08T14:55:19Z", "commit_message": "scanner: simplify scanopt_usage().\n\nIn-function macro CALC_LEN removed and no longer needed.\n\nLocal variable renames:\n\n    maxlen[0] => opt_col_width\n\n    maxlen[1] => desc_col_width\n\n    indent now explicitly const", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23882383d45dcd37b5177835c873f4e1d9582db1", "commit_date": "2017-12-06T21:23:25Z", "commit_message": "scanner: prevent overflow in add_action()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e1b25b0ec17d4312f838efc6f910b64900b009", "commit_date": "2017-11-29T13:11:22Z", "commit_message": "scanner: use calloc to allocate new filter memory", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87472f5aa72431cd48755fa8537089e00d67e036", "commit_date": "2017-11-28T20:06:10Z", "commit_message": "Obsolete yypad64() macro.\n\nSlightly rewrite the logic in yytbl_data_load() and yytbl_write_pad64()\nso they simply check if the bytes read/written are in 8-byte boundary.\nNo need to calculate how many bytes we need to pad. (Incidentally this\nmakes smaller code in x86_64.)\n\nFor yytbl_hdr_init(), just expand the calculation from the macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12d2f8608046c5d43646e3c1dc277c0a2914ae1b", "commit_date": "2017-11-28T19:56:42Z", "commit_message": "scanner: temporarily protect against ccl overflow & overwriting.\n\nFor ccladd(), if cclp given is a non-last ccl, adding a char into it\nwill overflow the buffer and overwrite the first char in the next ccl.\n\nFor now, add a temporary detection and protection code.  (Not sure if\nthis could happen in user input, but if it could, then you can expect\nsome \"corrupted\" behavior for generated scanners.)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea1faa2d09693cf7f3a3c3c79a5ddb7fbd0d3ba5", "commit_date": "2017-11-28T19:09:04Z", "commit_message": "build: fix ENABLE_NLS preprocessor check.\n\nBecause ENABLE_NLS may be defined to 0 (manually, not through\nautoconf) and it's semantically incorrect to only check whether it's\ndefined.\n\nThis is a correction to commit\n661d603b65385f62f372acd2017e5af2e0f0cd50.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11b7512664c30cadd923f479c59bc3368a7b210d", "commit_date": "2017-11-03T23:12:49Z", "commit_message": "scanner: Rename genecs() local variables. No code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c0f34cf12e17a526978ee962d92a37f93e86160", "commit_date": "2017-11-03T22:41:16Z", "commit_message": "scanner: Remove unused BASENAME() macro.\n\n(Simply forgot to do so in commit fb731ac0221e1866534dfe072b84b8af7a5d88f3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "661d603b65385f62f372acd2017e5af2e0f0cd50", "commit_date": "2017-11-03T14:39:32Z", "commit_message": "build: use #ifdef for ENABLE_NLS check.\n\nconfig.h will have either define ENABLE_NLS or not define it. If it is\nnot defined we get a -Wundef warning due to using #if with an\nundefined macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a17d79e9c722a6735b6d2a8f152287404f27df32", "commit_date": "2017-11-03T14:19:21Z", "commit_message": "scanner: Define _POSIX_C_SOURCE when needed in skeleton.\n\nThe function fileno() is defined by POSIX. When flex would otherwise not provide that feature macro, we define it.\n\nFixes #263", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0db9f8903a446e7026874be519b8dc55a471f014", "commit_date": "2017-10-05T15:31:18Z", "commit_message": "build: Remove custom reallocarray() declaration.\n\nUse one from <stdlib.h> instead because that is more portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37a6184dabcd82fa1d17c24c000f3da469296195", "commit_date": "2017-10-05T15:27:54Z", "commit_message": "scanner: Simplify PRINT_SPACES() macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24fd0551333e7eded87b64dd36062da3df2f6380", "commit_date": "2017-09-04T15:22:30Z", "commit_message": "build: AC_USE_SYSTEM_EXTENSIONS in configure.ac.\n\nThis would, e.g. define _GNU_SOURCE in config.h, enabling the\nreallocarray() prototype in glibc 2.26+ on Linux systems with that\nversion of glibc.\n\nFixes #241.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d62d3eb24d06030ae2641fe4670de3a8da9e67e", "commit_date": "2017-09-04T01:25:57Z", "commit_message": "doc: document config.h inclusion by flex itself", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b5111d9772b5c160340ca96f08d30d7f6db5cda", "commit_date": "2017-09-04T01:17:59Z", "commit_message": "scanner: Include flexdef.h at %top block of scan.l\n\nconfig.h may define macros that alter the API of the standard library\nfuntions, and so it should be included before any other standard\nheader, even before the skeleton's standard header inclusion.\n\nFor example: config.h may #define _GNU_SOURCE that would expose the\nreallocarray() prototype from <stdlib.h> on glibc 2.26+ systems. If we\ninclude <stdlib.h> before config.h, reallocarray() would not be\navailable for use in lex file since the second include doesn't help\ndue to header guard.\n\nFor now our config.h might `#define malloc rpl_malloc` -- this\nsubstitution must work before including stdlib.h, or else the compiler\nwill complain about missing prototypes, and may result in incorrect\ncode in scan.l (gcc warning: return makes pointer from integer without\na cast [-Wint-conversion]).\n\nFixes #247.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2943389fd3ca776d25735c06ef94512a2bb5c20", "commit_date": "2017-09-02T19:09:28Z", "commit_message": "{re,}allocate_array code cleanup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71d3525ad21dde00d3665c61e27346e88dab30d9", "commit_date": "2017-09-02T19:07:52Z", "commit_message": "doc: document libfl targets in Makefile", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd1afa37e110563cfc25cf5703ae6288691c0657", "commit_date": "2017-08-31T19:54:02Z", "commit_message": "build: Add convenience targets to build libfl only\n\nThese are wrappers around automake- and libtool-generated targets,\nallowing users to build libfl only, without the main flex program.\n\nSee GH-256 for discussion.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b84ad149c90483d3bfe9f64dd7bfbfad3550116d", "commit_date": "2017-08-31T19:51:25Z", "commit_message": "doc: document src/libfl in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e19c55cab9eeedb59a0c4c1245d44ed51ff88f", "commit_date": "2017-08-26T16:18:44Z", "commit_message": "Don't install libfl.pc if --disable-libfl.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e199cb6bdf59e1513ac60132799c994bf28b283d", "commit_date": "2017-08-26T16:18:32Z", "commit_message": "libfl.pc: Rewrite descriptions, remove unneeded Cflags.\n\nThere's no need to include any header when linking with `-lfl`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e06407175ed235378624d8b75aa24179a27b876", "commit_date": "2017-08-26T16:17:57Z", "commit_message": "Move libfl.pc.in to src subdirectory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "931d29bdeacc66f561e44636f80f33782ca4bbb0", "commit_date": "2017-08-24T13:26:02Z", "commit_message": "doc: NEWS updates", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b115f389b284a13b974bba05c25896feeec716ec", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Hardcode flex name in --help text\n\nDon't use program_name in the description of -T/--trace or -V/--version\noption. It's ugly when user invokes flex with a long path like\n\"/home/username/tools/bin/my-custom-built-flex\".\n\nThis solution is not long term. If possible, the help text should be\nmodified so that the \"flex\" name is no longer needed below the first\n\"Usage:\" line. All translations of help text will need to be updated\nas well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a657f0c6f564d2edc6e34e0e9715a95b13bdb304", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Remove an unneeded gettext() in --version output\n\n\"%s %s\\n\" is not translatable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb731ac0221e1866534dfe072b84b8af7a5d88f3", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "scanner: remove BASENAME(); don't strip path from program_name\n\nThere's no technical need of stripping path from program_name. I think\nthe users should be fine if they see the path they use to invoke flex\nis diagnostic messages and help texts.\n\nYes, users will see \"Usage: ../flex [OPTIONS]...\" now if they invoke\nflex with the path \"../flex\".\n\nThe --version output has been changed so that the name field will be\nalways \"flex\" or \"flex++\". If the flex program has been renamed to\n\"lex\" (for compatibility or other reason) this will allow identifying\nthe implementation name (\"flex\"). (And it's a recommended practice in\nGNU Coding Standards)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d64a5263cfcd490a6a96b2d6c018fa40f1ed558a", "commit_date": "2017-08-24T12:18:11Z", "commit_message": "build: sort .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e73c4446841eda8d4ea01298e887059e8c1472", "commit_date": "2017-08-24T12:15:00Z", "commit_message": "have libobjs depend on libobjdir (#244)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa50a492fcbd45e9dfacf8d0483543f198d0f6a1", "commit_date": "2017-08-24T12:02:19Z", "commit_message": "build: git ignore libfl.pc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1ed5df2f61abcb201b770e29cea1082a117d0f9", "commit_date": "2017-08-24T11:52:13Z", "commit_message": "Create libfl.pc target for pkgconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "535524ea6b55f8f6a7dfc160cb19211c084795d6", "commit_date": "2017-07-18T01:12:44Z", "commit_message": "scanner: #define BASENAME, remove #include libgen.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f2b9a4d630b702f6dd8592014f89d40a6a4bcc1", "commit_date": "2017-07-18T00:03:45Z", "commit_message": "mkskel.sh: fix EOL issue for CRLF systems", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af066b952fc81eb1a29079c7206e50ffed80c40", "commit_date": "2017-07-15T22:52:28Z", "commit_message": "scanner: Ignore comment lines in skeleton files.\n\nIn skeleton files comments are indicated by leading `%#` and when\ndirectly read in using `flex -S <skeleton.skl>` they should be\nignored. Example: `flex.skl`.\n\nAmending commit 2f21edac99b5efc432417233e6e53326d630e08f which removed\nthis conditional branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e784a805ef8f33ab4de544eee1876f41d2bd9dbc", "commit_date": "2017-07-15T22:31:41Z", "commit_message": "filter: faster is_blank_line implementation\n\nUsing regex_t regex_blank_line is *slow*.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f370436e1cf0c731e74bcee806df6c7a43a3094", "commit_date": "2017-07-13T19:15:29Z", "commit_message": "filter: new internal function is_blank_line()\n\nIt's simply to return (regexec(&regex_blank_line, str, 0, NULL, 0) == 0);\nThe reason for encapsulation is to allow replacing this with a\nnon-regex method if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19cffb0ff001e24a278ab979ac7a49f788ab2eba", "commit_date": "2017-07-13T19:14:58Z", "commit_message": "build: require automake, gettext versions as per maintainer dev setup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c2c0a2e85b78874fd69487d711011d639867a3", "commit_date": "2017-07-03T15:49:36Z", "commit_message": "doc: NEWS memory leak fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "faa877a8434a1d2f1b2ab5315eee6ca44dc79629", "commit_date": "2017-07-03T15:45:55Z", "commit_message": "scanner: memory leak free scanner generator.\n\n**Issue:**\nScanner generation leaks memory for transition tables when invoked\nwithout `--tables-file` option.\n\n**Root cause:**\n`gentabs` function has different memory acquire/release conditions.\n\n**Solution:**\nReclaim memory at the same scope where it was alloacated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a044dbe6d03877c3d8c205ae76be9c41f442237", "commit_date": "2017-07-03T15:45:37Z", "commit_message": "filter: memory leak free scanner postprocessing.\n\n**Issue:**\nScanner postprocessing leaks memory during correction of `#line`\ndirectives values and generation of C header file.\n\n**Root cause:**\n`filter_fix_linedirs` and `filter_tee_header` functions do not\ndispose allocated memory.\n\n**Solution:**\nAutomatically reclaim affected memory by allocating it on stack\ninsted of heap. Stack allocation should not be a problem as its\nonly 512 bytes and there is no recursive calls.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef32155253a100a774c087ae4a6be3fb5c6a375c", "commit_date": "2017-07-03T15:34:14Z", "commit_message": "doc: NEWS c{i,j}", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea4b0a129eebedba73eb08eb2639040fd758c51f", "commit_date": "2017-07-03T15:34:00Z", "commit_message": "scanner: c{i,j} should preserve case.\n\nFixes #193", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bebb264a94bdbfcf150a24e706c183896207e7b", "commit_date": "2017-07-03T13:46:48Z", "commit_message": "doc: document --backup-file in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c55bf919ccad3e0eff30da09c3d3e9f81cc123ad", "commit_date": "2017-07-03T13:41:42Z", "commit_message": "scanner: add optionn to specify backup filename.\n\nIn a directory containing multiple scanners, we want to allow\nspecifying the name of the backup file else the backup files will be\noverwritten.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bd14f13878e8b36e84c57561b86a863e3a1093c", "commit_date": "2017-06-18T17:56:06Z", "commit_message": "doc: new uk translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90c62441b3e848e3e526808c9e33c8172f31ebb1", "commit_date": "2017-06-18T17:55:11Z", "commit_message": "doc: new uk translation from the Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e00f250f66678eea21a4b5a4a25cb5b38f35f71", "commit_date": "2017-06-04T20:20:04Z", "commit_message": "doc: formatting fixes in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4735d6925d7864710421da1bd2707bb1bba43f3", "commit_date": "2017-06-04T20:15:23Z", "commit_message": "test: echo 'set -v' before setting so in shell.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b9c0cedcbb63f9a570687b977d8b00558920ad", "commit_date": "2017-05-26T15:23:12Z", "commit_message": "doc: tableopts rule portability mentioned in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0152a0c33061c63c928279e9bfcf496e1178a1", "commit_date": "2017-05-26T15:21:16Z", "commit_message": "test: remove duplicate shell options line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3db3aeb311b58d50e5a9eb0e3e78f271255bb0", "commit_date": "2017-05-24T07:33:09Z", "commit_message": "test: use portable pattern substitution in tableopts.sh\n\nFixes: #222", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db4f5e0fe5f2563e9d36b203f9fabb81aad2e4da", "commit_date": "2017-05-19T12:05:51Z", "commit_message": "doc: document NetBSD build crash fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae437ad54624883ecec3812bd225239a882954e", "commit_date": "2017-05-19T12:03:48Z", "commit_message": "build: remove automake check-news", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b290d8ebdfa73b8f4665847fb689884eceee269", "commit_date": "2017-05-19T11:29:15Z", "commit_message": "scanner: Use reallocarr() when available.\n\nNetBSD had a crash during build. Since the provided substitute for\nreallocarray() wasn't working, use NetBSD's reallocarr(). Let\nconfigure choose that function whenever it is available. Use\nreallocarray if available. Still fallback if neither is available.\n\nFixes #219", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a70bac04ac4743d64c23d5f5a3df55494bf6050", "commit_date": "2017-05-14T11:16:45Z", "commit_message": "doc: list line number directives in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7e34bb958ac5d083b2bab4c89907cd0669196d", "commit_date": "2017-05-14T10:31:56Z", "commit_message": "filter: Output correct #line value for current file.\n\nA #line pre-processor directive specifies the line number and source\nfile of the following lines. If the source file _is_ the current file,\nthe line number should be that of the line following the directive. So\nthe specified line number should be the current line number plus 1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "596a221844c8b13696f83183f44d3fcc7184f464", "commit_date": "2017-05-13T21:24:55Z", "commit_message": "scanner: corrected typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0be31989084e3a3265a9b34bf64bf8784779cb67", "commit_date": "2017-05-13T21:23:18Z", "commit_message": "doc: noyyget/set_column options documented", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cadd124f882290dff281b6de06d64d92ce73ecd", "commit_date": "2017-05-13T19:15:45Z", "commit_message": "scanner: finish support for noyy{get,set}_column.\n\nUnattributed patch carried over from sourceforge bug tracker.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7284970311c8b0c7c36da2d527b596d4699d1023", "commit_date": "2017-05-13T18:24:17Z", "commit_message": "build: .mailmap for cleaning up shortlog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3f4639099863b5d419d7c3442babb8ffc3f58a", "commit_date": "2017-05-07T00:46:20Z", "commit_message": "test: rename some files for non-case-sensitive filesystems.\n\n-C*f and -C*F option-specific test files collide on case-insensitive\nfile systems, and cause tests to either not be run at all, or to\noverwrite each other's files at build time.  So rename -C*F ones to\n-C*_F.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af72e9e222aab86d695225d4d440a1bf66fadff8", "commit_date": "2017-05-07T00:26:28Z", "commit_message": "build: 2.6.4 is previous version", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "385766c5cff544f2f96040e01a0be217a161a7ce", "commit_date": "2017-05-06T20:54:54Z", "commit_message": "build: ignore .sig files.\n\nWe generate gpg signatures in place for releases. Since these should\nnot be tracked in the flex repo itself, we tell git to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dfc45ef5a3134f6602e3b1784649b50958d100f", "commit_date": "2017-05-06T20:53:14Z", "commit_message": "build: no longer ignore *.tar.bz2\n\nSince we no longer generate *.tar.bz2 archives, we do not need to tell\ngit to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "pull/460": [{"commit_oid": "585889745c8acc5546dd70997faad24dd651780a", "commit_date": "2020-09-27T18:26:29Z", "commit_message": "Clean up the indentation and brace usage in the skeleton file.\n\nIt was in a mix of several different styles tht made it hard\nto read.  I've massaged it all ibto K&R with tabs and mandatory\nbraces.  No logic changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8fd9731d4aaf0e16ad557cc3bcf9d9021e8b6d1", "commit_date": "2020-09-27T00:09:29Z", "commit_message": "build: set dependency info involving cpp-skel.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "695cab8a1e41023b3f4e34a1be7945282800a0b7", "commit_date": "2020-09-27T00:08:02Z", "commit_message": "Fold documentation on how to write bac ends into the Texinfo manual", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c842b49f83a4fd07a261a05195e440765b8df585", "commit_date": "2020-09-25T22:09:44Z", "commit_message": "Finish the retargeting patch series with a couple of small fixups.\n\nPull the C mode setting for M4_YYL_BASE into m4.\n\nUse if/then/else extension of m4_ifdef to simplify how yy_flex_debug\nis set.  In the process, fix a bug introduced earlier in this patchest\nwhere yy_flex_debug initialization was inverted.\n\nRemove unused skel breakpoints and renumber those left.\n\nDiffs have only commenmt and whitespace changes *except* for the\ncorrected initialzation of yy_flex_debug.\n\n#40 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8521281aef33b47df7e372d16a495cec7f9a7e62", "commit_date": "2020-09-25T19:40:03Z", "commit_message": "indent_puts and friends go away, they're no longer needed.\n\nI did some indentation of the end-of-file case statements with tabs to\nmake the generated code a bit more readable.  So there are trivial\nwhitespace diffs in generated code.\n\n#39 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "219db78e6aedaa3e31f2e3884988a074abaa9b44", "commit_date": "2020-09-25T19:26:06Z", "commit_message": "Last procedural-code generation in C goes to m4.\n\nDiffs are comments and whiespace, as usual.\n\n#38 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efeb6ef019c221dfb725bb5ad83ac5556dd94c68", "commit_date": "2020-09-25T00:40:47Z", "commit_message": "m4ize the code for handling NUL transitions.\n\nFinally, scavenge trailing skel breakpoints that are no\nlonger used, as theey no longer carry information.\n\nDiffs in generated code are all comments and whitesoace, as usual\n\n#37 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31b751703fa3589dab34ff3ed93c3f3074ff8bf4", "commit_date": "2020-09-24T10:52:27Z", "commit_message": "Chase down some methodization details missed earlier.\n\nNo generated-code diffs from this change.\n\n#36 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7cb3bf631ae1197359f4ce698c73763a5b5ac46", "commit_date": "2020-09-24T09:14:05Z", "commit_message": "Dump the state of the m4 conditionals near start of generated code.\n\nOf course, this produces exactly that in diffs.\n\n#35 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cb26ac3f98c1e72cc3785a929e7b2ce00dd3bbe", "commit_date": "2020-09-24T02:21:03Z", "commit_message": "Conditionalization of the debug flag moves to m4.\n\nTurned out to be mildly trick because %if/%endif pairs have push/pop\nbehavior rather than combining.\n\nIn generated code, the location of the debug declarations moves,\nand that's all.\n\n#34 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9ade3f92bb952da5fac35f474f445d84dc18bd1", "commit_date": "2020-09-23T23:49:31Z", "commit_message": "Methodize whether fullspd mode can use a pointer table.\n\nPresently only C can do this.  Otherwise we fall through to storing\nnumeric indices for a tiny loss of performance.\n\nNo generated-code changes from this.\n\n#33 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca94d99782c1b2b0ac27c56b74d997e0906fc133", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "m4ize code generation associated with skel breakpoint 11.0.\n\nMoves one table initializer in the generated code, but doesn't alter\nit.\n\nLeaves one FIXME. The computation of M4_YYL_BASE really ought to be\ndone in m4, but for some unknown reason I couldn't beat it into\ndping the right thing.  Do be revisited, bu right now finishing\noff the last bits of code generation is more important.\n\n#32 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d45bd0692ed6c4c6c52ca9e31589075f86624f40", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Code formerly generated at skel breakpoint 8.0 goes to m4.\n\nNo generated-code diffs from this change.\n\n#31 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eb82096a4841e220759eed80f3eff1e95a082fa", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Move code generation of YY_DO_BEFORE_ACTION to m4.\n\nGenerated-code diffs are blank lines with ] continuations and\nshifted %% commends made by skel breakpoint directives.  I could garbage\ncollect those, but I plan to do that all at once in a commit of its\nown for clarity's sake.\n\n#30 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d694cb8d3f0305b3807cf1895dc08bf25353b72c", "commit_date": "2020-09-23T15:24:11Z", "commit_message": "Push C-generated code for YYINPUT to the m4 skeleton.\n\nDiffs in generated code are trivial, a couple of\nblank lines with continuations due to % directives.\n\n#29 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cfe5b9b09fdf6b4714113183c745d11a524902a", "commit_date": "2020-09-23T14:50:07Z", "commit_message": "All the M4_MODE settings now live in one place where they can be audited.\n\nNo changes in generated code.\n\n#28 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f2a58a818598559f150a7d9d42a7d8ba0b3bc16", "commit_date": "2020-09-23T14:20:48Z", "commit_message": "Partial m4ization of nultrans code.\n\nAlso, remove two insertion points in the skel file\nthat are no longer used because we're now using m4\nconditionals instead.\n\nIn the generated C, two magic comments from the insertion points go\naway.\n\n#27 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b101188a767f589340deed97125571db945d4865", "commit_date": "2020-09-23T00:52:58Z", "commit_message": "Push the definition of struct yy_trans_info out to m4.\n\nRequired defining a new method table entry and shuffling the order in\nwhich things are generated a bit, but the generated-code diffs are all\ntrivial.  Some comments from the previous C code are now in the\nskeleton.\n\n#26 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5574c7387573404129ea48be830094b8a67cc2c", "commit_date": "2020-09-22T22:44:26Z", "commit_message": "Banish gcc warnings so errors won't get lost in the clutter.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feeba9873f80dafbe96ff35787ac77ca7f2223cf", "commit_date": "2020-09-22T16:52:32Z", "commit_message": "Tie up loose ends in the abstraction of table initializer syntax...\n\n...and case statements.  Add guidance to backend.adoc.  This is the\n\"eventually\" promised in the comment on #10 of this series.\n\nNo diffs in generated code.\n\n#25 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a501a4238af4b5728d32d2dbfb01d3a50023a6b", "commit_date": "2020-09-22T15:52:50Z", "commit_message": "Replace last use of gen_next_compressed_state*( with equivalent m4...\n\n...and then inline the code of gen_NUL_trans() at its callsite.  This\ncontains all remaining procedural code generation in make_tables(),\non the way to moving it to m4.\n\nGenerated code diffs are like those of #20 and #22, for the same\nreasons.  They add comments, whitespace changes, and uses of the\nYY_NUL_EC and YY+JAMSTATE macros equivalent to the old numeric\nliterals.\n\n#24 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b3a67adff063fd4be4594f3b930899720b4279", "commit_date": "2020-09-22T14:59:30Z", "commit_message": "Code to do back-up for compressed tables and set up yy_cp goes to m4.\n\nAlso, move the yymatch label to the skeleton. Remove an unused\nprototype. And fix a typo.\n\nIn generated C, comment and whitespace changes only.\n\n#23 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f4aaddd993c77ed4e7cd9213c082f95909f380", "commit_date": "2020-09-22T14:51:23Z", "commit_message": "gen_next_state(true) becomes m4 code.\n\nAs with patch #20 in this series, the changes in generated code fall in the classes:\n\n1. Addition of comments.  I elected to copy the comments from the\n   generator functions into their corresponding m4 macros in hopes of\n   making the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\n   literal is replaced by YY_JAMSTATE + 1. This was a consequence of the\n   change in #15 to simplify the C code generators so they could be\n   translated into static nacros.\n\n3. \"YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : YY_NUL_EC);:\n   being replaced by \"YY_CHAR yy_c = (*yy_cp ?\n   *(yy_ec+YY_SC_TO_UI(*yy_cp)) : YY_NUL_EC);\" The strange way of\n   indexing yy_ec avoids a syntactic collision with the use of [] as\n   m4 quotes.\n\nThe gen_next_state(false) case was translated to m4 at patch #20\n\n#22 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6fa974cd7523f2e093ed70dca591dc89d19c061", "commit_date": "2020-09-22T10:08:10Z", "commit_message": "gen_bu_action() becomes m4 code.\n\nAlso, two GEN_START_STATE calls get inlined in the skeleton file.\n\nChanges in generated C from the tests are all comments and whitespace.\n\n#21 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30788806b98ae23151c921ad34c3a6f7ab1d0d76", "commit_date": "2020-09-22T08:47:05Z", "commit_message": "gen_next_match() becomes m4 code.\n\nTo verify this patch, notice that the non-whitespace changes in the\ngenerated C from the tests are of only three kinds:\n\n1. Addition of comments.  I elected to copy the comments from the\ngenerator functions into their corresponding m4 macros in hopes of\nmaking the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\nliteral is replaced by YY_JAMSTATE + 1. This was a consequence of the\nchange in #15 to simplify the C code generators so they could be\ntranslated into static nacros.\n\n3. \"YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)]\" being replaced by\n\"YY_CHAR yy_c = *(yy_ec+YY_SC_TO_UI(*yy_cp));\".  The strange way of indexing yy_ec\navoids a syntactic collision with the use of [] as m4 quotes.\n\n#20 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6711981a2d7e2fc3e3965156e0cb0887387f202a", "commit_date": "2020-09-22T07:16:04Z", "commit_message": "gen_backing_up() becomes an m4 macro.\n\nGenerated-code changes consist of whitespace and a comment.\n\nThus patch also fixes the computation of two guard symbols\nthat weren't actually used yet, prospectively introduced in\npatch #15 of this series. At the time I wrote that I didn't\nunderstand what num_backing_up was doing and failed to\ntranslate it properly.\n\n#19 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe63d33d1c48a136510441346c175d8801f11c4", "commit_date": "2020-09-22T05:32:40Z", "commit_message": "Push code generation for some housekeeping from gen.c to m4.\n\nThe pieces are BOL checking, yylineno updating, and YY_RULE_SETUP\ngeneration.\n\nNo generated code changes at all from this.\n\n#18 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feac8a6abf317090df62363f771e6487827629b0", "commit_date": "2020-09-22T04:14:56Z", "commit_message": "Clean up a couple of methodization loose ends.\n\nGenerated-code differences are trivial whitespace.\n\n#17 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ab6a3baf77f5284b035260d89c200c93157a9cb", "commit_date": "2020-09-22T03:04:50Z", "commit_message": "Move debug code generation from C to m4.\n\nDifferences in generated code are trivial. Some integer\nliterals turn into symbol expressions as a side effect\nof the previous patch.\n\n#16 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90bf7c7bcb621d0c2483a0383fa1e5c8db6d5521", "commit_date": "2020-09-22T02:01:41Z", "commit_message": "Create m4 symbols for things that used to be generated as int literals.\n\nChanges the generated C sources from the tests, but only by making\nthem easier to read.  In future patches this is going to make them\neasier to compare by eyeball as well.\n\n#15 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f858b63e23ce8e4d45926d1baa28d0fd1c67b339", "commit_date": "2020-09-21T21:11:29Z", "commit_message": "Turn gen_start_state() into an M4 macro.\n\nThis is the first patch in the retargeting series to substantively\nmodify the skeleton file.  (The only previous one to touch it just\nrenamed a mode switch.)\n\nAdds some comments and whitespace to the generated code in the tests,\nbut produces no logic changes.\n\n#14 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f41ac5a99f49cb2780115adf167f95b3d43690d", "commit_date": "2020-09-21T14:35:18Z", "commit_message": "Create a TESTOPTS variable that can be used to pass options to flex in testing.\n\nPresently this is used to pass -L, making it easier to compare changes\nin generared C code cross revisions.\n\nTo perform such comparisons, do this at a base (before) revision:\n\n# Make generated code\nmake clean; (cd tests; make clean); make check\n\n# Save a smashot of it\nrm -fr snapshot && mkdir snapshot && cp tests/*.c snapshot\n\nThen rebuild at the later revision and do this:\n\n# Compare gemerated code to snapshot\ndo diff -b -B -u $x tests/`basename $x`; done\n\n#13 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd01f7ff4e4aa5e9223df56d4ee04e0c039b7aff", "commit_date": "2020-09-21T04:45:47Z", "commit_message": "Remove a redundant macro guard setting....\n\n...and clean up some comments.\n\nRemoval should have happened in #11 when the\nguard symbol was renamed.\n\n#12 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb639cd7bbe1e4e2d8a0817c783ba48ceef8ba2", "commit_date": "2020-09-21T04:21:42Z", "commit_message": "Add code to initialize the macro conditional symbols we'll need.\n\nThese aren't used yet.  They will be as we push code feneration out\nof gen.c into the epansion of the m4 skeleton.\n\nThis is the first revision to touch the C skeleton file, changing\nM4_YY_USES_REJECT to M4_MODE_USES_REJECT for uniformity with the other\nmode switches.\n\nC code generated from the tests is still unchanged at this revision.\n\n#11 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef4f78f43b3b0b75de0e615d70949e0a460b90d2", "commit_date": "2020-09-21T04:05:05Z", "commit_message": "Continue methodization, with some target-language-specific formats...\n\n...and one additional method.\n\nThis almost finushes off all language-specfic detauks outside of\ngen.c.  The one exception is just below the comment \"add terminator\nfor initialization\" in dfa.c; we'll get to this eventually.\n\n#10 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0ca7faab9dce962e257c4da79133b67d5c0c6ee", "commit_date": "2020-09-21T03:17:00Z", "commit_message": "Two member name changes in the method table.\n\nCosmetic change,\n\n#9 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e58cdd1de0be09ac7258044ff13743538ee97c2b", "commit_date": "2020-09-21T02:38:31Z", "commit_message": "Start a HOWTO on writing target-language back ends.\n\n#8 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "673f2caf34fcbab9b6b2d2e3adeb1867b36b84a9", "commit_date": "2020-09-21T01:55:07Z", "commit_message": "Methodize generation of C initializers for automaton tables.\n\nA large patch, but conceptually simple. Takes a bunch of functions and\ncallsites that knew details of C initializer and declaration syntax\nand moves them into methods in the C backend table.\n\nThis is a pure refactoring step.  At this point in the patch series,\nnot only do all tests pass but nothing in the lex-generated C code\nfrom the tests has changed.\n\n#7 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cce209b584bf87a01038c33a09b361d82a18b0b", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "The C/C++ back end moves to its own source file.\n\nSomeday, there might be go-backend.c etc.\n\n#6 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb9f458eb18e32921b754c35415e09f08aaf8272", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "Generated skel data is now stuffed in an array in the C/C++ back end.\n\nThis means it's possible to have multiple language-specific skel\nfiles.  All go through the same double m4 macroexpansion.\n\n#5 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f754c608ff6e5ffdb8b1fc3893bb7573c8b6f734", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Pull the format for error-tracking lines into the method table.\n\n#4 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1bfe65b3dc2813bdc86e27ce3d03910d949ce93", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Create a method table for the C back end,\n\n#3 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a05e39ae47294aa2103e2f897f1979f6c7ccbdea", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Factor out the wrap function for C/C++ parser generation.\n\n#2 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0161f217e34ca77df2b1e687aa3c3f2d266c00c", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Refactoring step - separate output generation from option processing.\n\n#1 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a631f5da8d4fd60fbde7b06bcf43bc9a155c27d5", "commit_date": "2020-04-24T16:06:24Z", "commit_message": "correct some indentation in skeleton", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1fbf674f2e038df9cf1fe7725617e3837ae2a9", "commit_date": "2019-09-12T20:42:40Z", "commit_message": "doc: document release page in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3de49f84224b18c5287653f20525291b24cc26e", "commit_date": "2019-06-20T18:05:30Z", "commit_message": "doc: new translations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98018e3f58d79e082216d406866942841d4bdf8a", "commit_date": "2018-05-22T20:56:52Z", "commit_message": "scanner: Include-guard flexint_shared.h\n\nThis prevents compiler's \"redefinition of typedef\" warnings or errors\nwhen we could include flexint_shared.h twice, when building flex's own\nscanner (scan.c) or in the \"multiple_scanners\" test in the testsuite.\n\n(Depending on the compiler's flags this might or might not produce\nerrors, but it's good to guard it anyway.)\n\nFixes: #329\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21121feec917491db6f76cb54bd6441411632440", "commit_date": "2018-05-22T20:51:26Z", "commit_message": "scanner: no YYTABLES_NAME macro unless requested", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c7e3a5a676cfb98cc33382715dc6f6929688fdd", "commit_date": "2018-05-07T19:53:26Z", "commit_message": "po: include update_linguas script in distribution.\n\nSince automake takes a hands off approach to the po/ directory, we\nneed to list update_linguas.sh in the top Makefile.am. We list it as a\ndist_noinst_SCRIPT so that it will get distributed with executeable\npermissions. We also list autogen.sh in the same way for the same\nreason.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a752d7c1c27aa5ccd15ab2c89162b64154e106b7", "commit_date": "2018-05-07T18:58:48Z", "commit_message": "doc: display build status badge in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60b578fdaab4bf8d95203caaa947b476eeb03c10", "commit_date": "2018-04-07T17:26:34Z", "commit_message": "doc: describe mailing list usage in more detail", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33fd4c43a8faa5a04dcdd10fc4a5443378d9bf5", "commit_date": "2018-03-13T14:45:56Z", "commit_message": "doc: amend manual section on state stack functions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3971b6146aab12e1c54945dcb47ae92a25a3f3c3", "commit_date": "2018-03-13T14:45:42Z", "commit_message": "scanner: fix default of yy_top_state()\n\nextend fix when `YY_G` is used (reentrant scanner).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67b3e448727da3093cdc6f0ca7fd151fbf3c10ad", "commit_date": "2018-03-13T14:45:16Z", "commit_message": "scanner: fix default of yy_top_state()\n\nFor an _empty_ state stack the top of the state stack defaults to the state as if no state stack were present.\n\nNB: sanity check for `yy_start_stack_ptr` could be added in `yy_top_state()`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a6e69af761801aedeab0264246772cf60810246", "commit_date": "2018-03-12T02:34:36Z", "commit_message": "build: Add \"-f\" flag to \"mv\" in makefiles.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcd8e8b401c264702936eba6db8abef8399684ff", "commit_date": "2018-03-12T02:15:31Z", "commit_message": "build: Fix makefile dist-hook directory permissions.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1f6b4a26399b0e7849fd646fe5ee690231b32d4", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: More compatible flex integer type definitions.\n\nVisual C++ 2010 does not define __STDC_VERSION__, and (before Visual\nC++ 2013) has <stdint.h> and not <inttypes.h>.\n\nANSI/ISO C only requires at least 16 bits for int type (not 32 bits as\nrequired by POSIX since SUSv2), so check the bit length before the\ntypedef.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5574881ff4c9b08c73b6acc0087d6046c2b48de5", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Skeleton no longer includes integer limit macros.\n\nThe [U]INT{8,16,32}_{MIN,MAX} macros are never used in skeleton code.\nHaving them in skeleton just increases the chance of conflicts in case\nthat user defines them in non-C99 environment (see issue #307, when\nflex code is built in Visual C++ (before VS2013)).\n\nflexint.h is now split in two files. Only \"flexint_shared.h\" will be\nincluded in skeleton now, which defines flex integral types.\nflexint.h contains integer limits macros that would be used in flex\nonly.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec4f23d5d25dd33de99301956d2219b32860570e", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Add a fallback INT_MAX definition.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1985bb3c7abed940e91ad816504ef08a18c3b7c1", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: correct comments about __STDC_LIMIT_MACROS.\n\nNo code changes.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4081efa0831b15d7e4e4255401c225ad8262426d", "commit_date": "2018-03-08T02:04:36Z", "commit_message": "scanner: Fix glibc features.h dependency in skeleton.\n\nCommit a17d79e9c722a6735b6d2a8f152287404f27df32 defines _POSIX_C_SOURCE\nto the minimum of 1 if it's not defined in the user's scanner code or\nthe compiling environment. However in glibc the macros are not yet set\nup until one of the libc headers is included. This unfortunately have\nmade us overwrite the default _POSIX_C_SOURCE value that would be\ndefined by glibc (200809L at the time of writing), causing regressions\nin user code.\n\nNow in this patch:\n1. Ensure feature test macros have been set up in glibc before checking\nor defining any of them in our skeleton code.\n2. Have a more conservative logic when determining the need to define\n_POSIX_C_SOURCE (required for fileno()).\n\nFixes: #313\n\nNote:\nIt could be tricky for application code to ensure feature test macros\nhave been set up in glibc, since <features.h> is no portable header and\nnot meant to be included directly by applications. The way to do it is\nto include a libc header which in turn includes <features.h>. However,\nmany of the glibc headers check __USE_POSIX (a glibc internal macro\ndefined if _POSIX_C_SOURCE is defined) and determine which interfaces\nto expose already, making the headers inappropriate for our goal.\nThose which don't depend on _POSIX_C_SOURCE, and are also available\nsince ANSI C89, are only <assert.h>, <errno.h> and <math.h>.\n\n<assert.h> is finally favored due to other considerations:\n- <math.h> check for __USE_XOPEN in glibc, making a dependency on\n_XOPEN_SOURCE, besides it exposes much more interfaces than we need.\n- In djgpp, <errno.h> depends on _POSIX_SOURCE to hide definitions of\nsome errno values when it's defined.\n- <assert.h> exposes the fewest interfaces among the 3 headers and, at\nthe time of writing, checks for only C99 (for __func__), C11 (for\n_Static_assert), and _GNU_SOURCE when needed.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5023f5a48ac477916d43453a16afd792f422e85", "commit_date": "2018-03-04T12:51:38Z", "commit_message": "scanner: Fix scan.l xgettext warnings.\n\nxgettext was not very clever at interpreting lex patterns and can get\nconfused when seeing unquoted quotation marks, and emit warnings for\nthem. Now fix the warnings by properly quoting the quotation marks in\nlex regex patterns.\n\nExample\n    Original: \\\"[^\"\\n]*\\\" -> \"warning: unterminated string literal\"\n    Fixed:    \"\\\"\"[^\"\"\\n]*\"\\\"\" -> OK\n\nMy basic build test shows that the generated stage1scan.c is\nbit-identical to the original.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e104f5589c2365d5927de00d6a990ec33ef29493", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: '--disable-acl' when building gettext\n\nThis silences a configure warning about libacl not found in Travis\nbuild log.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6aa652b089f7ae3f2d9d0181f84733e88ce6443a", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Silence build output of automake and gettext\n\nOnly when a build error occurs on building any of these dependent\npackages do we dump some sensible logs to standard output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e63c0bb6b675c0093d8d39deaf4894297bce3041", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Hard-code hashes for verifying tarballs\n\nGPG signatures require an external keyserver which might be offline,\nwhich is undesirable for build server use. It's equally secure to just\nhard-code the hashes, provided they're trusted (i.e. you verify a hash\nagainst a GPG signature once).\n\nFixes: #311.\n\nAs a side note: the original two signatures\n(gettext-0.19.8.1.tar.lz.sig and automake-1.15.1.tar.gz.sig) are signed\nagainst the files' SHA-1 hash.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c42de062bbdc7c31d7181c10a74202d493280ada", "commit_date": "2018-03-01T00:30:56Z", "commit_message": "build: Move dnl comments out of AC_CHECK_FUNCS\n\nDue to a bug, autoheader (2.69) will treat M4 dnl comments in a quoted\nargument of AC_CHECK_FUNCS as function tokens and generate a lot of\nredundant and useless HAVE_* macros in config.h.in.\n(Examples: HAVE_DNL, HAVE_AVAILABLE_, HAVE_BY)\n\nIt seems to be this commit dbb4e94dc7bacbcfd4acef4f085ef752fe1aa03f of\nmine that revealed this autoheader bug, and the affected config.h.in\nhad been shipped within flex-2.6.4 release tarball.\n\nI have reported the autoheader bug here:\n<https://lists.gnu.org/archive/html/bug-autoconf/2018-02/msg00005.html>\n\nAs a workaround, let's move comments out of AC_CHECK_FUNCS.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065c9fbe22733e360e285ec4ce24d9c5065a0140", "commit_date": "2018-02-24T15:12:09Z", "commit_message": "test: Remove redundant '-o $@' in tableopts.am\n\n$(LINK) in Automake already contains the '-o $@' arguments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff7bc8af4680a6b16b07f8ddae8b5c64ad009de1", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "doc: list travis in NEWS [skip ci]", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0508df61da22a0a6f49e3c1d86404ea4ec37c85", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "initial .travis.yml file", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7d45afc6aeb49745f17d21ddba4848e0c0118fc", "commit_date": "2017-12-09T21:29:52Z", "commit_message": "scanner: Allow \"--\" as option argument.\n\nPreviously, invocations such as:\n\n    flex --outfile -- wc1.l\n\n would fail with \"requires an\nargument\" error message.\n\nFixes #285", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c984ab0fd0ad534a725019a7bf4f49a3571d87d1", "commit_date": "2017-12-08T14:56:18Z", "commit_message": "scanner: scanopt_err() now returns void", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa775c871137c570ded2bbd6ebbe7ca4ee39efe7", "commit_date": "2017-12-08T14:55:19Z", "commit_message": "scanner: simplify scanopt_usage().\n\nIn-function macro CALC_LEN removed and no longer needed.\n\nLocal variable renames:\n\n    maxlen[0] => opt_col_width\n\n    maxlen[1] => desc_col_width\n\n    indent now explicitly const", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23882383d45dcd37b5177835c873f4e1d9582db1", "commit_date": "2017-12-06T21:23:25Z", "commit_message": "scanner: prevent overflow in add_action()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e1b25b0ec17d4312f838efc6f910b64900b009", "commit_date": "2017-11-29T13:11:22Z", "commit_message": "scanner: use calloc to allocate new filter memory", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87472f5aa72431cd48755fa8537089e00d67e036", "commit_date": "2017-11-28T20:06:10Z", "commit_message": "Obsolete yypad64() macro.\n\nSlightly rewrite the logic in yytbl_data_load() and yytbl_write_pad64()\nso they simply check if the bytes read/written are in 8-byte boundary.\nNo need to calculate how many bytes we need to pad. (Incidentally this\nmakes smaller code in x86_64.)\n\nFor yytbl_hdr_init(), just expand the calculation from the macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12d2f8608046c5d43646e3c1dc277c0a2914ae1b", "commit_date": "2017-11-28T19:56:42Z", "commit_message": "scanner: temporarily protect against ccl overflow & overwriting.\n\nFor ccladd(), if cclp given is a non-last ccl, adding a char into it\nwill overflow the buffer and overwrite the first char in the next ccl.\n\nFor now, add a temporary detection and protection code.  (Not sure if\nthis could happen in user input, but if it could, then you can expect\nsome \"corrupted\" behavior for generated scanners.)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea1faa2d09693cf7f3a3c3c79a5ddb7fbd0d3ba5", "commit_date": "2017-11-28T19:09:04Z", "commit_message": "build: fix ENABLE_NLS preprocessor check.\n\nBecause ENABLE_NLS may be defined to 0 (manually, not through\nautoconf) and it's semantically incorrect to only check whether it's\ndefined.\n\nThis is a correction to commit\n661d603b65385f62f372acd2017e5af2e0f0cd50.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11b7512664c30cadd923f479c59bc3368a7b210d", "commit_date": "2017-11-03T23:12:49Z", "commit_message": "scanner: Rename genecs() local variables. No code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c0f34cf12e17a526978ee962d92a37f93e86160", "commit_date": "2017-11-03T22:41:16Z", "commit_message": "scanner: Remove unused BASENAME() macro.\n\n(Simply forgot to do so in commit fb731ac0221e1866534dfe072b84b8af7a5d88f3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "661d603b65385f62f372acd2017e5af2e0f0cd50", "commit_date": "2017-11-03T14:39:32Z", "commit_message": "build: use #ifdef for ENABLE_NLS check.\n\nconfig.h will have either define ENABLE_NLS or not define it. If it is\nnot defined we get a -Wundef warning due to using #if with an\nundefined macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a17d79e9c722a6735b6d2a8f152287404f27df32", "commit_date": "2017-11-03T14:19:21Z", "commit_message": "scanner: Define _POSIX_C_SOURCE when needed in skeleton.\n\nThe function fileno() is defined by POSIX. When flex would otherwise not provide that feature macro, we define it.\n\nFixes #263", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0db9f8903a446e7026874be519b8dc55a471f014", "commit_date": "2017-10-05T15:31:18Z", "commit_message": "build: Remove custom reallocarray() declaration.\n\nUse one from <stdlib.h> instead because that is more portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37a6184dabcd82fa1d17c24c000f3da469296195", "commit_date": "2017-10-05T15:27:54Z", "commit_message": "scanner: Simplify PRINT_SPACES() macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24fd0551333e7eded87b64dd36062da3df2f6380", "commit_date": "2017-09-04T15:22:30Z", "commit_message": "build: AC_USE_SYSTEM_EXTENSIONS in configure.ac.\n\nThis would, e.g. define _GNU_SOURCE in config.h, enabling the\nreallocarray() prototype in glibc 2.26+ on Linux systems with that\nversion of glibc.\n\nFixes #241.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d62d3eb24d06030ae2641fe4670de3a8da9e67e", "commit_date": "2017-09-04T01:25:57Z", "commit_message": "doc: document config.h inclusion by flex itself", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b5111d9772b5c160340ca96f08d30d7f6db5cda", "commit_date": "2017-09-04T01:17:59Z", "commit_message": "scanner: Include flexdef.h at %top block of scan.l\n\nconfig.h may define macros that alter the API of the standard library\nfuntions, and so it should be included before any other standard\nheader, even before the skeleton's standard header inclusion.\n\nFor example: config.h may #define _GNU_SOURCE that would expose the\nreallocarray() prototype from <stdlib.h> on glibc 2.26+ systems. If we\ninclude <stdlib.h> before config.h, reallocarray() would not be\navailable for use in lex file since the second include doesn't help\ndue to header guard.\n\nFor now our config.h might `#define malloc rpl_malloc` -- this\nsubstitution must work before including stdlib.h, or else the compiler\nwill complain about missing prototypes, and may result in incorrect\ncode in scan.l (gcc warning: return makes pointer from integer without\na cast [-Wint-conversion]).\n\nFixes #247.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2943389fd3ca776d25735c06ef94512a2bb5c20", "commit_date": "2017-09-02T19:09:28Z", "commit_message": "{re,}allocate_array code cleanup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71d3525ad21dde00d3665c61e27346e88dab30d9", "commit_date": "2017-09-02T19:07:52Z", "commit_message": "doc: document libfl targets in Makefile", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd1afa37e110563cfc25cf5703ae6288691c0657", "commit_date": "2017-08-31T19:54:02Z", "commit_message": "build: Add convenience targets to build libfl only\n\nThese are wrappers around automake- and libtool-generated targets,\nallowing users to build libfl only, without the main flex program.\n\nSee GH-256 for discussion.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b84ad149c90483d3bfe9f64dd7bfbfad3550116d", "commit_date": "2017-08-31T19:51:25Z", "commit_message": "doc: document src/libfl in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e19c55cab9eeedb59a0c4c1245d44ed51ff88f", "commit_date": "2017-08-26T16:18:44Z", "commit_message": "Don't install libfl.pc if --disable-libfl.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e199cb6bdf59e1513ac60132799c994bf28b283d", "commit_date": "2017-08-26T16:18:32Z", "commit_message": "libfl.pc: Rewrite descriptions, remove unneeded Cflags.\n\nThere's no need to include any header when linking with `-lfl`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e06407175ed235378624d8b75aa24179a27b876", "commit_date": "2017-08-26T16:17:57Z", "commit_message": "Move libfl.pc.in to src subdirectory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "931d29bdeacc66f561e44636f80f33782ca4bbb0", "commit_date": "2017-08-24T13:26:02Z", "commit_message": "doc: NEWS updates", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b115f389b284a13b974bba05c25896feeec716ec", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Hardcode flex name in --help text\n\nDon't use program_name in the description of -T/--trace or -V/--version\noption. It's ugly when user invokes flex with a long path like\n\"/home/username/tools/bin/my-custom-built-flex\".\n\nThis solution is not long term. If possible, the help text should be\nmodified so that the \"flex\" name is no longer needed below the first\n\"Usage:\" line. All translations of help text will need to be updated\nas well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a657f0c6f564d2edc6e34e0e9715a95b13bdb304", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Remove an unneeded gettext() in --version output\n\n\"%s %s\\n\" is not translatable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb731ac0221e1866534dfe072b84b8af7a5d88f3", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "scanner: remove BASENAME(); don't strip path from program_name\n\nThere's no technical need of stripping path from program_name. I think\nthe users should be fine if they see the path they use to invoke flex\nis diagnostic messages and help texts.\n\nYes, users will see \"Usage: ../flex [OPTIONS]...\" now if they invoke\nflex with the path \"../flex\".\n\nThe --version output has been changed so that the name field will be\nalways \"flex\" or \"flex++\". If the flex program has been renamed to\n\"lex\" (for compatibility or other reason) this will allow identifying\nthe implementation name (\"flex\"). (And it's a recommended practice in\nGNU Coding Standards)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d64a5263cfcd490a6a96b2d6c018fa40f1ed558a", "commit_date": "2017-08-24T12:18:11Z", "commit_message": "build: sort .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e73c4446841eda8d4ea01298e887059e8c1472", "commit_date": "2017-08-24T12:15:00Z", "commit_message": "have libobjs depend on libobjdir (#244)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa50a492fcbd45e9dfacf8d0483543f198d0f6a1", "commit_date": "2017-08-24T12:02:19Z", "commit_message": "build: git ignore libfl.pc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1ed5df2f61abcb201b770e29cea1082a117d0f9", "commit_date": "2017-08-24T11:52:13Z", "commit_message": "Create libfl.pc target for pkgconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "535524ea6b55f8f6a7dfc160cb19211c084795d6", "commit_date": "2017-07-18T01:12:44Z", "commit_message": "scanner: #define BASENAME, remove #include libgen.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f2b9a4d630b702f6dd8592014f89d40a6a4bcc1", "commit_date": "2017-07-18T00:03:45Z", "commit_message": "mkskel.sh: fix EOL issue for CRLF systems", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af066b952fc81eb1a29079c7206e50ffed80c40", "commit_date": "2017-07-15T22:52:28Z", "commit_message": "scanner: Ignore comment lines in skeleton files.\n\nIn skeleton files comments are indicated by leading `%#` and when\ndirectly read in using `flex -S <skeleton.skl>` they should be\nignored. Example: `flex.skl`.\n\nAmending commit 2f21edac99b5efc432417233e6e53326d630e08f which removed\nthis conditional branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e784a805ef8f33ab4de544eee1876f41d2bd9dbc", "commit_date": "2017-07-15T22:31:41Z", "commit_message": "filter: faster is_blank_line implementation\n\nUsing regex_t regex_blank_line is *slow*.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f370436e1cf0c731e74bcee806df6c7a43a3094", "commit_date": "2017-07-13T19:15:29Z", "commit_message": "filter: new internal function is_blank_line()\n\nIt's simply to return (regexec(&regex_blank_line, str, 0, NULL, 0) == 0);\nThe reason for encapsulation is to allow replacing this with a\nnon-regex method if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19cffb0ff001e24a278ab979ac7a49f788ab2eba", "commit_date": "2017-07-13T19:14:58Z", "commit_message": "build: require automake, gettext versions as per maintainer dev setup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c2c0a2e85b78874fd69487d711011d639867a3", "commit_date": "2017-07-03T15:49:36Z", "commit_message": "doc: NEWS memory leak fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "faa877a8434a1d2f1b2ab5315eee6ca44dc79629", "commit_date": "2017-07-03T15:45:55Z", "commit_message": "scanner: memory leak free scanner generator.\n\n**Issue:**\nScanner generation leaks memory for transition tables when invoked\nwithout `--tables-file` option.\n\n**Root cause:**\n`gentabs` function has different memory acquire/release conditions.\n\n**Solution:**\nReclaim memory at the same scope where it was alloacated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a044dbe6d03877c3d8c205ae76be9c41f442237", "commit_date": "2017-07-03T15:45:37Z", "commit_message": "filter: memory leak free scanner postprocessing.\n\n**Issue:**\nScanner postprocessing leaks memory during correction of `#line`\ndirectives values and generation of C header file.\n\n**Root cause:**\n`filter_fix_linedirs` and `filter_tee_header` functions do not\ndispose allocated memory.\n\n**Solution:**\nAutomatically reclaim affected memory by allocating it on stack\ninsted of heap. Stack allocation should not be a problem as its\nonly 512 bytes and there is no recursive calls.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef32155253a100a774c087ae4a6be3fb5c6a375c", "commit_date": "2017-07-03T15:34:14Z", "commit_message": "doc: NEWS c{i,j}", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea4b0a129eebedba73eb08eb2639040fd758c51f", "commit_date": "2017-07-03T15:34:00Z", "commit_message": "scanner: c{i,j} should preserve case.\n\nFixes #193", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bebb264a94bdbfcf150a24e706c183896207e7b", "commit_date": "2017-07-03T13:46:48Z", "commit_message": "doc: document --backup-file in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c55bf919ccad3e0eff30da09c3d3e9f81cc123ad", "commit_date": "2017-07-03T13:41:42Z", "commit_message": "scanner: add optionn to specify backup filename.\n\nIn a directory containing multiple scanners, we want to allow\nspecifying the name of the backup file else the backup files will be\noverwritten.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bd14f13878e8b36e84c57561b86a863e3a1093c", "commit_date": "2017-06-18T17:56:06Z", "commit_message": "doc: new uk translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90c62441b3e848e3e526808c9e33c8172f31ebb1", "commit_date": "2017-06-18T17:55:11Z", "commit_message": "doc: new uk translation from the Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e00f250f66678eea21a4b5a4a25cb5b38f35f71", "commit_date": "2017-06-04T20:20:04Z", "commit_message": "doc: formatting fixes in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4735d6925d7864710421da1bd2707bb1bba43f3", "commit_date": "2017-06-04T20:15:23Z", "commit_message": "test: echo 'set -v' before setting so in shell.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b9c0cedcbb63f9a570687b977d8b00558920ad", "commit_date": "2017-05-26T15:23:12Z", "commit_message": "doc: tableopts rule portability mentioned in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0152a0c33061c63c928279e9bfcf496e1178a1", "commit_date": "2017-05-26T15:21:16Z", "commit_message": "test: remove duplicate shell options line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3db3aeb311b58d50e5a9eb0e3e78f271255bb0", "commit_date": "2017-05-24T07:33:09Z", "commit_message": "test: use portable pattern substitution in tableopts.sh\n\nFixes: #222", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db4f5e0fe5f2563e9d36b203f9fabb81aad2e4da", "commit_date": "2017-05-19T12:05:51Z", "commit_message": "doc: document NetBSD build crash fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae437ad54624883ecec3812bd225239a882954e", "commit_date": "2017-05-19T12:03:48Z", "commit_message": "build: remove automake check-news", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b290d8ebdfa73b8f4665847fb689884eceee269", "commit_date": "2017-05-19T11:29:15Z", "commit_message": "scanner: Use reallocarr() when available.\n\nNetBSD had a crash during build. Since the provided substitute for\nreallocarray() wasn't working, use NetBSD's reallocarr(). Let\nconfigure choose that function whenever it is available. Use\nreallocarray if available. Still fallback if neither is available.\n\nFixes #219", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a70bac04ac4743d64c23d5f5a3df55494bf6050", "commit_date": "2017-05-14T11:16:45Z", "commit_message": "doc: list line number directives in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7e34bb958ac5d083b2bab4c89907cd0669196d", "commit_date": "2017-05-14T10:31:56Z", "commit_message": "filter: Output correct #line value for current file.\n\nA #line pre-processor directive specifies the line number and source\nfile of the following lines. If the source file _is_ the current file,\nthe line number should be that of the line following the directive. So\nthe specified line number should be the current line number plus 1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "596a221844c8b13696f83183f44d3fcc7184f464", "commit_date": "2017-05-13T21:24:55Z", "commit_message": "scanner: corrected typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0be31989084e3a3265a9b34bf64bf8784779cb67", "commit_date": "2017-05-13T21:23:18Z", "commit_message": "doc: noyyget/set_column options documented", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cadd124f882290dff281b6de06d64d92ce73ecd", "commit_date": "2017-05-13T19:15:45Z", "commit_message": "scanner: finish support for noyy{get,set}_column.\n\nUnattributed patch carried over from sourceforge bug tracker.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7284970311c8b0c7c36da2d527b596d4699d1023", "commit_date": "2017-05-13T18:24:17Z", "commit_message": "build: .mailmap for cleaning up shortlog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3f4639099863b5d419d7c3442babb8ffc3f58a", "commit_date": "2017-05-07T00:46:20Z", "commit_message": "test: rename some files for non-case-sensitive filesystems.\n\n-C*f and -C*F option-specific test files collide on case-insensitive\nfile systems, and cause tests to either not be run at all, or to\noverwrite each other's files at build time.  So rename -C*F ones to\n-C*_F.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af72e9e222aab86d695225d4d440a1bf66fadff8", "commit_date": "2017-05-07T00:26:28Z", "commit_message": "build: 2.6.4 is previous version", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "385766c5cff544f2f96040e01a0be217a161a7ce", "commit_date": "2017-05-06T20:54:54Z", "commit_message": "build: ignore .sig files.\n\nWe generate gpg signatures in place for releases. Since these should\nnot be tracked in the flex repo itself, we tell git to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dfc45ef5a3134f6602e3b1784649b50958d100f", "commit_date": "2017-05-06T20:53:14Z", "commit_message": "build: no longer ignore *.tar.bz2\n\nSince we no longer generate *.tar.bz2 archives, we do not need to tell\ngit to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "westes-install": [{"commit_oid": "1c49f7e585acb337a0940a8fa80cebc5a1f3aa48", "commit_date": "2022-09-27T20:50:19Z", "commit_message": "Documented building and installation of flex\n\nSince GNU autotools no longer provides a stock INSTALLATION file, we provide one that speaks to flex specifically.\n\nfixes #402", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f5cd60976de92aaa61e6364cec7349a260c79a2", "commit_date": "2022-09-27T18:22:07Z", "commit_message": "updates from translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea6493d9b6f1915ba096160df666637a6e1b3f20", "commit_date": "2022-06-17T11:57:52Z", "commit_message": "Merge pull request #527 from Mightyjo/issue-525\n\nFix Issue #525 - Segfault in yyinput", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1a5285cbf368be75a5108081178ceb861d72030", "commit_date": "2022-06-17T11:54:37Z", "commit_message": "Merge pull request #529 from ggujjula/issue_369\n\nAdd documentation about option '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cba28b65b6f3e54548b29358d249e73b6e4534c", "commit_date": "2022-06-17T11:52:11Z", "commit_message": "Merge pull request #528 from xiaohanyu/fix-doc-error\n\nfix some tiny doc errors.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1656033045225767dd312ec24b067a9857084b69", "commit_date": "2022-06-17T11:46:28Z", "commit_message": "Merge pull request #531 from Explorer09/flexint-include\n\nAlso check for C++ standard version when deciding to include <stdint.h>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ab4ea7364641bf498ea2fc8c1078b9f871ae0ba", "commit_date": "2022-06-17T11:35:49Z", "commit_message": "Also check for C++ standard version when deciding to include <stdint.h>\n\nFixes: #517\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0e7091dc76d67a5b60647e4e0ddb45f8d7fa8bb", "commit_date": "2022-05-31T06:19:47Z", "commit_message": "Add anchors and refs to areas relevant to '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16ff9d01339a7ecd859ee619a8496ca878a3eb70", "commit_date": "2022-05-31T06:19:35Z", "commit_message": "Add documentation for option '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7535b35bf1dcf38ff449296741fcd85d0d491340", "commit_date": "2022-05-26T13:00:47Z", "commit_message": "fix some tiny doc error.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4581eccf1e9cb5c2b0646854a5b5b2024c4b602b", "commit_date": "2022-05-18T15:15:49Z", "commit_message": "fix(issue-525): Fail gracefully when yy_get_next_buffer can't find one.\n\nDemonstrate yyinput() error checking for this condition.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d9a039c31d1159fca492bf770403deef4c05cd2", "commit_date": "2022-05-18T15:13:46Z", "commit_message": "fix(issue-525): Add regression test for Issue 525.\n\nyyrestart should not set yy_fill_buffer to 1 when it was previously set to 0 (e.g. by yy_scan_buffer).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74a89fd6abf178f50f180f228613345682f7fd18", "commit_date": "2022-05-16T19:59:30Z", "commit_message": "Merge pull request #513 from ggujjula/issue_398\n\nIssue 398; Documentation fix; Additional command-line options", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00bfa85257ea06d55d9da7dcccda0a6083d9f067", "commit_date": "2022-05-16T19:55:38Z", "commit_message": "Merge pull request #524 from Mightyjo/issue-521\n\ndoc(manual): Character classes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c0345cc2823058ffd57428e5d3d462758a242f7", "commit_date": "2022-05-16T19:48:15Z", "commit_message": "Merge pull request #523 from Mightyjo/github-ci\n\nGitHub Actions (Replacing TravisCI)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2bacaef4cf8ab274edfa87fbb11dfb5bba5d17f0", "commit_date": "2022-05-11T21:41:53Z", "commit_message": "doc(manual): Correct character class examples and special meaning discussion.\n\nSee Issue 521 and 478.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "342104d61be15342898e9f2fbb9b99960d183dce", "commit_date": "2022-05-11T20:14:22Z", "commit_message": "chore(ci): Remove testing configs from GH Action workflows.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a42e91987d5a138a0e03b11fb05595987f31045", "commit_date": "2022-05-11T19:41:54Z", "commit_message": "chore(ci): Update GH Actions scripts to Ubuntu 20", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cdd61549d057a41fef1620cc000e90cb443e175", "commit_date": "2022-05-11T18:55:43Z", "commit_message": "chore(ci): Enable GitHub Actions on github-ci branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87ff2861e6e57148b307b9ff82fb557d498997e1", "commit_date": "2022-05-11T18:47:30Z", "commit_message": "chore(travisci): Remove Travis CI configs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0c76652f7bf3221f2bc5a15137aedfe2c278969", "commit_date": "2022-05-11T18:47:30Z", "commit_message": "chore(gh-actions): Build and test on GitHub Actions CI platform.\n    Use ubuntu-18.04.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fe96958fa3d730f6adcac5979a57f03b705a196", "commit_date": "2022-01-03T17:35:03Z", "commit_message": "new pl translation from the translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1677eff252854d10b29dd50d7fc520f763340f5e", "commit_date": "2021-12-29T22:47:43Z", "commit_message": "Add command-line options --noyyget_debug and --noyyset_debug", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c947396cda32f6f1f430fb3b128b7ecf0446498b", "commit_date": "2021-12-29T22:31:18Z", "commit_message": "Replace mention of input() in documentation with yyinput()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1565a740dbeb8284c6ad09cf712df6e6b3c8ffe7", "commit_date": "2021-12-29T22:23:14Z", "commit_message": "Add command-line options --noinput and --noyyinput", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "974bb68e107b93511051fb5744d54a95667e12e0", "commit_date": "2021-10-24T03:07:14Z", "commit_message": "Remove trailing whitespace\n\nMany projects have pre-commit hooks that check for pedantic things like trailing whitespace. No harm in removing it to pacify them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ea145a7e6c0b15270b0ea913e8afbbdc516f6ea", "commit_date": "2021-08-13T15:37:10Z", "commit_message": "Merge pull request #491 from Mightyjo/issue_469\n\nIssue 469; Compute length of yy_state_buf correctly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eac09011867e1c6afc9f0da028b82553a2d479f2", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "chore(action): Clean up dead code\n\nLeave clear instructions on what to do if the Autobuild step breaks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e864186c577bfcb12c0e148a437930e4a5a6cc2a", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "fix(action): Let Autobuild do most of the work\n\nTry preparing configure with autogen.sh, then letting codeql-action/autobuild do it's work prior to analysis.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af75357b170ee7c7a67e911e31fef66dc6798332", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "Update codeql-analysis.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fceec5d95a206745bf100c16f34f68201a9a03fd", "commit_date": "2021-07-02T22:52:14Z", "commit_message": "chore(skel): Fix permissions on cpp-flex.skl", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cccc82072c425bd5c7c2a0082225c7f01e4f67e", "commit_date": "2021-07-02T22:49:38Z", "commit_message": "chore(skel): Improve comment at state buffer init.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79da5dfa0fb837f97b1f1d71377a83efa90c8081", "commit_date": "2021-07-02T22:46:52Z", "commit_message": "fix(skel): Init state buffer correctly\n\nState buffer initialization in cpp-flex.skl got lost during a rebase. Added it back in from c99-flex.skl and made improvements suggested by smcpeak.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8100144eb4e2b5e82476a958ab9690ebccb54ee6", "commit_date": "2021-07-02T21:53:29Z", "commit_message": "chore(perm): Fix permissions 755->644", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b198864a75f73f1a125a048919fa849710d10fe0", "commit_date": "2021-06-22T18:27:20Z", "commit_message": "fix compile warning originating in cpp skeleton\n\n`gcount()` is of type `streamsize` which has a system-dependent size with at least `int`. Because of the `int max_size` limit no bigger value will be returned, the explicit cast fixes warnings from compilers/static analyzers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab783a0b996a91cae2522a7b37edecf142e88f34", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "chore(make): Ensure distcheck cleans up directories.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50819bb82a87e4e310690ce5a90ab798c50e2093", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Fix porting errors from the cpp to the c99 and go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d128474a79a1e781a67076c751ab773c11c65e2", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Use yypanic in place of YY_FATAL_ERROR.\n\nyypanic() is new in the c99 and go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "988d379eb082423274381656863c804b00f82427", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Add state buffer size handling to reentrant scanner skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "916636cb96a2334ca4c403f8ac293e202f72ca37", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "chore(test): Declare script variables before use.\n\nFor set -euvx", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1ed12a1b0355021c75e7aecaacc2a64dd11eb97", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Add state buffer size handling to non-reentrant scanner skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e61f190ef6d44e317bf4c28ec48c21779efab746", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Ensure size of Reject state buffer is sufficient each time yy_switch_to_buffer is called.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "379af7681d10ae78f4f334ec555d1f9e64123361", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Don't use C++ auto, it angers TravisCI.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4162d3653d07a55e05891d986da2a1a92386331", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Fix test failure on TravisCI.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "470c8a201ff2075f2e46823e68a0feafe6d5e097", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Test for reversion of CVE-2006-0459.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e6ad373b83473d2784133323eb42109e420f18b", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Test for reversion of CVE-2006-0459.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b073fdda2242a8e4a0f70244c0ae83d34f099b1", "commit_date": "2021-06-08T15:11:28Z", "commit_message": "Merge branch 'yy-init-buffer-nonnull' of git://github.com/Explorer09/flex into Explorer09-yy-init-buffer-nonnull", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60c4453b6ac1e29dbe039216ed948108eb9c6701", "commit_date": "2021-06-07T01:30:46Z", "commit_message": "scanner: Fix compiler confusion in yy_init_buffer()\n\nWhen complied with 'gcc -O3', the yy_init_buffer call can confuse gcc,\nthinking the 'b' pointer may be NULL. (gcc would warn that if\n'-Wnull-dereference' is used). Fix the confusion by never pass a NULL\nconstant to the function.\n\nFixes: #377\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dada40b50f6b5121ce439245815216d52afb537e", "commit_date": "2021-06-07T00:39:52Z", "commit_message": "Remove manual m4 search code. No more stat() dependency.\n\nThis reverts commit c34590c4bf067d4e749e5298a8ce9f90072d6332\nand all search code patches that followed it.\n\nThe execvp() would do the $PATH searching of m4 for flex. There's no\nneed to duplicate the effort.\n\nAnother reason for the removal is to remove dependency on stat()\nsystem call, which would cause a problem in a 32-bit OS accessing a\nfilesystem with 64-bit inode number (see #413).\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c26cd7bc13b30fcfafe394330f3fe70672d9e47a", "commit_date": "2021-06-05T18:37:20Z", "commit_message": "Merge branch 'autogen-sh' of git://github.com/Explorer09/flex into Explorer09-autogen-sh", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83aaf1b4ce146f0c2f7cf18e932457d5dba039b1", "commit_date": "2021-06-05T18:21:51Z", "commit_message": "Merge branch 'doc_fix_typo' of git://github.com/houtanb/flex into houtanb-doc_fix_typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb2e0aaccaa9b17dc00362fbac5aa294da466d64", "commit_date": "2021-06-05T15:36:21Z", "commit_message": "Merge branch 'westes:master' into esr_retargeting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bd5b0213a7fa2abb01cd9410886d6d5cc5768f7", "commit_date": "2021-06-05T11:24:00Z", "commit_message": "Create codeql-analysis.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d5d2dd4afdfe4f4cfb10556ffda540a34b92bd0", "commit_date": "2021-06-05T05:29:41Z", "commit_message": "chore(test): Clean up debugging in tests", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5772bb456e50299421cbd0da38d20ace9699d1e7", "commit_date": "2021-06-05T05:14:26Z", "commit_message": "fix(test): Re-add posix test input to repo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e893215c51fb0a8afa8d5be0c8965eec522733a", "commit_date": "2021-06-05T05:08:37Z", "commit_message": "chore(test): Enable shell '-eu' strictness", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90713678d88fd3d2bca71d8913de6f0e7ba9a681", "commit_date": "2021-06-05T04:46:26Z", "commit_message": "chore(test): Regenerate ruleset.am", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "455d913d34dd2bee32bdbeb1d68ac70cfd5ad8e4", "commit_date": "2021-06-05T04:29:05Z", "commit_message": "fix(test): Make test generating scripts work in VPATH builds", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aeb2cb553974b752f99de33a6951c815f44cb720", "commit_date": "2021-06-05T04:26:47Z", "commit_message": "fix(test): Re-add test inputs to tests/\n\nGenerating these test inputs on the fly breaks VPATH builds and 'make distcheck'.\nGlad we have a lot fewer of them now, at least.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fa412a3d95b3c2168dca1a4ad9139d273207756", "commit_date": "2021-06-04T04:37:59Z", "commit_message": "fix(build): Set texi2* include paths for VPATH.\n\nOverride the TEXI2DVI and TEXI2PDF automake variables to add an include directory so VPATH builds work.\nI'm not thrilled with doing this. The right thing is probably to move the included examples to doc/ and do the\nVPATH magic in examples/manual/ where LaTeX is better able to deal with it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46299d7dbc53be696b59bc7846bc0d9634349876", "commit_date": "2021-06-04T04:34:40Z", "commit_message": "fix(build): Expand wildcards in Makefile.am.\n\nWildcards were causing automake to generate spurious build targets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6472493e20fc1e604592b7a698f85e515d97856", "commit_date": "2021-06-04T04:33:30Z", "commit_message": "fix(build): Replace wildcards in Makefile.am.\n\nWildcards were causing automake to generate build rules for the *-filename dummies. They're not generally portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e50f889082e8a5ee301222b0495ad3d6aa312506", "commit_date": "2021-06-04T01:56:59Z", "commit_message": "fix(build): Prevent automake computing default _SOURCES for tests.\n\nAutomake attempts to compute default _SOURCES for the test-yydecl-*.sh runners generated by test-yydecl-gen.sh. Providing an intentionally empty _SOURCES variable for each script fixes the attendant errors.\n\nAlso removed EXTRA_DIST lines for deleted test inputs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a297d520ae8f0d718a7aab5975550eb8dc1f2cae", "commit_date": "2021-06-03T00:17:38Z", "commit_message": "Merge pull request #16 from eric-s-raymond/retargeting\n\nReviewing ESR's Retargeting branch from westes/flex", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d93876e2249adec9e3a1e8f02e28bdf9a64e4c1", "commit_date": "2021-02-05T12:33:45Z", "commit_message": "Remove prrequisite from .l.go suffix rule\n\nautogen gets indigestion iv you give a suffix rule a prerequisite,\nso don't do that.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5960fabbac43191b424c56a7cbb8befbff5dd42", "commit_date": "2020-12-04T16:31:27Z", "commit_message": "Go back end: More Goification of names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33bd31b74b23f5ba01046b3a492adb29acf75fc2", "commit_date": "2020-12-04T11:49:26Z", "commit_message": "Portability fix in tests - not all languages have ++ and --.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b022d451d83a285b1bb41d5f41692ee2ef29b16", "commit_date": "2020-11-26T21:47:37Z", "commit_message": "check that each skeleton we build has the correct number of sections (#7)\n\nProbably we could turn the section markers into m4 macros, but until\r\nthen this will prevent accidents.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5c3fcfb3ebacd2f98d508bbc00965afa60f1203", "commit_date": "2020-11-26T21:24:28Z", "commit_message": "Mollify picky C compilers some more (#8)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b528c7efdc06ec59ce354d9db63a475514884a10", "commit_date": "2020-11-26T12:25:25Z", "commit_message": "Improve standards conformance in C99 and Go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f1c6960ceea2903153e2d5d7a41bfe9b6808072", "commit_date": "2020-11-20T12:32:35Z", "commit_message": "Deal with a GCC warning elicited by upgrade to GCC 10.2.0.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd0fb2920b15fc7a5432c49299d3aad044ef1608", "commit_date": "2020-11-20T12:32:35Z", "commit_message": "In the Go back end, more moves towards Go conventions.\n\nAll documented in the go-flex.skl header comment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b3f8db536f318b272b24ca83523ea5aa61580aa", "commit_date": "2020-11-20T10:52:06Z", "commit_message": "Improve information hiding in C99 and Go back ends.\n\nThings that don't need to be declared before that DFA\ntables shouldn't be.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d6d37f246be553cb7fd68fe806549cafc174316", "commit_date": "2020-11-20T09:52:32Z", "commit_message": "In the Go back end, begin Go-ifying the public interface.\n\nstruct yyguts_t becomes FlexLexer typedef.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a9a913893c2c8309fb0f9ea9ab8e2331e5ba9dc", "commit_date": "2020-11-19T23:26:48Z", "commit_message": "Eliminate forwards in the C99 back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75da1e1d8a8dc0b89803495b951627e76e821822", "commit_date": "2020-11-19T22:33:02Z", "commit_message": "In the Go back end, elimate some forwards.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df34448330392a583a878b6a9990c63dde5aa412", "commit_date": "2020-11-19T22:07:37Z", "commit_message": "More Go back end cleanup.\n\nRemove the Bison-bdidge kludge.\n\nRearrange yyguts_t so the public members are grouped together.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "820199d2a90d01d9f06b57d0c56be6512788e7fa", "commit_date": "2020-11-19T14:29:22Z", "commit_message": "In the C99 and Go back ends, rearrange code...\n\n...to clean out a forward declaeation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c37e76ca59bd6d8828786121552d8c9b3b7f781", "commit_date": "2020-11-19T13:54:42Z", "commit_message": "Improve type checking in c99 and Go back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1105abd8bd914c86c9a8e75330c501b227f1b56", "commit_date": "2020-11-19T13:46:41Z", "commit_message": "In the Go back end, more moves towards Go-like names.\n\nNot touching the public interface yet.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e502c5d485dbba21b81692d1ae8305a3378f0bff", "commit_date": "2020-11-19T06:55:55Z", "commit_message": "More massaging of the fake Go skeleton in the direction of Go.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ce66818db5a26f2e3f20e9232b40278174b8e443", "commit_date": "2020-11-19T06:28:58Z", "commit_message": "Stop emitting unbalanced markup in the skeleton.\n\nIt was fixed up by generating matcing unbalanced markuo in dfa.c,\nbut a good idea this was not.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b0503e1684bcb7d586678fefce270f5f64e8ceb", "commit_date": "2020-11-19T06:20:31Z", "commit_message": "In C88 and Go back ends, remove remnant GENTABLES conditionals.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48a25d4966b68fa289dd66744bcef9467b9b9c17", "commit_date": "2020-11-19T06:00:11Z", "commit_message": "Partial move of Go back end to Go canelCasing in names.\n\nNo publicly visible names are touched yet. This is all preep work.\nAll tesrs pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "866e31dafd017755fe3e7fcf59e8a89a1accb4df", "commit_date": "2020-11-18T05:02:04Z", "commit_message": "Go back end: Change the prefix option to set Go package name...\n\n...presebtly commented out.  All tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d15dfae9cf386c9871dda39838fcef7827c4d2", "commit_date": "2020-11-17T12:28:40Z", "commit_message": "TYhis commit is a model for how to add a new back end.\n\nBegin the Go back end. Right now it's a fake that generates C...\n\n...but this commit puts all the build and testnmachinery in place\nfor when it's not.  All tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be50e74b5c58c786592948b22f389c95139ed5a4", "commit_date": "2020-11-17T10:52:08Z", "commit_message": "Improve cleanup of generated .txt after tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eaf12696afcf66668618ad3f2bdba854d919f3a4", "commit_date": "2020-11-17T10:42:50Z", "commit_message": "Convert the debug test to be ruleset-based,", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2a64fa1746c3a7d515a2bb1ab7bda9462bec10c", "commit_date": "2020-11-17T05:07:07Z", "commit_message": "Rename some rules files to make maintaining .gitignore simpler.\n\nDue to some limitayions in git ignore wildcarding.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52e6bb3e84d5ab23c692cc7636c01b486ca1bb71", "commit_date": "2020-11-17T04:24:30Z", "commit_message": "Fix error in testnmaker: shell case alternations evaluate easrky.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b068bede45b84ed80dac7f7d1943e093bf42bef4", "commit_date": "2020-11-17T00:36:31Z", "commit_message": "Merge remote-tracking branch 'westes/master' into retargeting\n\nAll tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad9f2d493ebd3ae9eabdb9bd62043909394af484", "commit_date": "2020-11-16T22:55:59Z", "commit_message": "In C99, remove unneeded forward declarations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "654ab2012f9345798ef3a214ccb6ebd1f1b4d12d", "commit_date": "2020-11-16T22:32:40Z", "commit_message": "Up-gun a test to use the lineno code in the array+BOL case...\n\n...and fix the bug that turned up.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a67532dd5799676b9e1629b8fd2dc9f526383e09", "commit_date": "2020-11-16T11:10:47Z", "commit_message": "Remove now-unused parts of test/testwrapper.sh.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22b9ea63bdc0a7ac1f9b8593cf19887cbe1d22fc", "commit_date": "2020-11-16T10:54:38Z", "commit_message": "Remove the \".one\" category of tests; they've been replaced by rulesets.\n\nThis reduces the complexitry of the test machinery as well as making\ntests less backend-specific.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0f53f6930bb3d8fc8878e3fc9996b95d59a6b4f", "commit_date": "2020-11-16T10:32:38Z", "commit_message": "Remove now-unused SOURCES declarations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eacb312e5b9868dba734996d6c72fc60e0d75036", "commit_date": "2020-11-16T09:51:00Z", "commit_message": "Improve instrumentation of test failures.\n\nAlso, yyinpt.txt is generated and does not need to be checked in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709c1724ed74bee614c9e35b99d630396822f8c3", "commit_date": "2020-11-16T03:37:24Z", "commit_message": "Repair some bitrotted variable-trailing-context code.\n\nIt decayed because the test for this feature only exercised the nr\nback end. We add a ruleset--based test to verify on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df632cf2eb1e1def8f63d08d54055862ac6d8978", "commit_date": "2020-11-15T17:24:35Z", "commit_message": "Fix typo revealed by Go porting work, and improve test coverage to match.\n\nWe a ruleset test for BOL matching and a test for the array case of yymore.\nImprove yymore testing by adding tests that require a BOL match in\nboth array and pointer cases.\n\nAlso, convert lineno sporadic test to be ruleset-based so it's\napplied on all back ends.\n\nNo cide changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3603f033509d5a214b603f60ce4dd6ed7819843e", "commit_date": "2020-11-13T13:23:10Z", "commit_message": "Minor build system fixes before starting the Go port.\n\nRemove two dependencies that the C99 back end no longer has.\n\nRepair to force in-time building of skel.h files.  This way of doing\nit reduces where a new skel dependency has to be declared in the\nvuilld recipe to the one spot where the flex.h file is made from the\nflex.skl file.\n\nThe posixly correct test only needs to be done once, since it only\naffects how the tables are genetated rather than setting code\nconditionals in the back end.\n\nAlso, some comment typo fixes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a48798ca94c0afd8ff5b5e2e26948948352a2ad", "commit_date": "2020-11-12T23:45:54Z", "commit_message": "In C99, more rearrangement to make public API calls visible in actions...\n\n..,without resorting to forward declarations. Last C99 cleanup before\nthe Go port begins.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3e0d791eaca3485dadfcb84530f23c360f61ec9", "commit_date": "2020-11-12T15:49:10Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "110899d69e54c206d599fae07480ddb6720d7ce2", "commit_date": "2020-11-12T14:53:26Z", "commit_message": "Clean up test/Makefile,am's EXTRA_DIST.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa6a0fc6665b5315fb72903f8b3d27cbde61901d", "commit_date": "2020-11-12T13:37:50Z", "commit_message": "Declare that rulset.am depends on *.rules files...\n\n...for automatic remake when a new one is added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1991ad515f102d2eeb858180d7aa2f6b9344da5e", "commit_date": "2020-11-12T12:53:29Z", "commit_message": "Fix another carnivorous typo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c8b6c1c1fb714ced0b43d945116f960bbe4136a", "commit_date": "2020-11-12T04:15:55Z", "commit_message": "Clean out some small C dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a973b0efd8b1860244323e4af34fceb6d1eacef", "commit_date": "2020-11-12T03:52:47Z", "commit_message": "Booleanization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43aed9f0c9d9ee82646a1985fdee2e1bb213b352", "commit_date": "2020-11-12T01:57:39Z", "commit_message": "Typo fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b27cb2366bab475d56b9ec530c7ea63ef9f98bb", "commit_date": "2020-11-11T23:37:31Z", "commit_message": "Fix two minor m4 errors found by Daniel Brooks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01850d3ba1f1d0bbfe45a24331fba2192da1f321", "commit_date": "2020-11-11T23:13:15Z", "commit_message": "Eliminate almost all forward declarations from C99.\n\nOne less C-ism to deal wit h when porting to a new target languages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3854cd2c67e31ddfacfe5a6b3aba1347e63be420", "commit_date": "2020-11-11T11:52:49Z", "commit_message": "Add a test for trailing conyext rules.  Fix the bug it turned up.\n\nAlso, roperly condition some variables related to trailing contexts.\nMakes generated parsers ever so slightly smaller in this case.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab32ad65bb13eff5c1210c56d564af2c71516262", "commit_date": "2020-11-11T00:56:39Z", "commit_message": "Repair some markup damage in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2056b2184d018c919b63abd26f1784ebf47077ac", "commit_date": "2020-11-10T12:33:10Z", "commit_message": "Add a trailing guard to the magic-rewrite recignizer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87686ff2fbb94978f8c8bf9dc79284bfcd8343a1", "commit_date": "2020-11-10T11:55:22Z", "commit_message": "Successful elimination of preprocessor dependencies fromm C99 skeleton.\n\nThere's only one left. in the prefix code.  We leave that in place\nbecause ity will be needed if we ever want to replace the default\nC back end with C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b68eb3634f1b9edc9e7d35f932661d0ba2a7e7c", "commit_date": "2020-11-09T20:39:49Z", "commit_message": "Change two member names to make rewite rules easier.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa782b6233e0914591b0e967d1662449744e9497", "commit_date": "2020-11-09T09:26:56Z", "commit_message": "Explain why 3 API functions don't have magic rewrite rules.\n\nThe functions are: yy_current_buffer(), yy_flush_current_buffer(), and\nyy_set_interactive().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2995af0eeb3792506f2b9975788443f67ac4b389", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "yy_flex_debug -> yyflexdebug.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db1dca76c1fd042516661218ba588a0aae682587", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "Make the rewrite flag visible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "191d7068c3045e3a966800428d64881590cf61a5", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "Fully m4ize yymore()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8aabc897cd0729b9961b8b919a6ed7331cc32aca", "commit_date": "2020-11-07T06:48:56Z", "commit_message": "Add a test for yymore, and fix a bug it turned up.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec140e6477c4bcd09ae6e92b24c351e8f006e0cd", "commit_date": "2020-11-06T17:04:20Z", "commit_message": "m4ize yyreject() handling.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d056db08e660c7513b5d57985e09c5a7e3e3e4b4", "commit_date": "2020-11-04T11:43:47Z", "commit_message": "Fix errors that were masking problems with yyreject().\n\nEnsure that derived skel.h includes are removed on every clean.\n\nFix a bad shell line that prevented proper cleaming of derived *.c\nfiles from tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9414d653c78baf0c795584aeb6404a863494994", "commit_date": "2020-11-04T07:40:37Z", "commit_message": "Revert \"Successful m4ization of yyreject().\"\n\nThere seems to be something in the build recipe or test system that\nmakes the yyreject test unreliable.  Reverting until I figure out\nwhat.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b27be4b2ef4fb44eda1ee0ff76a960c4d7b0819", "commit_date": "2020-11-03T17:58:06Z", "commit_message": "YY_AT_BOL() -> yyatbol(), yy_set_bol() -> yysetbol(), and make them magic.\n\nThe tradeoff is a bit delicate here; yy_set_bol() did not strictly\nspeaking need to change. On the other hand, squeezing the underscores\nout of YY_AT_BOL() but not yy_set_bol() would have been exactly the\nkind of irregularity that people trip over and curse.\n\nThe underlying issue is of course languages like Go and Python with\nvalidators that get upset by all caps and embedded underscores. On the\none hand, we want to not be churning the Flex API gratuitously.  On\nthe other hand it is desirable if as few entry point names as possible\nneed to change in different target languages.\n\nThe approach I'm taking to deciding this question in individual cases\nis this: if an entry point name is likely to appear in actions, and\nmust be recognized as magic by Flex itself in order to have a final\ncontext argument added or an object reference prepended, then it must\nbe multilanguage-safe - not all-caps and no underscores.\n\nAny name that does *not* need to be wired into Flex can be left\nalone. Users may have to change it when they port.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e6b59bb7ac98ab3eba374f6b44a6fa1e16c65ba", "commit_date": "2020-11-03T16:11:58Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35cdc7cabe0dc8733cfb1e8a76c868c8d7c71d26", "commit_date": "2020-11-03T07:00:09Z", "commit_message": "Implement and document the rewrite/norewrite option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2f38557eea8c18bc087d56e5afe74fe9728ded9", "commit_date": "2020-11-03T01:35:28Z", "commit_message": "Pull two random flags into the ctrl structure.\n\nAlso, some documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb6e30e9d51236f491785e7ba5537752be2c9ced", "commit_date": "2020-11-02T10:58:28Z", "commit_message": "Successful m4ization of yyreject().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22d0a5d19265bf1fbc507e39bf53d63d98817f7c", "commit_date": "2020-11-02T06:33:46Z", "commit_message": "yyless is successfully m4ized.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6499117d78f332a04e784778aff25cf9a99ab82", "commit_date": "2020-11-01T22:38:58Z", "commit_message": "Add a test for yyless.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9002f8f936c91c3907945df037712f809fe65e7", "commit_date": "2020-11-01T17:55:35Z", "commit_message": "Simplify and generalize the testmaker macros.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1d12f0cd72dc10b16436c17ef38dfa99b21286", "commit_date": "2020-11-01T08:54:07Z", "commit_message": "Portability improvement on the extended test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f449b421192edaebfdb1da0f29e69179493b00a", "commit_date": "2020-11-01T08:53:46Z", "commit_message": "shellcheck cleanup on all scripts. Turned up a minor bug in testmaker.sh.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a53aec8e86c4e62fe6c0ac48abd893dec502ef19", "commit_date": "2020-10-31T22:19:29Z", "commit_message": "Rulesets now carry their test loads with them.\n\nMakes it easier to see what the tests are doing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b5ef23d7043366b887d2207b5d085c25acbd6c7", "commit_date": "2020-10-31T15:59:59Z", "commit_message": "Modify the reject.rules ruleset so it actually tests yyreject().\n\nThis turns up the fact that m4ization of yyrehect() didn't work, so\nwe back that change out.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fe9c68941a7c74f461658c70c12fe886438d505", "commit_date": "2020-10-31T09:15:37Z", "commit_message": "m4ize handling of yyterminate, and translate another stray #define.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "076ee33fc4a815f8a35ff88c56944cdeb5b692d6", "commit_date": "2020-10-31T03:06:57Z", "commit_message": "More small steps towards taking cpp out of the required pipeline.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48d47f6423b2596e666ab96e4eaad2a8602d9ff8", "commit_date": "2020-10-31T03:06:00Z", "commit_message": "Convert yyreject() from a cpp macro to an m4 macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4de7a57a7f585f9570ddc2d9c8974f3ee01f4cc", "commit_date": "2020-10-31T02:32:28Z", "commit_message": "Fix a minor bug in gathering removables.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cc8835d3ce5924e369c4a6f542fc5e736643cac", "commit_date": "2020-10-30T00:34:14Z", "commit_message": "Add %option bufsize, required for testing under non-C targets...\n\n...since we can't count on the C preprocessor to do it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95efae546902ea23fb46aed9f26181e1b2cb2f6f", "commit_date": "2020-10-29T21:48:32Z", "commit_message": "Abolish a platform microtweak after consulting with Will Estes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bf1889ca76d66c37d8ea01c087a693aa296b5c6", "commit_date": "2020-10-29T21:19:47Z", "commit_message": "More de-preprocessorization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59c26779eb4e10130658f8067566c6813a086c54", "commit_date": "2020-10-29T04:18:25Z", "commit_message": "In C99, make --nounistd a no-op. Explain this in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc11ff302062ec7dd69d37811eac1d2be7fe97d0", "commit_date": "2020-10-29T03:09:26Z", "commit_message": "In C99, assume <stdint.h> is available to simplify the code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02237b18b280bf6a7ba4ca22e3b53d8b99b7f011", "commit_date": "2020-10-29T00:49:19Z", "commit_message": "Convert handling of USER_ACTION, YY_END_OF_BUFFER_CHAR, YY_STATE_BUF_SIZE...\n\n...to use pure m4, not cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbdc123fde857ed61fc450f887684e524e97167e", "commit_date": "2020-10-29T00:28:17Z", "commit_message": "In C99, de-cpp-izee processing of USER_INIT and RULE_SETUP.\n\nAlso, fix a harmless compiler warning introced three commits back.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15948a9b1405e53f7d6fc6e3fedf9ad7b5ca04e0", "commit_date": "2020-10-29T00:15:24Z", "commit_message": "In C99, process yylex declaration stting directly through m4...\n\n...instead of relying on cpp to do it. This commit also adds a\ntest for correctness of yydecl on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9de953f78fc011d8540cab203ae8aa761fb02cf0", "commit_date": "2020-10-28T17:01:21Z", "commit_message": "In C99, remove more preprocessor dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29116efd20d33cb41ac87d9fd4e81d0b840a287c", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove cpp from the way the extra type is handled, use pure m4 instead.\n\nHas the effect of making the code a bit smaller when no extra type\nis born.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aea2d30573d4d84e9d60ca43739d5a46efb26836", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Finally ever the dependency on the YY_FATAL_ERROR macro.\n\nStill supported as a legacy interface in the default back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "079b2d1c8643174610304f90f711a485d5186f96", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Eliminate YY_BREAK macro, replaced with an m4 hook.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baaaa45b40a843cfb1fdc438bf673df23d0e9cbc", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "A step towards getting rid of YY_FATAL_ERROR...\n\n...because we can no longer depend on cpp to be in the pipeline.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ba9f483bfd539d74bbb4c9152c7a80437d228e7", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove for cpp dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af8d41eb94ca9d15c7a5c33fddfb9ce0e0c559c2", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "In C99, abolish indirection through a void pointer...\n\n...to get to the scanner internals structure.  While this was a valiant\neffort at information hiding, it won't port out of C to any other plausible\ntarget language.  That being the case, we cut the LOC.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "169612a929ab64036c5fd904f0794f6adb74df4f", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove cpp dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1dc1c0911b48e6bb4137a4aeeeead49082236eb", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Sever a number of dependencies on cpp by adding rewrite rules...\n\n...in the flex scanner.  Presently this works for yyecho(), yyinput(),\nyystart(), yybegin(), and yyunput().  These no longer need to be nacros.\n\nA few more remain to be done, notably yyless() and yymore().\n\nAlong the way, deprecate YY_FATAL_ERROR and add a replacement option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f854b710512bb20ff41563e7ab9edfc10071fc08", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Clean C preprocessor assumptions out of C99.\n\nAlso, continue booleanizing where we can.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af5fa13bb376dc8ee1df0d4ff2a70950997e9de", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Outside cpp #define doesn't work, so deprecate YY_FLEX_SUBMINOR_VERSION.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b244d82cf0758daece2f764dd3fdc63cc9dff60f", "commit_date": "2020-10-27T03:26:28Z", "commit_message": "Remove an ugly little knor in the C99 yyunput code...\n\n..left there from a weird compromise when the default C back end also\nsupported C++.  Add a yyunput ruleset testing it on all back ends to\nverify that the change is good.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5d2d88a6d04333ac4a6655afa0613a36ce4aa2c", "commit_date": "2020-10-27T00:03:22Z", "commit_message": "Fix C emission lurking previously undiscovered in nfa.c.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baafce5c719cabfa63cb1cdd5e94ee02de1e3edf", "commit_date": "2020-10-26T19:45:23Z", "commit_message": "In C99, factor a nasty hunk of macrology into a function.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffcdee1fa2dae5d86082e199b17c85e09ab52630", "commit_date": "2020-10-26T18:26:49Z", "commit_message": "In C99, use bools where it is semantically reasonable.\n\nAlso, abandon the old-fashioned practice of using ! as a NULL\ntest on pointer-valued expressions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8de043be28e797b49ce86aead6db6dc79f5742d", "commit_date": "2020-10-26T14:52:53Z", "commit_message": "In C99, group macros for use in user actions...\n\n..and move the group as late in the generated code as we can.\nThere's no reason for those to be in scope when tables are\nbeing generated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9bfc5ce27d86f7c416aa2f9eadc7ca04d4edf868", "commit_date": "2020-10-26T13:56:18Z", "commit_message": "In C99, remove most code dependencies on yyin/yyout/yyleng/yytext macros.\n\nThese served a purpose when the code had to handle both reentrant and\nnon-reentrant cases.  Now, while they should still be available in user\nactions, the generated code is much less confusing if the yyg pointer\nin the references is explicit.\n\nAlso, drop VMS support and consolidate platform-specific references\nat one spot. This is in the same commit with the macro cleanup because\nit included getting rid of the last stray yyin/yyout references.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0504115662b1d1c09add43de135689e54173a88", "commit_date": "2020-10-26T12:07:06Z", "commit_message": "In C99, strip out ccp #ifndefs that can't fire if not using cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18b3523680d1e977950895a6bb7296cd3757397b", "commit_date": "2020-10-26T11:59:36Z", "commit_message": "Strip legacy macro definitions out of C99.\n\nThis is both a step towards Go/Rust and a demonstration that\nall the ruleset-based tests run wtout them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a4cd247ca6c1b92f450cb3fe71bca6dbc69e20b", "commit_date": "2020-10-26T02:34:23Z", "commit_message": "Polish documentation and fix up some uses of the old interface.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e71dbbf5ddb9ed42819fe46ac2325ae8e03f8a5", "commit_date": "2020-10-26T02:08:16Z", "commit_message": "Polish tests and test documentation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b758041c354ca28ce441615481abdd591c24fb", "commit_date": "2020-10-26T02:08:33Z", "commit_message": "Expand M4_HOOK_CONST_DEFINE into multiple macros for different types (#6)\n\nThe Rust backend needs to know the type of every constant; it can't\r\njust guess and it doesn't have text macros like C.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac97741a0b3f9d33beb2c081af2089de209290cd", "commit_date": "2020-10-26T02:08:18Z", "commit_message": "Fix Next link in the Overview of the Retargeting section of the manual (#3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "307645b7b7a21453fb8a777ddb7b0bf76df84dfd", "commit_date": "2020-10-25T13:53:18Z", "commit_message": "Narrow the interface between Flex and the skeleton file...\n\n...and reduce C preprocessor entanglement in the C99 skeleton.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "393b0b573325239ca16452dd5175feed2fd465ad", "commit_date": "2020-10-25T04:13:56Z", "commit_message": "yyconst is a pre-ANSI archaism. Remove it from the test code...\n\n...so the C99 back end doesn;'t have to carry it.  It's still defined\nin the default C back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68d658f60c42ad22f93f7b982934f29becce7428", "commit_date": "2020-10-25T04:00:47Z", "commit_message": "Sever a C99 dependency on ECHO,", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ec30d9fee286c619fbee457680821a43a0b610b", "commit_date": "2020-10-25T04:00:47Z", "commit_message": "Strip legacy support from the c99 back end.\n\nGone: C++ support, M4_YY_IN_HEADER. M4_YY_REENTRANT,\nand their negation symbols. The strange macrology\nrequitred to makecunction signatures conditionally\ncompile for npn-rentrant or reentrant is gone.\n\nThe default C back end is not touched by these changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eaf84e669dab968dd9ea0e4b5461e13486cd2d97", "commit_date": "2020-10-24T16:28:19Z", "commit_message": "Add tests for both senses of the Lex compatibility option...\n\n...fulfilling a promise made in \" Fix buggy handling of lex\ncompatibility...\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8301e241dcbfe50e1bc987e872c0b5e0ef2cbf18", "commit_date": "2020-10-24T12:52:51Z", "commit_message": "Move some boilerplate out of rules files.\n\nThey are now pure Flex rulesets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91b3016f9dd908db3b6271c73bbd245b7d2b4680", "commit_date": "2020-10-24T11:46:41Z", "commit_message": "Add a test for correctness of {n} behavior when posix_compat is off.\n\nAlso, document what the posix and posixlycorrect rulesets are doing\nnetter.  I lost a day because the dependency on setting POSIXLY_CORRECT\nomn the envoronment was not obvious.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bec427f3ea3d755dd039f2946340afb30f65a1e", "commit_date": "2020-10-24T11:10:58Z", "commit_message": "Turn the posixlycorrect test into a ruleset-based one.\n\nRequired generating the posixlycorrrect rules with tests/ruleset.sh\nso all platforms will have them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5b4a2ee966300982e8a19f17afe8e7ebe99a2e3", "commit_date": "2020-10-24T00:06:42Z", "commit_message": "Force reentrancy on on the c99 back end...\n\n...amd repair the one c99 test with a non-reentrant main.\nThe reentrant no longer needs to be specified in an %option line\nfor C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c92f5df6a1f52be3e665c05776d8fb1b3af6988e", "commit_date": "2020-10-23T01:03:59Z", "commit_message": "Make the ccl test ruleset-based for all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "683fa301a7575e019b96a1f19ed6d5ebe3226e56", "commit_date": "2020-10-22T23:50:54Z", "commit_message": "Documentation cleanup - fix a wrong assumption about tests.\n\nThe quotes test is backend-independent and doesn't need\nto be run anywhere but C.\n\nAlso, remove some debris from the C99 skeleton,\nit injects noise into C output comparisons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97b5bc730fef2f36e34ff6988252eb2d11da90e7", "commit_date": "2020-10-22T17:53:48Z", "commit_message": "Repair CLEANFILES and EXTRA_DIST in tests/Makefile.am/\n\nMy previous changes were based on incorrect assumptions\nabout time of evaluation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efb179b87d8301394d87221faf38ea488f52b75f", "commit_date": "2020-10-22T16:24:38Z", "commit_message": "Use wildcarding and negation toi cut the verbiage in tests/.gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5017c14b09926f0b5e862dc79ea5bd7feb0d76d", "commit_date": "2020-10-22T15:24:27Z", "commit_message": "Fix buggy handling of lex compatiblity option introduced during the retargeting work.\n\nNot caught because we don't test that option. It's on my TODO list.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee9f33ac5dfb09616987b148b55bc819dc73a71d", "commit_date": "2020-10-22T15:24:27Z", "commit_message": "Convert the \"posix\" test to be ruleset-based...\n\n...so it will run automatically on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dddcaa7c973e17db75d31966ce8a93b82781163f", "commit_date": "2020-10-22T12:29:28Z", "commit_message": "Another big sinmplification of the test machinery.\n\nIf you drop a file with the extension \".rules\" in tests/,\n\"make check\" will now automatically make and run tests\nfor all back ends - presently nr, r, and c99.\n\nIt would be trivial to change ruleset.sh so all table-compression\noptions are checked for all rulesets, and probably a good idea.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd6fdfdadf13575c3534838cdbd5925ae641ebfc", "commit_date": "2020-10-22T11:15:26Z", "commit_message": "Remove unused variable settings in tests/Makefile.am...\n\n...and group the log-compiler settings together where they can be\naudited.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ff19867ca4ea1c332f4c2230444e189c1cedcf6", "commit_date": "2020-10-22T11:06:23Z", "commit_message": "Abolish the cpp test extension. Those things are just tessts.\n\nThe distinction was intriduced when I was first feeling my way\nthrough the test machinery. It doesn't buy us anything.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf6e72bb3341b083a18ecba3fa3fb38097c625ce", "commit_date": "2020-10-22T03:02:40Z", "commit_message": "fix a few shellcheck lints that have shown up (#5)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7cc373669e9f3a51c2bd6be53d601d48e41f06a", "commit_date": "2020-10-22T01:58:24Z", "commit_message": "This commit adds c99 to the list of back ends for tableopts testing.\n\nThe overhaul of the test system is done for now, though there will be\nmore woro to do when testing has to support compilers for non-C\nback ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf0f126d13f03614de662b6f44d66d1f3eaf7abd", "commit_date": "2020-10-22T01:12:13Z", "commit_message": "The new test system now covers table option tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fb90cc835cdcc5ca942b9afac074850ac6ecc4f", "commit_date": "2020-10-21T23:45:27Z", "commit_message": "Generate some dependency relationships...\n\n...rather than maintaining them by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1200a3da64d773dd85246aaa9792e92bceafb9bf", "commit_date": "2020-10-21T22:02:12Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd8e62a1b732eacf77757867f6adb966965231b8", "commit_date": "2020-10-21T22:00:07Z", "commit_message": "Teach testwrapper.sh to parse compression options from testnames.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d9826a40d92c2546f1755e9ef82b34252dffac79", "commit_date": "2020-10-21T21:58:16Z", "commit_message": "Use CxF rather than C_F to prevent case ambiguity, so...\n\n......test names can be split on _ characters in order to parse\nthe compression options desired in the test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a110b3b67db86d757b4ccf88dba306b94ebf679d", "commit_date": "2020-10-21T21:13:01Z", "commit_message": "Simplify testwrapper.sh by abolishing the -t option.\n\nIt's easy enough to tell if a testfile wants a table by looking at its\nname.  Getting rid of this option is a step towards putting all\ntableopts tests in the generated set so they are trivially portable to\nnew back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8be9597d7d27b0db9f51922cbd9d3a87965b4445", "commit_date": "2020-10-21T21:08:22Z", "commit_message": "Use shellcheck on most of the shell scripts in the repository.\n\nAnd add a \"lint\" target that runs shellcheck on them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1726f1ca2dd92daa3c845034c8375171c867b85a", "commit_date": "2020-10-20T20:28:22Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30b86fbc07f691a9d534f5d548603cdbfa5d12e1", "commit_date": "2020-10-20T19:51:58Z", "commit_message": "Abolish reject.l4; all the reject tests are in the new system now.\n\nStill have the tableopts tests to do.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ea7800162ac9352b36b038e61196c21e39b2a5b", "commit_date": "2020-10-20T11:58:33Z", "commit_message": "Fold non-table-serialization reject tests into new test-generator system.\n\nEnables us to get rid of some spacial-purpose stuff in Makefile.am.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2034298f3d2efec1bc9b86fd2d43e89f89bd600c", "commit_date": "2020-10-20T10:47:15Z", "commit_message": "Integrate all possible simple tests into the new test templating system.\n\nStill to be folded in: all the reject and tableopts tests.\n\nNote: I understand VPATH builds just well enough to suspect that this\ncommit and my previous broke them, but not well enough to test\nor fix it. Mea culpa.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a1544256bf9515450d78cb9577e44f4cf6249d0", "commit_date": "2020-10-20T08:53:49Z", "commit_message": "Greatly simplify CLEANFILES and EXTRA_DIST by using wildcarding.\n\nThis reduces the amount of hand-work trquired to add a back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16f19cd7ae01e0fc097f5573d18994da02e88934", "commit_date": "2020-10-20T07:31:20Z", "commit_message": "Introduce testmaker.m4 and testmaker.sh\n\nThe existing method of generating multiple tests from l4 files is not\nflexible enough to handle multilanguage - reliance on the C\npreprocessor prevents that. This commit creates replacement machinery\nthat's more flexible and will greatly reduce the complexity of adding\nnew back ends.\n\nThe idea is to generate test .l files by combining a\nbackend-independent ruleset with backend-dependent boilerplate for\ntest mains and preambles.\n\nThis commit creates the rules files, the m4 to template them into\ntests, and a shell wrapper to drive the m4 expansion.  The autoconf\nintegration works OK, but requires additional rules at the\nend of tests/Makefile.am that probably ought to be autogenerated.\n\nThere was one other change forced by this.  In order for the new\ntestmaker to work, it needs to be possible to analyze test file names\ninto stems and option modifiers.  Having underscores in the stem\nwould make the analysis slower and bug-prone.\n\nI wanted to change them to \"-\" rather than deleting them, but this\ngives autoconf fits - it seems to not like filenames with embedded\ndashes in certain contexts.\n\nAt this commit, only one test - array_nr.l - is generated using the new\nsystem.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c23d0161dc2ebf374e1066e5f39f2f9fe6a19fba", "commit_date": "2020-10-18T02:12:25Z", "commit_message": "Cut down on input-file proliferation.\n\nWith a minor tweak to testwrapper we can allow all the versions of\na test for different back ends (counting _r and _nr as back ends)\nto share a common input file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b642977f1c6d8aab72eb4621766384c987578028", "commit_date": "2020-10-17T18:59:21Z", "commit_message": "MAINTAINERCLEANFILES typo fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f735bad052deedfff571e57145c5afc627e1f653", "commit_date": "2020-10-17T18:52:05Z", "commit_message": "Add C99 lineno test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07440122ca0a68e507bb2e03c00a4abba279af7d", "commit_date": "2020-10-17T18:13:12Z", "commit_message": "Improve explanation of m4 quoting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd08ddcf8f58658887c689e60194bc93556220e7", "commit_date": "2020-10-17T14:29:20Z", "commit_message": "Fix some minor typos recently introduced in tests/Makefile.am.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e85860015806c2684dc74b5c40f3d0dd475d4afb", "commit_date": "2020-10-17T14:19:36Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c439cfab2912e1e8b229ae7f21b635254180d80", "commit_date": "2020-10-17T12:40:29Z", "commit_message": "Finish up the simple-test set for C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff0f99585169a435a5638ed2c4fa3b13397ee615", "commit_date": "2020-10-16T18:27:46Z", "commit_message": "quick editing pass over recent changes to documentation and comments (#2)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f07c52fdc5273edf3c8fbd0c16d780f8c9900e5e", "commit_date": "2020-10-16T18:07:03Z", "commit_message": "Fix a gacomment garbled by an incautuius replace.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a4495add564cc8784ffc616ed651da83fcd365e", "commit_date": "2020-10-16T16:34:58Z", "commit_message": "Added exteded_c00 test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4615b6420cb941b382ab7673c8a6806cd8394632", "commit_date": "2020-10-16T16:27:07Z", "commit_message": "extended -> etended_cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3290c37223e5deb896c72578926e5d2e58b37689", "commit_date": "2020-10-16T16:07:22Z", "commit_message": "Actually *commit* the documentation on test conventions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6931c9f6c896aed55ab503f316c7551bc783975", "commit_date": "2020-10-16T15:56:13Z", "commit_message": "Docunent the -e/--emit backend switch and the new test convention.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4724e14e385c438e90699b1a8651e39fff420dc7", "commit_date": "2020-10-16T15:10:16Z", "commit_message": "Adding more c99 tests: alloc_extra_c99, array_c99, ccl_c99, debug_c99.\n\nalloc_extra -> alloc_extra_cpp\nccl -> ccl_cpp\n\nThese rena,es meam that the tests for all backends are in either two\nparallel series (*_cpp, *_c99) or three (*_nr, *_r, *_c99).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c9898eb1352388d17bc4cb97f644996b2c736f4", "commit_date": "2020-10-16T12:57:36Z", "commit_message": "Add first C99 backend test, the C99 spin of basic_r.l.\n\nIllustrates how to adapt an exisying test - in this case,\nbasic_r.l - for the new c99 back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "978a4a3a632bb399bb01ceca3007419ce512dc29", "commit_date": "2020-10-16T12:46:39Z", "commit_message": "Begin work on a C99 front end.\n\nThe idea behind this is to exploit the existing test suite - write a\nstripped-down, cleaned up C skeleton that only does reentrant scanners\nand tosses out features like loadable tables and header generation\nthat can't be ported to other languages.\n\nThe C99 skeleton can then serve both as a launch point for the Go back\nend and a model for back ends in procedural languages without OO.  The\ninitial version is identical to the cpp skeleton except for different\nname and suffix properties abd having M4_MODE_C_OLY forcrd on.  The\nlatter means it blows up on the C++ tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e32cd6ce31e509d4d8421b87eb06448181b6590", "commit_date": "2020-10-16T10:10:02Z", "commit_message": "Add and document machinery to choose a back end by name.\n\nBack end is now reported in the metadata comments near the top of\ngenerated files.\n\nAll is in readiness for the start of direct work on Go support.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c99e66b54df7828d48d5752686374df72befcbc5", "commit_date": "2020-10-15T20:47:42Z", "commit_message": "Change inner loops to use int not YY_CHAR, removing need for separate NUL table", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d0e5f95410fb7590b134e5a816da98d0bdaf2a", "commit_date": "2020-10-15T19:06:48Z", "commit_message": "Push some C-specific assumptions out of filter.c to the skel file.\n\nThe way this is done is by adding a capabiiliy to mine string-valued\nproperties out of skel files in Flex's binary.\n\nAlso, some reorganization to improve the encapsulation of\nknowledge about skel files.\n\nNo changes in generated test files from this patch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d658c1c167023d74ae8332f8d1b9d62435dbf8f5", "commit_date": "2020-10-15T11:36:02Z", "commit_message": "Make the format for detecting trace lines a backend property.\n\nNo changes in generated test code from this commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd60560bfd804f430924647bab625f9e887c367d", "commit_date": "2020-10-15T10:43:21Z", "commit_message": "Refactor filter.c to use line_directive_out().\n\nTo make this work, use line_directive_out() had to be servered from\nits deoendence on hidden globaks.  Which was a good idea anyway,\n\nNo diffs in generated test code from this commit.\n\nYet another well-hidden C assumption.  I begin to woner if I will\nexpire of old age before fkushing out all of these.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20779d47a7762e707b07889b48647cd08f97fb0f", "commit_date": "2020-10-15T10:13:24Z", "commit_message": "Factor C/C++ assumptions out of filter.c.\n\nNo diffs in generated test code from this commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65b508798fceb28fe0b5a7ddf316d3d728ed80c8", "commit_date": "2020-10-14T22:59:05Z", "commit_message": "More documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7f447793ab0c440159d51a3483c29463a8cea13", "commit_date": "2020-10-14T17:58:29Z", "commit_message": "Typo and markup fixes in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e740e500e21be7a95b5f19835c01bbdfd3f9fe07", "commit_date": "2020-10-14T17:16:44Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35c1cf34269654f6bf254be7cd5bd46e28d29bd3", "commit_date": "2020-10-14T15:57:24Z", "commit_message": "Remove unused code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10daafd5b4fbe8cd8c1b2d4ec34548329b14acd6", "commit_date": "2020-10-14T14:56:57Z", "commit_message": "Remove interpretation of %-markup.\n\nBefore this commit, \"rm cpp-skel.h\" may be required in addition\nto \"make clean\".\n\nSince there  no longer any pusging or poping operations, the sko\nstack goes away.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efed8275c5c047f0da75d65e9795d4b8daf56afe", "commit_date": "2020-10-14T10:48:07Z", "commit_message": "Replace all conditional markup in the skeleton with macro conditionals.\n\nBecause having two different consitionalization syntaxes was ugly\nand conducive to error.  After this change there are %% breakpoints\nand %# comments and nothing else.  Comments on %if lines have been\npreserved.\n\nI used the following script:\n\n========================================================================\n\nimport sys\n\nflagstack = []\nfor line in sys.stdin:\n    if (not line.startswith(\"%if\")) and (not line.startswith(\"%endif\")) and (not line.startswith(\"%ok-for\")) and (not line.startswith(\"%not-for\")):\n        sys.stdout.write(line)\n        continue\n    elif line.startswith(\"%endif\"):\n        if flagstack.pop():\n            sys.stdout.write(\"]])\\n\")\n        continue\n    fields = line.strip().split()\n    trailer = \" \".join(fields[1:]) + \"\\n\"\n    if line.startswith(\"%if-bison-bridge\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_BISON_LVAL]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c++-only\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_CXX_ONLY]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c-only\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_C_ONLY]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c-or-c++\"):\n        flagstack.append(False)\n    elif line.startswith(\"%if-not-reentrant\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_NOT_REENTRANT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-reentrant\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_REENTRANT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-tables-serialization\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_TABLESEXT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%not-for-header\"):\n        sys.stdout.write(\"m4_ifdef( [[M4_YY_IN_HEADER]],,[[m4_dnl\\n\")\n    elif line.startswith(\"%ok-for-header\"):\n        sys.stdout.write(\"]])\\n\")\n    else:\n        sys.stderr.write(\"depercent: unrecognized %r\\n\" % line)\n        raise SystemExit(1)\n    if trailer.strip():\n        sys.stdout.write(\"%# \" + trailer)\n\n========================================================================\n\nOne nasty little abuse if markup around yyread_r had to be fixed up by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee6ae49d671df0b149a9232843785bd51b5852b9", "commit_date": "2020-10-14T10:23:17Z", "commit_message": "Fix typo introduced when yyunput was added.\n\nThe bad commit was:\n\"Rename unput() to yyunput(); follow through in option switches.\"\n\nI shouldn't have missed this, but te build has normal warnings\nthat obscured the waning from Flex.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18ece7e2494dcd5eed3162e71f0f4ff673e6dec4", "commit_date": "2020-10-13T14:27:31Z", "commit_message": "Modernize the C in the skeleton file.\n\nGood modern style in C is to write it as though it were a strongly typed\nlanguage even though it isn't; thius, it's no l;onger considered good practice\nto apply ! to non-booleans.\n\nAlso, fix some indentation annd vraxe usage for uniformity.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bcd857589706e1b91eb2567bd2e68210198b5f4d", "commit_date": "2020-10-13T13:29:24Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7611bea3c14157d8531cd7dd7f439ac997a33bd", "commit_date": "2020-10-13T11:44:36Z", "commit_message": "Three more namespace cleanups for multilanguage.\n\nReplace YY_FLUSH_BUFFER with yy_flush_current_buffer()\nReplace YY_CURRENT_BUFFER with yy_current_buffer().\nReplace YY_BUFFER_STATE with yybuffer.\n\nThe following are the all-caps definitions still exposed:\n\nYY_FLEX_MAJOR_VERSION\nYY_FLEX_MINOR_VERSION\nYY_FLEX_SUBMINOR_VERSION\nYY_NULL\nYY_END_OF_BUFFER_CHAR\nYY_BUF_SIZE\nYYLMAX\n\nIt is not idea for this list to be nonempty, but\nat least these are all actual comple-time constants\nrather than function calls or type names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8d0162b80ac39fc3c682d39a14c490baccbcc5e9", "commit_date": "2020-10-13T01:07:14Z", "commit_message": "Update all the examples to use the new API elements.\n\nAdd a fully reentrant example.  And update to TODO file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68711fc4a755468b796aa23e0747179754e12340", "commit_date": "2020-10-12T20:23:59Z", "commit_message": "Replace YY_USER_INIT, YY_USER_ACION, and YY_BREAK #defines with Flex options.\n\nThese were the last preprocessor abuses in the Flex interface.\n\nAlso, add a TODO listing tests that need to be added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a4dd4772d26aa30a355fd15953c1cb2358143a0b", "commit_date": "2020-10-12T15:06:26Z", "commit_message": "Make yydecl an ordinary string-valued option rather than a special directive.\n\nThis corrects a minor mistake I made earlier because I did not yet understand\nthe full generality of the option syntax.\n\nAlso fixes some minor markup errors in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bd654ca0c768f2e9f3ba07f1292615a4a3b9269", "commit_date": "2020-10-12T14:38:18Z", "commit_message": "Deprecate #define YY_EXTRA_TYPE in favor of the extra-type option.\n\nFollow this through in the examples and manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da0cd947c38cc984a674827669f3396186a60db9", "commit_date": "2020-10-12T13:36:44Z", "commit_message": "Make flex --help work again.\n\nFixes a stupid, trivial initialization-time bug introduce\nduring methodizatiion.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aac8fe889600fbd15effeb8526987be34c0264d7", "commit_date": "2020-10-12T13:16:40Z", "commit_message": "Revise the manual so the reentrant interface is recommended early.\n\nAlso add the first example friom the manual, and a reentrant variant\nof it, to the example set.  And document how to integrate examples.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "721622ea6e6aaf3aa7e55d939679f21e98b76d86", "commit_date": "2020-10-12T10:56:56Z", "commit_message": "Rename unput() to yyunput(); follow through in option switches.\n\nThis change was not strictly necessary to sever a preprocessor\ndependency nor make the API uniform aross both C and C++.  But it\ncried out to be made, because now *all* the rule hooks are in the yy*\nnamespace.  This makes the API easier to document and remember.\n\nunput() is left in place as a compatibility macro for existing\nusers, but only documented as a legacy interface.  The \"unput\"\nvariants of switches and options have also been retained.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dad680611b8373cac2e5dc60e7552535bded79c2", "commit_date": "2020-10-12T09:35:24Z", "commit_message": "Deprecate input(); document yyinput() for the C back end...\n\n...leaving an \"input\" macro in place for legacy compatibility.\n\ninput() had already become yyinput() in the C++ back end in order to\navoid collision with predefibed C++ inoput. In a multi-language world,\nthis is good policy in general.  There's no real reason for C to\nbe different, and excellent reason to pull all possible entry\npoints into the yy namespace.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "526be1f459bdc907b9867609214e3667c040cdae", "commit_date": "2020-10-11T20:55:08Z", "commit_message": "Introduce the term \"rule hook\" so we can use the term \"macro\" less.\n\nNon-C/C++ back ends won't have macros, so the documentation should\ntreat macro-ness as an implementation detail when it has to be\nmentioned at all - and usually it doesn't.\n\nThe key thing about rule hooks like yyless(), yymore() etc. isn't that\nthey're macros, it's that they can only br used in rule actions (e.g.\ninside the body of the genetated tyylex code.\n\nThis documentation patch removes the term \"macro\" where it isn't needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8225f259e5b61b972381ad37c5d386a8119124c", "commit_date": "2020-10-11T19:46:05Z", "commit_message": "Implement and document yystart(), replacing YY_START.\n\nAs usual, legacy interface left in place but deprecated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cecae8b6aa36414dfb390108282a36f82535dfbe", "commit_date": "2020-10-11T17:04:57Z", "commit_message": "Implement and document %noyyread, replacing YY_INPUT.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "956ac03b7d84f260ada4a4ddeef7174e827442be", "commit_date": "2020-10-11T15:05:12Z", "commit_message": "Refactor YY_INPUT so it calls a new yyread() internal function....\n\n...rather than splicing a bunch of exposed guts into the middle of\nyylex().  yyread() is put in the set of functions that gets\nprefix-modified.\n\nThis means buffer refill can be documented without C-specific\nreferences to YY_INPUT.\n\nIt should also enable actually having a non-macro replacement\nfor YY_INPUT, with a bit more work.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1094c2a1370defc57ea14d2398a72f15ce4f9c43", "commit_date": "2020-10-11T09:14:41Z", "commit_message": "Revise Flex manual to say useful things about multilanguage support.\n\nNo specific thing can be said about a non-C/C++ backend yet, but\nthis patch prepares the way by explaining which features and aspects\nof the Flex interface are specific to C/C++.\n\nIt also fixes one pre-ANSI prototype - that of non-reentrant yylex(),\nwhich should be declared yylex(void) in this day and age.\n\nThese changes make one new commitment. Observing that the YY_INPUT\nmacro is impossible to port out of the C/C++ context, I have observed that\nit is probably extinct in the wild (due to the later introduction of\nthe multi-buffer primitives, though I don't say that explicitly). The\ntext says tat people who really need the equivalent of this capability\nin a non-C/C++ back end should file an issue with the Flex maintainers.\n\nI don't actually expect this to happen.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3158c7f0721f8558a1acdcf5c2dad12be0fa0e2e", "commit_date": "2020-10-10T23:25:32Z", "commit_message": "Implement and document %option yylmax to replace #define YYLMAX.\n\nTest in tests/test-yylmax.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d1959c5956173060389021e931091269af6216e", "commit_date": "2020-10-10T21:21:11Z", "commit_message": "Implement and document %yydecl directive to replace #define YY_DECL.\n\nAlso added a deprecation note abut the old mechanism.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76affdf8942bf5627a815edcb486f9dcc3067ae6", "commit_date": "2020-10-10T03:28:42Z", "commit_message": "Deprecate ECHO in favor of yyecho().\n\nI changed the tests to use yyecho(), but the ECHO macro is still\nexercised in the bootstrap scanner.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3612bc281e0ee68a8b9b5c609c42ced02366a82e", "commit_date": "2020-10-09T23:06:32Z", "commit_message": "Deprecate BEGIN in favor of yybegin(). Worst of the awkward squad.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62a13a3a3d45be1c053566fee502302368d4e579", "commit_date": "2020-10-09T12:29:55Z", "commit_message": "First step towards an interface independent of C macros.\n\nThis patch implements and documents a yyreject() macro to replace\nargumentless REJECT.  It does not remove REJECT, but warns that this\nmacro will not be supported in non-C languages and deprecates it.\n\nThis commit begins a new appendix in the Flex manual, to list\ndeprecated interfaces and explain why they have been superseded.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e9c36271ea388cd155f2b7808c71113301e1631", "commit_date": "2020-10-08T20:03:03Z", "commit_message": "Do consistent optimal packing of arrays.\n\nFlex has a strategy of packing its arrays with in32 or imt32 depending\non length, but it wasn't applied consistently. While I don't thinlk this\nkind of space optimization matters a lot in 2020, if we're going to do it at\nall we should do it thoroughly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "723fd2c3b416b428664494a3898e91fda14bdf11", "commit_date": "2020-10-08T18:13:28Z", "commit_message": "Remove unused code.\n\nIndepemdent of the retargeting changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "700f9d3b6a3bb39d110f4b95e7459f4b9cfe4062", "commit_date": "2020-10-08T18:13:28Z", "commit_message": "Eliminate the c_like backend member.\n\nNo need for it, since the skel content is in core\nand the relevant hook can be searched for.\n\nThis is a postscript to the retargeting series.  It's\nnot necessary, but it imoroves the code slightly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8da857acc6f948d69381a3f4d1c68d897c5ed0a7", "commit_date": "2020-10-07T23:11:19Z", "commit_message": "Update the documentation on writing a back end,\n\nIt will doubtless need expansion and revision when we actually\nwrite one.\n\nNo diffs in generated test code.\n\n#70 and last in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "102c7a0149251e24a351742626e8d85453d7c75f", "commit_date": "2020-10-07T21:19:31Z", "commit_message": "Finish up macro abstraction.\n\nEverything Flex ships to the skeleton-file expansion phase is\nnow either a macro expansion or a macro call.  This almost finishes\nthe retargeting patch series; the wrapup will be documentation.\n\nSadky, this does not get us *all* the way to target-syntax independence.\nThe probem is the inclusion of tables_shared.c when table serialization is\nenabled. Which ,eans table serialization is not practical to support\noutside the C/C++ back end.\n\nNo diffs in generated test code from this commit.\n\n#69 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de769336588d2537f0d1b5c36ccc3c4fe24d1107", "commit_date": "2020-10-07T20:35:59Z", "commit_message": "Macroize all the remaining code-generation methods.\n\nProduces a tediously large diff in generated test code that\nis all table moving around.  This is due to them being shipped\nas macros and being substitured in a fixed order determined\nby the calls in the skell file, rather than veing generated as\nthe functrions originally emitting the tables are called.\n\n#68 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34771445d5891e9d4adc1146c9e55858793ed770", "commit_date": "2020-10-07T10:28:09Z", "commit_message": "Inline all yydmap entries, get rid of %tables-yydmap.\n\nWhat it used to do is now handled entirely by macro conditionals.\nBesides being a good complexoty reduction in itself, this is one\nof the last steps in turning C backend methods into macro deliveries.\n\nOrder of the yydmap table is perturbed. No other non-whitespace\ndiffs and no logic changes,\n\n#67 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd8748a311ed2f3f849d4b0fb12ea8198c8039ac", "commit_date": "2020-10-06T18:25:56Z", "commit_message": "Preparationn for macroizing the last eight methods.\n\nThis commit collects several minor changes:\n\n* Fix a minor type specification bug in a tablesext initializer.\n\n* macroize the trans_offset, mkctbl, and mkftbl methods.\n\n* Fix a bug in footprint computation.\n\nThis commit oroduces no code diffs in the generated test code, but the\nfootprint reports change due to the bug fix.\n\n#66 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "716cb63ff210f082418c96f726a6d165eae565a5", "commit_date": "2020-10-06T05:17:19Z", "commit_message": "Tweak the indent style of tables with macroexpanded bodies...\n\n...to have an indent style uniform with the rest of the code,\nand one that makes it easier noy to miss the trailing table delimiters.\n\nNot all tables are generated this way yet.  I'm working on it.\n\nIs isolated in its own commit so the format change can't confuse a\nreviewer's eyeballs out of noticing real mutations in the table data.\n\n#65 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96e004a296edf2a6f6e0b60b3da6e5d8e09428de", "commit_date": "2020-10-06T01:02:51Z", "commit_message": "Macroize the yy_meta, gen_yy_trans and start_state_list methods.\n\nAlso macro-generate yydmap entry for the yymeta table.\n\nWe're npw about 75% of the way through pushing all\nC syntax out of the method table.\nPermutes table order in the generated code.\n\n#64 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64cf0328063cd97dec09536a8f2bb35ce7350ffe", "commit_date": "2020-10-06T00:55:47Z", "commit_message": "Eliminate a lurking cpp-ism from scan.l\n\nAlso, remove now-unused functions from buf.c.\nAnd corral another global.\n\nProduces no diffs in generated test code.\n\n#63 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fafc0ef10cc9b2f1c7f758cd6ad42939bf6d5d1f", "commit_date": "2020-10-05T13:28:02Z", "commit_message": "Replace the comment method with a hook macro.\n\nThis required addin a new 0.0 breakpoint right after the\nM4_HOOK_* definitions so they will be visible early.\n\nProduces no diffs in generated test code.\n\n#62 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83d8bd5fb9a3b46810099dd8d50ad4de49540b1e", "commit_date": "2020-10-05T09:12:49Z", "commit_message": "Enliminate several backend methods by shipping hook macros instead.\n\nThey were: geneol, fulltable, eecs, and debug.\n\nTo accomplish this, dataend's emission of trailing } needed to be\nsuppressable.\n\nAlso, remove a %% mark that is no longer required.\n\nThis doesn't change any of the generated tables, but does change the\norer in which they're generated, froducing large diffs in the\ngenerated test code that don't actually mean anything.  The reason for\nthis is that tables used to come out in a variable order as functions\nlike geneecs were called ar variable times depending on the\ncompressuion mode.  Now, instead, the order is fixed by where the\ntanle-body macros these functions define are expanded.\n\nMore methods remain to be turnerd into macro generators.\n\n#61 in the retargeting patch series, following an unnumbered\nbugfix patch that I shipped in too much of a hurry.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aea91d7e4b0c025b33f62284cff5b14b6a0b9a75", "commit_date": "2020-10-04T04:17:17Z", "commit_message": "Reopair a buuld recipe bug introduced in #52...\n\n...by an icatous replace operation.  Insidious because\nit's undetectibe until you run configure again,\n\nTwo-phase build systems suck.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5386ba36835b7ffab67bd30cb28a116bb1cea5c", "commit_date": "2020-10-03T17:03:28Z", "commit_message": "Refactor so all skelout calls are in visible sequence in flex_main().\n\nThis makes the overall control flow easier to understand.\n\n#59 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c1b4a95f9f81b4b381e7aff1cf998efe7906663", "commit_date": "2020-10-03T17:03:28Z", "commit_message": "Begin replacing method table entries with hook macros\n\nDo this for table opener/closer/continuation syntax, the trace-format\nstring, the state entry string, constant definitions, the state-dyad\nformat, and the three pieces of EOF state syntax.  The documentation\nappendix on how to write a back end is also updated.\n\nThere are comment diffs because I decided generating an\nexplicit fallthrough marker and some other new explanatory comments\nwas a good idea.\n\n#58 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea32296019ed0ce028bd018fcca4697c702a0022", "commit_date": "2020-10-03T01:57:54Z", "commit_message": "As of this commit, all mode symbolds are finally visible.\n\nAll symbols except a handful dependent on nultrans and the number of\nbackups are now written in one visible group right at the start of m4\ngeneration.  The exception are exceptions because their values\nare not known until after DFA computation.\n\nHas comment diffs in generated test code due to one symbol rename and\nsymbols beoming visible. Should be the last time the latter happens.\n\n#57 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fc45ce97ce30c74f1a8b2024bed2ac3e491665e", "commit_date": "2020-10-02T17:13:40Z", "commit_message": "Clean up various sporadic symbol definitions that weren't going through ctrl.\n\nIncludes handling of --nounistd, --always_interactive, --never_interactive, --stack,\ntheir corresponding lexer items, and and noinput.\n\nAn unavoidable side effect is that the place where \"#define\nYY_NO_INPUT 1\" is inserted, if it's inserted. has to move because it's\ndone by a different route - m4 expansion rather than the action_define\nfunction (which is now gone - this was the last use). I have put the\nnew insertion point just iin time for the first reference to the macro.\n\nOtherwise the only diffs in generarted test code are symbol\ndefinitions becoming visible.\n\n#56 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e77d8f4759724a125bc9ca53366fd1b760c7c9e", "commit_date": "2020-10-02T09:55:36Z", "commit_message": "Move almost all m4 symbol setting to one spot.\n\nFormerly, Flex's own lexer and the logic for pocessing command-line\noptions both did calls to write M4 conditionals to a buffer that was\nlater dumped into the befinning of the text that m4 expands, before\nthe body of the skel file.\n\nThis was bad layering.  Instead, both these places now set flags in\nthe ctrl structure.  Later, (almost) all the generated m4 conditionals\nare shipped at once.\n\nIt's \"almost\" because there are a couple of awkward cases to be\ncleaned up.  Again, this was the part that could be done\nsimply via almost mechanical cut and paste.\n\nIn generated code, there are some comment diffs because symbols that\nused to be invisibly set are now visibly set - that is, shown at the\nbeginning of the generated C.\n\n#55 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5d0e408e2e1bb6587cb0d6986964fab78f43c0f", "commit_date": "2020-10-02T08:55:37Z", "commit_message": "Methodize a suffix computation and move headerfile into ctrl.\n\nThis cleans up some loose ends before the next big move.\n\n#54 in the retargeting patch series. #53 slipped out unnumbered.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9dbc704ad47129dcd2c4846b94473d618e6869a8", "commit_date": "2020-10-02T04:17:31Z", "commit_message": "yytext_is_array moves to the ctrl structure.\n\nThis is separate from the big reorganization in commit #52 because\nthere's a comment about this variable in flexdef.h that makes me\nnervous.  According to the comment this variable is a trit, but\nit looks to me like flexinit sets it to false and I can't find\nanywhere in the code that sets it to a non-boolean value.\n\nThis commit asumes that the comment is stale and the member\ncan be typed boolean. Should be audited.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99e6b1c89a8e889991acf5de3da4a665dfeda023", "commit_date": "2020-10-01T21:40:06Z", "commit_message": "Impose some namespace control on the global variables.\n\nAs I was working on some layer separation.  I realized that I\nwas getting confused a lot by the huge pile of globals that\ncontrol this program.\n\nIn particular, I need to be able to clearly distinguish those that set\nm4 conditional symbols from those that don't.  So I've done something\nabout it. Almost all globals that can be set by options are now\nbundled into two context structures, \"ctrl\" for options that have\ncorresponding m4 symbols and \"env\" for options that don't.\n\nThe few I haven't moved have sufficiently tricky interdependencies\nthat I'm going to break out any changes related to them into smaller\npatches that can be easier to review.  In this one I did only the bulk\nof straightforward changes that could be done mechanically with search\nand replace.\n\nI changed one varuable name to reflext its senantics better;\nthe performance_report global is now env.performance_hint.\n\nIdeally there ought to be a third structure that bundles all the\nshared state used by DFA/NDFSA table computation, so all globals would\nlive in one of three context structures.  I may do that in a later\ncommit, but this patch is already unpleasantly large as it is.\n\nNo diffs in generated test code, nor any logic changes.\n\n#52 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c6661bb2eb65fab3924a493ee979b960708583f", "commit_date": "2020-10-01T05:34:07Z", "commit_message": "Eliminate all uses of buf_strdefine().\n\nThere were only two left, for YY_MAIN, and that definition\nwas moved so it's in the visible controls.\n\nThis is a step towards making *all* conditionalization symbols\nviible in generated comments.\n\nThis commit also cleans up some misnamed mode symbols.  There are\nstill a couple of duplicative pairs, to be cleaned up in a later\ncommit.\n\nWe can now report generated M4 symbols with values in the \"m4\ncontrols\" part of a generated file. Partly as a result, the following\nsymbols become visible in generare code from the tests:\nM4_MODE_PREFIX, M4_YY_TABLES_VERIFY, M4_YY_REENTRANT, and\nM4_MODE_PREFIX.\n\nNo other diffs.\n\n#51 in the retargeting patch series. #50 was accidentally\nunnumbered.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7877454e423c0707479b20316432df8dddbed738", "commit_date": "2020-10-01T01:18:34Z", "commit_message": "Eliminate the epilog member from the method table.\n\nIt was a no-op anyway in the C version, there as a placeholder\nin case other languages needed it.  But in the new organization\nof things, with everything being done by conditional expansion in\nthe skeleton file, there's no point.\n\nNo diffs at all in generated test code.\n\nThios does remove some cpde that was conditioned out, an abandoned\nattempt to undefine all #defines at the end of code generation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c2d23d9a8679961e9ca559d9fcca2a3d4e629c5", "commit_date": "2020-10-01T00:53:57Z", "commit_message": "Eliminate the prolog method from the method table.\n\nNow that all the mode conditionals are visible early, wverything that\nused to be done in the prolog can be done as conditionalized code in the\nskeleton.\n\nWhitespace and comment diffs only.\n\n#49 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "981867ff1519a807f9b69d8468f6f83fe2abec9f", "commit_date": "2020-09-30T12:37:39Z", "commit_message": "Land the footprint-reporting feature.\n\nAlso, clean up some unused and duplicative symbols.\n\nIn generated test code, comment and whitespace diffs only\nexcept for YY_INT_ALIGNED going away.\n\n#48 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31c3f7703dd0254558685669b5b6b3089b639e2d", "commit_date": "2020-09-30T11:29:43Z", "commit_message": "Methodize section marker output and refactor initialization.\n\nThe point of this change is to move the setting of the M4_MODE_*\ncontrols up to the front of the generated code so that they can be\nused for conditionalization earlier, notably in replacing the prolog\nmethod.  I tried to do this in #46 but dididn't move the mode\nsetting far enough up.\n\n(Also, rename instances of a duplicated mode switch.)\n\nIn generated code, the m4 controls move but nothing else changes.\n\n#47 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe2c1fe700dadb0dcdf52a649ef659a96a9fe3d", "commit_date": "2020-09-30T01:23:46Z", "commit_message": "Transplant where the mode controls are shipped to earlier.\n\nThis should make it possible to eliminate much of the C-specific\nprolog code.\n\nSadly, because of the moves of the generated comments this makes\na rather noisy diff.  All comments and whitespace, though;\nwhat looks like being other than that is pieces of generated code\nbeing shifteed around.\n\n#46 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9e86a3299fb5871306b36906b7c4f908f1520f0", "commit_date": "2020-09-29T21:18:43Z", "commit_message": "Eliminate two backend methods in favor of m4 expansion.\n\nProduces only whitespace diffs in generated code for tests, except the\norder of items in the initializer for table serialization changes.\n\n#45 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b952cbf80e76c57545611e4a0cccb48a73d0a71", "commit_date": "2020-09-29T20:53:47Z", "commit_message": "Eliminate ugly %define-yytables magic in skelout().\n\nThis feature is better implemented with m4 macroexpansion;\nthat way skelout() does not have to know that #define is a thing.\n\nAlso in skelout(), use the backend comment method rather than\nembedding knowledge about /* and */, and int_format_define\nto factor out knowedge about #define.\n\nProduces only comment diffs in the generated test code.\n\n#44 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34b84d582361a6ce44b0bb4328cb45f5b07071fb", "commit_date": "2020-09-29T08:53:46Z", "commit_message": "Narrow the driver interface.\n\nThis patch is a pure refactoring step.  It changes the\ninterface between gen.c and the back end so that the\nmethod table can shed a number of methods and no headers\nare generated in gen.c any more.\n\nMost methods now return the amount of memory they\nallocate.  Eventually this will be used to add\na report on this to the generated code.\n\nNo diffs in generated code, even without ignoring whitespace.\n\n#43 in the retargeting patch series, which turned out\nnot to be finished after all. These is ugly magic in skelout()\nthat needs to be factored out.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "103634e4ca84ff014b20ef0e9cf726ef5980592d", "commit_date": "2020-09-27T15:08:36Z", "commit_message": "Clean up the indentation and brace usage in the skeleton file.\n\nIt was in a mix of several different styles tht made it hard\nto read.  I've massaged it all ibto K&R with tabs and mandatory\nbraces.  No logic changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42a39df0f5663c038b5fd875041d177ae57ea560", "commit_date": "2020-09-26T02:14:32Z", "commit_message": "Fo;d documentation on how to write bac ends into the Texinfo manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c842b49f83a4fd07a261a05195e440765b8df585", "commit_date": "2020-09-25T22:09:44Z", "commit_message": "Finish the retargeting patch series with a couple of small fixups.\n\nPull the C mode setting for M4_YYL_BASE into m4.\n\nUse if/then/else extension of m4_ifdef to simplify how yy_flex_debug\nis set.  In the process, fix a bug introduced earlier in this patchest\nwhere yy_flex_debug initialization was inverted.\n\nRemove unused skel breakpoints and renumber those left.\n\nDiffs have only commenmt and whitespace changes *except* for the\ncorrected initialzation of yy_flex_debug.\n\n#40 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8521281aef33b47df7e372d16a495cec7f9a7e62", "commit_date": "2020-09-25T19:40:03Z", "commit_message": "indent_puts and friends go away, they're no longer needed.\n\nI did some indentation of the end-of-file case statements with tabs to\nmake the generated code a bit more readable.  So there are trivial\nwhitespace diffs in generated code.\n\n#39 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "219db78e6aedaa3e31f2e3884988a074abaa9b44", "commit_date": "2020-09-25T19:26:06Z", "commit_message": "Last procedural-code generation in C goes to m4.\n\nDiffs are comments and whiespace, as usual.\n\n#38 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efeb6ef019c221dfb725bb5ad83ac5556dd94c68", "commit_date": "2020-09-25T00:40:47Z", "commit_message": "m4ize the code for handling NUL transitions.\n\nFinally, scavenge trailing skel breakpoints that are no\nlonger used, as theey no longer carry information.\n\nDiffs in generated code are all comments and whitesoace, as usual\n\n#37 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31b751703fa3589dab34ff3ed93c3f3074ff8bf4", "commit_date": "2020-09-24T10:52:27Z", "commit_message": "Chase down some methodization details missed earlier.\n\nNo generated-code diffs from this change.\n\n#36 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7cb3bf631ae1197359f4ce698c73763a5b5ac46", "commit_date": "2020-09-24T09:14:05Z", "commit_message": "Dump the state of the m4 conditionals near start of generated code.\n\nOf course, this produces exactly that in diffs.\n\n#35 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cb26ac3f98c1e72cc3785a929e7b2ce00dd3bbe", "commit_date": "2020-09-24T02:21:03Z", "commit_message": "Conditionalization of the debug flag moves to m4.\n\nTurned out to be mildly trick because %if/%endif pairs have push/pop\nbehavior rather than combining.\n\nIn generated code, the location of the debug declarations moves,\nand that's all.\n\n#34 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9ade3f92bb952da5fac35f474f445d84dc18bd1", "commit_date": "2020-09-23T23:49:31Z", "commit_message": "Methodize whether fullspd mode can use a pointer table.\n\nPresently only C can do this.  Otherwise we fall through to storing\nnumeric indices for a tiny loss of performance.\n\nNo generated-code changes from this.\n\n#33 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca94d99782c1b2b0ac27c56b74d997e0906fc133", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "m4ize code generation associated with skel breakpoint 11.0.\n\nMoves one table initializer in the generated code, but doesn't alter\nit.\n\nLeaves one FIXME. The computation of M4_YYL_BASE really ought to be\ndone in m4, but for some unknown reason I couldn't beat it into\ndping the right thing.  Do be revisited, bu right now finishing\noff the last bits of code generation is more important.\n\n#32 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d45bd0692ed6c4c6c52ca9e31589075f86624f40", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Code formerly generated at skel breakpoint 8.0 goes to m4.\n\nNo generated-code diffs from this change.\n\n#31 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eb82096a4841e220759eed80f3eff1e95a082fa", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Move code generation of YY_DO_BEFORE_ACTION to m4.\n\nGenerated-code diffs are blank lines with ] continuations and\nshifted %% commends made by skel breakpoint directives.  I could garbage\ncollect those, but I plan to do that all at once in a commit of its\nown for clarity's sake.\n\n#30 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d694cb8d3f0305b3807cf1895dc08bf25353b72c", "commit_date": "2020-09-23T15:24:11Z", "commit_message": "Push C-generated code for YYINPUT to the m4 skeleton.\n\nDiffs in generated code are trivial, a couple of\nblank lines with continuations due to % directives.\n\n#29 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cfe5b9b09fdf6b4714113183c745d11a524902a", "commit_date": "2020-09-23T14:50:07Z", "commit_message": "All the M4_MODE settings now live in one place where they can be audited.\n\nNo changes in generated code.\n\n#28 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f2a58a818598559f150a7d9d42a7d8ba0b3bc16", "commit_date": "2020-09-23T14:20:48Z", "commit_message": "Partial m4ization of nultrans code.\n\nAlso, remove two insertion points in the skel file\nthat are no longer used because we're now using m4\nconditionals instead.\n\nIn the generated C, two magic comments from the insertion points go\naway.\n\n#27 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b101188a767f589340deed97125571db945d4865", "commit_date": "2020-09-23T00:52:58Z", "commit_message": "Push the definition of struct yy_trans_info out to m4.\n\nRequired defining a new method table entry and shuffling the order in\nwhich things are generated a bit, but the generated-code diffs are all\ntrivial.  Some comments from the previous C code are now in the\nskeleton.\n\n#26 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5574c7387573404129ea48be830094b8a67cc2c", "commit_date": "2020-09-22T22:44:26Z", "commit_message": "Banish gcc warnings so errors won't get lost in the clutter.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feeba9873f80dafbe96ff35787ac77ca7f2223cf", "commit_date": "2020-09-22T16:52:32Z", "commit_message": "Tie up loose ends in the abstraction of table initializer syntax...\n\n...and case statements.  Add guidance to backend.adoc.  This is the\n\"eventually\" promised in the comment on #10 of this series.\n\nNo diffs in generated code.\n\n#25 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a501a4238af4b5728d32d2dbfb01d3a50023a6b", "commit_date": "2020-09-22T15:52:50Z", "commit_message": "Replace last use of gen_next_compressed_state*( with equivalent m4...\n\n...and then inline the code of gen_NUL_trans() at its callsite.  This\ncontains all remaining procedural code generation in make_tables(),\non the way to moving it to m4.\n\nGenerated code diffs are like those of #20 and #22, for the same\nreasons.  They add comments, whitespace changes, and uses of the\nYY_NUL_EC and YY+JAMSTATE macros equivalent to the old numeric\nliterals.\n\n#24 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b3a67adff063fd4be4594f3b930899720b4279", "commit_date": "2020-09-22T14:59:30Z", "commit_message": "Code to do back-up for compressed tables and set up yy_cp goes to m4.\n\nAlso, move the yymatch label to the skeleton. Remove an unused\nprototype. And fix a typo.\n\nIn generated C, comment and whitespace changes only.\n\n#23 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f4aaddd993c77ed4e7cd9213c082f95909f380", "commit_date": "2020-09-22T14:51:23Z", "commit_message": "gen_next_state(true) becomes m4 code.\n\nAs with patch #20 in this series, the changes in generated code fall in the classes:\n\n1. Addition of comments.  I elected to copy the comments from the\n   generator functions into their corresponding m4 macros in hopes of\n   making the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\n   literal is replaced by YY_JAMSTATE + 1. This was a consequence of the\n   change in #15 to simplify the C code generators so they could be\n   translated into static nacros.\n\n3. \"YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : YY_NUL_EC);:\n   being replaced by \"YY_CHAR yy_c = (*yy_cp ?\n   *(yy_ec+YY_SC_TO_UI(*yy_cp)) : YY_NUL_EC);\" The strange way of\n   indexing yy_ec avoids a syntactic collision with the use of [] as\n   m4 quotes.\n\nThe gen_next_state(false) case was translated to m4 at patch #20\n\n#22 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6fa974cd7523f2e093ed70dca591dc89d19c061", "commit_date": "2020-09-22T10:08:10Z", "commit_message": "gen_bu_action() becomes m4 code.\n\nAlso, two GEN_START_STATE calls get inlined in the skeleton file.\n\nChanges in generated C from the tests are all comments and whitespace.\n\n#21 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30788806b98ae23151c921ad34c3a6f7ab1d0d76", "commit_date": "2020-09-22T08:47:05Z", "commit_message": "gen_next_match() becomes m4 code.\n\nTo verify this patch, notice that the non-whitespace changes in the\ngenerated C from the tests are of only three kinds:\n\n1. Addition of comments.  I elected to copy the comments from the\ngenerator functions into their corresponding m4 macros in hopes of\nmaking the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\nliteral is replaced by YY_JAMSTATE + 1. This was a consequence of the\nchange in #15 to simplify the C code generators so they could be\ntranslated into static nacros.\n\n3. \"YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)]\" being replaced by\n\"YY_CHAR yy_c = *(yy_ec+YY_SC_TO_UI(*yy_cp));\".  The strange way of indexing yy_ec\navoids a syntactic collision with the use of [] as m4 quotes.\n\n#20 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6711981a2d7e2fc3e3965156e0cb0887387f202a", "commit_date": "2020-09-22T07:16:04Z", "commit_message": "gen_backing_up() becomes an m4 macro.\n\nGenerated-code changes consist of whitespace and a comment.\n\nThus patch also fixes the computation of two guard symbols\nthat weren't actually used yet, prospectively introduced in\npatch #15 of this series. At the time I wrote that I didn't\nunderstand what num_backing_up was doing and failed to\ntranslate it properly.\n\n#19 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe63d33d1c48a136510441346c175d8801f11c4", "commit_date": "2020-09-22T05:32:40Z", "commit_message": "Push code generation for some housekeeping from gen.c to m4.\n\nThe pieces are BOL checking, yylineno updating, and YY_RULE_SETUP\ngeneration.\n\nNo generated code changes at all from this.\n\n#18 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feac8a6abf317090df62363f771e6487827629b0", "commit_date": "2020-09-22T04:14:56Z", "commit_message": "Clean up a couple of methodization loose ends.\n\nGenerated-code differences are trivial whitespace.\n\n#17 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ab6a3baf77f5284b035260d89c200c93157a9cb", "commit_date": "2020-09-22T03:04:50Z", "commit_message": "Move debug code generation from C to m4.\n\nDifferences in generated code are trivial. Some integer\nliterals turn into symbol expressions as a side effect\nof the previous patch.\n\n#16 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90bf7c7bcb621d0c2483a0383fa1e5c8db6d5521", "commit_date": "2020-09-22T02:01:41Z", "commit_message": "Create m4 symbols for things that used to be generated as int literals.\n\nChanges the generated C sources from the tests, but only by making\nthem easier to read.  In future patches this is going to make them\neasier to compare by eyeball as well.\n\n#15 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f858b63e23ce8e4d45926d1baa28d0fd1c67b339", "commit_date": "2020-09-21T21:11:29Z", "commit_message": "Turn gen_start_state() into an M4 macro.\n\nThis is the first patch in the retargeting series to substantively\nmodify the skeleton file.  (The only previous one to touch it just\nrenamed a mode switch.)\n\nAdds some comments and whitespace to the generated code in the tests,\nbut produces no logic changes.\n\n#14 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f41ac5a99f49cb2780115adf167f95b3d43690d", "commit_date": "2020-09-21T14:35:18Z", "commit_message": "Create a TESTOPTS variable that can be used to pass options to flex in testing.\n\nPresently this is used to pass -L, making it easier to compare changes\nin generared C code cross revisions.\n\nTo perform such comparisons, do this at a base (before) revision:\n\n# Make generated code\nmake clean; (cd tests; make clean); make check\n\n# Save a smashot of it\nrm -fr snapshot && mkdir snapshot && cp tests/*.c snapshot\n\nThen rebuild at the later revision and do this:\n\n# Compare gemerated code to snapshot\ndo diff -b -B -u $x tests/`basename $x`; done\n\n#13 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd01f7ff4e4aa5e9223df56d4ee04e0c039b7aff", "commit_date": "2020-09-21T04:45:47Z", "commit_message": "Remove a redundant macro guard setting....\n\n...and clean up some comments.\n\nRemoval should have happened in #11 when the\nguard symbol was renamed.\n\n#12 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb639cd7bbe1e4e2d8a0817c783ba48ceef8ba2", "commit_date": "2020-09-21T04:21:42Z", "commit_message": "Add code to initialize the macro conditional symbols we'll need.\n\nThese aren't used yet.  They will be as we push code feneration out\nof gen.c into the epansion of the m4 skeleton.\n\nThis is the first revision to touch the C skeleton file, changing\nM4_YY_USES_REJECT to M4_MODE_USES_REJECT for uniformity with the other\nmode switches.\n\nC code generated from the tests is still unchanged at this revision.\n\n#11 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef4f78f43b3b0b75de0e615d70949e0a460b90d2", "commit_date": "2020-09-21T04:05:05Z", "commit_message": "Continue methodization, with some target-language-specific formats...\n\n...and one additional method.\n\nThis almost finushes off all language-specfic detauks outside of\ngen.c.  The one exception is just below the comment \"add terminator\nfor initialization\" in dfa.c; we'll get to this eventually.\n\n#10 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0ca7faab9dce962e257c4da79133b67d5c0c6ee", "commit_date": "2020-09-21T03:17:00Z", "commit_message": "Two member name changes in the method table.\n\nCosmetic change,\n\n#9 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e58cdd1de0be09ac7258044ff13743538ee97c2b", "commit_date": "2020-09-21T02:38:31Z", "commit_message": "Start a HOWTO on writing target-language back ends.\n\n#8 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "673f2caf34fcbab9b6b2d2e3adeb1867b36b84a9", "commit_date": "2020-09-21T01:55:07Z", "commit_message": "Methodize generation of C initializers for automaton tables.\n\nA large patch, but conceptually simple. Takes a bunch of functions and\ncallsites that knew details of C initializer and declaration syntax\nand moves them into methods in the C backend table.\n\nThis is a pure refactoring step.  At this point in the patch series,\nnot only do all tests pass but nothing in the lex-generated C code\nfrom the tests has changed.\n\n#7 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cce209b584bf87a01038c33a09b361d82a18b0b", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "The C/C++ back end moves to its own source file.\n\nSomeday, there might be go-backend.c etc.\n\n#6 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb9f458eb18e32921b754c35415e09f08aaf8272", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "Generated skel data is now stuffed in an array in the C/C++ back end.\n\nThis means it's possible to have multiple language-specific skel\nfiles.  All go through the same double m4 macroexpansion.\n\n#5 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f754c608ff6e5ffdb8b1fc3893bb7573c8b6f734", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Pull the format for error-tracking lines into the method table.\n\n#4 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1bfe65b3dc2813bdc86e27ce3d03910d949ce93", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Create a method table for the C back end,\n\n#3 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a05e39ae47294aa2103e2f897f1979f6c7ccbdea", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Factor out the wrap function for C/C++ parser generation.\n\n#2 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0161f217e34ca77df2b1e687aa3c3f2d266c00c", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Refactoring step - separate output generation from option processing.\n\n#1 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a631f5da8d4fd60fbde7b06bcf43bc9a155c27d5", "commit_date": "2020-04-24T16:06:24Z", "commit_message": "correct some indentation in skeleton", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1fbf674f2e038df9cf1fe7725617e3837ae2a9", "commit_date": "2019-09-12T20:42:40Z", "commit_message": "doc: document release page in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3de49f84224b18c5287653f20525291b24cc26e", "commit_date": "2019-06-20T18:05:30Z", "commit_message": "doc: new translations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98018e3f58d79e082216d406866942841d4bdf8a", "commit_date": "2018-05-22T20:56:52Z", "commit_message": "scanner: Include-guard flexint_shared.h\n\nThis prevents compiler's \"redefinition of typedef\" warnings or errors\nwhen we could include flexint_shared.h twice, when building flex's own\nscanner (scan.c) or in the \"multiple_scanners\" test in the testsuite.\n\n(Depending on the compiler's flags this might or might not produce\nerrors, but it's good to guard it anyway.)\n\nFixes: #329\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21121feec917491db6f76cb54bd6441411632440", "commit_date": "2018-05-22T20:51:26Z", "commit_message": "scanner: no YYTABLES_NAME macro unless requested", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c7e3a5a676cfb98cc33382715dc6f6929688fdd", "commit_date": "2018-05-07T19:53:26Z", "commit_message": "po: include update_linguas script in distribution.\n\nSince automake takes a hands off approach to the po/ directory, we\nneed to list update_linguas.sh in the top Makefile.am. We list it as a\ndist_noinst_SCRIPT so that it will get distributed with executeable\npermissions. We also list autogen.sh in the same way for the same\nreason.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a752d7c1c27aa5ccd15ab2c89162b64154e106b7", "commit_date": "2018-05-07T18:58:48Z", "commit_message": "doc: display build status badge in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60b578fdaab4bf8d95203caaa947b476eeb03c10", "commit_date": "2018-04-07T17:26:34Z", "commit_message": "doc: describe mailing list usage in more detail", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33fd4c43a8faa5a04dcdd10fc4a5443378d9bf5", "commit_date": "2018-03-13T14:45:56Z", "commit_message": "doc: amend manual section on state stack functions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3971b6146aab12e1c54945dcb47ae92a25a3f3c3", "commit_date": "2018-03-13T14:45:42Z", "commit_message": "scanner: fix default of yy_top_state()\n\nextend fix when `YY_G` is used (reentrant scanner).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67b3e448727da3093cdc6f0ca7fd151fbf3c10ad", "commit_date": "2018-03-13T14:45:16Z", "commit_message": "scanner: fix default of yy_top_state()\n\nFor an _empty_ state stack the top of the state stack defaults to the state as if no state stack were present.\n\nNB: sanity check for `yy_start_stack_ptr` could be added in `yy_top_state()`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a6e69af761801aedeab0264246772cf60810246", "commit_date": "2018-03-12T02:34:36Z", "commit_message": "build: Add \"-f\" flag to \"mv\" in makefiles.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcd8e8b401c264702936eba6db8abef8399684ff", "commit_date": "2018-03-12T02:15:31Z", "commit_message": "build: Fix makefile dist-hook directory permissions.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1f6b4a26399b0e7849fd646fe5ee690231b32d4", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: More compatible flex integer type definitions.\n\nVisual C++ 2010 does not define __STDC_VERSION__, and (before Visual\nC++ 2013) has <stdint.h> and not <inttypes.h>.\n\nANSI/ISO C only requires at least 16 bits for int type (not 32 bits as\nrequired by POSIX since SUSv2), so check the bit length before the\ntypedef.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5574881ff4c9b08c73b6acc0087d6046c2b48de5", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Skeleton no longer includes integer limit macros.\n\nThe [U]INT{8,16,32}_{MIN,MAX} macros are never used in skeleton code.\nHaving them in skeleton just increases the chance of conflicts in case\nthat user defines them in non-C99 environment (see issue #307, when\nflex code is built in Visual C++ (before VS2013)).\n\nflexint.h is now split in two files. Only \"flexint_shared.h\" will be\nincluded in skeleton now, which defines flex integral types.\nflexint.h contains integer limits macros that would be used in flex\nonly.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec4f23d5d25dd33de99301956d2219b32860570e", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Add a fallback INT_MAX definition.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1985bb3c7abed940e91ad816504ef08a18c3b7c1", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: correct comments about __STDC_LIMIT_MACROS.\n\nNo code changes.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4081efa0831b15d7e4e4255401c225ad8262426d", "commit_date": "2018-03-08T02:04:36Z", "commit_message": "scanner: Fix glibc features.h dependency in skeleton.\n\nCommit a17d79e9c722a6735b6d2a8f152287404f27df32 defines _POSIX_C_SOURCE\nto the minimum of 1 if it's not defined in the user's scanner code or\nthe compiling environment. However in glibc the macros are not yet set\nup until one of the libc headers is included. This unfortunately have\nmade us overwrite the default _POSIX_C_SOURCE value that would be\ndefined by glibc (200809L at the time of writing), causing regressions\nin user code.\n\nNow in this patch:\n1. Ensure feature test macros have been set up in glibc before checking\nor defining any of them in our skeleton code.\n2. Have a more conservative logic when determining the need to define\n_POSIX_C_SOURCE (required for fileno()).\n\nFixes: #313\n\nNote:\nIt could be tricky for application code to ensure feature test macros\nhave been set up in glibc, since <features.h> is no portable header and\nnot meant to be included directly by applications. The way to do it is\nto include a libc header which in turn includes <features.h>. However,\nmany of the glibc headers check __USE_POSIX (a glibc internal macro\ndefined if _POSIX_C_SOURCE is defined) and determine which interfaces\nto expose already, making the headers inappropriate for our goal.\nThose which don't depend on _POSIX_C_SOURCE, and are also available\nsince ANSI C89, are only <assert.h>, <errno.h> and <math.h>.\n\n<assert.h> is finally favored due to other considerations:\n- <math.h> check for __USE_XOPEN in glibc, making a dependency on\n_XOPEN_SOURCE, besides it exposes much more interfaces than we need.\n- In djgpp, <errno.h> depends on _POSIX_SOURCE to hide definitions of\nsome errno values when it's defined.\n- <assert.h> exposes the fewest interfaces among the 3 headers and, at\nthe time of writing, checks for only C99 (for __func__), C11 (for\n_Static_assert), and _GNU_SOURCE when needed.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5023f5a48ac477916d43453a16afd792f422e85", "commit_date": "2018-03-04T12:51:38Z", "commit_message": "scanner: Fix scan.l xgettext warnings.\n\nxgettext was not very clever at interpreting lex patterns and can get\nconfused when seeing unquoted quotation marks, and emit warnings for\nthem. Now fix the warnings by properly quoting the quotation marks in\nlex regex patterns.\n\nExample\n    Original: \\\"[^\"\\n]*\\\" -> \"warning: unterminated string literal\"\n    Fixed:    \"\\\"\"[^\"\"\\n]*\"\\\"\" -> OK\n\nMy basic build test shows that the generated stage1scan.c is\nbit-identical to the original.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e104f5589c2365d5927de00d6a990ec33ef29493", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: '--disable-acl' when building gettext\n\nThis silences a configure warning about libacl not found in Travis\nbuild log.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6aa652b089f7ae3f2d9d0181f84733e88ce6443a", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Silence build output of automake and gettext\n\nOnly when a build error occurs on building any of these dependent\npackages do we dump some sensible logs to standard output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e63c0bb6b675c0093d8d39deaf4894297bce3041", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Hard-code hashes for verifying tarballs\n\nGPG signatures require an external keyserver which might be offline,\nwhich is undesirable for build server use. It's equally secure to just\nhard-code the hashes, provided they're trusted (i.e. you verify a hash\nagainst a GPG signature once).\n\nFixes: #311.\n\nAs a side note: the original two signatures\n(gettext-0.19.8.1.tar.lz.sig and automake-1.15.1.tar.gz.sig) are signed\nagainst the files' SHA-1 hash.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c42de062bbdc7c31d7181c10a74202d493280ada", "commit_date": "2018-03-01T00:30:56Z", "commit_message": "build: Move dnl comments out of AC_CHECK_FUNCS\n\nDue to a bug, autoheader (2.69) will treat M4 dnl comments in a quoted\nargument of AC_CHECK_FUNCS as function tokens and generate a lot of\nredundant and useless HAVE_* macros in config.h.in.\n(Examples: HAVE_DNL, HAVE_AVAILABLE_, HAVE_BY)\n\nIt seems to be this commit dbb4e94dc7bacbcfd4acef4f085ef752fe1aa03f of\nmine that revealed this autoheader bug, and the affected config.h.in\nhad been shipped within flex-2.6.4 release tarball.\n\nI have reported the autoheader bug here:\n<https://lists.gnu.org/archive/html/bug-autoconf/2018-02/msg00005.html>\n\nAs a workaround, let's move comments out of AC_CHECK_FUNCS.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065c9fbe22733e360e285ec4ce24d9c5065a0140", "commit_date": "2018-02-24T15:12:09Z", "commit_message": "test: Remove redundant '-o $@' in tableopts.am\n\n$(LINK) in Automake already contains the '-o $@' arguments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff7bc8af4680a6b16b07f8ddae8b5c64ad009de1", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "doc: list travis in NEWS [skip ci]", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0508df61da22a0a6f49e3c1d86404ea4ec37c85", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "initial .travis.yml file", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7d45afc6aeb49745f17d21ddba4848e0c0118fc", "commit_date": "2017-12-09T21:29:52Z", "commit_message": "scanner: Allow \"--\" as option argument.\n\nPreviously, invocations such as:\n\n    flex --outfile -- wc1.l\n\n would fail with \"requires an\nargument\" error message.\n\nFixes #285", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c984ab0fd0ad534a725019a7bf4f49a3571d87d1", "commit_date": "2017-12-08T14:56:18Z", "commit_message": "scanner: scanopt_err() now returns void", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa775c871137c570ded2bbd6ebbe7ca4ee39efe7", "commit_date": "2017-12-08T14:55:19Z", "commit_message": "scanner: simplify scanopt_usage().\n\nIn-function macro CALC_LEN removed and no longer needed.\n\nLocal variable renames:\n\n    maxlen[0] => opt_col_width\n\n    maxlen[1] => desc_col_width\n\n    indent now explicitly const", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23882383d45dcd37b5177835c873f4e1d9582db1", "commit_date": "2017-12-06T21:23:25Z", "commit_message": "scanner: prevent overflow in add_action()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e1b25b0ec17d4312f838efc6f910b64900b009", "commit_date": "2017-11-29T13:11:22Z", "commit_message": "scanner: use calloc to allocate new filter memory", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87472f5aa72431cd48755fa8537089e00d67e036", "commit_date": "2017-11-28T20:06:10Z", "commit_message": "Obsolete yypad64() macro.\n\nSlightly rewrite the logic in yytbl_data_load() and yytbl_write_pad64()\nso they simply check if the bytes read/written are in 8-byte boundary.\nNo need to calculate how many bytes we need to pad. (Incidentally this\nmakes smaller code in x86_64.)\n\nFor yytbl_hdr_init(), just expand the calculation from the macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12d2f8608046c5d43646e3c1dc277c0a2914ae1b", "commit_date": "2017-11-28T19:56:42Z", "commit_message": "scanner: temporarily protect against ccl overflow & overwriting.\n\nFor ccladd(), if cclp given is a non-last ccl, adding a char into it\nwill overflow the buffer and overwrite the first char in the next ccl.\n\nFor now, add a temporary detection and protection code.  (Not sure if\nthis could happen in user input, but if it could, then you can expect\nsome \"corrupted\" behavior for generated scanners.)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea1faa2d09693cf7f3a3c3c79a5ddb7fbd0d3ba5", "commit_date": "2017-11-28T19:09:04Z", "commit_message": "build: fix ENABLE_NLS preprocessor check.\n\nBecause ENABLE_NLS may be defined to 0 (manually, not through\nautoconf) and it's semantically incorrect to only check whether it's\ndefined.\n\nThis is a correction to commit\n661d603b65385f62f372acd2017e5af2e0f0cd50.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11b7512664c30cadd923f479c59bc3368a7b210d", "commit_date": "2017-11-03T23:12:49Z", "commit_message": "scanner: Rename genecs() local variables. No code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c0f34cf12e17a526978ee962d92a37f93e86160", "commit_date": "2017-11-03T22:41:16Z", "commit_message": "scanner: Remove unused BASENAME() macro.\n\n(Simply forgot to do so in commit fb731ac0221e1866534dfe072b84b8af7a5d88f3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "661d603b65385f62f372acd2017e5af2e0f0cd50", "commit_date": "2017-11-03T14:39:32Z", "commit_message": "build: use #ifdef for ENABLE_NLS check.\n\nconfig.h will have either define ENABLE_NLS or not define it. If it is\nnot defined we get a -Wundef warning due to using #if with an\nundefined macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a17d79e9c722a6735b6d2a8f152287404f27df32", "commit_date": "2017-11-03T14:19:21Z", "commit_message": "scanner: Define _POSIX_C_SOURCE when needed in skeleton.\n\nThe function fileno() is defined by POSIX. When flex would otherwise not provide that feature macro, we define it.\n\nFixes #263", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0db9f8903a446e7026874be519b8dc55a471f014", "commit_date": "2017-10-05T15:31:18Z", "commit_message": "build: Remove custom reallocarray() declaration.\n\nUse one from <stdlib.h> instead because that is more portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37a6184dabcd82fa1d17c24c000f3da469296195", "commit_date": "2017-10-05T15:27:54Z", "commit_message": "scanner: Simplify PRINT_SPACES() macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24fd0551333e7eded87b64dd36062da3df2f6380", "commit_date": "2017-09-04T15:22:30Z", "commit_message": "build: AC_USE_SYSTEM_EXTENSIONS in configure.ac.\n\nThis would, e.g. define _GNU_SOURCE in config.h, enabling the\nreallocarray() prototype in glibc 2.26+ on Linux systems with that\nversion of glibc.\n\nFixes #241.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d62d3eb24d06030ae2641fe4670de3a8da9e67e", "commit_date": "2017-09-04T01:25:57Z", "commit_message": "doc: document config.h inclusion by flex itself", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b5111d9772b5c160340ca96f08d30d7f6db5cda", "commit_date": "2017-09-04T01:17:59Z", "commit_message": "scanner: Include flexdef.h at %top block of scan.l\n\nconfig.h may define macros that alter the API of the standard library\nfuntions, and so it should be included before any other standard\nheader, even before the skeleton's standard header inclusion.\n\nFor example: config.h may #define _GNU_SOURCE that would expose the\nreallocarray() prototype from <stdlib.h> on glibc 2.26+ systems. If we\ninclude <stdlib.h> before config.h, reallocarray() would not be\navailable for use in lex file since the second include doesn't help\ndue to header guard.\n\nFor now our config.h might `#define malloc rpl_malloc` -- this\nsubstitution must work before including stdlib.h, or else the compiler\nwill complain about missing prototypes, and may result in incorrect\ncode in scan.l (gcc warning: return makes pointer from integer without\na cast [-Wint-conversion]).\n\nFixes #247.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2943389fd3ca776d25735c06ef94512a2bb5c20", "commit_date": "2017-09-02T19:09:28Z", "commit_message": "{re,}allocate_array code cleanup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71d3525ad21dde00d3665c61e27346e88dab30d9", "commit_date": "2017-09-02T19:07:52Z", "commit_message": "doc: document libfl targets in Makefile", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd1afa37e110563cfc25cf5703ae6288691c0657", "commit_date": "2017-08-31T19:54:02Z", "commit_message": "build: Add convenience targets to build libfl only\n\nThese are wrappers around automake- and libtool-generated targets,\nallowing users to build libfl only, without the main flex program.\n\nSee GH-256 for discussion.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b84ad149c90483d3bfe9f64dd7bfbfad3550116d", "commit_date": "2017-08-31T19:51:25Z", "commit_message": "doc: document src/libfl in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e19c55cab9eeedb59a0c4c1245d44ed51ff88f", "commit_date": "2017-08-26T16:18:44Z", "commit_message": "Don't install libfl.pc if --disable-libfl.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e199cb6bdf59e1513ac60132799c994bf28b283d", "commit_date": "2017-08-26T16:18:32Z", "commit_message": "libfl.pc: Rewrite descriptions, remove unneeded Cflags.\n\nThere's no need to include any header when linking with `-lfl`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e06407175ed235378624d8b75aa24179a27b876", "commit_date": "2017-08-26T16:17:57Z", "commit_message": "Move libfl.pc.in to src subdirectory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "931d29bdeacc66f561e44636f80f33782ca4bbb0", "commit_date": "2017-08-24T13:26:02Z", "commit_message": "doc: NEWS updates", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b115f389b284a13b974bba05c25896feeec716ec", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Hardcode flex name in --help text\n\nDon't use program_name in the description of -T/--trace or -V/--version\noption. It's ugly when user invokes flex with a long path like\n\"/home/username/tools/bin/my-custom-built-flex\".\n\nThis solution is not long term. If possible, the help text should be\nmodified so that the \"flex\" name is no longer needed below the first\n\"Usage:\" line. All translations of help text will need to be updated\nas well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a657f0c6f564d2edc6e34e0e9715a95b13bdb304", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Remove an unneeded gettext() in --version output\n\n\"%s %s\\n\" is not translatable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb731ac0221e1866534dfe072b84b8af7a5d88f3", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "scanner: remove BASENAME(); don't strip path from program_name\n\nThere's no technical need of stripping path from program_name. I think\nthe users should be fine if they see the path they use to invoke flex\nis diagnostic messages and help texts.\n\nYes, users will see \"Usage: ../flex [OPTIONS]...\" now if they invoke\nflex with the path \"../flex\".\n\nThe --version output has been changed so that the name field will be\nalways \"flex\" or \"flex++\". If the flex program has been renamed to\n\"lex\" (for compatibility or other reason) this will allow identifying\nthe implementation name (\"flex\"). (And it's a recommended practice in\nGNU Coding Standards)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d64a5263cfcd490a6a96b2d6c018fa40f1ed558a", "commit_date": "2017-08-24T12:18:11Z", "commit_message": "build: sort .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e73c4446841eda8d4ea01298e887059e8c1472", "commit_date": "2017-08-24T12:15:00Z", "commit_message": "have libobjs depend on libobjdir (#244)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa50a492fcbd45e9dfacf8d0483543f198d0f6a1", "commit_date": "2017-08-24T12:02:19Z", "commit_message": "build: git ignore libfl.pc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1ed5df2f61abcb201b770e29cea1082a117d0f9", "commit_date": "2017-08-24T11:52:13Z", "commit_message": "Create libfl.pc target for pkgconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "535524ea6b55f8f6a7dfc160cb19211c084795d6", "commit_date": "2017-07-18T01:12:44Z", "commit_message": "scanner: #define BASENAME, remove #include libgen.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f2b9a4d630b702f6dd8592014f89d40a6a4bcc1", "commit_date": "2017-07-18T00:03:45Z", "commit_message": "mkskel.sh: fix EOL issue for CRLF systems", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af066b952fc81eb1a29079c7206e50ffed80c40", "commit_date": "2017-07-15T22:52:28Z", "commit_message": "scanner: Ignore comment lines in skeleton files.\n\nIn skeleton files comments are indicated by leading `%#` and when\ndirectly read in using `flex -S <skeleton.skl>` they should be\nignored. Example: `flex.skl`.\n\nAmending commit 2f21edac99b5efc432417233e6e53326d630e08f which removed\nthis conditional branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e784a805ef8f33ab4de544eee1876f41d2bd9dbc", "commit_date": "2017-07-15T22:31:41Z", "commit_message": "filter: faster is_blank_line implementation\n\nUsing regex_t regex_blank_line is *slow*.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f370436e1cf0c731e74bcee806df6c7a43a3094", "commit_date": "2017-07-13T19:15:29Z", "commit_message": "filter: new internal function is_blank_line()\n\nIt's simply to return (regexec(&regex_blank_line, str, 0, NULL, 0) == 0);\nThe reason for encapsulation is to allow replacing this with a\nnon-regex method if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19cffb0ff001e24a278ab979ac7a49f788ab2eba", "commit_date": "2017-07-13T19:14:58Z", "commit_message": "build: require automake, gettext versions as per maintainer dev setup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c2c0a2e85b78874fd69487d711011d639867a3", "commit_date": "2017-07-03T15:49:36Z", "commit_message": "doc: NEWS memory leak fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "faa877a8434a1d2f1b2ab5315eee6ca44dc79629", "commit_date": "2017-07-03T15:45:55Z", "commit_message": "scanner: memory leak free scanner generator.\n\n**Issue:**\nScanner generation leaks memory for transition tables when invoked\nwithout `--tables-file` option.\n\n**Root cause:**\n`gentabs` function has different memory acquire/release conditions.\n\n**Solution:**\nReclaim memory at the same scope where it was alloacated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a044dbe6d03877c3d8c205ae76be9c41f442237", "commit_date": "2017-07-03T15:45:37Z", "commit_message": "filter: memory leak free scanner postprocessing.\n\n**Issue:**\nScanner postprocessing leaks memory during correction of `#line`\ndirectives values and generation of C header file.\n\n**Root cause:**\n`filter_fix_linedirs` and `filter_tee_header` functions do not\ndispose allocated memory.\n\n**Solution:**\nAutomatically reclaim affected memory by allocating it on stack\ninsted of heap. Stack allocation should not be a problem as its\nonly 512 bytes and there is no recursive calls.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef32155253a100a774c087ae4a6be3fb5c6a375c", "commit_date": "2017-07-03T15:34:14Z", "commit_message": "doc: NEWS c{i,j}", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea4b0a129eebedba73eb08eb2639040fd758c51f", "commit_date": "2017-07-03T15:34:00Z", "commit_message": "scanner: c{i,j} should preserve case.\n\nFixes #193", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bebb264a94bdbfcf150a24e706c183896207e7b", "commit_date": "2017-07-03T13:46:48Z", "commit_message": "doc: document --backup-file in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c55bf919ccad3e0eff30da09c3d3e9f81cc123ad", "commit_date": "2017-07-03T13:41:42Z", "commit_message": "scanner: add optionn to specify backup filename.\n\nIn a directory containing multiple scanners, we want to allow\nspecifying the name of the backup file else the backup files will be\noverwritten.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bd14f13878e8b36e84c57561b86a863e3a1093c", "commit_date": "2017-06-18T17:56:06Z", "commit_message": "doc: new uk translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90c62441b3e848e3e526808c9e33c8172f31ebb1", "commit_date": "2017-06-18T17:55:11Z", "commit_message": "doc: new uk translation from the Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e00f250f66678eea21a4b5a4a25cb5b38f35f71", "commit_date": "2017-06-04T20:20:04Z", "commit_message": "doc: formatting fixes in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4735d6925d7864710421da1bd2707bb1bba43f3", "commit_date": "2017-06-04T20:15:23Z", "commit_message": "test: echo 'set -v' before setting so in shell.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b9c0cedcbb63f9a570687b977d8b00558920ad", "commit_date": "2017-05-26T15:23:12Z", "commit_message": "doc: tableopts rule portability mentioned in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0152a0c33061c63c928279e9bfcf496e1178a1", "commit_date": "2017-05-26T15:21:16Z", "commit_message": "test: remove duplicate shell options line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3db3aeb311b58d50e5a9eb0e3e78f271255bb0", "commit_date": "2017-05-24T07:33:09Z", "commit_message": "test: use portable pattern substitution in tableopts.sh\n\nFixes: #222", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db4f5e0fe5f2563e9d36b203f9fabb81aad2e4da", "commit_date": "2017-05-19T12:05:51Z", "commit_message": "doc: document NetBSD build crash fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae437ad54624883ecec3812bd225239a882954e", "commit_date": "2017-05-19T12:03:48Z", "commit_message": "build: remove automake check-news", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b290d8ebdfa73b8f4665847fb689884eceee269", "commit_date": "2017-05-19T11:29:15Z", "commit_message": "scanner: Use reallocarr() when available.\n\nNetBSD had a crash during build. Since the provided substitute for\nreallocarray() wasn't working, use NetBSD's reallocarr(). Let\nconfigure choose that function whenever it is available. Use\nreallocarray if available. Still fallback if neither is available.\n\nFixes #219", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a70bac04ac4743d64c23d5f5a3df55494bf6050", "commit_date": "2017-05-14T11:16:45Z", "commit_message": "doc: list line number directives in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7e34bb958ac5d083b2bab4c89907cd0669196d", "commit_date": "2017-05-14T10:31:56Z", "commit_message": "filter: Output correct #line value for current file.\n\nA #line pre-processor directive specifies the line number and source\nfile of the following lines. If the source file _is_ the current file,\nthe line number should be that of the line following the directive. So\nthe specified line number should be the current line number plus 1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "596a221844c8b13696f83183f44d3fcc7184f464", "commit_date": "2017-05-13T21:24:55Z", "commit_message": "scanner: corrected typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0be31989084e3a3265a9b34bf64bf8784779cb67", "commit_date": "2017-05-13T21:23:18Z", "commit_message": "doc: noyyget/set_column options documented", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cadd124f882290dff281b6de06d64d92ce73ecd", "commit_date": "2017-05-13T19:15:45Z", "commit_message": "scanner: finish support for noyy{get,set}_column.\n\nUnattributed patch carried over from sourceforge bug tracker.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7284970311c8b0c7c36da2d527b596d4699d1023", "commit_date": "2017-05-13T18:24:17Z", "commit_message": "build: .mailmap for cleaning up shortlog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3f4639099863b5d419d7c3442babb8ffc3f58a", "commit_date": "2017-05-07T00:46:20Z", "commit_message": "test: rename some files for non-case-sensitive filesystems.\n\n-C*f and -C*F option-specific test files collide on case-insensitive\nfile systems, and cause tests to either not be run at all, or to\noverwrite each other's files at build time.  So rename -C*F ones to\n-C*_F.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af72e9e222aab86d695225d4d440a1bf66fadff8", "commit_date": "2017-05-07T00:26:28Z", "commit_message": "build: 2.6.4 is previous version", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "385766c5cff544f2f96040e01a0be217a161a7ce", "commit_date": "2017-05-06T20:54:54Z", "commit_message": "build: ignore .sig files.\n\nWe generate gpg signatures in place for releases. Since these should\nnot be tracked in the flex repo itself, we tell git to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dfc45ef5a3134f6602e3b1784649b50958d100f", "commit_date": "2017-05-06T20:53:14Z", "commit_message": "build: no longer ignore *.tar.bz2\n\nSince we no longer generate *.tar.bz2 archives, we do not need to tell\ngit to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "dependabot/github_actions/github-actions-240705649c": [{"commit_oid": "55499305a459d77608eb80155b886f5cbbe89ccd", "commit_date": "2023-09-25T14:25:54Z", "commit_message": "chore(deps): bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [actions/checkout](https://github.com/actions/checkout) and [github/codeql-action](https://github.com/github/codeql-action).\n\n\nUpdates `actions/checkout` from 4.0.0 to 4.1.0\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/3df4ab11eba7bda6032a0b82a6bb43b11571feac...8ade135a41bc03ea155e62e844d188df1ea18608)\n\nUpdates `github/codeql-action` from 2.21.7 to 2.21.8\n- [Release notes](https://github.com/github/codeql-action/releases)\n- [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/github/codeql-action/compare/04daf014b50eaf774287bf3f0f1869d4b4c4b913...6a28655e3dcb49cb0840ea372fd6d17733edd8a4)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: github-actions\n- dependency-name: github/codeql-action\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2567970b0a3e44429dc3e900e9501db5cbe2c0f", "commit_date": "2023-09-18T15:12:07Z", "commit_message": "chore(deps): bump the github-actions group with 1 update\n\nBumps the github-actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).\n\n- [Release notes](https://github.com/github/codeql-action/releases)\n- [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/github/codeql-action/compare/00e563ead9f72a8461b24876bee2d0c2e8bd2ee8...04daf014b50eaf774287bf3f0f1869d4b4c4b913)\n\n---\nupdated-dependencies:\n- dependency-name: github/codeql-action\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0b6c791ba1919f02b64a35407b59a9591fafa0", "commit_date": "2023-09-06T14:49:51Z", "commit_message": "Fixed issue #416: Made YY_DO_BEFORE_ACTION a do-while loop to fix -Wextra-semi-stmt warnings", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6db99ccd7aca802e1f9fe394d2b0a5a58b077188", "commit_date": "2023-09-06T14:44:07Z", "commit_message": "Add dependabot to keep Actions updated\n\nSigned-off-by: Pedro Kaj Kjellerup Nacht <pnacht@google.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac962cd512611374d73adf0a2461015cfb8c9927", "commit_date": "2023-09-06T14:44:07Z", "commit_message": "Hash-pin GitHub Actions\n\nSigned-off-by: Pedro Kaj Kjellerup Nacht <pnacht@google.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7d1c54362949978ca0d35eda8fd2fb734014758", "commit_date": "2023-08-22T15:35:15Z", "commit_message": "typos", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2fae24fa3d1678fcd7fcf81c3ec035962f2cebd", "commit_date": "2023-08-22T15:23:54Z", "commit_message": "Fixed typos", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "541645a888de0888af6ca84a196e50bd594d5b47", "commit_date": "2023-07-11T20:40:23Z", "commit_message": "doc: fix typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a97872a31146ddbd652994f3b05a7e86705a89c2", "commit_date": "2023-06-05T14:29:18Z", "commit_message": "Fix pattern documentation for case-insensitive ranges", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b38ae28e7ee881d6d1dc28ac83d94aba1245871", "commit_date": "2023-06-05T11:04:59Z", "commit_message": " ci: Add read-only permissions to workflows\n\nSigned-off-by: Pedro Kaj Kjellerup Nacht <pnacht@google.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a3022d064a87125dfa90d07765bd94d897ffc297", "commit_date": "2023-06-05T11:02:59Z", "commit_message": "Fix README typos\n\n* Update README\r\n\r\n* patch 1.5", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d30bdf45a88d59ae9fd2c893671dfa87f7363797", "commit_date": "2023-04-07T14:05:10Z", "commit_message": "fix(build): build man page when cross compiling\n\nfixes #560", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a4bac0b29c39d996adbd927d7164d2fb4b616d6", "commit_date": "2023-03-30T19:40:11Z", "commit_message": "doc(contrib): Alphabetize commit types\n\nThanks to @Explorer09 for the suggestion!", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2bb3bfd64f500a11baa2ad08396e4f71c7005923", "commit_date": "2023-03-30T19:40:11Z", "commit_message": "docs(contrib): Add CONTRIBUTING.md to EXTRA_DIST.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b822e533e1aa12f492560c4d3db2114c98b665d9", "commit_date": "2023-03-30T19:40:11Z", "commit_message": "docs: Add CONTRIBUTING manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3aedd286708aa4b5ac66238c54ffc5bb06103c23", "commit_date": "2023-03-15T17:36:52Z", "commit_message": "remove unused DO_COMPARISON", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3352d7f1c95ca5b9ddfe19bca126254c71ca1088", "commit_date": "2023-03-13T15:49:21Z", "commit_message": "Correctly refer to ctrl.traceline_template:\n\nThis was refactored in 0e32cd, but left a dangling reference to the\nprevious location here.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a57e165cc50265e6ca1f6e12313e3154c6a6f96c", "commit_date": "2023-03-09T19:45:08Z", "commit_message": "Fix #539 crash on Apple M1 by casting 0 to (char *) explicitly\n\nCurrently, when the NULL-terminated variadic function\nfilter_create_ext() is invoked, the value \"0\" is passed as\nthe last argument to act as a terminator. However, this is\nan integer value, which is incompatible with the pointer\ndata type expected by filter_create_ext().\n\nThis is undefined behavior in C, correct operation is not\nguaranteed. In fact, it causes flex to crash on Apple M1\nwhen GCC is used - the loop is not terminated when it should,\ninstead, it keeps running, corrupting the argument list for\ninvoking m4. As a result, it creates the following error:\n\n> flex: fatal internal error, exec of gm4 failed\n\nThis commit fixes the problem by explicitly casting the value 0 to\nthe correct pointer type (char *).\n\nSigned-off-by: Yifeng Li <tomli@tomli.me>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74e8c880fc043b765a5b2ea7ccdfee252d38beb4", "commit_date": "2023-03-09T19:41:26Z", "commit_message": "test(quotes): Add after action comment tests for m4quotes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1c2570502c40b9bf2f901afa7bb5355b9f43fa0", "commit_date": "2023-03-02T01:52:25Z", "commit_message": "removed output-beautification of YACC and INDENT\n\nper request from @Explorer09\r\nsaving one code line and its comment two times", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bf591762208198aac58fee8dff690ec3fd486e2b", "commit_date": "2023-03-02T01:52:25Z", "commit_message": "remove hard-wired bison lookup, check for \"GNU Bison\" in $YACC's version output instead\n\nadditional:\n* don't check for GNU indent if indent-check already found no indent\n* use common wording to check \"*whether* $BINARY is GNU stuff\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e34253f1caf301024e2c1e48f3aeca29bd43f5d6", "commit_date": "2023-03-02T01:47:23Z", "commit_message": "typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e69eff334b7fb05353817bae5a65acfd8d0c9ad", "commit_date": "2023-03-01T14:46:26Z", "commit_message": ".gitignore adjustments for WIN32", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf66c9e5f1af02c4b6f9fb5a10f83e28143a22d4", "commit_date": "2023-01-15T14:46:49Z", "commit_message": "doc(NEWS): mentioned new ka translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06adbc6f0fb04fea2cd162b2eb5d0be759e1df02", "commit_date": "2023-01-15T14:46:49Z", "commit_message": "doc(gettext): added new ka translation from translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac1dc0d757a873183ec2563bcf56570501daeb5e", "commit_date": "2023-01-15T14:40:44Z", "commit_message": "doc(gettext): updated eo translation from Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b746b2c3f6e1fa495867520dbf764e4dcdda5a87", "commit_date": "2023-01-15T14:40:44Z", "commit_message": "doc(gettext): added new eo translation to NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a24fa0366b4ac007c32a51dca99b5fc3755143c", "commit_date": "2023-01-15T14:27:49Z", "commit_message": "Merge pull request #399 from Explorer09/autotools-version\n\nbuild: correct and document minimum Autotools reqirement in configure.ac", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ec57cf108db178b13ec0baa6e7bf7f6424658bd", "commit_date": "2022-09-28T11:06:59Z", "commit_message": "tighten up markdown in INSTALL.md", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "853c232b7e41693158ae357f4591aef7c93a6fc3", "commit_date": "2022-09-28T11:00:11Z", "commit_message": "rename INSTALL to INSTALL.md", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13a2f02b80e383e8effc4d7fb844f9642623c911", "commit_date": "2022-09-28T10:57:11Z", "commit_message": "update and reformat installation instructions", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c49f7e585acb337a0940a8fa80cebc5a1f3aa48", "commit_date": "2022-09-27T20:50:19Z", "commit_message": "Documented building and installation of flex\n\nSince GNU autotools no longer provides a stock INSTALLATION file, we provide one that speaks to flex specifically.\n\nfixes #402", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f5cd60976de92aaa61e6364cec7349a260c79a2", "commit_date": "2022-09-27T18:22:07Z", "commit_message": "updates from translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea6493d9b6f1915ba096160df666637a6e1b3f20", "commit_date": "2022-06-17T11:57:52Z", "commit_message": "Merge pull request #527 from Mightyjo/issue-525\n\nFix Issue #525 - Segfault in yyinput", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1a5285cbf368be75a5108081178ceb861d72030", "commit_date": "2022-06-17T11:54:37Z", "commit_message": "Merge pull request #529 from ggujjula/issue_369\n\nAdd documentation about option '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cba28b65b6f3e54548b29358d249e73b6e4534c", "commit_date": "2022-06-17T11:52:11Z", "commit_message": "Merge pull request #528 from xiaohanyu/fix-doc-error\n\nfix some tiny doc errors.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1656033045225767dd312ec24b067a9857084b69", "commit_date": "2022-06-17T11:46:28Z", "commit_message": "Merge pull request #531 from Explorer09/flexint-include\n\nAlso check for C++ standard version when deciding to include <stdint.h>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ab4ea7364641bf498ea2fc8c1078b9f871ae0ba", "commit_date": "2022-06-17T11:35:49Z", "commit_message": "Also check for C++ standard version when deciding to include <stdint.h>\n\nFixes: #517\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0e7091dc76d67a5b60647e4e0ddb45f8d7fa8bb", "commit_date": "2022-05-31T06:19:47Z", "commit_message": "Add anchors and refs to areas relevant to '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16ff9d01339a7ecd859ee619a8496ca878a3eb70", "commit_date": "2022-05-31T06:19:35Z", "commit_message": "Add documentation for option '--yymore'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7535b35bf1dcf38ff449296741fcd85d0d491340", "commit_date": "2022-05-26T13:00:47Z", "commit_message": "fix some tiny doc error.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4581eccf1e9cb5c2b0646854a5b5b2024c4b602b", "commit_date": "2022-05-18T15:15:49Z", "commit_message": "fix(issue-525): Fail gracefully when yy_get_next_buffer can't find one.\n\nDemonstrate yyinput() error checking for this condition.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d9a039c31d1159fca492bf770403deef4c05cd2", "commit_date": "2022-05-18T15:13:46Z", "commit_message": "fix(issue-525): Add regression test for Issue 525.\n\nyyrestart should not set yy_fill_buffer to 1 when it was previously set to 0 (e.g. by yy_scan_buffer).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74a89fd6abf178f50f180f228613345682f7fd18", "commit_date": "2022-05-16T19:59:30Z", "commit_message": "Merge pull request #513 from ggujjula/issue_398\n\nIssue 398; Documentation fix; Additional command-line options", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00bfa85257ea06d55d9da7dcccda0a6083d9f067", "commit_date": "2022-05-16T19:55:38Z", "commit_message": "Merge pull request #524 from Mightyjo/issue-521\n\ndoc(manual): Character classes", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c0345cc2823058ffd57428e5d3d462758a242f7", "commit_date": "2022-05-16T19:48:15Z", "commit_message": "Merge pull request #523 from Mightyjo/github-ci\n\nGitHub Actions (Replacing TravisCI)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2bacaef4cf8ab274edfa87fbb11dfb5bba5d17f0", "commit_date": "2022-05-11T21:41:53Z", "commit_message": "doc(manual): Correct character class examples and special meaning discussion.\n\nSee Issue 521 and 478.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "342104d61be15342898e9f2fbb9b99960d183dce", "commit_date": "2022-05-11T20:14:22Z", "commit_message": "chore(ci): Remove testing configs from GH Action workflows.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a42e91987d5a138a0e03b11fb05595987f31045", "commit_date": "2022-05-11T19:41:54Z", "commit_message": "chore(ci): Update GH Actions scripts to Ubuntu 20", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cdd61549d057a41fef1620cc000e90cb443e175", "commit_date": "2022-05-11T18:55:43Z", "commit_message": "chore(ci): Enable GitHub Actions on github-ci branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87ff2861e6e57148b307b9ff82fb557d498997e1", "commit_date": "2022-05-11T18:47:30Z", "commit_message": "chore(travisci): Remove Travis CI configs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0c76652f7bf3221f2bc5a15137aedfe2c278969", "commit_date": "2022-05-11T18:47:30Z", "commit_message": "chore(gh-actions): Build and test on GitHub Actions CI platform.\n    Use ubuntu-18.04.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fe96958fa3d730f6adcac5979a57f03b705a196", "commit_date": "2022-01-03T17:35:03Z", "commit_message": "new pl translation from the translation project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1677eff252854d10b29dd50d7fc520f763340f5e", "commit_date": "2021-12-29T22:47:43Z", "commit_message": "Add command-line options --noyyget_debug and --noyyset_debug", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c947396cda32f6f1f430fb3b128b7ecf0446498b", "commit_date": "2021-12-29T22:31:18Z", "commit_message": "Replace mention of input() in documentation with yyinput()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1565a740dbeb8284c6ad09cf712df6e6b3c8ffe7", "commit_date": "2021-12-29T22:23:14Z", "commit_message": "Add command-line options --noinput and --noyyinput", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "974bb68e107b93511051fb5744d54a95667e12e0", "commit_date": "2021-10-24T03:07:14Z", "commit_message": "Remove trailing whitespace\n\nMany projects have pre-commit hooks that check for pedantic things like trailing whitespace. No harm in removing it to pacify them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ea145a7e6c0b15270b0ea913e8afbbdc516f6ea", "commit_date": "2021-08-13T15:37:10Z", "commit_message": "Merge pull request #491 from Mightyjo/issue_469\n\nIssue 469; Compute length of yy_state_buf correctly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eac09011867e1c6afc9f0da028b82553a2d479f2", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "chore(action): Clean up dead code\n\nLeave clear instructions on what to do if the Autobuild step breaks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e864186c577bfcb12c0e148a437930e4a5a6cc2a", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "fix(action): Let Autobuild do most of the work\n\nTry preparing configure with autogen.sh, then letting codeql-action/autobuild do it's work prior to analysis.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af75357b170ee7c7a67e911e31fef66dc6798332", "commit_date": "2021-08-13T15:16:11Z", "commit_message": "Update codeql-analysis.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fceec5d95a206745bf100c16f34f68201a9a03fd", "commit_date": "2021-07-02T22:52:14Z", "commit_message": "chore(skel): Fix permissions on cpp-flex.skl", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cccc82072c425bd5c7c2a0082225c7f01e4f67e", "commit_date": "2021-07-02T22:49:38Z", "commit_message": "chore(skel): Improve comment at state buffer init.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79da5dfa0fb837f97b1f1d71377a83efa90c8081", "commit_date": "2021-07-02T22:46:52Z", "commit_message": "fix(skel): Init state buffer correctly\n\nState buffer initialization in cpp-flex.skl got lost during a rebase. Added it back in from c99-flex.skl and made improvements suggested by smcpeak.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8100144eb4e2b5e82476a958ab9690ebccb54ee6", "commit_date": "2021-07-02T21:53:29Z", "commit_message": "chore(perm): Fix permissions 755->644", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b198864a75f73f1a125a048919fa849710d10fe0", "commit_date": "2021-06-22T18:27:20Z", "commit_message": "fix compile warning originating in cpp skeleton\n\n`gcount()` is of type `streamsize` which has a system-dependent size with at least `int`. Because of the `int max_size` limit no bigger value will be returned, the explicit cast fixes warnings from compilers/static analyzers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab783a0b996a91cae2522a7b37edecf142e88f34", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "chore(make): Ensure distcheck cleans up directories.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50819bb82a87e4e310690ce5a90ab798c50e2093", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Fix porting errors from the cpp to the c99 and go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d128474a79a1e781a67076c751ab773c11c65e2", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Use yypanic in place of YY_FATAL_ERROR.\n\nyypanic() is new in the c99 and go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "988d379eb082423274381656863c804b00f82427", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Add state buffer size handling to reentrant scanner skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "916636cb96a2334ca4c403f8ac293e202f72ca37", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "chore(test): Declare script variables before use.\n\nFor set -euvx", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1ed12a1b0355021c75e7aecaacc2a64dd11eb97", "commit_date": "2021-06-10T01:46:01Z", "commit_message": "fix(skel): Add state buffer size handling to non-reentrant scanner skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e61f190ef6d44e317bf4c28ec48c21779efab746", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Ensure size of Reject state buffer is sufficient each time yy_switch_to_buffer is called.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "379af7681d10ae78f4f334ec555d1f9e64123361", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Don't use C++ auto, it angers TravisCI.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4162d3653d07a55e05891d986da2a1a92386331", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Fix test failure on TravisCI.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "470c8a201ff2075f2e46823e68a0feafe6d5e097", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Test for reversion of CVE-2006-0459.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e6ad373b83473d2784133323eb42109e420f18b", "commit_date": "2021-06-10T01:46:00Z", "commit_message": "Test for reversion of CVE-2006-0459.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b073fdda2242a8e4a0f70244c0ae83d34f099b1", "commit_date": "2021-06-08T15:11:28Z", "commit_message": "Merge branch 'yy-init-buffer-nonnull' of git://github.com/Explorer09/flex into Explorer09-yy-init-buffer-nonnull", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60c4453b6ac1e29dbe039216ed948108eb9c6701", "commit_date": "2021-06-07T01:30:46Z", "commit_message": "scanner: Fix compiler confusion in yy_init_buffer()\n\nWhen complied with 'gcc -O3', the yy_init_buffer call can confuse gcc,\nthinking the 'b' pointer may be NULL. (gcc would warn that if\n'-Wnull-dereference' is used). Fix the confusion by never pass a NULL\nconstant to the function.\n\nFixes: #377\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dada40b50f6b5121ce439245815216d52afb537e", "commit_date": "2021-06-07T00:39:52Z", "commit_message": "Remove manual m4 search code. No more stat() dependency.\n\nThis reverts commit c34590c4bf067d4e749e5298a8ce9f90072d6332\nand all search code patches that followed it.\n\nThe execvp() would do the $PATH searching of m4 for flex. There's no\nneed to duplicate the effort.\n\nAnother reason for the removal is to remove dependency on stat()\nsystem call, which would cause a problem in a 32-bit OS accessing a\nfilesystem with 64-bit inode number (see #413).\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c26cd7bc13b30fcfafe394330f3fe70672d9e47a", "commit_date": "2021-06-05T18:37:20Z", "commit_message": "Merge branch 'autogen-sh' of git://github.com/Explorer09/flex into Explorer09-autogen-sh", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83aaf1b4ce146f0c2f7cf18e932457d5dba039b1", "commit_date": "2021-06-05T18:21:51Z", "commit_message": "Merge branch 'doc_fix_typo' of git://github.com/houtanb/flex into houtanb-doc_fix_typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb2e0aaccaa9b17dc00362fbac5aa294da466d64", "commit_date": "2021-06-05T15:36:21Z", "commit_message": "Merge branch 'westes:master' into esr_retargeting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bd5b0213a7fa2abb01cd9410886d6d5cc5768f7", "commit_date": "2021-06-05T11:24:00Z", "commit_message": "Create codeql-analysis.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d5d2dd4afdfe4f4cfb10556ffda540a34b92bd0", "commit_date": "2021-06-05T05:29:41Z", "commit_message": "chore(test): Clean up debugging in tests", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5772bb456e50299421cbd0da38d20ace9699d1e7", "commit_date": "2021-06-05T05:14:26Z", "commit_message": "fix(test): Re-add posix test input to repo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e893215c51fb0a8afa8d5be0c8965eec522733a", "commit_date": "2021-06-05T05:08:37Z", "commit_message": "chore(test): Enable shell '-eu' strictness", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90713678d88fd3d2bca71d8913de6f0e7ba9a681", "commit_date": "2021-06-05T04:46:26Z", "commit_message": "chore(test): Regenerate ruleset.am", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "455d913d34dd2bee32bdbeb1d68ac70cfd5ad8e4", "commit_date": "2021-06-05T04:29:05Z", "commit_message": "fix(test): Make test generating scripts work in VPATH builds", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aeb2cb553974b752f99de33a6951c815f44cb720", "commit_date": "2021-06-05T04:26:47Z", "commit_message": "fix(test): Re-add test inputs to tests/\n\nGenerating these test inputs on the fly breaks VPATH builds and 'make distcheck'.\nGlad we have a lot fewer of them now, at least.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fa412a3d95b3c2168dca1a4ad9139d273207756", "commit_date": "2021-06-04T04:37:59Z", "commit_message": "fix(build): Set texi2* include paths for VPATH.\n\nOverride the TEXI2DVI and TEXI2PDF automake variables to add an include directory so VPATH builds work.\nI'm not thrilled with doing this. The right thing is probably to move the included examples to doc/ and do the\nVPATH magic in examples/manual/ where LaTeX is better able to deal with it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46299d7dbc53be696b59bc7846bc0d9634349876", "commit_date": "2021-06-04T04:34:40Z", "commit_message": "fix(build): Expand wildcards in Makefile.am.\n\nWildcards were causing automake to generate spurious build targets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6472493e20fc1e604592b7a698f85e515d97856", "commit_date": "2021-06-04T04:33:30Z", "commit_message": "fix(build): Replace wildcards in Makefile.am.\n\nWildcards were causing automake to generate build rules for the *-filename dummies. They're not generally portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e50f889082e8a5ee301222b0495ad3d6aa312506", "commit_date": "2021-06-04T01:56:59Z", "commit_message": "fix(build): Prevent automake computing default _SOURCES for tests.\n\nAutomake attempts to compute default _SOURCES for the test-yydecl-*.sh runners generated by test-yydecl-gen.sh. Providing an intentionally empty _SOURCES variable for each script fixes the attendant errors.\n\nAlso removed EXTRA_DIST lines for deleted test inputs.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a297d520ae8f0d718a7aab5975550eb8dc1f2cae", "commit_date": "2021-06-03T00:17:38Z", "commit_message": "Merge pull request #16 from eric-s-raymond/retargeting\n\nReviewing ESR's Retargeting branch from westes/flex", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d93876e2249adec9e3a1e8f02e28bdf9a64e4c1", "commit_date": "2021-02-05T12:33:45Z", "commit_message": "Remove prrequisite from .l.go suffix rule\n\nautogen gets indigestion iv you give a suffix rule a prerequisite,\nso don't do that.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5960fabbac43191b424c56a7cbb8befbff5dd42", "commit_date": "2020-12-04T16:31:27Z", "commit_message": "Go back end: More Goification of names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33bd31b74b23f5ba01046b3a492adb29acf75fc2", "commit_date": "2020-12-04T11:49:26Z", "commit_message": "Portability fix in tests - not all languages have ++ and --.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b022d451d83a285b1bb41d5f41692ee2ef29b16", "commit_date": "2020-11-26T21:47:37Z", "commit_message": "check that each skeleton we build has the correct number of sections (#7)\n\nProbably we could turn the section markers into m4 macros, but until\r\nthen this will prevent accidents.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5c3fcfb3ebacd2f98d508bbc00965afa60f1203", "commit_date": "2020-11-26T21:24:28Z", "commit_message": "Mollify picky C compilers some more (#8)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b528c7efdc06ec59ce354d9db63a475514884a10", "commit_date": "2020-11-26T12:25:25Z", "commit_message": "Improve standards conformance in C99 and Go skeletons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f1c6960ceea2903153e2d5d7a41bfe9b6808072", "commit_date": "2020-11-20T12:32:35Z", "commit_message": "Deal with a GCC warning elicited by upgrade to GCC 10.2.0.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd0fb2920b15fc7a5432c49299d3aad044ef1608", "commit_date": "2020-11-20T12:32:35Z", "commit_message": "In the Go back end, more moves towards Go conventions.\n\nAll documented in the go-flex.skl header comment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b3f8db536f318b272b24ca83523ea5aa61580aa", "commit_date": "2020-11-20T10:52:06Z", "commit_message": "Improve information hiding in C99 and Go back ends.\n\nThings that don't need to be declared before that DFA\ntables shouldn't be.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d6d37f246be553cb7fd68fe806549cafc174316", "commit_date": "2020-11-20T09:52:32Z", "commit_message": "In the Go back end, begin Go-ifying the public interface.\n\nstruct yyguts_t becomes FlexLexer typedef.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a9a913893c2c8309fb0f9ea9ab8e2331e5ba9dc", "commit_date": "2020-11-19T23:26:48Z", "commit_message": "Eliminate forwards in the C99 back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75da1e1d8a8dc0b89803495b951627e76e821822", "commit_date": "2020-11-19T22:33:02Z", "commit_message": "In the Go back end, elimate some forwards.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df34448330392a583a878b6a9990c63dde5aa412", "commit_date": "2020-11-19T22:07:37Z", "commit_message": "More Go back end cleanup.\n\nRemove the Bison-bdidge kludge.\n\nRearrange yyguts_t so the public members are grouped together.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "820199d2a90d01d9f06b57d0c56be6512788e7fa", "commit_date": "2020-11-19T14:29:22Z", "commit_message": "In the C99 and Go back ends, rearrange code...\n\n...to clean out a forward declaeation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c37e76ca59bd6d8828786121552d8c9b3b7f781", "commit_date": "2020-11-19T13:54:42Z", "commit_message": "Improve type checking in c99 and Go back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1105abd8bd914c86c9a8e75330c501b227f1b56", "commit_date": "2020-11-19T13:46:41Z", "commit_message": "In the Go back end, more moves towards Go-like names.\n\nNot touching the public interface yet.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e502c5d485dbba21b81692d1ae8305a3378f0bff", "commit_date": "2020-11-19T06:55:55Z", "commit_message": "More massaging of the fake Go skeleton in the direction of Go.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ce66818db5a26f2e3f20e9232b40278174b8e443", "commit_date": "2020-11-19T06:28:58Z", "commit_message": "Stop emitting unbalanced markup in the skeleton.\n\nIt was fixed up by generating matcing unbalanced markuo in dfa.c,\nbut a good idea this was not.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b0503e1684bcb7d586678fefce270f5f64e8ceb", "commit_date": "2020-11-19T06:20:31Z", "commit_message": "In C88 and Go back ends, remove remnant GENTABLES conditionals.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48a25d4966b68fa289dd66744bcef9467b9b9c17", "commit_date": "2020-11-19T06:00:11Z", "commit_message": "Partial move of Go back end to Go canelCasing in names.\n\nNo publicly visible names are touched yet. This is all preep work.\nAll tesrs pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "866e31dafd017755fe3e7fcf59e8a89a1accb4df", "commit_date": "2020-11-18T05:02:04Z", "commit_message": "Go back end: Change the prefix option to set Go package name...\n\n...presebtly commented out.  All tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d15dfae9cf386c9871dda39838fcef7827c4d2", "commit_date": "2020-11-17T12:28:40Z", "commit_message": "TYhis commit is a model for how to add a new back end.\n\nBegin the Go back end. Right now it's a fake that generates C...\n\n...but this commit puts all the build and testnmachinery in place\nfor when it's not.  All tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be50e74b5c58c786592948b22f389c95139ed5a4", "commit_date": "2020-11-17T10:52:08Z", "commit_message": "Improve cleanup of generated .txt after tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eaf12696afcf66668618ad3f2bdba854d919f3a4", "commit_date": "2020-11-17T10:42:50Z", "commit_message": "Convert the debug test to be ruleset-based,", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2a64fa1746c3a7d515a2bb1ab7bda9462bec10c", "commit_date": "2020-11-17T05:07:07Z", "commit_message": "Rename some rules files to make maintaining .gitignore simpler.\n\nDue to some limitayions in git ignore wildcarding.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52e6bb3e84d5ab23c692cc7636c01b486ca1bb71", "commit_date": "2020-11-17T04:24:30Z", "commit_message": "Fix error in testnmaker: shell case alternations evaluate easrky.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b068bede45b84ed80dac7f7d1943e093bf42bef4", "commit_date": "2020-11-17T00:36:31Z", "commit_message": "Merge remote-tracking branch 'westes/master' into retargeting\n\nAll tests pass.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad9f2d493ebd3ae9eabdb9bd62043909394af484", "commit_date": "2020-11-16T22:55:59Z", "commit_message": "In C99, remove unneeded forward declarations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "654ab2012f9345798ef3a214ccb6ebd1f1b4d12d", "commit_date": "2020-11-16T22:32:40Z", "commit_message": "Up-gun a test to use the lineno code in the array+BOL case...\n\n...and fix the bug that turned up.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a67532dd5799676b9e1629b8fd2dc9f526383e09", "commit_date": "2020-11-16T11:10:47Z", "commit_message": "Remove now-unused parts of test/testwrapper.sh.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22b9ea63bdc0a7ac1f9b8593cf19887cbe1d22fc", "commit_date": "2020-11-16T10:54:38Z", "commit_message": "Remove the \".one\" category of tests; they've been replaced by rulesets.\n\nThis reduces the complexitry of the test machinery as well as making\ntests less backend-specific.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0f53f6930bb3d8fc8878e3fc9996b95d59a6b4f", "commit_date": "2020-11-16T10:32:38Z", "commit_message": "Remove now-unused SOURCES declarations.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eacb312e5b9868dba734996d6c72fc60e0d75036", "commit_date": "2020-11-16T09:51:00Z", "commit_message": "Improve instrumentation of test failures.\n\nAlso, yyinpt.txt is generated and does not need to be checked in.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709c1724ed74bee614c9e35b99d630396822f8c3", "commit_date": "2020-11-16T03:37:24Z", "commit_message": "Repair some bitrotted variable-trailing-context code.\n\nIt decayed because the test for this feature only exercised the nr\nback end. We add a ruleset--based test to verify on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df632cf2eb1e1def8f63d08d54055862ac6d8978", "commit_date": "2020-11-15T17:24:35Z", "commit_message": "Fix typo revealed by Go porting work, and improve test coverage to match.\n\nWe a ruleset test for BOL matching and a test for the array case of yymore.\nImprove yymore testing by adding tests that require a BOL match in\nboth array and pointer cases.\n\nAlso, convert lineno sporadic test to be ruleset-based so it's\napplied on all back ends.\n\nNo cide changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3603f033509d5a214b603f60ce4dd6ed7819843e", "commit_date": "2020-11-13T13:23:10Z", "commit_message": "Minor build system fixes before starting the Go port.\n\nRemove two dependencies that the C99 back end no longer has.\n\nRepair to force in-time building of skel.h files.  This way of doing\nit reduces where a new skel dependency has to be declared in the\nvuilld recipe to the one spot where the flex.h file is made from the\nflex.skl file.\n\nThe posixly correct test only needs to be done once, since it only\naffects how the tables are genetated rather than setting code\nconditionals in the back end.\n\nAlso, some comment typo fixes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a48798ca94c0afd8ff5b5e2e26948948352a2ad", "commit_date": "2020-11-12T23:45:54Z", "commit_message": "In C99, more rearrangement to make public API calls visible in actions...\n\n..,without resorting to forward declarations. Last C99 cleanup before\nthe Go port begins.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3e0d791eaca3485dadfcb84530f23c360f61ec9", "commit_date": "2020-11-12T15:49:10Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "110899d69e54c206d599fae07480ddb6720d7ce2", "commit_date": "2020-11-12T14:53:26Z", "commit_message": "Clean up test/Makefile,am's EXTRA_DIST.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa6a0fc6665b5315fb72903f8b3d27cbde61901d", "commit_date": "2020-11-12T13:37:50Z", "commit_message": "Declare that rulset.am depends on *.rules files...\n\n...for automatic remake when a new one is added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1991ad515f102d2eeb858180d7aa2f6b9344da5e", "commit_date": "2020-11-12T12:53:29Z", "commit_message": "Fix another carnivorous typo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c8b6c1c1fb714ced0b43d945116f960bbe4136a", "commit_date": "2020-11-12T04:15:55Z", "commit_message": "Clean out some small C dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a973b0efd8b1860244323e4af34fceb6d1eacef", "commit_date": "2020-11-12T03:52:47Z", "commit_message": "Booleanization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43aed9f0c9d9ee82646a1985fdee2e1bb213b352", "commit_date": "2020-11-12T01:57:39Z", "commit_message": "Typo fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b27cb2366bab475d56b9ec530c7ea63ef9f98bb", "commit_date": "2020-11-11T23:37:31Z", "commit_message": "Fix two minor m4 errors found by Daniel Brooks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01850d3ba1f1d0bbfe45a24331fba2192da1f321", "commit_date": "2020-11-11T23:13:15Z", "commit_message": "Eliminate almost all forward declarations from C99.\n\nOne less C-ism to deal wit h when porting to a new target languages.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3854cd2c67e31ddfacfe5a6b3aba1347e63be420", "commit_date": "2020-11-11T11:52:49Z", "commit_message": "Add a test for trailing conyext rules.  Fix the bug it turned up.\n\nAlso, roperly condition some variables related to trailing contexts.\nMakes generated parsers ever so slightly smaller in this case.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab32ad65bb13eff5c1210c56d564af2c71516262", "commit_date": "2020-11-11T00:56:39Z", "commit_message": "Repair some markup damage in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2056b2184d018c919b63abd26f1784ebf47077ac", "commit_date": "2020-11-10T12:33:10Z", "commit_message": "Add a trailing guard to the magic-rewrite recignizer.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87686ff2fbb94978f8c8bf9dc79284bfcd8343a1", "commit_date": "2020-11-10T11:55:22Z", "commit_message": "Successful elimination of preprocessor dependencies fromm C99 skeleton.\n\nThere's only one left. in the prefix code.  We leave that in place\nbecause ity will be needed if we ever want to replace the default\nC back end with C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b68eb3634f1b9edc9e7d35f932661d0ba2a7e7c", "commit_date": "2020-11-09T20:39:49Z", "commit_message": "Change two member names to make rewite rules easier.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa782b6233e0914591b0e967d1662449744e9497", "commit_date": "2020-11-09T09:26:56Z", "commit_message": "Explain why 3 API functions don't have magic rewrite rules.\n\nThe functions are: yy_current_buffer(), yy_flush_current_buffer(), and\nyy_set_interactive().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2995af0eeb3792506f2b9975788443f67ac4b389", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "yy_flex_debug -> yyflexdebug.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db1dca76c1fd042516661218ba588a0aae682587", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "Make the rewrite flag visible.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "191d7068c3045e3a966800428d64881590cf61a5", "commit_date": "2020-11-08T22:38:42Z", "commit_message": "Fully m4ize yymore()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8aabc897cd0729b9961b8b919a6ed7331cc32aca", "commit_date": "2020-11-07T06:48:56Z", "commit_message": "Add a test for yymore, and fix a bug it turned up.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec140e6477c4bcd09ae6e92b24c351e8f006e0cd", "commit_date": "2020-11-06T17:04:20Z", "commit_message": "m4ize yyreject() handling.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d056db08e660c7513b5d57985e09c5a7e3e3e4b4", "commit_date": "2020-11-04T11:43:47Z", "commit_message": "Fix errors that were masking problems with yyreject().\n\nEnsure that derived skel.h includes are removed on every clean.\n\nFix a bad shell line that prevented proper cleaming of derived *.c\nfiles from tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9414d653c78baf0c795584aeb6404a863494994", "commit_date": "2020-11-04T07:40:37Z", "commit_message": "Revert \"Successful m4ization of yyreject().\"\n\nThere seems to be something in the build recipe or test system that\nmakes the yyreject test unreliable.  Reverting until I figure out\nwhat.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b27be4b2ef4fb44eda1ee0ff76a960c4d7b0819", "commit_date": "2020-11-03T17:58:06Z", "commit_message": "YY_AT_BOL() -> yyatbol(), yy_set_bol() -> yysetbol(), and make them magic.\n\nThe tradeoff is a bit delicate here; yy_set_bol() did not strictly\nspeaking need to change. On the other hand, squeezing the underscores\nout of YY_AT_BOL() but not yy_set_bol() would have been exactly the\nkind of irregularity that people trip over and curse.\n\nThe underlying issue is of course languages like Go and Python with\nvalidators that get upset by all caps and embedded underscores. On the\none hand, we want to not be churning the Flex API gratuitously.  On\nthe other hand it is desirable if as few entry point names as possible\nneed to change in different target languages.\n\nThe approach I'm taking to deciding this question in individual cases\nis this: if an entry point name is likely to appear in actions, and\nmust be recognized as magic by Flex itself in order to have a final\ncontext argument added or an object reference prepended, then it must\nbe multilanguage-safe - not all-caps and no underscores.\n\nAny name that does *not* need to be wired into Flex can be left\nalone. Users may have to change it when they port.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e6b59bb7ac98ab3eba374f6b44a6fa1e16c65ba", "commit_date": "2020-11-03T16:11:58Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35cdc7cabe0dc8733cfb1e8a76c868c8d7c71d26", "commit_date": "2020-11-03T07:00:09Z", "commit_message": "Implement and document the rewrite/norewrite option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2f38557eea8c18bc087d56e5afe74fe9728ded9", "commit_date": "2020-11-03T01:35:28Z", "commit_message": "Pull two random flags into the ctrl structure.\n\nAlso, some documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb6e30e9d51236f491785e7ba5537752be2c9ced", "commit_date": "2020-11-02T10:58:28Z", "commit_message": "Successful m4ization of yyreject().", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22d0a5d19265bf1fbc507e39bf53d63d98817f7c", "commit_date": "2020-11-02T06:33:46Z", "commit_message": "yyless is successfully m4ized.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6499117d78f332a04e784778aff25cf9a99ab82", "commit_date": "2020-11-01T22:38:58Z", "commit_message": "Add a test for yyless.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b9002f8f936c91c3907945df037712f809fe65e7", "commit_date": "2020-11-01T17:55:35Z", "commit_message": "Simplify and generalize the testmaker macros.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1d12f0cd72dc10b16436c17ef38dfa99b21286", "commit_date": "2020-11-01T08:54:07Z", "commit_message": "Portability improvement on the extended test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f449b421192edaebfdb1da0f29e69179493b00a", "commit_date": "2020-11-01T08:53:46Z", "commit_message": "shellcheck cleanup on all scripts. Turned up a minor bug in testmaker.sh.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a53aec8e86c4e62fe6c0ac48abd893dec502ef19", "commit_date": "2020-10-31T22:19:29Z", "commit_message": "Rulesets now carry their test loads with them.\n\nMakes it easier to see what the tests are doing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b5ef23d7043366b887d2207b5d085c25acbd6c7", "commit_date": "2020-10-31T15:59:59Z", "commit_message": "Modify the reject.rules ruleset so it actually tests yyreject().\n\nThis turns up the fact that m4ization of yyrehect() didn't work, so\nwe back that change out.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3fe9c68941a7c74f461658c70c12fe886438d505", "commit_date": "2020-10-31T09:15:37Z", "commit_message": "m4ize handling of yyterminate, and translate another stray #define.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "076ee33fc4a815f8a35ff88c56944cdeb5b692d6", "commit_date": "2020-10-31T03:06:57Z", "commit_message": "More small steps towards taking cpp out of the required pipeline.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48d47f6423b2596e666ab96e4eaad2a8602d9ff8", "commit_date": "2020-10-31T03:06:00Z", "commit_message": "Convert yyreject() from a cpp macro to an m4 macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f4de7a57a7f585f9570ddc2d9c8974f3ee01f4cc", "commit_date": "2020-10-31T02:32:28Z", "commit_message": "Fix a minor bug in gathering removables.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cc8835d3ce5924e369c4a6f542fc5e736643cac", "commit_date": "2020-10-30T00:34:14Z", "commit_message": "Add %option bufsize, required for testing under non-C targets...\n\n...since we can't count on the C preprocessor to do it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95efae546902ea23fb46aed9f26181e1b2cb2f6f", "commit_date": "2020-10-29T21:48:32Z", "commit_message": "Abolish a platform microtweak after consulting with Will Estes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bf1889ca76d66c37d8ea01c087a693aa296b5c6", "commit_date": "2020-10-29T21:19:47Z", "commit_message": "More de-preprocessorization.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59c26779eb4e10130658f8067566c6813a086c54", "commit_date": "2020-10-29T04:18:25Z", "commit_message": "In C99, make --nounistd a no-op. Explain this in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc11ff302062ec7dd69d37811eac1d2be7fe97d0", "commit_date": "2020-10-29T03:09:26Z", "commit_message": "In C99, assume <stdint.h> is available to simplify the code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02237b18b280bf6a7ba4ca22e3b53d8b99b7f011", "commit_date": "2020-10-29T00:49:19Z", "commit_message": "Convert handling of USER_ACTION, YY_END_OF_BUFFER_CHAR, YY_STATE_BUF_SIZE...\n\n...to use pure m4, not cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbdc123fde857ed61fc450f887684e524e97167e", "commit_date": "2020-10-29T00:28:17Z", "commit_message": "In C99, de-cpp-izee processing of USER_INIT and RULE_SETUP.\n\nAlso, fix a harmless compiler warning introced three commits back.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15948a9b1405e53f7d6fc6e3fedf9ad7b5ca04e0", "commit_date": "2020-10-29T00:15:24Z", "commit_message": "In C99, process yylex declaration stting directly through m4...\n\n...instead of relying on cpp to do it. This commit also adds a\ntest for correctness of yydecl on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9de953f78fc011d8540cab203ae8aa761fb02cf0", "commit_date": "2020-10-28T17:01:21Z", "commit_message": "In C99, remove more preprocessor dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29116efd20d33cb41ac87d9fd4e81d0b840a287c", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove cpp from the way the extra type is handled, use pure m4 instead.\n\nHas the effect of making the code a bit smaller when no extra type\nis born.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aea2d30573d4d84e9d60ca43739d5a46efb26836", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Finally ever the dependency on the YY_FATAL_ERROR macro.\n\nStill supported as a legacy interface in the default back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "079b2d1c8643174610304f90f711a485d5186f96", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Eliminate YY_BREAK macro, replaced with an m4 hook.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baaaa45b40a843cfb1fdc438bf673df23d0e9cbc", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "A step towards getting rid of YY_FATAL_ERROR...\n\n...because we can no longer depend on cpp to be in the pipeline.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ba9f483bfd539d74bbb4c9152c7a80437d228e7", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove for cpp dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af8d41eb94ca9d15c7a5c33fddfb9ce0e0c559c2", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "In C99, abolish indirection through a void pointer...\n\n...to get to the scanner internals structure.  While this was a valiant\neffort at information hiding, it won't port out of C to any other plausible\ntarget language.  That being the case, we cut the LOC.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "169612a929ab64036c5fd904f0794f6adb74df4f", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Remove cpp dependencies.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1dc1c0911b48e6bb4137a4aeeeead49082236eb", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Sever a number of dependencies on cpp by adding rewrite rules...\n\n...in the flex scanner.  Presently this works for yyecho(), yyinput(),\nyystart(), yybegin(), and yyunput().  These no longer need to be nacros.\n\nA few more remain to be done, notably yyless() and yymore().\n\nAlong the way, deprecate YY_FATAL_ERROR and add a replacement option.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f854b710512bb20ff41563e7ab9edfc10071fc08", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Clean C preprocessor assumptions out of C99.\n\nAlso, continue booleanizing where we can.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af5fa13bb376dc8ee1df0d4ff2a70950997e9de", "commit_date": "2020-10-28T16:39:26Z", "commit_message": "Outside cpp #define doesn't work, so deprecate YY_FLEX_SUBMINOR_VERSION.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b244d82cf0758daece2f764dd3fdc63cc9dff60f", "commit_date": "2020-10-27T03:26:28Z", "commit_message": "Remove an ugly little knor in the C99 yyunput code...\n\n..left there from a weird compromise when the default C back end also\nsupported C++.  Add a yyunput ruleset testing it on all back ends to\nverify that the change is good.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5d2d88a6d04333ac4a6655afa0613a36ce4aa2c", "commit_date": "2020-10-27T00:03:22Z", "commit_message": "Fix C emission lurking previously undiscovered in nfa.c.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baafce5c719cabfa63cb1cdd5e94ee02de1e3edf", "commit_date": "2020-10-26T19:45:23Z", "commit_message": "In C99, factor a nasty hunk of macrology into a function.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffcdee1fa2dae5d86082e199b17c85e09ab52630", "commit_date": "2020-10-26T18:26:49Z", "commit_message": "In C99, use bools where it is semantically reasonable.\n\nAlso, abandon the old-fashioned practice of using ! as a NULL\ntest on pointer-valued expressions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8de043be28e797b49ce86aead6db6dc79f5742d", "commit_date": "2020-10-26T14:52:53Z", "commit_message": "In C99, group macros for use in user actions...\n\n..and move the group as late in the generated code as we can.\nThere's no reason for those to be in scope when tables are\nbeing generated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9bfc5ce27d86f7c416aa2f9eadc7ca04d4edf868", "commit_date": "2020-10-26T13:56:18Z", "commit_message": "In C99, remove most code dependencies on yyin/yyout/yyleng/yytext macros.\n\nThese served a purpose when the code had to handle both reentrant and\nnon-reentrant cases.  Now, while they should still be available in user\nactions, the generated code is much less confusing if the yyg pointer\nin the references is explicit.\n\nAlso, drop VMS support and consolidate platform-specific references\nat one spot. This is in the same commit with the macro cleanup because\nit included getting rid of the last stray yyin/yyout references.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0504115662b1d1c09add43de135689e54173a88", "commit_date": "2020-10-26T12:07:06Z", "commit_message": "In C99, strip out ccp #ifndefs that can't fire if not using cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18b3523680d1e977950895a6bb7296cd3757397b", "commit_date": "2020-10-26T11:59:36Z", "commit_message": "Strip legacy macro definitions out of C99.\n\nThis is both a step towards Go/Rust and a demonstration that\nall the ruleset-based tests run wtout them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a4cd247ca6c1b92f450cb3fe71bca6dbc69e20b", "commit_date": "2020-10-26T02:34:23Z", "commit_message": "Polish documentation and fix up some uses of the old interface.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e71dbbf5ddb9ed42819fe46ac2325ae8e03f8a5", "commit_date": "2020-10-26T02:08:16Z", "commit_message": "Polish tests and test documentation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b758041c354ca28ce441615481abdd591c24fb", "commit_date": "2020-10-26T02:08:33Z", "commit_message": "Expand M4_HOOK_CONST_DEFINE into multiple macros for different types (#6)\n\nThe Rust backend needs to know the type of every constant; it can't\r\njust guess and it doesn't have text macros like C.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac97741a0b3f9d33beb2c081af2089de209290cd", "commit_date": "2020-10-26T02:08:18Z", "commit_message": "Fix Next link in the Overview of the Retargeting section of the manual (#3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "307645b7b7a21453fb8a777ddb7b0bf76df84dfd", "commit_date": "2020-10-25T13:53:18Z", "commit_message": "Narrow the interface between Flex and the skeleton file...\n\n...and reduce C preprocessor entanglement in the C99 skeleton.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "393b0b573325239ca16452dd5175feed2fd465ad", "commit_date": "2020-10-25T04:13:56Z", "commit_message": "yyconst is a pre-ANSI archaism. Remove it from the test code...\n\n...so the C99 back end doesn;'t have to carry it.  It's still defined\nin the default C back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68d658f60c42ad22f93f7b982934f29becce7428", "commit_date": "2020-10-25T04:00:47Z", "commit_message": "Sever a C99 dependency on ECHO,", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ec30d9fee286c619fbee457680821a43a0b610b", "commit_date": "2020-10-25T04:00:47Z", "commit_message": "Strip legacy support from the c99 back end.\n\nGone: C++ support, M4_YY_IN_HEADER. M4_YY_REENTRANT,\nand their negation symbols. The strange macrology\nrequitred to makecunction signatures conditionally\ncompile for npn-rentrant or reentrant is gone.\n\nThe default C back end is not touched by these changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eaf84e669dab968dd9ea0e4b5461e13486cd2d97", "commit_date": "2020-10-24T16:28:19Z", "commit_message": "Add tests for both senses of the Lex compatibility option...\n\n...fulfilling a promise made in \" Fix buggy handling of lex\ncompatibility...\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8301e241dcbfe50e1bc987e872c0b5e0ef2cbf18", "commit_date": "2020-10-24T12:52:51Z", "commit_message": "Move some boilerplate out of rules files.\n\nThey are now pure Flex rulesets.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91b3016f9dd908db3b6271c73bbd245b7d2b4680", "commit_date": "2020-10-24T11:46:41Z", "commit_message": "Add a test for correctness of {n} behavior when posix_compat is off.\n\nAlso, document what the posix and posixlycorrect rulesets are doing\nnetter.  I lost a day because the dependency on setting POSIXLY_CORRECT\nomn the envoronment was not obvious.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bec427f3ea3d755dd039f2946340afb30f65a1e", "commit_date": "2020-10-24T11:10:58Z", "commit_message": "Turn the posixlycorrect test into a ruleset-based one.\n\nRequired generating the posixlycorrrect rules with tests/ruleset.sh\nso all platforms will have them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5b4a2ee966300982e8a19f17afe8e7ebe99a2e3", "commit_date": "2020-10-24T00:06:42Z", "commit_message": "Force reentrancy on on the c99 back end...\n\n...amd repair the one c99 test with a non-reentrant main.\nThe reentrant no longer needs to be specified in an %option line\nfor C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c92f5df6a1f52be3e665c05776d8fb1b3af6988e", "commit_date": "2020-10-23T01:03:59Z", "commit_message": "Make the ccl test ruleset-based for all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "683fa301a7575e019b96a1f19ed6d5ebe3226e56", "commit_date": "2020-10-22T23:50:54Z", "commit_message": "Documentation cleanup - fix a wrong assumption about tests.\n\nThe quotes test is backend-independent and doesn't need\nto be run anywhere but C.\n\nAlso, remove some debris from the C99 skeleton,\nit injects noise into C output comparisons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97b5bc730fef2f36e34ff6988252eb2d11da90e7", "commit_date": "2020-10-22T17:53:48Z", "commit_message": "Repair CLEANFILES and EXTRA_DIST in tests/Makefile.am/\n\nMy previous changes were based on incorrect assumptions\nabout time of evaluation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efb179b87d8301394d87221faf38ea488f52b75f", "commit_date": "2020-10-22T16:24:38Z", "commit_message": "Use wildcarding and negation toi cut the verbiage in tests/.gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5017c14b09926f0b5e862dc79ea5bd7feb0d76d", "commit_date": "2020-10-22T15:24:27Z", "commit_message": "Fix buggy handling of lex compatiblity option introduced during the retargeting work.\n\nNot caught because we don't test that option. It's on my TODO list.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee9f33ac5dfb09616987b148b55bc819dc73a71d", "commit_date": "2020-10-22T15:24:27Z", "commit_message": "Convert the \"posix\" test to be ruleset-based...\n\n...so it will run automatically on all back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dddcaa7c973e17db75d31966ce8a93b82781163f", "commit_date": "2020-10-22T12:29:28Z", "commit_message": "Another big sinmplification of the test machinery.\n\nIf you drop a file with the extension \".rules\" in tests/,\n\"make check\" will now automatically make and run tests\nfor all back ends - presently nr, r, and c99.\n\nIt would be trivial to change ruleset.sh so all table-compression\noptions are checked for all rulesets, and probably a good idea.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd6fdfdadf13575c3534838cdbd5925ae641ebfc", "commit_date": "2020-10-22T11:15:26Z", "commit_message": "Remove unused variable settings in tests/Makefile.am...\n\n...and group the log-compiler settings together where they can be\naudited.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ff19867ca4ea1c332f4c2230444e189c1cedcf6", "commit_date": "2020-10-22T11:06:23Z", "commit_message": "Abolish the cpp test extension. Those things are just tessts.\n\nThe distinction was intriduced when I was first feeling my way\nthrough the test machinery. It doesn't buy us anything.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf6e72bb3341b083a18ecba3fa3fb38097c625ce", "commit_date": "2020-10-22T03:02:40Z", "commit_message": "fix a few shellcheck lints that have shown up (#5)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7cc373669e9f3a51c2bd6be53d601d48e41f06a", "commit_date": "2020-10-22T01:58:24Z", "commit_message": "This commit adds c99 to the list of back ends for tableopts testing.\n\nThe overhaul of the test system is done for now, though there will be\nmore woro to do when testing has to support compilers for non-C\nback ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf0f126d13f03614de662b6f44d66d1f3eaf7abd", "commit_date": "2020-10-22T01:12:13Z", "commit_message": "The new test system now covers table option tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fb90cc835cdcc5ca942b9afac074850ac6ecc4f", "commit_date": "2020-10-21T23:45:27Z", "commit_message": "Generate some dependency relationships...\n\n...rather than maintaining them by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1200a3da64d773dd85246aaa9792e92bceafb9bf", "commit_date": "2020-10-21T22:02:12Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd8e62a1b732eacf77757867f6adb966965231b8", "commit_date": "2020-10-21T22:00:07Z", "commit_message": "Teach testwrapper.sh to parse compression options from testnames.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d9826a40d92c2546f1755e9ef82b34252dffac79", "commit_date": "2020-10-21T21:58:16Z", "commit_message": "Use CxF rather than C_F to prevent case ambiguity, so...\n\n......test names can be split on _ characters in order to parse\nthe compression options desired in the test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a110b3b67db86d757b4ccf88dba306b94ebf679d", "commit_date": "2020-10-21T21:13:01Z", "commit_message": "Simplify testwrapper.sh by abolishing the -t option.\n\nIt's easy enough to tell if a testfile wants a table by looking at its\nname.  Getting rid of this option is a step towards putting all\ntableopts tests in the generated set so they are trivially portable to\nnew back ends.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8be9597d7d27b0db9f51922cbd9d3a87965b4445", "commit_date": "2020-10-21T21:08:22Z", "commit_message": "Use shellcheck on most of the shell scripts in the repository.\n\nAnd add a \"lint\" target that runs shellcheck on them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1726f1ca2dd92daa3c845034c8375171c867b85a", "commit_date": "2020-10-20T20:28:22Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30b86fbc07f691a9d534f5d548603cdbfa5d12e1", "commit_date": "2020-10-20T19:51:58Z", "commit_message": "Abolish reject.l4; all the reject tests are in the new system now.\n\nStill have the tableopts tests to do.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ea7800162ac9352b36b038e61196c21e39b2a5b", "commit_date": "2020-10-20T11:58:33Z", "commit_message": "Fold non-table-serialization reject tests into new test-generator system.\n\nEnables us to get rid of some spacial-purpose stuff in Makefile.am.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2034298f3d2efec1bc9b86fd2d43e89f89bd600c", "commit_date": "2020-10-20T10:47:15Z", "commit_message": "Integrate all possible simple tests into the new test templating system.\n\nStill to be folded in: all the reject and tableopts tests.\n\nNote: I understand VPATH builds just well enough to suspect that this\ncommit and my previous broke them, but not well enough to test\nor fix it. Mea culpa.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a1544256bf9515450d78cb9577e44f4cf6249d0", "commit_date": "2020-10-20T08:53:49Z", "commit_message": "Greatly simplify CLEANFILES and EXTRA_DIST by using wildcarding.\n\nThis reduces the amount of hand-work trquired to add a back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16f19cd7ae01e0fc097f5573d18994da02e88934", "commit_date": "2020-10-20T07:31:20Z", "commit_message": "Introduce testmaker.m4 and testmaker.sh\n\nThe existing method of generating multiple tests from l4 files is not\nflexible enough to handle multilanguage - reliance on the C\npreprocessor prevents that. This commit creates replacement machinery\nthat's more flexible and will greatly reduce the complexity of adding\nnew back ends.\n\nThe idea is to generate test .l files by combining a\nbackend-independent ruleset with backend-dependent boilerplate for\ntest mains and preambles.\n\nThis commit creates the rules files, the m4 to template them into\ntests, and a shell wrapper to drive the m4 expansion.  The autoconf\nintegration works OK, but requires additional rules at the\nend of tests/Makefile.am that probably ought to be autogenerated.\n\nThere was one other change forced by this.  In order for the new\ntestmaker to work, it needs to be possible to analyze test file names\ninto stems and option modifiers.  Having underscores in the stem\nwould make the analysis slower and bug-prone.\n\nI wanted to change them to \"-\" rather than deleting them, but this\ngives autoconf fits - it seems to not like filenames with embedded\ndashes in certain contexts.\n\nAt this commit, only one test - array_nr.l - is generated using the new\nsystem.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c23d0161dc2ebf374e1066e5f39f2f9fe6a19fba", "commit_date": "2020-10-18T02:12:25Z", "commit_message": "Cut down on input-file proliferation.\n\nWith a minor tweak to testwrapper we can allow all the versions of\na test for different back ends (counting _r and _nr as back ends)\nto share a common input file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b642977f1c6d8aab72eb4621766384c987578028", "commit_date": "2020-10-17T18:59:21Z", "commit_message": "MAINTAINERCLEANFILES typo fix.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f735bad052deedfff571e57145c5afc627e1f653", "commit_date": "2020-10-17T18:52:05Z", "commit_message": "Add C99 lineno test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07440122ca0a68e507bb2e03c00a4abba279af7d", "commit_date": "2020-10-17T18:13:12Z", "commit_message": "Improve explanation of m4 quoting.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd08ddcf8f58658887c689e60194bc93556220e7", "commit_date": "2020-10-17T14:29:20Z", "commit_message": "Fix some minor typos recently introduced in tests/Makefile.am.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e85860015806c2684dc74b5c40f3d0dd475d4afb", "commit_date": "2020-10-17T14:19:36Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c439cfab2912e1e8b229ae7f21b635254180d80", "commit_date": "2020-10-17T12:40:29Z", "commit_message": "Finish up the simple-test set for C99.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff0f99585169a435a5638ed2c4fa3b13397ee615", "commit_date": "2020-10-16T18:27:46Z", "commit_message": "quick editing pass over recent changes to documentation and comments (#2)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f07c52fdc5273edf3c8fbd0c16d780f8c9900e5e", "commit_date": "2020-10-16T18:07:03Z", "commit_message": "Fix a gacomment garbled by an incautuius replace.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a4495add564cc8784ffc616ed651da83fcd365e", "commit_date": "2020-10-16T16:34:58Z", "commit_message": "Added exteded_c00 test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4615b6420cb941b382ab7673c8a6806cd8394632", "commit_date": "2020-10-16T16:27:07Z", "commit_message": "extended -> etended_cpp.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3290c37223e5deb896c72578926e5d2e58b37689", "commit_date": "2020-10-16T16:07:22Z", "commit_message": "Actually *commit* the documentation on test conventions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6931c9f6c896aed55ab503f316c7551bc783975", "commit_date": "2020-10-16T15:56:13Z", "commit_message": "Docunent the -e/--emit backend switch and the new test convention.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4724e14e385c438e90699b1a8651e39fff420dc7", "commit_date": "2020-10-16T15:10:16Z", "commit_message": "Adding more c99 tests: alloc_extra_c99, array_c99, ccl_c99, debug_c99.\n\nalloc_extra -> alloc_extra_cpp\nccl -> ccl_cpp\n\nThese rena,es meam that the tests for all backends are in either two\nparallel series (*_cpp, *_c99) or three (*_nr, *_r, *_c99).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c9898eb1352388d17bc4cb97f644996b2c736f4", "commit_date": "2020-10-16T12:57:36Z", "commit_message": "Add first C99 backend test, the C99 spin of basic_r.l.\n\nIllustrates how to adapt an exisying test - in this case,\nbasic_r.l - for the new c99 back end.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "978a4a3a632bb399bb01ceca3007419ce512dc29", "commit_date": "2020-10-16T12:46:39Z", "commit_message": "Begin work on a C99 front end.\n\nThe idea behind this is to exploit the existing test suite - write a\nstripped-down, cleaned up C skeleton that only does reentrant scanners\nand tosses out features like loadable tables and header generation\nthat can't be ported to other languages.\n\nThe C99 skeleton can then serve both as a launch point for the Go back\nend and a model for back ends in procedural languages without OO.  The\ninitial version is identical to the cpp skeleton except for different\nname and suffix properties abd having M4_MODE_C_OLY forcrd on.  The\nlatter means it blows up on the C++ tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e32cd6ce31e509d4d8421b87eb06448181b6590", "commit_date": "2020-10-16T10:10:02Z", "commit_message": "Add and document machinery to choose a back end by name.\n\nBack end is now reported in the metadata comments near the top of\ngenerated files.\n\nAll is in readiness for the start of direct work on Go support.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c99e66b54df7828d48d5752686374df72befcbc5", "commit_date": "2020-10-15T20:47:42Z", "commit_message": "Change inner loops to use int not YY_CHAR, removing need for separate NUL table", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30d0e5f95410fb7590b134e5a816da98d0bdaf2a", "commit_date": "2020-10-15T19:06:48Z", "commit_message": "Push some C-specific assumptions out of filter.c to the skel file.\n\nThe way this is done is by adding a capabiiliy to mine string-valued\nproperties out of skel files in Flex's binary.\n\nAlso, some reorganization to improve the encapsulation of\nknowledge about skel files.\n\nNo changes in generated test files from this patch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d658c1c167023d74ae8332f8d1b9d62435dbf8f5", "commit_date": "2020-10-15T11:36:02Z", "commit_message": "Make the format for detecting trace lines a backend property.\n\nNo changes in generated test code from this commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd60560bfd804f430924647bab625f9e887c367d", "commit_date": "2020-10-15T10:43:21Z", "commit_message": "Refactor filter.c to use line_directive_out().\n\nTo make this work, use line_directive_out() had to be servered from\nits deoendence on hidden globaks.  Which was a good idea anyway,\n\nNo diffs in generated test code from this commit.\n\nYet another well-hidden C assumption.  I begin to woner if I will\nexpire of old age before fkushing out all of these.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20779d47a7762e707b07889b48647cd08f97fb0f", "commit_date": "2020-10-15T10:13:24Z", "commit_message": "Factor C/C++ assumptions out of filter.c.\n\nNo diffs in generated test code from this commit.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65b508798fceb28fe0b5a7ddf316d3d728ed80c8", "commit_date": "2020-10-14T22:59:05Z", "commit_message": "More documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7f447793ab0c440159d51a3483c29463a8cea13", "commit_date": "2020-10-14T17:58:29Z", "commit_message": "Typo and markup fixes in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e740e500e21be7a95b5f19835c01bbdfd3f9fe07", "commit_date": "2020-10-14T17:16:44Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35c1cf34269654f6bf254be7cd5bd46e28d29bd3", "commit_date": "2020-10-14T15:57:24Z", "commit_message": "Remove unused code.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10daafd5b4fbe8cd8c1b2d4ec34548329b14acd6", "commit_date": "2020-10-14T14:56:57Z", "commit_message": "Remove interpretation of %-markup.\n\nBefore this commit, \"rm cpp-skel.h\" may be required in addition\nto \"make clean\".\n\nSince there  no longer any pusging or poping operations, the sko\nstack goes away.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efed8275c5c047f0da75d65e9795d4b8daf56afe", "commit_date": "2020-10-14T10:48:07Z", "commit_message": "Replace all conditional markup in the skeleton with macro conditionals.\n\nBecause having two different consitionalization syntaxes was ugly\nand conducive to error.  After this change there are %% breakpoints\nand %# comments and nothing else.  Comments on %if lines have been\npreserved.\n\nI used the following script:\n\n========================================================================\n\nimport sys\n\nflagstack = []\nfor line in sys.stdin:\n    if (not line.startswith(\"%if\")) and (not line.startswith(\"%endif\")) and (not line.startswith(\"%ok-for\")) and (not line.startswith(\"%not-for\")):\n        sys.stdout.write(line)\n        continue\n    elif line.startswith(\"%endif\"):\n        if flagstack.pop():\n            sys.stdout.write(\"]])\\n\")\n        continue\n    fields = line.strip().split()\n    trailer = \" \".join(fields[1:]) + \"\\n\"\n    if line.startswith(\"%if-bison-bridge\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_BISON_LVAL]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c++-only\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_CXX_ONLY]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c-only\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_C_ONLY]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-c-or-c++\"):\n        flagstack.append(False)\n    elif line.startswith(\"%if-not-reentrant\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_NOT_REENTRANT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-reentrant\"):\n        sys.stdout.write(\"m4_ifdef([[M4_YY_REENTRANT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%if-tables-serialization\"):\n        sys.stdout.write(\"m4_ifdef([[M4_MODE_TABLESEXT]], [[\\n\")\n        flagstack.append(True)\n    elif line.startswith(\"%not-for-header\"):\n        sys.stdout.write(\"m4_ifdef( [[M4_YY_IN_HEADER]],,[[m4_dnl\\n\")\n    elif line.startswith(\"%ok-for-header\"):\n        sys.stdout.write(\"]])\\n\")\n    else:\n        sys.stderr.write(\"depercent: unrecognized %r\\n\" % line)\n        raise SystemExit(1)\n    if trailer.strip():\n        sys.stdout.write(\"%# \" + trailer)\n\n========================================================================\n\nOne nasty little abuse if markup around yyread_r had to be fixed up by hand.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee6ae49d671df0b149a9232843785bd51b5852b9", "commit_date": "2020-10-14T10:23:17Z", "commit_message": "Fix typo introduced when yyunput was added.\n\nThe bad commit was:\n\"Rename unput() to yyunput(); follow through in option switches.\"\n\nI shouldn't have missed this, but te build has normal warnings\nthat obscured the waning from Flex.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18ece7e2494dcd5eed3162e71f0f4ff673e6dec4", "commit_date": "2020-10-13T14:27:31Z", "commit_message": "Modernize the C in the skeleton file.\n\nGood modern style in C is to write it as though it were a strongly typed\nlanguage even though it isn't; thius, it's no l;onger considered good practice\nto apply ! to non-booleans.\n\nAlso, fix some indentation annd vraxe usage for uniformity.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bcd857589706e1b91eb2567bd2e68210198b5f4d", "commit_date": "2020-10-13T13:29:24Z", "commit_message": "Documentation polishing.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7611bea3c14157d8531cd7dd7f439ac997a33bd", "commit_date": "2020-10-13T11:44:36Z", "commit_message": "Three more namespace cleanups for multilanguage.\n\nReplace YY_FLUSH_BUFFER with yy_flush_current_buffer()\nReplace YY_CURRENT_BUFFER with yy_current_buffer().\nReplace YY_BUFFER_STATE with yybuffer.\n\nThe following are the all-caps definitions still exposed:\n\nYY_FLEX_MAJOR_VERSION\nYY_FLEX_MINOR_VERSION\nYY_FLEX_SUBMINOR_VERSION\nYY_NULL\nYY_END_OF_BUFFER_CHAR\nYY_BUF_SIZE\nYYLMAX\n\nIt is not idea for this list to be nonempty, but\nat least these are all actual comple-time constants\nrather than function calls or type names.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8d0162b80ac39fc3c682d39a14c490baccbcc5e9", "commit_date": "2020-10-13T01:07:14Z", "commit_message": "Update all the examples to use the new API elements.\n\nAdd a fully reentrant example.  And update to TODO file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68711fc4a755468b796aa23e0747179754e12340", "commit_date": "2020-10-12T20:23:59Z", "commit_message": "Replace YY_USER_INIT, YY_USER_ACION, and YY_BREAK #defines with Flex options.\n\nThese were the last preprocessor abuses in the Flex interface.\n\nAlso, add a TODO listing tests that need to be added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a4dd4772d26aa30a355fd15953c1cb2358143a0b", "commit_date": "2020-10-12T15:06:26Z", "commit_message": "Make yydecl an ordinary string-valued option rather than a special directive.\n\nThis corrects a minor mistake I made earlier because I did not yet understand\nthe full generality of the option syntax.\n\nAlso fixes some minor markup errors in the manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bd654ca0c768f2e9f3ba07f1292615a4a3b9269", "commit_date": "2020-10-12T14:38:18Z", "commit_message": "Deprecate #define YY_EXTRA_TYPE in favor of the extra-type option.\n\nFollow this through in the examples and manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da0cd947c38cc984a674827669f3396186a60db9", "commit_date": "2020-10-12T13:36:44Z", "commit_message": "Make flex --help work again.\n\nFixes a stupid, trivial initialization-time bug introduce\nduring methodizatiion.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aac8fe889600fbd15effeb8526987be34c0264d7", "commit_date": "2020-10-12T13:16:40Z", "commit_message": "Revise the manual so the reentrant interface is recommended early.\n\nAlso add the first example friom the manual, and a reentrant variant\nof it, to the example set.  And document how to integrate examples.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "721622ea6e6aaf3aa7e55d939679f21e98b76d86", "commit_date": "2020-10-12T10:56:56Z", "commit_message": "Rename unput() to yyunput(); follow through in option switches.\n\nThis change was not strictly necessary to sever a preprocessor\ndependency nor make the API uniform aross both C and C++.  But it\ncried out to be made, because now *all* the rule hooks are in the yy*\nnamespace.  This makes the API easier to document and remember.\n\nunput() is left in place as a compatibility macro for existing\nusers, but only documented as a legacy interface.  The \"unput\"\nvariants of switches and options have also been retained.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dad680611b8373cac2e5dc60e7552535bded79c2", "commit_date": "2020-10-12T09:35:24Z", "commit_message": "Deprecate input(); document yyinput() for the C back end...\n\n...leaving an \"input\" macro in place for legacy compatibility.\n\ninput() had already become yyinput() in the C++ back end in order to\navoid collision with predefibed C++ inoput. In a multi-language world,\nthis is good policy in general.  There's no real reason for C to\nbe different, and excellent reason to pull all possible entry\npoints into the yy namespace.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "526be1f459bdc907b9867609214e3667c040cdae", "commit_date": "2020-10-11T20:55:08Z", "commit_message": "Introduce the term \"rule hook\" so we can use the term \"macro\" less.\n\nNon-C/C++ back ends won't have macros, so the documentation should\ntreat macro-ness as an implementation detail when it has to be\nmentioned at all - and usually it doesn't.\n\nThe key thing about rule hooks like yyless(), yymore() etc. isn't that\nthey're macros, it's that they can only br used in rule actions (e.g.\ninside the body of the genetated tyylex code.\n\nThis documentation patch removes the term \"macro\" where it isn't needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8225f259e5b61b972381ad37c5d386a8119124c", "commit_date": "2020-10-11T19:46:05Z", "commit_message": "Implement and document yystart(), replacing YY_START.\n\nAs usual, legacy interface left in place but deprecated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cecae8b6aa36414dfb390108282a36f82535dfbe", "commit_date": "2020-10-11T17:04:57Z", "commit_message": "Implement and document %noyyread, replacing YY_INPUT.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "956ac03b7d84f260ada4a4ddeef7174e827442be", "commit_date": "2020-10-11T15:05:12Z", "commit_message": "Refactor YY_INPUT so it calls a new yyread() internal function....\n\n...rather than splicing a bunch of exposed guts into the middle of\nyylex().  yyread() is put in the set of functions that gets\nprefix-modified.\n\nThis means buffer refill can be documented without C-specific\nreferences to YY_INPUT.\n\nIt should also enable actually having a non-macro replacement\nfor YY_INPUT, with a bit more work.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1094c2a1370defc57ea14d2398a72f15ce4f9c43", "commit_date": "2020-10-11T09:14:41Z", "commit_message": "Revise Flex manual to say useful things about multilanguage support.\n\nNo specific thing can be said about a non-C/C++ backend yet, but\nthis patch prepares the way by explaining which features and aspects\nof the Flex interface are specific to C/C++.\n\nIt also fixes one pre-ANSI prototype - that of non-reentrant yylex(),\nwhich should be declared yylex(void) in this day and age.\n\nThese changes make one new commitment. Observing that the YY_INPUT\nmacro is impossible to port out of the C/C++ context, I have observed that\nit is probably extinct in the wild (due to the later introduction of\nthe multi-buffer primitives, though I don't say that explicitly). The\ntext says tat people who really need the equivalent of this capability\nin a non-C/C++ back end should file an issue with the Flex maintainers.\n\nI don't actually expect this to happen.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3158c7f0721f8558a1acdcf5c2dad12be0fa0e2e", "commit_date": "2020-10-10T23:25:32Z", "commit_message": "Implement and document %option yylmax to replace #define YYLMAX.\n\nTest in tests/test-yylmax.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d1959c5956173060389021e931091269af6216e", "commit_date": "2020-10-10T21:21:11Z", "commit_message": "Implement and document %yydecl directive to replace #define YY_DECL.\n\nAlso added a deprecation note abut the old mechanism.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76affdf8942bf5627a815edcb486f9dcc3067ae6", "commit_date": "2020-10-10T03:28:42Z", "commit_message": "Deprecate ECHO in favor of yyecho().\n\nI changed the tests to use yyecho(), but the ECHO macro is still\nexercised in the bootstrap scanner.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3612bc281e0ee68a8b9b5c609c42ced02366a82e", "commit_date": "2020-10-09T23:06:32Z", "commit_message": "Deprecate BEGIN in favor of yybegin(). Worst of the awkward squad.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62a13a3a3d45be1c053566fee502302368d4e579", "commit_date": "2020-10-09T12:29:55Z", "commit_message": "First step towards an interface independent of C macros.\n\nThis patch implements and documents a yyreject() macro to replace\nargumentless REJECT.  It does not remove REJECT, but warns that this\nmacro will not be supported in non-C languages and deprecates it.\n\nThis commit begins a new appendix in the Flex manual, to list\ndeprecated interfaces and explain why they have been superseded.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1e9c36271ea388cd155f2b7808c71113301e1631", "commit_date": "2020-10-08T20:03:03Z", "commit_message": "Do consistent optimal packing of arrays.\n\nFlex has a strategy of packing its arrays with in32 or imt32 depending\non length, but it wasn't applied consistently. While I don't thinlk this\nkind of space optimization matters a lot in 2020, if we're going to do it at\nall we should do it thoroughly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "723fd2c3b416b428664494a3898e91fda14bdf11", "commit_date": "2020-10-08T18:13:28Z", "commit_message": "Remove unused code.\n\nIndepemdent of the retargeting changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "700f9d3b6a3bb39d110f4b95e7459f4b9cfe4062", "commit_date": "2020-10-08T18:13:28Z", "commit_message": "Eliminate the c_like backend member.\n\nNo need for it, since the skel content is in core\nand the relevant hook can be searched for.\n\nThis is a postscript to the retargeting series.  It's\nnot necessary, but it imoroves the code slightly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8da857acc6f948d69381a3f4d1c68d897c5ed0a7", "commit_date": "2020-10-07T23:11:19Z", "commit_message": "Update the documentation on writing a back end,\n\nIt will doubtless need expansion and revision when we actually\nwrite one.\n\nNo diffs in generated test code.\n\n#70 and last in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "102c7a0149251e24a351742626e8d85453d7c75f", "commit_date": "2020-10-07T21:19:31Z", "commit_message": "Finish up macro abstraction.\n\nEverything Flex ships to the skeleton-file expansion phase is\nnow either a macro expansion or a macro call.  This almost finishes\nthe retargeting patch series; the wrapup will be documentation.\n\nSadky, this does not get us *all* the way to target-syntax independence.\nThe probem is the inclusion of tables_shared.c when table serialization is\nenabled. Which ,eans table serialization is not practical to support\noutside the C/C++ back end.\n\nNo diffs in generated test code from this commit.\n\n#69 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de769336588d2537f0d1b5c36ccc3c4fe24d1107", "commit_date": "2020-10-07T20:35:59Z", "commit_message": "Macroize all the remaining code-generation methods.\n\nProduces a tediously large diff in generated test code that\nis all table moving around.  This is due to them being shipped\nas macros and being substitured in a fixed order determined\nby the calls in the skell file, rather than veing generated as\nthe functrions originally emitting the tables are called.\n\n#68 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34771445d5891e9d4adc1146c9e55858793ed770", "commit_date": "2020-10-07T10:28:09Z", "commit_message": "Inline all yydmap entries, get rid of %tables-yydmap.\n\nWhat it used to do is now handled entirely by macro conditionals.\nBesides being a good complexoty reduction in itself, this is one\nof the last steps in turning C backend methods into macro deliveries.\n\nOrder of the yydmap table is perturbed. No other non-whitespace\ndiffs and no logic changes,\n\n#67 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd8748a311ed2f3f849d4b0fb12ea8198c8039ac", "commit_date": "2020-10-06T18:25:56Z", "commit_message": "Preparationn for macroizing the last eight methods.\n\nThis commit collects several minor changes:\n\n* Fix a minor type specification bug in a tablesext initializer.\n\n* macroize the trans_offset, mkctbl, and mkftbl methods.\n\n* Fix a bug in footprint computation.\n\nThis commit oroduces no code diffs in the generated test code, but the\nfootprint reports change due to the bug fix.\n\n#66 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "716cb63ff210f082418c96f726a6d165eae565a5", "commit_date": "2020-10-06T05:17:19Z", "commit_message": "Tweak the indent style of tables with macroexpanded bodies...\n\n...to have an indent style uniform with the rest of the code,\nand one that makes it easier noy to miss the trailing table delimiters.\n\nNot all tables are generated this way yet.  I'm working on it.\n\nIs isolated in its own commit so the format change can't confuse a\nreviewer's eyeballs out of noticing real mutations in the table data.\n\n#65 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96e004a296edf2a6f6e0b60b3da6e5d8e09428de", "commit_date": "2020-10-06T01:02:51Z", "commit_message": "Macroize the yy_meta, gen_yy_trans and start_state_list methods.\n\nAlso macro-generate yydmap entry for the yymeta table.\n\nWe're npw about 75% of the way through pushing all\nC syntax out of the method table.\nPermutes table order in the generated code.\n\n#64 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64cf0328063cd97dec09536a8f2bb35ce7350ffe", "commit_date": "2020-10-06T00:55:47Z", "commit_message": "Eliminate a lurking cpp-ism from scan.l\n\nAlso, remove now-unused functions from buf.c.\nAnd corral another global.\n\nProduces no diffs in generated test code.\n\n#63 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fafc0ef10cc9b2f1c7f758cd6ad42939bf6d5d1f", "commit_date": "2020-10-05T13:28:02Z", "commit_message": "Replace the comment method with a hook macro.\n\nThis required addin a new 0.0 breakpoint right after the\nM4_HOOK_* definitions so they will be visible early.\n\nProduces no diffs in generated test code.\n\n#62 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83d8bd5fb9a3b46810099dd8d50ad4de49540b1e", "commit_date": "2020-10-05T09:12:49Z", "commit_message": "Enliminate several backend methods by shipping hook macros instead.\n\nThey were: geneol, fulltable, eecs, and debug.\n\nTo accomplish this, dataend's emission of trailing } needed to be\nsuppressable.\n\nAlso, remove a %% mark that is no longer required.\n\nThis doesn't change any of the generated tables, but does change the\norer in which they're generated, froducing large diffs in the\ngenerated test code that don't actually mean anything.  The reason for\nthis is that tables used to come out in a variable order as functions\nlike geneecs were called ar variable times depending on the\ncompressuion mode.  Now, instead, the order is fixed by where the\ntanle-body macros these functions define are expanded.\n\nMore methods remain to be turnerd into macro generators.\n\n#61 in the retargeting patch series, following an unnumbered\nbugfix patch that I shipped in too much of a hurry.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aea91d7e4b0c025b33f62284cff5b14b6a0b9a75", "commit_date": "2020-10-04T04:17:17Z", "commit_message": "Reopair a buuld recipe bug introduced in #52...\n\n...by an icatous replace operation.  Insidious because\nit's undetectibe until you run configure again,\n\nTwo-phase build systems suck.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5386ba36835b7ffab67bd30cb28a116bb1cea5c", "commit_date": "2020-10-03T17:03:28Z", "commit_message": "Refactor so all skelout calls are in visible sequence in flex_main().\n\nThis makes the overall control flow easier to understand.\n\n#59 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c1b4a95f9f81b4b381e7aff1cf998efe7906663", "commit_date": "2020-10-03T17:03:28Z", "commit_message": "Begin replacing method table entries with hook macros\n\nDo this for table opener/closer/continuation syntax, the trace-format\nstring, the state entry string, constant definitions, the state-dyad\nformat, and the three pieces of EOF state syntax.  The documentation\nappendix on how to write a back end is also updated.\n\nThere are comment diffs because I decided generating an\nexplicit fallthrough marker and some other new explanatory comments\nwas a good idea.\n\n#58 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea32296019ed0ce028bd018fcca4697c702a0022", "commit_date": "2020-10-03T01:57:54Z", "commit_message": "As of this commit, all mode symbolds are finally visible.\n\nAll symbols except a handful dependent on nultrans and the number of\nbackups are now written in one visible group right at the start of m4\ngeneration.  The exception are exceptions because their values\nare not known until after DFA computation.\n\nHas comment diffs in generated test code due to one symbol rename and\nsymbols beoming visible. Should be the last time the latter happens.\n\n#57 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fc45ce97ce30c74f1a8b2024bed2ac3e491665e", "commit_date": "2020-10-02T17:13:40Z", "commit_message": "Clean up various sporadic symbol definitions that weren't going through ctrl.\n\nIncludes handling of --nounistd, --always_interactive, --never_interactive, --stack,\ntheir corresponding lexer items, and and noinput.\n\nAn unavoidable side effect is that the place where \"#define\nYY_NO_INPUT 1\" is inserted, if it's inserted. has to move because it's\ndone by a different route - m4 expansion rather than the action_define\nfunction (which is now gone - this was the last use). I have put the\nnew insertion point just iin time for the first reference to the macro.\n\nOtherwise the only diffs in generarted test code are symbol\ndefinitions becoming visible.\n\n#56 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e77d8f4759724a125bc9ca53366fd1b760c7c9e", "commit_date": "2020-10-02T09:55:36Z", "commit_message": "Move almost all m4 symbol setting to one spot.\n\nFormerly, Flex's own lexer and the logic for pocessing command-line\noptions both did calls to write M4 conditionals to a buffer that was\nlater dumped into the befinning of the text that m4 expands, before\nthe body of the skel file.\n\nThis was bad layering.  Instead, both these places now set flags in\nthe ctrl structure.  Later, (almost) all the generated m4 conditionals\nare shipped at once.\n\nIt's \"almost\" because there are a couple of awkward cases to be\ncleaned up.  Again, this was the part that could be done\nsimply via almost mechanical cut and paste.\n\nIn generated code, there are some comment diffs because symbols that\nused to be invisibly set are now visibly set - that is, shown at the\nbeginning of the generated C.\n\n#55 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5d0e408e2e1bb6587cb0d6986964fab78f43c0f", "commit_date": "2020-10-02T08:55:37Z", "commit_message": "Methodize a suffix computation and move headerfile into ctrl.\n\nThis cleans up some loose ends before the next big move.\n\n#54 in the retargeting patch series. #53 slipped out unnumbered.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9dbc704ad47129dcd2c4846b94473d618e6869a8", "commit_date": "2020-10-02T04:17:31Z", "commit_message": "yytext_is_array moves to the ctrl structure.\n\nThis is separate from the big reorganization in commit #52 because\nthere's a comment about this variable in flexdef.h that makes me\nnervous.  According to the comment this variable is a trit, but\nit looks to me like flexinit sets it to false and I can't find\nanywhere in the code that sets it to a non-boolean value.\n\nThis commit asumes that the comment is stale and the member\ncan be typed boolean. Should be audited.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99e6b1c89a8e889991acf5de3da4a665dfeda023", "commit_date": "2020-10-01T21:40:06Z", "commit_message": "Impose some namespace control on the global variables.\n\nAs I was working on some layer separation.  I realized that I\nwas getting confused a lot by the huge pile of globals that\ncontrol this program.\n\nIn particular, I need to be able to clearly distinguish those that set\nm4 conditional symbols from those that don't.  So I've done something\nabout it. Almost all globals that can be set by options are now\nbundled into two context structures, \"ctrl\" for options that have\ncorresponding m4 symbols and \"env\" for options that don't.\n\nThe few I haven't moved have sufficiently tricky interdependencies\nthat I'm going to break out any changes related to them into smaller\npatches that can be easier to review.  In this one I did only the bulk\nof straightforward changes that could be done mechanically with search\nand replace.\n\nI changed one varuable name to reflext its senantics better;\nthe performance_report global is now env.performance_hint.\n\nIdeally there ought to be a third structure that bundles all the\nshared state used by DFA/NDFSA table computation, so all globals would\nlive in one of three context structures.  I may do that in a later\ncommit, but this patch is already unpleasantly large as it is.\n\nNo diffs in generated test code, nor any logic changes.\n\n#52 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c6661bb2eb65fab3924a493ee979b960708583f", "commit_date": "2020-10-01T05:34:07Z", "commit_message": "Eliminate all uses of buf_strdefine().\n\nThere were only two left, for YY_MAIN, and that definition\nwas moved so it's in the visible controls.\n\nThis is a step towards making *all* conditionalization symbols\nviible in generated comments.\n\nThis commit also cleans up some misnamed mode symbols.  There are\nstill a couple of duplicative pairs, to be cleaned up in a later\ncommit.\n\nWe can now report generated M4 symbols with values in the \"m4\ncontrols\" part of a generated file. Partly as a result, the following\nsymbols become visible in generare code from the tests:\nM4_MODE_PREFIX, M4_YY_TABLES_VERIFY, M4_YY_REENTRANT, and\nM4_MODE_PREFIX.\n\nNo other diffs.\n\n#51 in the retargeting patch series. #50 was accidentally\nunnumbered.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7877454e423c0707479b20316432df8dddbed738", "commit_date": "2020-10-01T01:18:34Z", "commit_message": "Eliminate the epilog member from the method table.\n\nIt was a no-op anyway in the C version, there as a placeholder\nin case other languages needed it.  But in the new organization\nof things, with everything being done by conditional expansion in\nthe skeleton file, there's no point.\n\nNo diffs at all in generated test code.\n\nThios does remove some cpde that was conditioned out, an abandoned\nattempt to undefine all #defines at the end of code generation.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c2d23d9a8679961e9ca559d9fcca2a3d4e629c5", "commit_date": "2020-10-01T00:53:57Z", "commit_message": "Eliminate the prolog method from the method table.\n\nNow that all the mode conditionals are visible early, wverything that\nused to be done in the prolog can be done as conditionalized code in the\nskeleton.\n\nWhitespace and comment diffs only.\n\n#49 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "981867ff1519a807f9b69d8468f6f83fe2abec9f", "commit_date": "2020-09-30T12:37:39Z", "commit_message": "Land the footprint-reporting feature.\n\nAlso, clean up some unused and duplicative symbols.\n\nIn generated test code, comment and whitespace diffs only\nexcept for YY_INT_ALIGNED going away.\n\n#48 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31c3f7703dd0254558685669b5b6b3089b639e2d", "commit_date": "2020-09-30T11:29:43Z", "commit_message": "Methodize section marker output and refactor initialization.\n\nThe point of this change is to move the setting of the M4_MODE_*\ncontrols up to the front of the generated code so that they can be\nused for conditionalization earlier, notably in replacing the prolog\nmethod.  I tried to do this in #46 but dididn't move the mode\nsetting far enough up.\n\n(Also, rename instances of a duplicated mode switch.)\n\nIn generated code, the m4 controls move but nothing else changes.\n\n#47 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe2c1fe700dadb0dcdf52a649ef659a96a9fe3d", "commit_date": "2020-09-30T01:23:46Z", "commit_message": "Transplant where the mode controls are shipped to earlier.\n\nThis should make it possible to eliminate much of the C-specific\nprolog code.\n\nSadly, because of the moves of the generated comments this makes\na rather noisy diff.  All comments and whitespace, though;\nwhat looks like being other than that is pieces of generated code\nbeing shifteed around.\n\n#46 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9e86a3299fb5871306b36906b7c4f908f1520f0", "commit_date": "2020-09-29T21:18:43Z", "commit_message": "Eliminate two backend methods in favor of m4 expansion.\n\nProduces only whitespace diffs in generated code for tests, except the\norder of items in the initializer for table serialization changes.\n\n#45 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b952cbf80e76c57545611e4a0cccb48a73d0a71", "commit_date": "2020-09-29T20:53:47Z", "commit_message": "Eliminate ugly %define-yytables magic in skelout().\n\nThis feature is better implemented with m4 macroexpansion;\nthat way skelout() does not have to know that #define is a thing.\n\nAlso in skelout(), use the backend comment method rather than\nembedding knowledge about /* and */, and int_format_define\nto factor out knowedge about #define.\n\nProduces only comment diffs in the generated test code.\n\n#44 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "34b84d582361a6ce44b0bb4328cb45f5b07071fb", "commit_date": "2020-09-29T08:53:46Z", "commit_message": "Narrow the driver interface.\n\nThis patch is a pure refactoring step.  It changes the\ninterface between gen.c and the back end so that the\nmethod table can shed a number of methods and no headers\nare generated in gen.c any more.\n\nMost methods now return the amount of memory they\nallocate.  Eventually this will be used to add\na report on this to the generated code.\n\nNo diffs in generated code, even without ignoring whitespace.\n\n#43 in the retargeting patch series, which turned out\nnot to be finished after all. These is ugly magic in skelout()\nthat needs to be factored out.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "103634e4ca84ff014b20ef0e9cf726ef5980592d", "commit_date": "2020-09-27T15:08:36Z", "commit_message": "Clean up the indentation and brace usage in the skeleton file.\n\nIt was in a mix of several different styles tht made it hard\nto read.  I've massaged it all ibto K&R with tabs and mandatory\nbraces.  No logic changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42a39df0f5663c038b5fd875041d177ae57ea560", "commit_date": "2020-09-26T02:14:32Z", "commit_message": "Fo;d documentation on how to write bac ends into the Texinfo manual.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c842b49f83a4fd07a261a05195e440765b8df585", "commit_date": "2020-09-25T22:09:44Z", "commit_message": "Finish the retargeting patch series with a couple of small fixups.\n\nPull the C mode setting for M4_YYL_BASE into m4.\n\nUse if/then/else extension of m4_ifdef to simplify how yy_flex_debug\nis set.  In the process, fix a bug introduced earlier in this patchest\nwhere yy_flex_debug initialization was inverted.\n\nRemove unused skel breakpoints and renumber those left.\n\nDiffs have only commenmt and whitespace changes *except* for the\ncorrected initialzation of yy_flex_debug.\n\n#40 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8521281aef33b47df7e372d16a495cec7f9a7e62", "commit_date": "2020-09-25T19:40:03Z", "commit_message": "indent_puts and friends go away, they're no longer needed.\n\nI did some indentation of the end-of-file case statements with tabs to\nmake the generated code a bit more readable.  So there are trivial\nwhitespace diffs in generated code.\n\n#39 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "219db78e6aedaa3e31f2e3884988a074abaa9b44", "commit_date": "2020-09-25T19:26:06Z", "commit_message": "Last procedural-code generation in C goes to m4.\n\nDiffs are comments and whiespace, as usual.\n\n#38 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efeb6ef019c221dfb725bb5ad83ac5556dd94c68", "commit_date": "2020-09-25T00:40:47Z", "commit_message": "m4ize the code for handling NUL transitions.\n\nFinally, scavenge trailing skel breakpoints that are no\nlonger used, as theey no longer carry information.\n\nDiffs in generated code are all comments and whitesoace, as usual\n\n#37 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31b751703fa3589dab34ff3ed93c3f3074ff8bf4", "commit_date": "2020-09-24T10:52:27Z", "commit_message": "Chase down some methodization details missed earlier.\n\nNo generated-code diffs from this change.\n\n#36 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7cb3bf631ae1197359f4ce698c73763a5b5ac46", "commit_date": "2020-09-24T09:14:05Z", "commit_message": "Dump the state of the m4 conditionals near start of generated code.\n\nOf course, this produces exactly that in diffs.\n\n#35 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cb26ac3f98c1e72cc3785a929e7b2ce00dd3bbe", "commit_date": "2020-09-24T02:21:03Z", "commit_message": "Conditionalization of the debug flag moves to m4.\n\nTurned out to be mildly trick because %if/%endif pairs have push/pop\nbehavior rather than combining.\n\nIn generated code, the location of the debug declarations moves,\nand that's all.\n\n#34 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9ade3f92bb952da5fac35f474f445d84dc18bd1", "commit_date": "2020-09-23T23:49:31Z", "commit_message": "Methodize whether fullspd mode can use a pointer table.\n\nPresently only C can do this.  Otherwise we fall through to storing\nnumeric indices for a tiny loss of performance.\n\nNo generated-code changes from this.\n\n#33 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca94d99782c1b2b0ac27c56b74d997e0906fc133", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "m4ize code generation associated with skel breakpoint 11.0.\n\nMoves one table initializer in the generated code, but doesn't alter\nit.\n\nLeaves one FIXME. The computation of M4_YYL_BASE really ought to be\ndone in m4, but for some unknown reason I couldn't beat it into\ndping the right thing.  Do be revisited, bu right now finishing\noff the last bits of code generation is more important.\n\n#32 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d45bd0692ed6c4c6c52ca9e31589075f86624f40", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Code formerly generated at skel breakpoint 8.0 goes to m4.\n\nNo generated-code diffs from this change.\n\n#31 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eb82096a4841e220759eed80f3eff1e95a082fa", "commit_date": "2020-09-23T23:00:56Z", "commit_message": "Move code generation of YY_DO_BEFORE_ACTION to m4.\n\nGenerated-code diffs are blank lines with ] continuations and\nshifted %% commends made by skel breakpoint directives.  I could garbage\ncollect those, but I plan to do that all at once in a commit of its\nown for clarity's sake.\n\n#30 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d694cb8d3f0305b3807cf1895dc08bf25353b72c", "commit_date": "2020-09-23T15:24:11Z", "commit_message": "Push C-generated code for YYINPUT to the m4 skeleton.\n\nDiffs in generated code are trivial, a couple of\nblank lines with continuations due to % directives.\n\n#29 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cfe5b9b09fdf6b4714113183c745d11a524902a", "commit_date": "2020-09-23T14:50:07Z", "commit_message": "All the M4_MODE settings now live in one place where they can be audited.\n\nNo changes in generated code.\n\n#28 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f2a58a818598559f150a7d9d42a7d8ba0b3bc16", "commit_date": "2020-09-23T14:20:48Z", "commit_message": "Partial m4ization of nultrans code.\n\nAlso, remove two insertion points in the skel file\nthat are no longer used because we're now using m4\nconditionals instead.\n\nIn the generated C, two magic comments from the insertion points go\naway.\n\n#27 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b101188a767f589340deed97125571db945d4865", "commit_date": "2020-09-23T00:52:58Z", "commit_message": "Push the definition of struct yy_trans_info out to m4.\n\nRequired defining a new method table entry and shuffling the order in\nwhich things are generated a bit, but the generated-code diffs are all\ntrivial.  Some comments from the previous C code are now in the\nskeleton.\n\n#26 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5574c7387573404129ea48be830094b8a67cc2c", "commit_date": "2020-09-22T22:44:26Z", "commit_message": "Banish gcc warnings so errors won't get lost in the clutter.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feeba9873f80dafbe96ff35787ac77ca7f2223cf", "commit_date": "2020-09-22T16:52:32Z", "commit_message": "Tie up loose ends in the abstraction of table initializer syntax...\n\n...and case statements.  Add guidance to backend.adoc.  This is the\n\"eventually\" promised in the comment on #10 of this series.\n\nNo diffs in generated code.\n\n#25 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a501a4238af4b5728d32d2dbfb01d3a50023a6b", "commit_date": "2020-09-22T15:52:50Z", "commit_message": "Replace last use of gen_next_compressed_state*( with equivalent m4...\n\n...and then inline the code of gen_NUL_trans() at its callsite.  This\ncontains all remaining procedural code generation in make_tables(),\non the way to moving it to m4.\n\nGenerated code diffs are like those of #20 and #22, for the same\nreasons.  They add comments, whitespace changes, and uses of the\nYY_NUL_EC and YY+JAMSTATE macros equivalent to the old numeric\nliterals.\n\n#24 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7b3a67adff063fd4be4594f3b930899720b4279", "commit_date": "2020-09-22T14:59:30Z", "commit_message": "Code to do back-up for compressed tables and set up yy_cp goes to m4.\n\nAlso, move the yymatch label to the skeleton. Remove an unused\nprototype. And fix a typo.\n\nIn generated C, comment and whitespace changes only.\n\n#23 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f4aaddd993c77ed4e7cd9213c082f95909f380", "commit_date": "2020-09-22T14:51:23Z", "commit_message": "gen_next_state(true) becomes m4 code.\n\nAs with patch #20 in this series, the changes in generated code fall in the classes:\n\n1. Addition of comments.  I elected to copy the comments from the\n   generator functions into their corresponding m4 macros in hopes of\n   making the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\n   literal is replaced by YY_JAMSTATE + 1. This was a consequence of the\n   change in #15 to simplify the C code generators so they could be\n   translated into static nacros.\n\n3. \"YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : YY_NUL_EC);:\n   being replaced by \"YY_CHAR yy_c = (*yy_cp ?\n   *(yy_ec+YY_SC_TO_UI(*yy_cp)) : YY_NUL_EC);\" The strange way of\n   indexing yy_ec avoids a syntactic collision with the use of [] as\n   m4 quotes.\n\nThe gen_next_state(false) case was translated to m4 at patch #20\n\n#22 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e6fa974cd7523f2e093ed70dca591dc89d19c061", "commit_date": "2020-09-22T10:08:10Z", "commit_message": "gen_bu_action() becomes m4 code.\n\nAlso, two GEN_START_STATE calls get inlined in the skeleton file.\n\nChanges in generated C from the tests are all comments and whitespace.\n\n#21 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30788806b98ae23151c921ad34c3a6f7ab1d0d76", "commit_date": "2020-09-22T08:47:05Z", "commit_message": "gen_next_match() becomes m4 code.\n\nTo verify this patch, notice that the non-whitespace changes in the\ngenerated C from the tests are of only three kinds:\n\n1. Addition of comments.  I elected to copy the comments from the\ngenerator functions into their corresponding m4 macros in hopes of\nmaking the generated code less nasty to read.\n\n2. Lines like \"if ( yy_current_state >= 12 )\" changing so the numeric\nliteral is replaced by YY_JAMSTATE + 1. This was a consequence of the\nchange in #15 to simplify the C code generators so they could be\ntranslated into static nacros.\n\n3. \"YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)]\" being replaced by\n\"YY_CHAR yy_c = *(yy_ec+YY_SC_TO_UI(*yy_cp));\".  The strange way of indexing yy_ec\navoids a syntactic collision with the use of [] as m4 quotes.\n\n#20 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6711981a2d7e2fc3e3965156e0cb0887387f202a", "commit_date": "2020-09-22T07:16:04Z", "commit_message": "gen_backing_up() becomes an m4 macro.\n\nGenerated-code changes consist of whitespace and a comment.\n\nThus patch also fixes the computation of two guard symbols\nthat weren't actually used yet, prospectively introduced in\npatch #15 of this series. At the time I wrote that I didn't\nunderstand what num_backing_up was doing and failed to\ntranslate it properly.\n\n#19 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abe63d33d1c48a136510441346c175d8801f11c4", "commit_date": "2020-09-22T05:32:40Z", "commit_message": "Push code generation for some housekeeping from gen.c to m4.\n\nThe pieces are BOL checking, yylineno updating, and YY_RULE_SETUP\ngeneration.\n\nNo generated code changes at all from this.\n\n#18 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "feac8a6abf317090df62363f771e6487827629b0", "commit_date": "2020-09-22T04:14:56Z", "commit_message": "Clean up a couple of methodization loose ends.\n\nGenerated-code differences are trivial whitespace.\n\n#17 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ab6a3baf77f5284b035260d89c200c93157a9cb", "commit_date": "2020-09-22T03:04:50Z", "commit_message": "Move debug code generation from C to m4.\n\nDifferences in generated code are trivial. Some integer\nliterals turn into symbol expressions as a side effect\nof the previous patch.\n\n#16 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90bf7c7bcb621d0c2483a0383fa1e5c8db6d5521", "commit_date": "2020-09-22T02:01:41Z", "commit_message": "Create m4 symbols for things that used to be generated as int literals.\n\nChanges the generated C sources from the tests, but only by making\nthem easier to read.  In future patches this is going to make them\neasier to compare by eyeball as well.\n\n#15 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f858b63e23ce8e4d45926d1baa28d0fd1c67b339", "commit_date": "2020-09-21T21:11:29Z", "commit_message": "Turn gen_start_state() into an M4 macro.\n\nThis is the first patch in the retargeting series to substantively\nmodify the skeleton file.  (The only previous one to touch it just\nrenamed a mode switch.)\n\nAdds some comments and whitespace to the generated code in the tests,\nbut produces no logic changes.\n\n#14 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5f41ac5a99f49cb2780115adf167f95b3d43690d", "commit_date": "2020-09-21T14:35:18Z", "commit_message": "Create a TESTOPTS variable that can be used to pass options to flex in testing.\n\nPresently this is used to pass -L, making it easier to compare changes\nin generared C code cross revisions.\n\nTo perform such comparisons, do this at a base (before) revision:\n\n# Make generated code\nmake clean; (cd tests; make clean); make check\n\n# Save a smashot of it\nrm -fr snapshot && mkdir snapshot && cp tests/*.c snapshot\n\nThen rebuild at the later revision and do this:\n\n# Compare gemerated code to snapshot\ndo diff -b -B -u $x tests/`basename $x`; done\n\n#13 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd01f7ff4e4aa5e9223df56d4ee04e0c039b7aff", "commit_date": "2020-09-21T04:45:47Z", "commit_message": "Remove a redundant macro guard setting....\n\n...and clean up some comments.\n\nRemoval should have happened in #11 when the\nguard symbol was renamed.\n\n#12 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdb639cd7bbe1e4e2d8a0817c783ba48ceef8ba2", "commit_date": "2020-09-21T04:21:42Z", "commit_message": "Add code to initialize the macro conditional symbols we'll need.\n\nThese aren't used yet.  They will be as we push code feneration out\nof gen.c into the epansion of the m4 skeleton.\n\nThis is the first revision to touch the C skeleton file, changing\nM4_YY_USES_REJECT to M4_MODE_USES_REJECT for uniformity with the other\nmode switches.\n\nC code generated from the tests is still unchanged at this revision.\n\n#11 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef4f78f43b3b0b75de0e615d70949e0a460b90d2", "commit_date": "2020-09-21T04:05:05Z", "commit_message": "Continue methodization, with some target-language-specific formats...\n\n...and one additional method.\n\nThis almost finushes off all language-specfic detauks outside of\ngen.c.  The one exception is just below the comment \"add terminator\nfor initialization\" in dfa.c; we'll get to this eventually.\n\n#10 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0ca7faab9dce962e257c4da79133b67d5c0c6ee", "commit_date": "2020-09-21T03:17:00Z", "commit_message": "Two member name changes in the method table.\n\nCosmetic change,\n\n#9 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e58cdd1de0be09ac7258044ff13743538ee97c2b", "commit_date": "2020-09-21T02:38:31Z", "commit_message": "Start a HOWTO on writing target-language back ends.\n\n#8 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "673f2caf34fcbab9b6b2d2e3adeb1867b36b84a9", "commit_date": "2020-09-21T01:55:07Z", "commit_message": "Methodize generation of C initializers for automaton tables.\n\nA large patch, but conceptually simple. Takes a bunch of functions and\ncallsites that knew details of C initializer and declaration syntax\nand moves them into methods in the C backend table.\n\nThis is a pure refactoring step.  At this point in the patch series,\nnot only do all tests pass but nothing in the lex-generated C code\nfrom the tests has changed.\n\n#7 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cce209b584bf87a01038c33a09b361d82a18b0b", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "The C/C++ back end moves to its own source file.\n\nSomeday, there might be go-backend.c etc.\n\n#6 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb9f458eb18e32921b754c35415e09f08aaf8272", "commit_date": "2020-09-21T00:52:01Z", "commit_message": "Generated skel data is now stuffed in an array in the C/C++ back end.\n\nThis means it's possible to have multiple language-specific skel\nfiles.  All go through the same double m4 macroexpansion.\n\n#5 in the retargeting patch series", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f754c608ff6e5ffdb8b1fc3893bb7573c8b6f734", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Pull the format for error-tracking lines into the method table.\n\n#4 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1bfe65b3dc2813bdc86e27ce3d03910d949ce93", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Create a method table for the C back end,\n\n#3 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a05e39ae47294aa2103e2f897f1979f6c7ccbdea", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Factor out the wrap function for C/C++ parser generation.\n\n#2 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f0161f217e34ca77df2b1e687aa3c3f2d266c00c", "commit_date": "2020-09-20T22:36:39Z", "commit_message": "Refactoring step - separate output generation from option processing.\n\n#1 in the retargeting patch series.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a631f5da8d4fd60fbde7b06bcf43bc9a155c27d5", "commit_date": "2020-04-24T16:06:24Z", "commit_message": "correct some indentation in skeleton", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b1fbf674f2e038df9cf1fe7725617e3837ae2a9", "commit_date": "2019-09-12T20:42:40Z", "commit_message": "doc: document release page in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3de49f84224b18c5287653f20525291b24cc26e", "commit_date": "2019-06-20T18:05:30Z", "commit_message": "doc: new translations", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98018e3f58d79e082216d406866942841d4bdf8a", "commit_date": "2018-05-22T20:56:52Z", "commit_message": "scanner: Include-guard flexint_shared.h\n\nThis prevents compiler's \"redefinition of typedef\" warnings or errors\nwhen we could include flexint_shared.h twice, when building flex's own\nscanner (scan.c) or in the \"multiple_scanners\" test in the testsuite.\n\n(Depending on the compiler's flags this might or might not produce\nerrors, but it's good to guard it anyway.)\n\nFixes: #329\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21121feec917491db6f76cb54bd6441411632440", "commit_date": "2018-05-22T20:51:26Z", "commit_message": "scanner: no YYTABLES_NAME macro unless requested", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c7e3a5a676cfb98cc33382715dc6f6929688fdd", "commit_date": "2018-05-07T19:53:26Z", "commit_message": "po: include update_linguas script in distribution.\n\nSince automake takes a hands off approach to the po/ directory, we\nneed to list update_linguas.sh in the top Makefile.am. We list it as a\ndist_noinst_SCRIPT so that it will get distributed with executeable\npermissions. We also list autogen.sh in the same way for the same\nreason.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a752d7c1c27aa5ccd15ab2c89162b64154e106b7", "commit_date": "2018-05-07T18:58:48Z", "commit_message": "doc: display build status badge in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60b578fdaab4bf8d95203caaa947b476eeb03c10", "commit_date": "2018-04-07T17:26:34Z", "commit_message": "doc: describe mailing list usage in more detail", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33fd4c43a8faa5a04dcdd10fc4a5443378d9bf5", "commit_date": "2018-03-13T14:45:56Z", "commit_message": "doc: amend manual section on state stack functions.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3971b6146aab12e1c54945dcb47ae92a25a3f3c3", "commit_date": "2018-03-13T14:45:42Z", "commit_message": "scanner: fix default of yy_top_state()\n\nextend fix when `YY_G` is used (reentrant scanner).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67b3e448727da3093cdc6f0ca7fd151fbf3c10ad", "commit_date": "2018-03-13T14:45:16Z", "commit_message": "scanner: fix default of yy_top_state()\n\nFor an _empty_ state stack the top of the state stack defaults to the state as if no state stack were present.\n\nNB: sanity check for `yy_start_stack_ptr` could be added in `yy_top_state()`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a6e69af761801aedeab0264246772cf60810246", "commit_date": "2018-03-12T02:34:36Z", "commit_message": "build: Add \"-f\" flag to \"mv\" in makefiles.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcd8e8b401c264702936eba6db8abef8399684ff", "commit_date": "2018-03-12T02:15:31Z", "commit_message": "build: Fix makefile dist-hook directory permissions.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1f6b4a26399b0e7849fd646fe5ee690231b32d4", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: More compatible flex integer type definitions.\n\nVisual C++ 2010 does not define __STDC_VERSION__, and (before Visual\nC++ 2013) has <stdint.h> and not <inttypes.h>.\n\nANSI/ISO C only requires at least 16 bits for int type (not 32 bits as\nrequired by POSIX since SUSv2), so check the bit length before the\ntypedef.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5574881ff4c9b08c73b6acc0087d6046c2b48de5", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Skeleton no longer includes integer limit macros.\n\nThe [U]INT{8,16,32}_{MIN,MAX} macros are never used in skeleton code.\nHaving them in skeleton just increases the chance of conflicts in case\nthat user defines them in non-C99 environment (see issue #307, when\nflex code is built in Visual C++ (before VS2013)).\n\nflexint.h is now split in two files. Only \"flexint_shared.h\" will be\nincluded in skeleton now, which defines flex integral types.\nflexint.h contains integer limits macros that would be used in flex\nonly.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec4f23d5d25dd33de99301956d2219b32860570e", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: Add a fallback INT_MAX definition.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1985bb3c7abed940e91ad816504ef08a18c3b7c1", "commit_date": "2018-03-08T21:00:24Z", "commit_message": "scanner: correct comments about __STDC_LIMIT_MACROS.\n\nNo code changes.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4081efa0831b15d7e4e4255401c225ad8262426d", "commit_date": "2018-03-08T02:04:36Z", "commit_message": "scanner: Fix glibc features.h dependency in skeleton.\n\nCommit a17d79e9c722a6735b6d2a8f152287404f27df32 defines _POSIX_C_SOURCE\nto the minimum of 1 if it's not defined in the user's scanner code or\nthe compiling environment. However in glibc the macros are not yet set\nup until one of the libc headers is included. This unfortunately have\nmade us overwrite the default _POSIX_C_SOURCE value that would be\ndefined by glibc (200809L at the time of writing), causing regressions\nin user code.\n\nNow in this patch:\n1. Ensure feature test macros have been set up in glibc before checking\nor defining any of them in our skeleton code.\n2. Have a more conservative logic when determining the need to define\n_POSIX_C_SOURCE (required for fileno()).\n\nFixes: #313\n\nNote:\nIt could be tricky for application code to ensure feature test macros\nhave been set up in glibc, since <features.h> is no portable header and\nnot meant to be included directly by applications. The way to do it is\nto include a libc header which in turn includes <features.h>. However,\nmany of the glibc headers check __USE_POSIX (a glibc internal macro\ndefined if _POSIX_C_SOURCE is defined) and determine which interfaces\nto expose already, making the headers inappropriate for our goal.\nThose which don't depend on _POSIX_C_SOURCE, and are also available\nsince ANSI C89, are only <assert.h>, <errno.h> and <math.h>.\n\n<assert.h> is finally favored due to other considerations:\n- <math.h> check for __USE_XOPEN in glibc, making a dependency on\n_XOPEN_SOURCE, besides it exposes much more interfaces than we need.\n- In djgpp, <errno.h> depends on _POSIX_SOURCE to hide definitions of\nsome errno values when it's defined.\n- <assert.h> exposes the fewest interfaces among the 3 headers and, at\nthe time of writing, checks for only C99 (for __func__), C11 (for\n_Static_assert), and _GNU_SOURCE when needed.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5023f5a48ac477916d43453a16afd792f422e85", "commit_date": "2018-03-04T12:51:38Z", "commit_message": "scanner: Fix scan.l xgettext warnings.\n\nxgettext was not very clever at interpreting lex patterns and can get\nconfused when seeing unquoted quotation marks, and emit warnings for\nthem. Now fix the warnings by properly quoting the quotation marks in\nlex regex patterns.\n\nExample\n    Original: \\\"[^\"\\n]*\\\" -> \"warning: unterminated string literal\"\n    Fixed:    \"\\\"\"[^\"\"\\n]*\"\\\"\" -> OK\n\nMy basic build test shows that the generated stage1scan.c is\nbit-identical to the original.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e104f5589c2365d5927de00d6a990ec33ef29493", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: '--disable-acl' when building gettext\n\nThis silences a configure warning about libacl not found in Travis\nbuild log.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6aa652b089f7ae3f2d9d0181f84733e88ce6443a", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Silence build output of automake and gettext\n\nOnly when a build error occurs on building any of these dependent\npackages do we dump some sensible logs to standard output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e63c0bb6b675c0093d8d39deaf4894297bce3041", "commit_date": "2018-03-01T19:08:54Z", "commit_message": "travis: Hard-code hashes for verifying tarballs\n\nGPG signatures require an external keyserver which might be offline,\nwhich is undesirable for build server use. It's equally secure to just\nhard-code the hashes, provided they're trusted (i.e. you verify a hash\nagainst a GPG signature once).\n\nFixes: #311.\n\nAs a side note: the original two signatures\n(gettext-0.19.8.1.tar.lz.sig and automake-1.15.1.tar.gz.sig) are signed\nagainst the files' SHA-1 hash.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c42de062bbdc7c31d7181c10a74202d493280ada", "commit_date": "2018-03-01T00:30:56Z", "commit_message": "build: Move dnl comments out of AC_CHECK_FUNCS\n\nDue to a bug, autoheader (2.69) will treat M4 dnl comments in a quoted\nargument of AC_CHECK_FUNCS as function tokens and generate a lot of\nredundant and useless HAVE_* macros in config.h.in.\n(Examples: HAVE_DNL, HAVE_AVAILABLE_, HAVE_BY)\n\nIt seems to be this commit dbb4e94dc7bacbcfd4acef4f085ef752fe1aa03f of\nmine that revealed this autoheader bug, and the affected config.h.in\nhad been shipped within flex-2.6.4 release tarball.\n\nI have reported the autoheader bug here:\n<https://lists.gnu.org/archive/html/bug-autoconf/2018-02/msg00005.html>\n\nAs a workaround, let's move comments out of AC_CHECK_FUNCS.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065c9fbe22733e360e285ec4ce24d9c5065a0140", "commit_date": "2018-02-24T15:12:09Z", "commit_message": "test: Remove redundant '-o $@' in tableopts.am\n\n$(LINK) in Automake already contains the '-o $@' arguments.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff7bc8af4680a6b16b07f8ddae8b5c64ad009de1", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "doc: list travis in NEWS [skip ci]", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0508df61da22a0a6f49e3c1d86404ea4ec37c85", "commit_date": "2018-01-03T13:49:00Z", "commit_message": "initial .travis.yml file", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7d45afc6aeb49745f17d21ddba4848e0c0118fc", "commit_date": "2017-12-09T21:29:52Z", "commit_message": "scanner: Allow \"--\" as option argument.\n\nPreviously, invocations such as:\n\n    flex --outfile -- wc1.l\n\n would fail with \"requires an\nargument\" error message.\n\nFixes #285", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c984ab0fd0ad534a725019a7bf4f49a3571d87d1", "commit_date": "2017-12-08T14:56:18Z", "commit_message": "scanner: scanopt_err() now returns void", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa775c871137c570ded2bbd6ebbe7ca4ee39efe7", "commit_date": "2017-12-08T14:55:19Z", "commit_message": "scanner: simplify scanopt_usage().\n\nIn-function macro CALC_LEN removed and no longer needed.\n\nLocal variable renames:\n\n    maxlen[0] => opt_col_width\n\n    maxlen[1] => desc_col_width\n\n    indent now explicitly const", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23882383d45dcd37b5177835c873f4e1d9582db1", "commit_date": "2017-12-06T21:23:25Z", "commit_message": "scanner: prevent overflow in add_action()", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e1b25b0ec17d4312f838efc6f910b64900b009", "commit_date": "2017-11-29T13:11:22Z", "commit_message": "scanner: use calloc to allocate new filter memory", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87472f5aa72431cd48755fa8537089e00d67e036", "commit_date": "2017-11-28T20:06:10Z", "commit_message": "Obsolete yypad64() macro.\n\nSlightly rewrite the logic in yytbl_data_load() and yytbl_write_pad64()\nso they simply check if the bytes read/written are in 8-byte boundary.\nNo need to calculate how many bytes we need to pad. (Incidentally this\nmakes smaller code in x86_64.)\n\nFor yytbl_hdr_init(), just expand the calculation from the macro.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12d2f8608046c5d43646e3c1dc277c0a2914ae1b", "commit_date": "2017-11-28T19:56:42Z", "commit_message": "scanner: temporarily protect against ccl overflow & overwriting.\n\nFor ccladd(), if cclp given is a non-last ccl, adding a char into it\nwill overflow the buffer and overwrite the first char in the next ccl.\n\nFor now, add a temporary detection and protection code.  (Not sure if\nthis could happen in user input, but if it could, then you can expect\nsome \"corrupted\" behavior for generated scanners.)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea1faa2d09693cf7f3a3c3c79a5ddb7fbd0d3ba5", "commit_date": "2017-11-28T19:09:04Z", "commit_message": "build: fix ENABLE_NLS preprocessor check.\n\nBecause ENABLE_NLS may be defined to 0 (manually, not through\nautoconf) and it's semantically incorrect to only check whether it's\ndefined.\n\nThis is a correction to commit\n661d603b65385f62f372acd2017e5af2e0f0cd50.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11b7512664c30cadd923f479c59bc3368a7b210d", "commit_date": "2017-11-03T23:12:49Z", "commit_message": "scanner: Rename genecs() local variables. No code changes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c0f34cf12e17a526978ee962d92a37f93e86160", "commit_date": "2017-11-03T22:41:16Z", "commit_message": "scanner: Remove unused BASENAME() macro.\n\n(Simply forgot to do so in commit fb731ac0221e1866534dfe072b84b8af7a5d88f3)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "661d603b65385f62f372acd2017e5af2e0f0cd50", "commit_date": "2017-11-03T14:39:32Z", "commit_message": "build: use #ifdef for ENABLE_NLS check.\n\nconfig.h will have either define ENABLE_NLS or not define it. If it is\nnot defined we get a -Wundef warning due to using #if with an\nundefined macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a17d79e9c722a6735b6d2a8f152287404f27df32", "commit_date": "2017-11-03T14:19:21Z", "commit_message": "scanner: Define _POSIX_C_SOURCE when needed in skeleton.\n\nThe function fileno() is defined by POSIX. When flex would otherwise not provide that feature macro, we define it.\n\nFixes #263", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0db9f8903a446e7026874be519b8dc55a471f014", "commit_date": "2017-10-05T15:31:18Z", "commit_message": "build: Remove custom reallocarray() declaration.\n\nUse one from <stdlib.h> instead because that is more portable.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37a6184dabcd82fa1d17c24c000f3da469296195", "commit_date": "2017-10-05T15:27:54Z", "commit_message": "scanner: Simplify PRINT_SPACES() macro", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24fd0551333e7eded87b64dd36062da3df2f6380", "commit_date": "2017-09-04T15:22:30Z", "commit_message": "build: AC_USE_SYSTEM_EXTENSIONS in configure.ac.\n\nThis would, e.g. define _GNU_SOURCE in config.h, enabling the\nreallocarray() prototype in glibc 2.26+ on Linux systems with that\nversion of glibc.\n\nFixes #241.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d62d3eb24d06030ae2641fe4670de3a8da9e67e", "commit_date": "2017-09-04T01:25:57Z", "commit_message": "doc: document config.h inclusion by flex itself", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b5111d9772b5c160340ca96f08d30d7f6db5cda", "commit_date": "2017-09-04T01:17:59Z", "commit_message": "scanner: Include flexdef.h at %top block of scan.l\n\nconfig.h may define macros that alter the API of the standard library\nfuntions, and so it should be included before any other standard\nheader, even before the skeleton's standard header inclusion.\n\nFor example: config.h may #define _GNU_SOURCE that would expose the\nreallocarray() prototype from <stdlib.h> on glibc 2.26+ systems. If we\ninclude <stdlib.h> before config.h, reallocarray() would not be\navailable for use in lex file since the second include doesn't help\ndue to header guard.\n\nFor now our config.h might `#define malloc rpl_malloc` -- this\nsubstitution must work before including stdlib.h, or else the compiler\nwill complain about missing prototypes, and may result in incorrect\ncode in scan.l (gcc warning: return makes pointer from integer without\na cast [-Wint-conversion]).\n\nFixes #247.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2943389fd3ca776d25735c06ef94512a2bb5c20", "commit_date": "2017-09-02T19:09:28Z", "commit_message": "{re,}allocate_array code cleanup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71d3525ad21dde00d3665c61e27346e88dab30d9", "commit_date": "2017-09-02T19:07:52Z", "commit_message": "doc: document libfl targets in Makefile", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dd1afa37e110563cfc25cf5703ae6288691c0657", "commit_date": "2017-08-31T19:54:02Z", "commit_message": "build: Add convenience targets to build libfl only\n\nThese are wrappers around automake- and libtool-generated targets,\nallowing users to build libfl only, without the main flex program.\n\nSee GH-256 for discussion.\n\nSigned-off-by: Kang-Che Sung <explorer09@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b84ad149c90483d3bfe9f64dd7bfbfad3550116d", "commit_date": "2017-08-31T19:51:25Z", "commit_message": "doc: document src/libfl in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08e19c55cab9eeedb59a0c4c1245d44ed51ff88f", "commit_date": "2017-08-26T16:18:44Z", "commit_message": "Don't install libfl.pc if --disable-libfl.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e199cb6bdf59e1513ac60132799c994bf28b283d", "commit_date": "2017-08-26T16:18:32Z", "commit_message": "libfl.pc: Rewrite descriptions, remove unneeded Cflags.\n\nThere's no need to include any header when linking with `-lfl`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e06407175ed235378624d8b75aa24179a27b876", "commit_date": "2017-08-26T16:17:57Z", "commit_message": "Move libfl.pc.in to src subdirectory.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "931d29bdeacc66f561e44636f80f33782ca4bbb0", "commit_date": "2017-08-24T13:26:02Z", "commit_message": "doc: NEWS updates", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b115f389b284a13b974bba05c25896feeec716ec", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Hardcode flex name in --help text\n\nDon't use program_name in the description of -T/--trace or -V/--version\noption. It's ugly when user invokes flex with a long path like\n\"/home/username/tools/bin/my-custom-built-flex\".\n\nThis solution is not long term. If possible, the help text should be\nmodified so that the \"flex\" name is no longer needed below the first\n\"Usage:\" line. All translations of help text will need to be updated\nas well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a657f0c6f564d2edc6e34e0e9715a95b13bdb304", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "Remove an unneeded gettext() in --version output\n\n\"%s %s\\n\" is not translatable", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb731ac0221e1866534dfe072b84b8af7a5d88f3", "commit_date": "2017-08-24T12:34:23Z", "commit_message": "scanner: remove BASENAME(); don't strip path from program_name\n\nThere's no technical need of stripping path from program_name. I think\nthe users should be fine if they see the path they use to invoke flex\nis diagnostic messages and help texts.\n\nYes, users will see \"Usage: ../flex [OPTIONS]...\" now if they invoke\nflex with the path \"../flex\".\n\nThe --version output has been changed so that the name field will be\nalways \"flex\" or \"flex++\". If the flex program has been renamed to\n\"lex\" (for compatibility or other reason) this will allow identifying\nthe implementation name (\"flex\"). (And it's a recommended practice in\nGNU Coding Standards)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d64a5263cfcd490a6a96b2d6c018fa40f1ed558a", "commit_date": "2017-08-24T12:18:11Z", "commit_message": "build: sort .gitignore", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e73c4446841eda8d4ea01298e887059e8c1472", "commit_date": "2017-08-24T12:15:00Z", "commit_message": "have libobjs depend on libobjdir (#244)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa50a492fcbd45e9dfacf8d0483543f198d0f6a1", "commit_date": "2017-08-24T12:02:19Z", "commit_message": "build: git ignore libfl.pc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1ed5df2f61abcb201b770e29cea1082a117d0f9", "commit_date": "2017-08-24T11:52:13Z", "commit_message": "Create libfl.pc target for pkgconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "535524ea6b55f8f6a7dfc160cb19211c084795d6", "commit_date": "2017-07-18T01:12:44Z", "commit_message": "scanner: #define BASENAME, remove #include libgen.h", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f2b9a4d630b702f6dd8592014f89d40a6a4bcc1", "commit_date": "2017-07-18T00:03:45Z", "commit_message": "mkskel.sh: fix EOL issue for CRLF systems", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7af066b952fc81eb1a29079c7206e50ffed80c40", "commit_date": "2017-07-15T22:52:28Z", "commit_message": "scanner: Ignore comment lines in skeleton files.\n\nIn skeleton files comments are indicated by leading `%#` and when\ndirectly read in using `flex -S <skeleton.skl>` they should be\nignored. Example: `flex.skl`.\n\nAmending commit 2f21edac99b5efc432417233e6e53326d630e08f which removed\nthis conditional branch.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e784a805ef8f33ab4de544eee1876f41d2bd9dbc", "commit_date": "2017-07-15T22:31:41Z", "commit_message": "filter: faster is_blank_line implementation\n\nUsing regex_t regex_blank_line is *slow*.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f370436e1cf0c731e74bcee806df6c7a43a3094", "commit_date": "2017-07-13T19:15:29Z", "commit_message": "filter: new internal function is_blank_line()\n\nIt's simply to return (regexec(&regex_blank_line, str, 0, NULL, 0) == 0);\nThe reason for encapsulation is to allow replacing this with a\nnon-regex method if necessary.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "19cffb0ff001e24a278ab979ac7a49f788ab2eba", "commit_date": "2017-07-13T19:14:58Z", "commit_message": "build: require automake, gettext versions as per maintainer dev setup", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "36c2c0a2e85b78874fd69487d711011d639867a3", "commit_date": "2017-07-03T15:49:36Z", "commit_message": "doc: NEWS memory leak fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "faa877a8434a1d2f1b2ab5315eee6ca44dc79629", "commit_date": "2017-07-03T15:45:55Z", "commit_message": "scanner: memory leak free scanner generator.\n\n**Issue:**\nScanner generation leaks memory for transition tables when invoked\nwithout `--tables-file` option.\n\n**Root cause:**\n`gentabs` function has different memory acquire/release conditions.\n\n**Solution:**\nReclaim memory at the same scope where it was alloacated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a044dbe6d03877c3d8c205ae76be9c41f442237", "commit_date": "2017-07-03T15:45:37Z", "commit_message": "filter: memory leak free scanner postprocessing.\n\n**Issue:**\nScanner postprocessing leaks memory during correction of `#line`\ndirectives values and generation of C header file.\n\n**Root cause:**\n`filter_fix_linedirs` and `filter_tee_header` functions do not\ndispose allocated memory.\n\n**Solution:**\nAutomatically reclaim affected memory by allocating it on stack\ninsted of heap. Stack allocation should not be a problem as its\nonly 512 bytes and there is no recursive calls.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef32155253a100a774c087ae4a6be3fb5c6a375c", "commit_date": "2017-07-03T15:34:14Z", "commit_message": "doc: NEWS c{i,j}", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea4b0a129eebedba73eb08eb2639040fd758c51f", "commit_date": "2017-07-03T15:34:00Z", "commit_message": "scanner: c{i,j} should preserve case.\n\nFixes #193", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bebb264a94bdbfcf150a24e706c183896207e7b", "commit_date": "2017-07-03T13:46:48Z", "commit_message": "doc: document --backup-file in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c55bf919ccad3e0eff30da09c3d3e9f81cc123ad", "commit_date": "2017-07-03T13:41:42Z", "commit_message": "scanner: add optionn to specify backup filename.\n\nIn a directory containing multiple scanners, we want to allow\nspecifying the name of the backup file else the backup files will be\noverwritten.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bd14f13878e8b36e84c57561b86a863e3a1093c", "commit_date": "2017-06-18T17:56:06Z", "commit_message": "doc: new uk translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90c62441b3e848e3e526808c9e33c8172f31ebb1", "commit_date": "2017-06-18T17:55:11Z", "commit_message": "doc: new uk translation from the Translation Project", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e00f250f66678eea21a4b5a4a25cb5b38f35f71", "commit_date": "2017-06-04T20:20:04Z", "commit_message": "doc: formatting fixes in README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4735d6925d7864710421da1bd2707bb1bba43f3", "commit_date": "2017-06-04T20:15:23Z", "commit_message": "test: echo 'set -v' before setting so in shell.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71b9c0cedcbb63f9a570687b977d8b00558920ad", "commit_date": "2017-05-26T15:23:12Z", "commit_message": "doc: tableopts rule portability mentioned in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c0152a0c33061c63c928279e9bfcf496e1178a1", "commit_date": "2017-05-26T15:21:16Z", "commit_message": "test: remove duplicate shell options line", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f3db3aeb311b58d50e5a9eb0e3e78f271255bb0", "commit_date": "2017-05-24T07:33:09Z", "commit_message": "test: use portable pattern substitution in tableopts.sh\n\nFixes: #222", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db4f5e0fe5f2563e9d36b203f9fabb81aad2e4da", "commit_date": "2017-05-19T12:05:51Z", "commit_message": "doc: document NetBSD build crash fix", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae437ad54624883ecec3812bd225239a882954e", "commit_date": "2017-05-19T12:03:48Z", "commit_message": "build: remove automake check-news", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b290d8ebdfa73b8f4665847fb689884eceee269", "commit_date": "2017-05-19T11:29:15Z", "commit_message": "scanner: Use reallocarr() when available.\n\nNetBSD had a crash during build. Since the provided substitute for\nreallocarray() wasn't working, use NetBSD's reallocarr(). Let\nconfigure choose that function whenever it is available. Use\nreallocarray if available. Still fallback if neither is available.\n\nFixes #219", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a70bac04ac4743d64c23d5f5a3df55494bf6050", "commit_date": "2017-05-14T11:16:45Z", "commit_message": "doc: list line number directives in NEWS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7e34bb958ac5d083b2bab4c89907cd0669196d", "commit_date": "2017-05-14T10:31:56Z", "commit_message": "filter: Output correct #line value for current file.\n\nA #line pre-processor directive specifies the line number and source\nfile of the following lines. If the source file _is_ the current file,\nthe line number should be that of the line following the directive. So\nthe specified line number should be the current line number plus 1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "596a221844c8b13696f83183f44d3fcc7184f464", "commit_date": "2017-05-13T21:24:55Z", "commit_message": "scanner: corrected typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0be31989084e3a3265a9b34bf64bf8784779cb67", "commit_date": "2017-05-13T21:23:18Z", "commit_message": "doc: noyyget/set_column options documented", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cadd124f882290dff281b6de06d64d92ce73ecd", "commit_date": "2017-05-13T19:15:45Z", "commit_message": "scanner: finish support for noyy{get,set}_column.\n\nUnattributed patch carried over from sourceforge bug tracker.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7284970311c8b0c7c36da2d527b596d4699d1023", "commit_date": "2017-05-13T18:24:17Z", "commit_message": "build: .mailmap for cleaning up shortlog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c3f4639099863b5d419d7c3442babb8ffc3f58a", "commit_date": "2017-05-07T00:46:20Z", "commit_message": "test: rename some files for non-case-sensitive filesystems.\n\n-C*f and -C*F option-specific test files collide on case-insensitive\nfile systems, and cause tests to either not be run at all, or to\noverwrite each other's files at build time.  So rename -C*F ones to\n-C*_F.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af72e9e222aab86d695225d4d440a1bf66fadff8", "commit_date": "2017-05-07T00:26:28Z", "commit_message": "build: 2.6.4 is previous version", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "385766c5cff544f2f96040e01a0be217a161a7ce", "commit_date": "2017-05-06T20:54:54Z", "commit_message": "build: ignore .sig files.\n\nWe generate gpg signatures in place for releases. Since these should\nnot be tracked in the flex repo itself, we tell git to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dfc45ef5a3134f6602e3b1784649b50958d100f", "commit_date": "2017-05-06T20:53:14Z", "commit_message": "build: no longer ignore *.tar.bz2\n\nSince we no longer generate *.tar.bz2 archives, we do not need to tell\ngit to ignore them.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}