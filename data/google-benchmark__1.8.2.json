{"main": [{"commit_oid": "7736df03049c362c7275f7573de6d6a685630e0a", "commit_date": "2023-09-26T12:43:23Z", "commit_message": "Make json and csv output consistent. (#1662)\n\n* Make json and csv output consistent.\r\n\r\nCurrently, the --benchmark_format=csv option does not output the correct value for the cv statistics. Also, the json output should not contain a time unit for the cv statistics.\r\n\r\n* fix formatting\r\n\r\n* undo json change\r\n\r\n---------\r\n\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9106a79fa2aae95bc3c790f0b3aa1cf8a27b86f", "commit_date": "2023-09-26T11:31:24Z", "commit_message": "Audit MSVC references in cmake files to consider clang++ (#1669)\n\nThere are three major compilers on Windows targeting the MSVC ABI (i.e.\r\nlinking with microsofts STL etc.):\r\n  - `MSVC`\r\n  - `clang-cl` aka clang with the MSVC compatible CLI\r\n  - `clang++` aka clang with gcc compatible CLI\r\n\r\nThe cmake variable `MSVC` is only set for the first two as it defined in\r\nterms of the CLI interface provided:\r\n\r\n> Set to true when the compiler is some version of Microsoft Visual\r\n> C++ or another compiler simulating the Visual C++ cl command-line syntax.\r\n\r\n(from cmake docs)\r\n\r\nFor many of the tests in the library its the ABI that matters not the\r\ncmdline, so check `CMAKE_CXX_SIMULATE_ID` too, if it is `MSVC` the\r\ncurrent compiler is targeting the MSVC ABI. This handles `clang++`", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "344117638c8ff7e239044fd0fa7085839fc03021", "commit_date": "2023-08-31T12:16:50Z", "commit_message": "bump version to 1.8.3", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db3e000c1e6675f70ae41895ca1e25b274e52554", "commit_date": "2023-08-25T08:59:02Z", "commit_message": "Merge branch 'jmr-stat-median'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78220d6f0d9b20d13cf671c64df029ca6c2f6b18", "commit_date": "2023-08-25T08:58:30Z", "commit_message": "tweak comment wording", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f254bddf096f384159697654fcef1940188f2ae", "commit_date": "2023-08-24T16:50:56Z", "commit_message": "Merge branch 'main' into stat-median", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6dd50bb6061d9bf9c7053032334ccb72f6438d09", "commit_date": "2023-08-24T14:05:09Z", "commit_message": "StatisticsMedian: Fix bug\n\nPreviously, this could return the wrong result when there\nwas an even number of elements.\n\nThere were two `nth_element` calls.  The second call could\nchange elements in `[center2, end])`, which was where\n`center` pointed.  Therefore, `*center` sometimes had the\nwrong value after the second `nth_element` call.\n\nRewrite to use `max_element` instead of the second call to\n`nth_element`.  This avoids modifying the vector.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dfc8a92abc88a9d630a9f8e01c678fedde4c3090", "commit_date": "2023-08-24T12:43:50Z", "commit_message": "test: Use gtest_main only when needed  (#1657)\n\n* test: Use gtest_main only when needed\r\n\r\nThere are two types of tests.  `*_gtest.cc` files use `gtest` and\r\n`gtest_main`.  `*_test.cc` files define their own main.\r\n\r\nOnly depend on `gtest`/`gtest_main` when needed.  This is similar\r\nto what `CMakeLists.txt` does.\r\n\r\n* comment-only: gunit => gtest\r\n\r\n* Fix typo", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c65aebb266f35b035c5d2a46a19b795d6bf23c8", "commit_date": "2023-08-24T09:04:09Z", "commit_message": "perf_counters: Initialize once only when needed (#1656)\n\n* perf_counters: Initialize once only when needed\r\n\r\nThis works around some performance problems running Android under QEMU.\r\nCalling `pfm_initialize` was very slow, and was called during dynamic\r\ninitialization (before `main` or when loaded as a shared library).\r\nThis happened whenever benchmark was linked, even if no benchmarks\r\nwere run.\r\n\r\nInstead, call `pfm_initialize` at most once, and only when one of:\r\n1. `PerfCounters::Initialize` is called\r\n2. `PerfCounters::Create` is called with a non-empty counter list\r\n3. `PerfCounters::IsCounterSupported` is called\r\n\r\nThe return value of the first `pfm_initialize()` is saved and\r\nreturned from all subsequent `PerfCounters::Initialize` calls.\r\n\r\n* perf_counters: Make success var const\r\n\r\n* InitLibPfmOnce: Inline function", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e73915667c21faccd7019c6da8ab083b0264db13", "commit_date": "2023-08-21T14:35:42Z", "commit_message": "State: Initialize counters with kAvgIteration in constructor (#1652)\n\n* State: Initialize counters with kAvgIteration in constructor\r\n\r\nPreviously, `counters` was updated in `PauseTiming()` with\r\n`counters[name] += Counter(measurement, kAvgIteration)`.\r\n\r\nThe first `counters[name]` call inserts a counter with no flags.\r\n\r\nThere is no `operator+=` for `Counter`, so the insertion is done\r\nby converting the `Counter` to a `double`, then constructing a\r\n`Counter` to insert from the `double`, which drops the flags.\r\n\r\nPre-insert the `Counter` with the correct flags, then only\r\nupdate `Counter::value`.\r\n\r\nIntroduced in 1c64a36 ([perf-counters] Fix pause/resume (#1643)).\r\n\r\n* perf_counters_test.cc: Don't divide by iterations\r\n\r\nPerf counters are now divided by iterations, so dividing again\r\nin the test is wrong.\r\n\r\n* State: Fix shadowed param error\r\n\r\n* benchmark.cc: Fix clang-tidy error\r\n\r\n---------\r\n\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e441a8cb112a3c13629749ec8c3d65b2d170b10e", "commit_date": "2023-08-21T14:04:50Z", "commit_message": "perf-counters: Make tests pass on Android (#1653)\n\n* perf_counters_gtest: Make test pass on Android\r\n\r\nTested on Pixel 3 and Pixel 6.  Reduce test to the intersection of\r\nwhat passes on all platforms.\r\n\r\nPixel 6 doesn't support BRANCHES, and only supports two perf\r\ncounters.\r\n\r\n\r\n---------\r\n\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe1ca332a89a4baaf48e163e89eff19d60a8ef09", "commit_date": "2023-08-21T13:31:58Z", "commit_message": "add logo to github pages", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9ba2af8d5297cb94d3f9f8f2417b27b6957d8da9", "commit_date": "2023-08-21T13:29:55Z", "commit_message": "add black icon", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "87169dd3f53e31d82dd78a3a8e118cee30feaba9", "commit_date": "2023-08-21T13:25:30Z", "commit_message": "remove logo from generated docs", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83939d0bd447eaf958f2dc26aad8d08899d9dd0d", "commit_date": "2023-08-21T13:24:38Z", "commit_message": "remove icon from main README", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05ed7ba2a2114e4aa8ab13df9b7dde7f73665deb", "commit_date": "2023-08-21T13:21:47Z", "commit_message": "update logo path", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72938cc1c52dddf9031aadc382a55839e7011fc7", "commit_date": "2023-08-21T13:21:07Z", "commit_message": "adding a logo to the docs", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "885e9f71d677f57fe409016e0a41e3a8b3ca0be1", "commit_date": "2023-08-17T14:41:17Z", "commit_message": "benchmark.cc: Fix benchmarks_with_threads condition (#1651)\n\nChange condition for `benchmarks_with_threads` from `benchmark.threads() > 0` to `> 1`.  `threads()` appears to always be `>= 1`.\r\n\r\nIntroduced in fbc6efa (Refactoring of PerfCounters infrastructure (#1559))", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa59d40f8822358d012e854488c2e52857b8a1f0", "commit_date": "2023-08-14T16:02:42Z", "commit_message": "sysinfo.cc: Call getloadavg for Android API >= 29 (#1) (#1649)\n\nSupport for `getloadavg` was added in API level 29.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c64a36c5b8ee75d462b3fe7a9d020c66a2a1094", "commit_date": "2023-08-11T11:46:36Z", "commit_message": "[perf-counters] Fix pause/resume (#1643)\n\n* [perf-counters] Fix pause/resume\r\n\r\nUsing `state.PauseTiming() / state.ResumeTiming()` was broken.\r\n\r\nThanks [@virajbshah] for the the repro testcase.\r\n\r\n* ran clang-format over the whole perf_counters_test.cc\r\n\r\n* Remove check that perf counters are 0 on `Pause`, since `Pause`/`Resume`\r\nsequences would cause a non-0 counter value\r\n\r\n* both upper and lower bound for the with/without resume counters\r\n\r\n---------\r\n\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbecc8ffc774d22b59d7ca2073827246807a5805", "commit_date": "2023-08-11T09:59:53Z", "commit_message": "fix: added benchmark_counters_tabular for file (#1645)\n\n* fix: added benchmark_counters_tabular for file\r\n\r\n* fix: only checking the counters_tabular flag", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14961f1cb69edf47fb1b31986be01c554f36bc2c", "commit_date": "2023-08-10T09:33:10Z", "commit_message": "Fix IntelLLVM compiler error (#1644)\n\n* add -fno-finite-math-only for IntelLLVM", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02a354f3f323ae8256948e1dc77ddcb1dfc297da", "commit_date": "2023-08-01T07:47:09Z", "commit_message": "bug: Inconsistent suffixes console reporter 1009 (#1631)\n\n\r\n* removed appendHumanReadable as it was not used anywhere\r\n\r\n---------\r\n\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e80474e62181079236f8820f92bef445d02bbce", "commit_date": "2023-07-31T16:23:27Z", "commit_message": "Mark internal deps as dev_depenencies so that downstream modules don't require those. (#1640)\n\nCo-authored-by: Andy Christiansen <achristiansen@google.com>\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71ad1856fd107877b3341d8f4db4588d0b3dea7d", "commit_date": "2023-07-31T14:14:34Z", "commit_message": "Fix `-Werror,-Wold-style-cast` build failure on Windows. (#1637)\n\n* Fix `-Werror,-Wold-style-cast` build failure on Windows.\r\n\r\n* Fix parentheses.\r\n\r\n---------\r\n\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f7b8dd9a3211e6043e742a383ccb35eb810829f", "commit_date": "2023-07-31T09:51:37Z", "commit_message": "Re-enable windows-latest tests for newer Bazel (#1641)\n\nThe Windows toolchain detection fix made it into Bazel 6.3.0, so the CI\r\nshould work again with the re-enabled `windows-latest` marker.\r\n\r\nRequire Bazel 6.3.0 in the Linux container setup in `cibuildwheel`.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "27d64a2351b98d48dd5b18c75ff536982a4ce26a", "commit_date": "2023-07-18T07:40:54Z", "commit_message": "Update bzlmod support to new rules_python extension API (#1633)\n\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c5997e0a78713859be412ad1e9d7e3e933b92fc6", "commit_date": "2023-07-17T14:28:35Z", "commit_message": "Delete unused requirements file, simplify nanobind build file (#1635)\n\nThe dependencies are contained in the `pyproject.toml` since it was added.\r\n\r\nSwitches to header and source file globbing instead of manually listing\r\nthe files. The selects for different platforms are removed, as a tradeoff,\r\nwe take a single- to low double-digit hit in wheel sizes (between 5 percent\r\nzipped and 12% installed on MacOS 13.4).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b1c4a752d123071241829f4d13f8533589f5145e", "commit_date": "2023-07-14T12:56:01Z", "commit_message": "Add tests for Human Readable functionality (#1632)\n\n* Add tests for Human Readable functionality\r\n\r\nalso fix an issue where the SI/IEC unit wasn't being correctly passed\r\nthrough.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2556df80f1bcddfee9eba3a545e75ab99e40350", "commit_date": "2023-07-12T13:46:34Z", "commit_message": "Downgrade bazel to windows-2019 (#1629)\n\n* Downgrade bazel to windows-2019\r\n\r\nWindows 2022 is not well supported by bazel yet:\r\nhttps://github.com/bazelbuild/bazel/issues/18592\r\n\r\n* no windows-latest, only windows-2019 (for bazel)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba49f1c167b18d08414549d52e3135471b6ed741", "commit_date": "2023-07-11T15:28:32Z", "commit_message": "Bump scipy from 1.5.4 to 1.10.0 in /tools (#1630)\n\nBumps [scipy](https://github.com/scipy/scipy) from 1.5.4 to 1.10.0.\r\n- [Release notes](https://github.com/scipy/scipy/releases)\r\n- [Commits](https://github.com/scipy/scipy/compare/v1.5.4...v1.10.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: scipy\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb39b7150d17df7bc54a214c1adf2a55b23f8f5e", "commit_date": "2023-07-11T08:56:51Z", "commit_message": "Bump `nanobind` to stable v1.4.0 tag (#1626)\n\nThis seems to reduce binding sizes even further, with a wheel size of\r\n175KB on my local machine (macOS 13.4.1).", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a092f8222c1fa95986efe611abf78daba59d3c59", "commit_date": "2023-07-10T16:58:01Z", "commit_message": "missing cmake include", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c30468bb4b92ccc3d790e45e0e720dc0d976e95a", "commit_date": "2023-07-10T16:54:09Z", "commit_message": "add back package properties for PFM", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8805bd0c145586fa6b4ba783343329469ea1feaf", "commit_date": "2023-07-10T16:46:34Z", "commit_message": "pfm: Use a more standard CMake approach for finding libpfm (#1628)\n\n* pfm: Use a more standard CMake approach for finding libpfm\r\n\r\n* add myself and sort AUTHORS & CONTRIBUTORS", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "16c6ad83aa46d01b0b12a32c8ed0360bb83d151b", "commit_date": "2023-07-10T09:43:49Z", "commit_message": "Add pyproject.toml file for PEP518 compliance (#1625)\n\nThe newly created `pyproject.toml` contains all static metadata as well\r\nas the readme and version as dynamic arguments, to be read by setuptools\r\nduring the build.\r\n\r\nWhat is left in the `setup.py` for now is the custom Bazel extension\r\nclass, since that is not properly supported yet.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5aade18104abd60ba61e54b3b7affaa95c44a26", "commit_date": "2023-07-09T16:25:34Z", "commit_message": "Update tools.md for missing color meaning issue #1491 (#1624)\n\nUpdate tools.md with more documentation about U-test\r\n\r\nFixes https://github.com/google/benchmark/issues/1491", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4931aefb51d1e5872b096a97f43e13fa0fc33c8c", "commit_date": "2023-07-07T08:58:16Z", "commit_message": "Fix broken PFM-enabled tests (#1623)\n\n* Add pfm CI actions for bazel\r\n\r\n* Fix problems in unit test.\r\n\r\n* Undo enabling the CI tests for pfm - github CI machines seemingly do not support performance counters.\r\n\r\n* Remove commented code - can be revisited in github history when needed, and there's a comment explaining the rationale behind the new test code.\r\n\r\n---------\r\n\r\nCo-authored-by: Andy Christiansen <achristiansen@google.com>\r\nCo-authored-by: dominic <510002+dmah42@users.noreply.github.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}