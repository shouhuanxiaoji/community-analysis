{"master": [{"commit_oid": "b3af265aa60251f282145bb0eee3b83d8a15ebb7", "commit_date": "2023-09-19T03:02:13Z", "commit_message": "x86: fix extend gcore.so taking much time like more than 1 hour when huge thread group is present\n\nextend gcore.so command takes lengthy time such as more than 1 hour\nwhen huge thread group is present.\n\nThe root cause of this issue is that we never take into account time\ncomplexity of function gcore_arch_vsyscall_has_vm_alwaysdump_flag()\nsufficiently, which iterates the task list and vma lists of each task\nto detect existence of VM_ALWAYS flag in a given crash dump and so has\nO(nm) where the n is the length of the task list and the m is the\ntotal number of vma among all tasks.\n\nTo fix this issue, skip this process for the kernels whose version is\nequal to or larger than v3.4.0.\n\nOriginally, this process was implemented to detect existence of\nVM_ALWAYS flag that was removed at the commit\n909af768e88867016f427264ae39d27a57b6a8ed (coredump: remove\nVM_ALWAYSDUMP flag) included at Linux kernel v3.4. However, the base\nkernel version of RHEL7.0 GA is 3.10.0-123.el7. Hence, the kernels for\nRHEL7 and later have included the commit. For RHEL7 and later, it's\nsufficient to conclude absence of the flag by checking kernel version\nof a given crash dump.\n\nThe issue could still remain on RHEL6 and older, but we think it's\nacceptable because today we rarely handle crash dump files of RHEL6\nand older.\n\nSigned-off-by: HATAYAMA Daisuke <d.hatayama@fujitsu.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33f3c97f7d45c8bb1b43a8d551cb01a9873bb123", "commit_date": "2023-02-28T09:05:25Z", "commit_message": "coredump: fix building failure due to undefined macros MAPLE_TREE_{COUNT,GATHER}\n\nAs of the commit 13794ace3830bf0274fe7b2e0e579ad72e31848f (coredump:\nfix failure of executing gcore command due to introduction of maple\ntree management on vma list), gcore.so fails to get built with the\nfollowing error messages with defs.h without maple tree API support:\n\n    libgcore/gcore_coredump.c:189:50: error: \u2018MAPLE_TREE_COUNT\u2019 undeclared (first use in this function); did you mean \u2018RADIX_TREE_COUNT\u2019?\n      189 |                 entry_num = do_maple_tree(mm_mt, MAPLE_TREE_COUNT, NULL);\n\t  |                                                  ^~~~~~~~~~~~~~~~\n\t  |                                                  RADIX_TREE_COUNT\n    libgcore/gcore_coredump.c:189:50: note: each undeclared identifier is reported only once for each function it appears in\n    libgcore/gcore_coredump.c:191:38: error: \u2018MAPLE_TREE_GATHER\u2019 undeclared (first use in this function); did you mean \u2018RADIX_TREE_GATHER\u2019?\n      191 |                 do_maple_tree(mm_mt, MAPLE_TREE_GATHER, entry_list);\n\t  |                                      ^~~~~~~~~~~~~~~~~\n\t  |                                      RADIX_TREE_GATHER\n\nThis is caused by the missing macros MAPLE_TREE_COUNT and\nMAPLE_TREE_GATHER.\n\nTo fix the issue, define the two macros within crash gcore so that\nbuild is successfully done expecting the resulting binary works well\nwhen it is ran against new crash utility that has maple tree API\nsupport.\n\nSigned-off-by: HATAYAMA Daisuke <d.hatayama@fujitsu.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}