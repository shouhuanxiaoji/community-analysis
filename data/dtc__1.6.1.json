{"coverity_scan": [{"commit_oid": "72d09e2682a41589b46b8cdd4c393b8ed47ac266", "commit_date": "2021-06-21T05:34:49Z", "commit_message": "Makefile: add -Wsign-compare to warning options\n\nNow that all signedness comparison warnings in the source tree have been\nfixed, let's enable the warning option, to avoid them creeping in again.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b587787ef38802e43972e1b7a36a8358ae25db86", "commit_date": "2021-06-21T05:34:05Z", "commit_message": "checks: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various parts in checks.c.\n\nFix those by making all affected variables unsigned. This covers return\nvalues of the (unsigned) size_t type, phandles, variables holding sizes\nin general and loop counters only ever counting positives values.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-5-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69bed6c2418f484561263aadbb886ffb925e6b38", "commit_date": "2021-06-21T05:28:21Z", "commit_message": "dtc: Wrap phandle validity check\n\nIn several places we check for a returned phandle value to be valid,\nfor that it must not be 0 or \"-1\".\n\nWrap this check in a static inline function in dtc.h, and use ~0U instead\nof -1 on the way, to keep everything in the unsigned realm.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-4-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "910221185560fe0c5dc0997dd7d3b472a0a7cdea", "commit_date": "2021-06-21T05:27:39Z", "commit_message": "fdtget: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\nthe different legs of the conditional operator, in fdtget.c.\n\nIn the questionable expression, we are constructing a 16-bit value out of\ntwo unsigned 8-bit values, however are relying on the compiler's\nautomatic expansion of the uint8_t to a larger type, to survive the left\nshift. This larger type happens to be an \"int\", so this part of the\nexpression becomes signed.\n\nFix this by explicitly blowing up the uint8_t to a larger *unsigned* type,\nbefore doing the left shift. And while we are at it, convert the hardly\nreadable conditional operator usage into a sane switch/case expression.\n\nThis fixes \"make fdtget\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d966f08fcd21ded2ed6608097e9832e9466857fd", "commit_date": "2021-06-21T05:25:44Z", "commit_message": "tests: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various files in the tests/ directory.\n\nFor about half of the cases we can simply change the signed variable to\nbe of an unsigned type, because they will never need to store negative\nvalues (which is the best fix of the problem).\n\nIn the remaining cases we can cast the signed variable to an unsigned\ntype, provided we know for sure it is not negative.\nWe see two different scenarios here:\n- We either just explicitly checked for this variable to be positive\n  (if (rc < 0) FAIL();), or\n- We rely on a function returning only positive values in the \"length\"\n  pointer if the function returned successfully: which we just checked.\n\nAt two occassions we compare with a constant \"-1\" (even though the\nvariable is unsigned), so we just change this to ~0U to create an\nunsigned comparison value.\n\nSince this is about the tests, let's also add explicit tests for those\nvalues really not being negative.\n\nThis fixes \"make tests\" (but not \"make check\" yet), when compiled\nwith -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-2-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecfb438c07fa468a129e81c7d84c7c293c7b0150", "commit_date": "2021-06-15T02:49:23Z", "commit_message": "dtc: Fix signedness comparisons warnings: pointer diff\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in the function get_node_by_path().\n\nTaking the difference between two pointers results in a signed ptrdiff_t\ntype, which mismatches the unsigned type returned by strlen().\nSince \"p\" has been returned by a call to strchr() with \"path\" as its\nargument, we know for sure that it's bigger than \"path\", so the\ndifference must be positive. So a cast to an unsigned type is valid.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-7-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bec74a6d13519381a40b5433ede7849a75a8d79", "commit_date": "2021-06-15T02:48:25Z", "commit_message": "dtc: Fix signedness comparisons warnings: reservednum\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in code using the \"reservednum\" variable.\n\nThere is obviously little sense in having a negative number of reserved\nmemory entries, so let's make this variable and all its users unsigned.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e7f511fd4acaf48d25374f88dbdbdb277e6a26", "commit_date": "2021-06-15T02:35:54Z", "commit_message": "fdtdump: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in fdtdump.c.\n\nThe \"len\" parameter to valid_header() refers to a memory size, not a\nfile offset, so the (unsigned) size_t is better fit, and fixes the\nwarning nicely.\n\nIn the main function we compare the difference between two pointers,\nwhich produces a signed ptrdiff_t type. However the while loop above the\ncomparison makes sure that \"p\" always points before \"endp\" (by virtue of\nthe limit in the memchr() call). This means \"endp - p\" is never\nnegative, so we can safely cast this expression to an unsigned type.\n\nThis fixes \"make fdtdump\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "github-ci": [{"commit_oid": "70a832ee955f78ec97b3da03e1fa287d72307743", "commit_date": "2023-05-14T05:09:26Z", "commit_message": "Merge remote-tracking branch 'github/pr/94' into github-ci", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8375ca10a5eff9027d5c9d064407aa78cf882dc0", "commit_date": "2023-05-07T13:57:21Z", "commit_message": "Add definition for a GitHub Actions CI job\n\nThe job just builds the full configuration on latest Ubuntu\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae7cc971631e7537e3ce6651083fb719963f875f", "commit_date": "2023-05-07T13:57:21Z", "commit_message": "Drop obsolete/broken CI definitions\n\n(Free) Travis-ci is gone since November 2020, cirrus seems to be\nunreliable showing build breakages unrelated to changes.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5203711e6ff922c13d124e56d4dfd17af7ce81e4", "commit_date": "2023-05-07T13:56:50Z", "commit_message": "yaml: Depend on libyaml >= 0.2.3\n\nlibyaml before 0.2.3 expects non-const string parameters. Supporting\nboth variants would require either cpp magic or ignoring\n\"discarded-qualifiers\" compiler warnings. For the sake of simplicity\njust support libyaml 0.2.3 and newer.\n\nNote that NO_YAML can be overwritten on the make command line.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1657b2fb5be12d85ceb6a50d2db8a006dee830c", "commit_date": "2023-05-07T08:47:40Z", "commit_message": "tests: Add test cases for bad endpoint node and remote-endpoint prop checks\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44bb89cafd3d96b8df0f324b652c7bf804b38c05", "commit_date": "2023-05-07T08:47:31Z", "commit_message": "checks: Fix segmentation fault in check_graph_node\n\nDts files which contain an 'endpoint' node as a direct child of the\nroot node cause a segmentation fault inside check_graph_node(). This\ntype of error can easily happen when a 'remote-endpoint' property is\naccidentally placed outside the corresponding endpoint and port nodes.\n\nExample with 'endpoint' node:\n/dts-v1/;\n/ {\tendpoint {};  };\n\nExample with remote-endpoint property:\n/dts-v1/;\n/ {\n\tfoo {\n                remote-endpoint = <0xdeadbeef>;\n\t};\n};\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60bcf1cde1a806fb17dd4c892aff9089f12a8165", "commit_date": "2023-05-03T13:51:15Z", "commit_message": "improve documentation for fdt_path_offset()\n\nThe current documentation doesn't mention the possibility of passing a\nnon-absolute path and having that treated as an alias. Add that\ninformation, along with an example (which will further be expanded in\na subsequent patch), and clarify when -FDT_ERR_BADPATH can be returned.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6f997bc77d4c637308c053ec1632493c7ac437b", "commit_date": "2023-05-03T13:51:08Z", "commit_message": "add fdt_get_symbol() and fdt_get_symbol_namelen() functions\n\nThe fdt_get_symbol_namelen() function will be used in a subsequent\npatch.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18f5ec12a10ec84e957222074dadf4a3e4cc8d59", "commit_date": "2023-05-03T13:51:02Z", "commit_message": "use fdt_path_getprop_namelen() in fdt_get_alias_namelen()\n\nSimplify the code by making use of the new helper.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df093279282ca0cff4d20ceb3bb5857117ed4cc4", "commit_date": "2023-05-03T13:50:55Z", "commit_message": "add fdt_path_getprop_namelen() helper\n\nAdd a wrapper for fdt_getprop_namelen() allowing one to specify the node\nby path instead of offset.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "129bb4b78bc6c56ee517a044ba5c9dfc220f899c", "commit_date": "2023-04-29T01:45:10Z", "commit_message": "doc: dt-object-internal: Fix a typo\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nMessage-Id: <20230428163034.775288-1-u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "390f481521c350b99787da830ac8dc37b74d3c9d", "commit_date": "2023-04-28T06:26:39Z", "commit_message": "fdtoverlay: Drop a a repeated article\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <uwe@kleine-koenig.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f8b382ed45e7a3ca114c1a371ce6b6edc4b3ed5", "commit_date": "2023-04-28T06:26:02Z", "commit_message": "manual: Fix and improve documentation about -@\n\nDevice trees with a /plugin/ tag (\"overlays\") generate a __fixups__ node\nwhen needed and independent of -q being given or not. The same is true for\n__local__fixups__. So don't mention these two nodes in the paragraph about\n-@.\n\nTo not shorten the description too much, describe the semantic of the\nproperties contained in the generated __symbols__ node.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cdf93a6d402a161edf16de6011bd5ad76382e92", "commit_date": "2023-03-18T01:59:46Z", "commit_message": "fdtoverlay: Fix usage string to not mention \"<type>\"\n\nfdtoverlay doesn't have a -t option, so explaining the type formats and\nmodifier prefixes doesn't make much sense.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nMessage-Id: <20230315100819.13387-1-u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72fc810c3025f07de718f5f32a290a6cd5d1f4ee", "commit_date": "2023-03-01T07:43:15Z", "commit_message": "build-sys: add -Wwrite-strings\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "083ab26da83bf5d14df5733e3b9954a0881f9ecc", "commit_date": "2023-03-01T07:43:15Z", "commit_message": "tests: fix leaks spotted by ASAN\n\nAlways allocate from open_blob_rw(), to simplify memory management.\n\nThe fixes are not exhaustive.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f8b28f496093156ae126b434ed753094943da03", "commit_date": "2023-03-01T07:43:15Z", "commit_message": "livetree: fix leak spotted by ASAN\n\n./dtc -I dts -O dtb -o overlay_base_manual_symbols.test.dtb /home/elmarco/src/dtc/tests/overlay_base_manual_symbols.dts\n../data.c:109:2: runtime error: null pointer passed as argument 2, which is declared to never be null\n\n=================================================================\n==933317==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f49a2aba6af in __interceptor_malloc (/lib64/libasan.so.8+0xba6af)\n    #1 0x43183d in xmalloc ../util.h:45\n    #2 0x43482f in data_add_marker ../data.c:230\n    #3 0x449bb8 in get_node_phandle ../livetree.c:632\n    #4 0x421058 in fixup_phandle_references ../checks.c:627\n    #5 0x41b0ba in check_nodes_props ../checks.c:141\n    #6 0x41b1c8 in check_nodes_props ../checks.c:144\n    #7 0x41b9f1 in run_check ../checks.c:181\n    #8 0x430a68 in process_checks ../checks.c:2057\n    #9 0x436abd in main ../dtc.c:327\n    #10 0x7f49a30d850f in __libc_start_call_main (/lib64/libc.so.6+0x2750f)\n\nOnly create data when necessary, and do not alias it.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\n[dwg: Small fixup for a slightly different approach to adjacent cleanups]\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd68bb8c56587114fa6eeed39c36c4b347a6a5fc", "commit_date": "2023-03-01T06:55:35Z", "commit_message": "Make name_node() xstrdup its name argument\n\nThe name field of 'struct node' was really always supposed to be a\nmalloc()ed string, that is owned by the structure.  To avoid an extra\nstrdup() for strings coming up from the lexer, name_node() expects to take\nuch an already malloc()ed string, which means it's not correct to pass it\na static string literal.\n\nThat's a pretty non-obvious constraint, so a bunch of incorrect uses have\ncrept in.  Really, avoiding the extra dup from the lexer isn't a big enough\nbenefit for this demonstrably dangerous interface.  So change it to do the\nxstrdup() itself, removing the burden from callers.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4718189c4ca83ddaa38a4990bddd1d4196b11933", "commit_date": "2023-03-01T06:53:27Z", "commit_message": "Delay xstrdup() of node and property names coming from a flat tree\n\nThe 'name' field of 'struct node' is supposed to be an (individually)\nmalloc()ed string.  So, when taking a name from a flattened blob we need\nto strdup() it.\n\nCurrently that happens in flat_read_string() as we take it from the\nflattened structure itself.  That obscures what's going on because it's\nseveral steps removed from actually inserting it into node->name.  It also\nmeans we need an additional strdup() and free() for the case of old dtb\nformats where we need to extract just the final path component from the\nblob for the name.\n\nWhile we're scanning the blob, we're doing so read-only, so it's fine to\nhave pointers into it.  Therefore simplify things a bit by delaying the\nxstrdup() to the point where we're actually inserting into node->name.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b842c3c819971cdbe0915469759c40f6eb3db7e", "commit_date": "2023-03-01T06:47:27Z", "commit_message": "Make build_property() xstrdup its name argument\n\nThe name field of 'struct property' was really always supposed to be a\nmalloc()ed string, that is owned by the structure.  To avoid an extra\nstrdup() for strings coming up from the lexer, build_property() and\nbuild_property_delete() expect to take such an already malloc()ed string,\nwhich means it's not correct to pass it a static string literal.\n\nThat's a pretty non-obvious constraint, so a bunch of incorrect uses have\ncrept in.  Really, avoiding the extra dup from the lexer isn't a big enough\nbenefit for this demonstrably dangerous interface.  So change it to do the\nxstrdup() itself, removing the burden from callers.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cceabea1ee09ae0864d365b7b3cc89a01b1287c", "commit_date": "2023-03-01T05:08:28Z", "commit_message": "checks: correct I2C 10-bit address check\n\nCurrently if there is a valid 10-bit address the following warning is\nalways displayed due to the 7-bit check failing due to reg > 0x7f\n\n\"I2C address must be less than 7-bits, got \"0x800000a6\". Set I2C_TEN_BIT_ADDRESS for 10 bit addresses or fix the property\"\n\nFix this issue by checking if a 10-bit address is expected, and is valid in separate if statements.\n\nFixes: 8259d59f (\"checks: Improve i2c reg property checking\")\nSigned-off-by: Matt Ranostay <matt.ranostay@konsulko.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d56145938fe5299c7a4fe0342fe8ba80698d564", "commit_date": "2023-03-01T05:02:36Z", "commit_message": "yamltree.c: fix -Werror=discarded-qualifiers & -Werror=cast-qual\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61fa22b05f693df1e4f7760ad8681b17bd8ae410", "commit_date": "2023-03-01T05:01:37Z", "commit_message": "checks: make check.data const\n\nFixes:\n../checks.c:47:25: error: initialization discards \u2018const\u2019 qualifier from pointer target type [-Werror=discarded-qualifiers]\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a1d72a788e06ed899095a892315d6cce5994a8e", "commit_date": "2023-03-01T04:57:03Z", "commit_message": "checks.c: fix check_msg() leak\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee5799938697db66ed93bbb0e474d389de58185d", "commit_date": "2023-03-01T04:56:29Z", "commit_message": "checks.c: fix heap-buffer-overflow\n\n./dtc -I dts -O dtb -o aliases.dtb /home/elmarco/src/dtc/tests/aliases.dts\n=================================================================\n==882911==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000113 at pc 0x7f34ba0abf50 bp 0x7ffc8db22450 sp 0x7ffc8db21c00\nREAD of size 4 at 0x602000000113 thread T0\n    #0 0x7f34ba0abf4f in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) (/lib64/libasan.so.8+0xabf4f)\n    #1 0x7f34ba0ac5e8 in memcmp (/lib64/libasan.so.8+0xac5e8)\n    #2 0x4282dc in check_spi_bus_bridge ../checks.c:1110\n    #3 0x41b08d in check_nodes_props ../checks.c:140\n    #4 0x41b9c4 in run_check ../checks.c:180\n    #5 0x430a3b in process_checks ../checks.c:2056\n    #6 0x436a90 in main ../dtc.c:327\n    #7 0x7f34b964a50f in __libc_start_call_main (/lib64/libc.so.6+0x2750f)\n    #8 0x7f34b964a5c8 in __libc_start_main@GLIBC_2.2.5 (/lib64/libc.so.6+0x275c8)\n    #9 0x4025c4 in _start (/home/elmarco/src/dtc/build/dtc+0x4025c4)\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44c9b73801c1e02e95b533a3cb498ab8c532e98b", "commit_date": "2023-03-01T04:37:19Z", "commit_message": "tests: fix -Wwrite-strings\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b60f5104fccb12964632b07a49011a222522d84", "commit_date": "2023-03-01T04:36:40Z", "commit_message": "srcpos.c: fix -Wwrite-strings\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "32174a66efa4ad19fc6a2a6422e4af2ae4f055cb", "commit_date": "2023-02-27T23:33:58Z", "commit_message": "meson: Fix cell overflow tests when running from meson\n\nBecause meson always builds out-of-tree we need to reference things in the\noriginal source tree via $SRCDIR from run_tests.sh.  We forgot a couple of\ncases for the cell overflow tests.  Fix them.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64a907f08b9bedd89833c1eee674148cff2343c6", "commit_date": "2023-02-27T22:50:20Z", "commit_message": "meson.build: bump version to 1.7.0\n\n[This was botched in the actual 1.7.0 release :( - David Gibson]\n\nSigned-off-by: Nikolay Letov <letov.nikolay@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3cde0613bfdd59d525770bc0e15c54e58b08412", "commit_date": "2023-02-27T08:18:35Z", "commit_message": "Add -Wsuggest-attribute=format warning, correct warnings thus generated\n\nAdd this new warning to the default build flags.  It suggests adding\na ((format)) attribute to xavsprintf_append(), so do that.\n\nSuggested-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41821821101ad8a9f83746b96b163e5bcbdbe804", "commit_date": "2023-02-27T08:01:23Z", "commit_message": "Use #ifdef NO_VALGRIND\n\nUsing simply #if will fail when NO_VALGRIND is undefined.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71c19f20b3ef780c17c97e3495c584532c1c6921", "commit_date": "2023-02-27T08:00:17Z", "commit_message": "Do not redefine _GNU_SOURCE if already set\n\nOr else, compilation will fail.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "039a99414e778332d8f9c04cbd3072e1dcc62798", "commit_date": "2023-02-09T10:01:35Z", "commit_message": "Bump version to v1.7.0\n\nIt's been rather too long since the last release, and quite a lot of\nchanges have accumulated.  Finally get around to rolling a release.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b62ec84bb2da0ce42bc978ce8dc0ba197c9fa71", "commit_date": "2023-02-05T06:34:50Z", "commit_message": "Merge remote-tracking branch 'gitlab/main'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f29d6d85c244ad3a74f3b516075d52c0ff35ea6", "commit_date": "2023-02-05T06:29:25Z", "commit_message": "pylibfdt: add size_hint parameter for get_path\n\nThis also enables us to test the -NOSPACE condition by adding a test\nsetting size_hint=1 so this path is taken.\n\nMessage-Id: <20230201181112.1644842-1-luca@z3ntu.xyz>\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2022bb10879d8716d3e01468fd2fcea8ff28c803", "commit_date": "2023-02-02T06:46:54Z", "commit_message": "checks: Update #{size,address}-cells check for 'dma-ranges'\n\nThe \"dma-ranges\" property value is a sequence of\n\tchild-address  parent-address  child-size\n\nThe size of each field is determined by taking the child's\n\"#address-cells\" value, the parent's \"#address-cells\" value,\nand the child's \"#size-cells\" value.\n\nHowever, in the following example, it gives a false alarm:\n+-----------------------------------+---------------------------------------+\n| ranges.dts                        | dma-ranges.dts                        |\n+-----------------------------------+---------------------------------------+\n| /dts-v1/;                         | /dts-v1/;                             |\n|                                   |                                       |\n| /{                                | /{                                    |\n|   #address-cells = <1>;           |   #address-cells = <1>;               |\n|                                   |                                       |\n|   parent {                        |   parent {                            |\n|     #address-cells = <1>;         |     #address-cells = <1>;             |\n|     #size-cells = <1>;            |     #size-cells = <1>;                |\n|     ranges = <0x0 0xe000 0x1000>; |     dma-ranges = <0x0 0xe000 0x1000>; |\n|     child {                       |     child {                           |\n|       ...                         |       ...                             |\n|     };                            |     };                                |\n|   };                              |   };                                  |\n| };                                | };                                    |\n+-----------------------------------+---------------------------------------+\n| no warning                        | Warning (avoid_unnecessary_addr_size) |\n+-----------------------------------+---------------------------------------+\n\nSame as \"ranges\", it should not be reported in this check.\n\nSigned-off-by: Qun-Wei Lin <qun-wei.lin@mediatek.com>\nMessage-Id: <20230112125654.13390-1-qun-wei.lin@mediatek.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abbd523bae6e75545ccff126a4a47218ec0defab", "commit_date": "2023-02-02T05:32:47Z", "commit_message": "pylibfdt: Work-around SWIG limitations with flexible arrays\n\nCommit a41509bea3e7 (\"libfdt: Replace deprecated 0-length arrays with\nproper flexible arrays\") fails to build pylibfdt:\n\n./pylibfdt/libfdt_wrap.c: In function \u2018_wrap_fdt_node_header_name_set\u2019:\n./pylibfdt/libfdt_wrap.c:4350:18: error: cast specifies array type\n 4350 |     arg1->name = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                  ^\n./pylibfdt/libfdt_wrap.c:4350:16: error: invalid use of flexible array member\n 4350 |     arg1->name = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                ^\n./pylibfdt/libfdt_wrap.c:4352:16: error: invalid use of flexible array member\n 4352 |     arg1->name = 0;\n      |                ^\n./pylibfdt/libfdt_wrap.c: In function \u2018_wrap_fdt_property_data_set\u2019:\n./pylibfdt/libfdt_wrap.c:4613:18: error: cast specifies array type\n 4613 |     arg1->data = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                  ^\n./pylibfdt/libfdt_wrap.c:4613:16: error: invalid use of flexible array member\n 4613 |     arg1->data = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                ^\n./pylibfdt/libfdt_wrap.c:4615:16: error: invalid use of flexible array member\n 4615 |     arg1->data = 0;\n      |                ^\n\nTurns out this is known issue with SWIG: https://github.com/swig/swig/issues/1699\n\nImplement the work-around to ignore the flexible array member.\n\nFixes: a41509bea3e7 (\"libfdt: Replace deprecated 0-length arrays with proper flexible arrays\")\nCc: Kees Cook <keescook@chromium.org>\nCc: Simon Glass <sjg@chromium.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20230201224441.305757-1-robh@kernel.org>\nReviewed-by: Simon Glass <sjg@chromium.org>\nTested-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a41509bea3e73b8dc63bf666a82275bc7d040266", "commit_date": "2023-01-29T03:42:57Z", "commit_message": "libfdt: Replace deprecated 0-length arrays with proper flexible arrays\n\nReplace the 0-length arrays in structures with proper flexible\narrays. This will avoid warnings when building under GCC 13 with\n-fstrict-flex-arrays, which the Linux kernel will be doing soon:\n\nIn file included from ../lib/fdt_ro.c:2:\n../lib/../scripts/dtc/libfdt/fdt_ro.c: In function 'fdt_get_name':\n../lib/../scripts/dtc/libfdt/fdt_ro.c:319:24: warning: 'strrchr' reading 1 or more bytes from a region of size 0 [-Wstringop-overread]\n  319 |                 leaf = strrchr(nameptr, '/');\n      |                        ^~~~~~~~~~~~~~~~~~~~~\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cd89f862cdb04d91c5d59c5b39647f7d5d5b3b8", "commit_date": "2022-11-21T03:18:44Z", "commit_message": "dtc: Warning rather than error on possible truncation of cell values\n\nWe always evaluate integer values in cell arrays as 64-bit quantities, then\ntruncate to the size of the array cells (32-bit by default).  However to\ndetect accidental truncation of meaningful values, we give an error if the\ntruncated portion isn't either all 0 or all 1 bits.  However, this can\nstill give counterintuitive errors.  For if the user is thinking in 2's\ncomplement 32-bit arithmetic (which would be quite natural), then they'd\nexpect the expression (-0xffffffff-2) to evaluate to -1 (0xffffffff).\nHowever in 64-bit it evaluates to 0xfffffffeffffffff which does truncate\nto the expected value but trips this error message.\n\nBecause of this reduce the error to only a warnings, with a somewhat more\nhelpful message.\n\nFixes: https://github.com/dgibson/dtc/issues/74\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55778a03df61623ddd743b04772ab90ce128db61", "commit_date": "2022-10-11T23:49:36Z", "commit_message": "libfdt: tests: add get_next_tag_invalid_prop_len\n\nAdd a new test get_next_tag_invalid_prop_len, which covers\nfdt_next_tag(), when it is passed an corrupted blob, with\ninvalid property len values. The test runs twice, on a blob\nin sw and finished state.\n\nSigned-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nMessage-Id: <20221011182611.116011-2-tadeusz.struk@linaro.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73590342fc85ca207ca1e6cbc110179873a96962", "commit_date": "2022-10-11T23:49:36Z", "commit_message": "libfdt: prevent integer overflow in fdt_next_tag\n\nSince fdt_next_tag() in a public API function all input parameters,\nincluding the fdt blob should not be trusted. It is possible to forge\na blob with invalid property length that will cause integer overflow\nduring offset calculation. To prevent that, validate the property length\nread from the blob before doing calculations.\n\nSigned-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nMessage-Id: <20221005232931.3016047-1-tadeusz.struk@linaro.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "035fb90d537540a5fbf24569df74aec667704e4d", "commit_date": "2022-10-11T23:49:36Z", "commit_message": "libfdt: add fdt_get_property_by_offset_w helper\n\nAdd a new fdt_get_property_by_offset_w helper function.\nIt is a wrapper on fdt_get_property_by_offset that returns\na writable pointer to a property at a given offset.\n\nSigned-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nMessage-Id: <20221011182611.116011-1-tadeusz.struk@linaro.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98a07006c48dc0bc3f42b3b3ce75b7f03e87e724", "commit_date": "2022-09-26T05:22:05Z", "commit_message": "Makefile: fix infinite recursion by dropping non-existent `%.output`\n\nWithout the change GNU `make-4.4` falls into infinite recursion of trying\nto generate %.output files (bison is not passed flags to generate debug\noutput).\n\nThis happens on GNU `make-4.4` only after GNU make change to more eagerly\nrebuild all target outputs in multiple targets:\n    https://savannah.gnu.org/bugs/index.php?63098\n\nThe recursion here is the following:\n\n- Makefile depends on *.d files\n- *.d files depend on *.c files\n- *.c files are generated by bison\n- bison is triggered whenever some of it's multiple targets are missing\n\nIn our case `%.output` is always missing and bison is always reran.\n*.d files are always regenerated on `make` run. And make is always\nrestarted as *.d files are always regenerated.\n\nThe fix removes infeasible `%.output`.\n\nSigned-off-by: Sergei Trofimovich <slyich@gmail.com>\nMessage-Id: <20220925104203.648449-2-slyich@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a036cc7b0c10474a4cf1cdbe0e232e637e1f2edd", "commit_date": "2022-09-26T05:22:05Z", "commit_message": "Makefile: limit make re-execution to avoid infinite spin\n\nmake-4.4 became intentionally more eager at rebuilding outdated Makefile\nincludes. Currently this causes `dtc` to spin infinitely in\nparser/dependency loop:\n\n    $ make\n    ...\n        CHK version_gen.h\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n        CHK version_gen.h\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n    ... # never stops\n\nAfter the change build eventually fails when gets into this state:\n\n    $ make\n    ...\n        CHK version_gen.h\n        UPD version_gen.h\n         DEP util.c\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n        CHK version_gen.h\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n    Makefile:394: *** \"Make re-executed itself 10 times. Infinite recursion?\".  Stop.\n\nThe actual recursion will be fixed separately.\n\nSigned-off-by: Sergei Trofimovich <slyich@gmail.com>\nMessage-Id: <20220925104203.648449-1-slyich@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6e92108bcd9c13ebbbcab44a49fa5f39c21621e", "commit_date": "2022-09-16T09:02:06Z", "commit_message": "libdtc: remove duplicate judgments\n\nThere is no need to check the VALID_DTB repeatedly, and can be combined\ninto one if statement.\n\nSigned-off-by: Jia Xianhua <jiaxianhua@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e37c25677dc946a025002a394172788b3169b3ce", "commit_date": "2022-07-31T12:10:05Z", "commit_message": "Don't generate erroneous fixups from reference to path\n\nThe dtb overlay format only permits (non local) fixups to reference labels,\nnot paths.  That's because the fixup target goes into the property name in\nthe overlay, and property names aren't permitted to include '/' characters.\n\nStop erroneously generating such fixups, because we didn't check for this\ncase.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50454658f2b5c8968ccd7856d94020c893a4be46", "commit_date": "2022-07-30T03:52:33Z", "commit_message": "libfdt: Don't mask fdt_get_name() returned error\n\nReturn the error code from fdt_get_name() (contained in len when the\nresult is NULL) instead of masking it with FDT_ERR_BADSTRUCTURE.\n\nFixes: fda71da26e7f (\"libfdt: Handle failed get_name() on BEGIN_NODE\")\nReported-by: Mike McTernan <mikemcternan@google.com>\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220729130019.804288-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e64a204196c924288b8bcd741d969160cd9ac6d9", "commit_date": "2022-07-30T03:50:27Z", "commit_message": "manual.txt: Follow README.md and remove Jon\n\nFollowing 0ee1d479b23a (\"Remove Jon Loeliger from maintainers list\"),\nmake the \"Submitting Patches\" section of the manual.txt consistent with\nthe README by requesting patches to only be sent to David.\n\nCc: Jon Loeliger <loeliger@gmail.com>\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220729131019.806164-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f508c83fe6f0c58a59132bd3a0887aebfcd6b16f", "commit_date": "2022-07-30T03:42:39Z", "commit_message": "Update README in MANIFEST.in and setup.py to README.md\n\nSigned-off-by: Saad Waheed <saad.waheed@10xengineers.ai>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2ccf8a77dd296e3723e285a5b556da709f09020", "commit_date": "2022-07-29T02:55:15Z", "commit_message": "Add description of Signed-off-by lines\n\ndtc and libfdt have been using Signed-off-by lines (as used in the Linux\nkernel) for some time, like a lot of open source projects.  However\nUwe Kleine-K\u00f6nig pointed out we never really stated what they mean in our\ncontext.\n\nAdd information on what the S-o-b line means in CONTRIBUTING.md - this is\nessentially a quote of the same information from the kernel documentation,\nwith some tweaks to make sense in the new context.\n\nSuggested-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>\nAcked-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90b9d9de42caa136436652f63407a50c9641c00f", "commit_date": "2022-07-28T06:25:56Z", "commit_message": "Split out information for contributors to CONTRIBUTING.md\n\nREADME.md covers both general information for people using and building\nthe software, and more specific information for people contributing to\neither dtc or libfdt.  Split out the latter information into its own file\nfor easier reference.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ee1d479b23a35dbcf9a756b5c9437ac6cf12dcf", "commit_date": "2022-07-28T06:16:08Z", "commit_message": "Remove Jon Loeliger from maintainers list\n\nJon hasn't been actively working on dtc maintenance for some years.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33a73c62c1cd1e6062dc5416037accdc8a90b5e", "commit_date": "2022-07-28T06:15:06Z", "commit_message": "Convert README to README.md\n\nLet's move vaguely into the twenty-first century by converting our old\nplain text README file to Markdown.  While we're updating the formatting,\nmake some small polish changes to the content.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ad60734b1c1ac12856674fa7913fc9492dc5d28", "commit_date": "2022-07-27T06:38:45Z", "commit_message": "Allow static building with meson\n\nAdded \"static-build\" option in the meson_options.txt.\nSetting it to \"true\" allows static building.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163557.932298-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd9b8c96c780c90dd0f1af46963bf2c52de1f0a6", "commit_date": "2022-07-27T06:35:29Z", "commit_message": "Allow static building with make\n\nSet STATIC_BUILD=1 environment variable to enable static building\nwhen using makefiles.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163531.932281-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fda71da26e7fa00966a58afeb2114269b5512e59", "commit_date": "2022-07-26T11:46:18Z", "commit_message": "libfdt: Handle failed get_name() on BEGIN_NODE\n\nValidate the return value of fdt_get_name() as an ill-formed DT, causing\nit to fail, could result in fdt_check_full() dereferencing NULL.\n\nfixes: a2def5479950 (\"libfdt: Check that the root-node name is empty\")\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220714083848.958492-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7c7f17a83d5ec1049ddfcaf22f40fcdc53ac0c4", "commit_date": "2022-07-26T11:39:07Z", "commit_message": "Fix test script to run also on dash shell\n\n/bin/sh points to dash instead of bash in some linux distros.\nOne test would fail if dash was used, this fix will allow all tests\nto run properly on dash too.\n\ndash built-in printf does not support \"\\xNN\" -hex escape format.\n\"\\NNN\" -octal escape format is supported by both bash and dash printf.\n\nReplaced \"$(echo \"$expect\")\" because this actually runs /bin/echo\ninstead of shell internal echo and in some cases causes \"\\NNN\" escapes\nto be printed as the actual characters they represent instead of the\nescape sequence itself.\n\nCosmetic quotes added to make printout a bit clearer.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220704073722.1075849-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f23ffe1679bc8009fa14b7d8d728f317d053ea", "commit_date": "2022-07-02T06:37:02Z", "commit_message": "Add missing relref_merge test to meson test list\n\nWill remove one \"Strange test result\" when running tests with\nmeson\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163114.932175-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed310803ea893ed0a8bba9c4ff0d9eb0063a8bef", "commit_date": "2022-04-20T02:55:14Z", "commit_message": "pylibfdt: add FdtRo.get_path()\n\nAdd a new Python method wrapping fdt_get_path() from the C API.\n\nAlso add a test for the new method.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20220419194537.63170-1-luca@z3ntu.xyz>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c001fc01a43e7a06447c06ea3d50bd60641322b8", "commit_date": "2022-02-04T07:52:36Z", "commit_message": "pylibfdt: fix swig build in install\n\nA 'pip install' is silently broken unless the tree is dirty and contains\npylibfdt/libfdt.py. The problem is a known issue[1] with SWIG and\nsetuptools where the 'build_py' stage needing module.py runs before\nthe 'build_ext' stage which generates it. The work-around is to override\n'build_py' to run 'build_ext' first.\n\n[1] https://stackoverflow.com/questions/50239473/building-a-module-with-setuptools-and-swig\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20220203180408.611645-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "26c54f840d2340271f305c04f0d66bafac93274f", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "tests: add test cases for label-relative path references\n\nNewly added &{label/path} feature doesn't yet have any tests. Add some.\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec7986e682cf9a5078bdbad341feb807a56b21e0", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "dtc: introduce label relative path references\n\nReference via label allows extending nodes with compile-time checking of\nwhether the node being extended exists. This is useful to catch\nrenamed/removed nodes after an update of the device trees to be extended.\n\nIn absence of labels in the original device trees, new style path\nreferences can be used:\n\n  /* upstream device tree */\n  / {\n\tleds: some-non-standard-led-controller-name {\n\t\tled-0 {\n\t\t\tdefault-state = \"off\";\n\t\t};\n\t};\n  };\n\n  /* downstream device tree */\n  &{/some-non-standard-led-controller-name/led-0} {\n\tdefault-state = \"on\";\n  };\n\nThis is a common theme within the barebox bootloader[0], which extends the\nupstream (Linux) device trees in that manner. The downside is that,\nespecially for deep nodes, these references can get quite long and tend to\nbreak often due to upstream rework (e.g. rename to adhere to bindings).\n\nOften there is a label a level or two higher that could be used. This\npatch allows combining both a label and a new style path reference to\nget a compile-time-checked reference, which allows rewriting the\nprevious downstream device tree snippet to:\n\n  &{leds/led-0} {\n\tdefault-state = \"on\";\n  };\n\nThis won't be broken when /some-non-standard-led-controller-name is\nrenamed or moved while keeping the label. And if led-0 is renamed, we\nwill get the expected compile-time error.\n\nOverlay support is skipped for now as they require special support: The\nlabel and relative path parts need to be resolved at overlay apply-time,\nnot at compile-time.\n\n[0]: https://www.barebox.org/doc/latest/devicetree/index.html\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "651410e54cb9a478f2fbb16cb493a5e7808ad8fe", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "util: introduce xstrndup helper\n\nWe already have xstrdup, add xstrndup as well to make it\nstraight-forward to clone part of a string.\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4048aed12b81c5a0154b9af438edc99ec7d2b6a1", "commit_date": "2022-01-03T23:48:59Z", "commit_message": "setup.py: fix out of tree build\n\nFixes: commit 1cc41b1c9 (\"pylibfdt: Add packaging metadata\")\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20220103073855.1468799-3-marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff5afb96d0c08133b6f709a197b8bda023531757", "commit_date": "2021-12-29T06:04:18Z", "commit_message": "Handle integer overflow in check_property_phandle_args()\n\nIf the corresponding '#xxx-cells' value is much too large, an integer\noverflow can prevent the checks in check_property_phandle_args() from\ncorrectly determining that the checked property is too short for the\ngiven cells value.  This leads to an infinite loops.\n\nThis patch fixes the bug, and adds a testcase for it.  Further\ninformation in https://github.com/dgibson/dtc/issues/64\n\nReported-by: Anciety <anciety@pku.edu.cn>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca7294434309930076ff99ff4f0c817499f50f5a", "commit_date": "2021-12-28T09:14:05Z", "commit_message": "README: Explain how to add a new API function\n\nThis is not obvious so add a little note about it.\n\nSigned-off-by: Simon Glass <sjg@chromium.org>\nMessage-Id: <20211107224346.3181320-2-sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0c2e115f82ed3bc5f9d3f9e5380f0f7e81a1c21", "commit_date": "2021-12-28T09:11:11Z", "commit_message": "Fix a UB when fdt_get_string return null\n\nWhen fdt_get_string return null, `namep` is not correctly reset.\nFrom the document of `fdt_getprop_by_offset`, the parameter `namep` will\nbe always overwritten (that is, it will be overwritten without exception\nof error occurance).\n\nAs for the caller (like\nhttps://github.com/topjohnwu/Magisk/blob/e097c097feb881f6097b6d1dc346f310bc92f5d6/native/jni/magiskboot/dtb.cpp#L42),\nthe code may be like:\n```cpp\nsize_t size;\nconst char *name;\nauto *value = fdt_getprop_by_offset(fdt, prop, &name, &size);\n```\nand if `value == nullptr`, `size` is also be overwritten correctly but\n`name` is not, which is quite inconsistent.\n\nThis commit makes sure `name` and `size` behavior consistently (reset to\nreasonable value) when error occurs.\n\nSigned-off-by: LoveSy <shana@zju.edu.cn>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd5f69cbc0d4bc34a509b5f6f62234e25893b684", "commit_date": "2021-12-28T09:10:57Z", "commit_message": "tests: setprop_inplace: use xstrdup instead of unchecked strdup\n\nThis is the only strdup instance we have, all others are xstrdup. As\nstrdup is _POSIX_C_SOURCE >= v200809L, which we don't require and we\ndon't check strdup error return here, switch to xstrdup instead. This\naligns the test with others that call xfuncs, mainly xmalloc().\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a04f69025003890be265e007238dc91041e5529b", "commit_date": "2021-12-28T04:30:33Z", "commit_message": "pylibfdt: add Property.as_*int*_array()\n\nAdd new methods to handle decoding of int32, uint32, int64 and uint64\narrays.\n\nAlso add tests for the new methods.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211225132558.167123-3-luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83102717d7c4171aeb2d26941fa1ee2997bf4a7d", "commit_date": "2021-12-28T04:29:31Z", "commit_message": "pylibfdt: add Property.as_stringlist()\n\nAdd a new method for decoding a string list property, useful for e.g.\nthe \"reg-names\" property.\n\nAlso add a test for the new method.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211225132558.167123-2-luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d152126bb0293c321cae437bdf7437c393ee3619", "commit_date": "2021-12-26T04:44:32Z", "commit_message": "Fix Python crash on getprop deallocation\n\nFatal Python error: none_dealloc: deallocating None\nPython runtime state: finalizing (tstate=0x000055c9bac70920)\n\nCurrent thread 0x00007fbe34e47740 (most recent call first):\n  <no Python frame>\nAborted (core dumped)\n\nThis is caused by a missing Py_INCREF on the returned Py_None, as\ndemonstrated e.g. in https://github.com/mythosil/swig-python-incref or\ndescribed at https://edcjones.tripod.com/refcount.html (\"Remember to\nINCREF Py_None!\")\n\nA PoC for triggering this crash is uploaded to\nhttps://github.com/z3ntu/pylibfdt-crash .\nWith this patch applied to pylibfdt the crash does not happen.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211224102811.70695-1-luca@z3ntu.xyz>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17739b7ef510917471409d71fb45d8eaf6a1e1fb", "commit_date": "2021-12-09T06:48:58Z", "commit_message": "Support 'r' format for printing raw bytes with fdtget\n\nFT is sometimes used for storing raw data. That is quite common for\nU-Boot FIT images.\n\nExtracting such data is not trivial currently. Using type 's' (string)\nwill replace every 0x00 (NUL) with 0x20 (space). Using type 'x' will\nprint bytes but in xxd incompatible format.\n\nThis commit adds support for 'r' (raw) format. Example usage:\nfdtget -t r firmware.itb /images/foo data > image.raw\n\nSupport for encoding isn't added as there isn't any clean way of passing\nbinary data as command line argument.\n\nSigned-off-by: Rafa\u0142 Mi\u0142ecki <rafal@milecki.pl>\nMessage-Id: <20211209061420.29466-1-zajec5@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45f3d1a095dd3440578d5c6313eba555a791f3fb", "commit_date": "2021-11-18T05:25:10Z", "commit_message": "libfdt: overlay: make overlay_get_target() public\n\nThis is done to get the target path for the overlay nodes which is very useful\nin many cases. For example, Xen hypervisor needs it when applying overlays\nbecause Xen needs to do further processing of the overlay nodes, e.g. mapping of\nresources(IRQs and IOMMUs) to other VMs, creation of SMMU pagetables, etc.\n\nSigned-off-by: Vikram Garhwal <fnu.vikram@xilinx.com>\nMessage-Id: <1637204036-382159-2-git-send-email-fnu.vikram@xilinx.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c19a4bafa514c2c85876f0de35782abd11bed7ec", "commit_date": "2021-11-17T01:22:53Z", "commit_message": "libfdt: fix an incorrect integer promotion\n\nUINT32_MAX is an integer of type unsigned int. UINT32_MAX + 1 overflows\nunless explicitly computed as unsigned long long. This led to some\ninvalid addresses being treated as valid.\n\nCast UINT32_MAX to uint64_t explicitly.\n\nSigned-off-by: Elvira Khabirova <e.khabirova@omp.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cc41b1c969f1fa5090b166397e4bab4ab1aa449", "commit_date": "2021-11-12T04:58:23Z", "commit_message": "pylibfdt: Add packaging metadata\n\nPyPI expects to have various package metadata including long\ndescription, license, and classifiers. Add them.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211112041633.741598-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db72398cd4371324901e8ff54980543e0139c1b9", "commit_date": "2021-11-12T04:58:23Z", "commit_message": "README: Update pylibfdt install instructions\n\nNow that pip is supported for installs, update the install instructions to\nuse it. Using pip over setup.py is generally recommended and simpler.\n\nAlso, drop 'SETUP_PREFIX' as it doesn't exist anywhere.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211112041633.741598-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "383e148b70a47ab15f97a19bb999d54f9c3e810f", "commit_date": "2021-11-12T01:45:46Z", "commit_message": "pylibfdt: fix with Python 3.10\n\nSince Python 2.5 the argument parsing functions when parsing expressions\nsuch as s# (string plus length) expect the length to be an int or a\nssize_t, depending on whether PY_SSIZE_T_CLEAN is defined or not.\n\nPython 3.8 deprecated the use of int, and with Python 3.10 this symbol\nmust be defined and ssize_t used[1].\n\nDefine the magic symbol when building the extension, and cast the ints\nfrom the libfdt API to ssize_t as appropriate.\n\n[1] https://docs.python.org/3.10/whatsnew/3.10.html#id2\n\nSigned-off-by: Ross Burton <ross.burton@arm.com>\nMessage-Id: <20211111160536.2516573-1-ross.burton@arm.com>\n[dwg: Adjust for new location of setup.py]\nTested-by: Rob Herring <robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23b56cb7e18992650c79a04c9e4e3f2740bc1fbd", "commit_date": "2021-11-11T03:34:51Z", "commit_message": "pylibfdt: Move setup.py to the top level\n\nUsing 'pip' and several setup.py sub-commands currently don't work with\npylibfdt. The primary reason is Python packaging has opinions on the\ndirectory structure of repositories and one of those appears to be the\ninability to reference source files outside of setup.py's subtree. This\nmeans a sdist cannot be created with all necessary source components\n(i.e. libfdt headers). Moving setup.py to the top-level solves these\nproblems.\n\nWith this change. the following commands now work:\n\nCreating packages for pypi.org:\n./setup.py sdist bdist_wheel\n\nUsing pip for installs:\npip install .\npip install git+http://github.com/robherring/dtc.git@pypi-v2\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-5-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69a760747d8d9d1c5dcceebc05e868e1eaf13a2b", "commit_date": "2021-11-11T03:34:51Z", "commit_message": "pylibfdt: Split setup.py author name and email\n\nThe 'author' field in setup.py is supposed to be just the name. The\nemail address goes in 'author_email' field.\n\nCc: Simon Glass <sjg@chromium.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-4-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b106a77dbdc34ef809526febafc490b90d79a54", "commit_date": "2021-11-11T03:30:33Z", "commit_message": "pylibfdt: Use setuptools_scm for the version\n\nThe DTC version in version_gen.h causes a warning with setuptools:\n\nsetuptools/dist.py:501: UserWarning: The version specified ('1.6.1-g5454474d') \\\nis an invalid version, this may not work as expected with newer versions of \\\nsetuptools, pip, and PyPI. Please see PEP 440 for more details.\n\nIt also creates an unnecessary dependency on the rest of the build\nsystem(s). Switch to use setuptools_scm instead to get the version for\npylibfdt.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c691776ddb26acbd3674722caafacaf7b6e3e807", "commit_date": "2021-11-11T03:29:12Z", "commit_message": "pylibfdt: Use setuptools instead of distutils\n\nThe use of setuptools is favored over distutils. setuptools is needed to\nsupport building Python 'wheels' and for pip support.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5216f3f1bbb70aef463b6cd78dbbb0f4c4c71606", "commit_date": "2021-11-11T03:27:09Z", "commit_message": "libfdt: Add static lib to meson build\n\nThe meson build is not building the static libfdt, so add it.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111003329.2347536-1-robh@kernel.org>\nReviewed-by: Simon Glass <sjg@chromium.org>\nTested-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eda2590f481db53318a2f203c85eab3dde4b340", "commit_date": "2021-11-01T03:02:44Z", "commit_message": "CI: Cirrus: bump used FreeBSD from 12.1 to 13.0\n\nCI freebsd_12 job currently fails to build PRs, because of:\r\n```\r\nld-elf.so.1: /usr/local/bin/bison: Undefined symbol \"fread_unlocked@FBSD_1.6\"\r\n```\r\n\r\nAccording to FreeBSD issue tracker[1], the proper solution is to upgrade to a\r\nsupported release, so do that for our CI.\r\n\r\n[1]: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=253452\r\n\r\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a3a9d3449c88aabe88685ea99811bf6c02a570d", "commit_date": "2021-10-21T04:48:41Z", "commit_message": "checks: Add an interrupt-map check\n\nAdd a check for parsing 'interrupt-map' properties. The check primarily\ntests parsing 'interrupt-map' properties which depends on and the parent\ninterrupt controller (or another map) node.\n\nNote that this does not require '#address-cells' in the interrupt-map\nparent, but treats missing '#address-cells' as 0 which is how the Linux\nkernel parses it. There's numerous cases that expect this behavior.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211015213527.2237774-1-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8fd24744e3618be99a939009349418fcbfa362b3", "commit_date": "2021-10-14T03:46:17Z", "commit_message": "checks: Ensure '#interrupt-cells' only exists in interrupt providers\n\nThe interrupt provider check currently checks if an interrupt provider\nhas #interrupt-cells, but not whether #interrupt-cells is present\noutside of interrupt-providers. Rework the check to cover the latter\ncase.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-4-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8d1a9a77863a8c7031ae82a1d461aa78eb72a7b", "commit_date": "2021-10-14T03:45:22Z", "commit_message": "checks: Drop interrupt provider '#address-cells' check\n\n'#address-cells' is only needed when parsing 'interrupt-map' properties, so\nremove it from the common interrupt-provider test.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52a16fd7282463e05ee86071463bf0499a9cedf6", "commit_date": "2021-10-14T03:35:45Z", "commit_message": "checks: Make interrupt_provider check dependent on interrupts_extended_is_cell\n\nIf '#interrupt-cells' doesn't pass checks, no reason to run interrupt\nprovider check.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-1-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37fd700685da9001643d1b1f63ad4332e1148b04", "commit_date": "2021-10-11T05:20:53Z", "commit_message": "treesource: Maintain phandle label/path on output\n\nThe dts output will just output phandle integer values, but often the\nnecessary markers are present with path or label references. Improve the\noutput and maintain phandle label or path references when present in dts\noutput.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20210727183023.3212077-6-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e33ce1d6a8c7e54e3ad12cff33690b6da0aee1dc", "commit_date": "2021-09-27T01:54:56Z", "commit_message": "flattree: Use '\\n', not ';' to separate asm pseudo-ops\n\nThe output of -Oasm is peculiar for assembler in that we want its output\nto be portable across targets (it consists entirely of pseudo-ops and\nlabels, no actual instructions).\n\nIt turns out that while ';' is a valid instruction/pseudo-op separator\non most targets, it's not correct for all of them - e.g. HP PA-RISC.  So,\nswitch to using an actual \\n instead.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d24cc189dca6148eedf9dc9e2d45144b3851dae0", "commit_date": "2021-09-27T01:54:56Z", "commit_message": "asm: Use assembler macros instead of cpp macros\n\ntests/trees.S is a weird thing: a portable aseembler file, used to produce\na specific binary output.  Currently it uses CPP macros quite heavily to\nconstruct the dtbs we want (including some partial and broken trees).\n\nUsing cpp has the side effect that we need to use ; separators between\ninstructions (or, rather, pseudo-ops), because cpp won't expand newlines.\nHowever, it turns out that while ; is a suitable separator on most\ntargets, it doesn't work for all of them (e.g. HP PA-RISC).\n\nSwitch to using the assembler's inbuilt macros rather than CPP, so that we\ncan use genuine newlines.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff3a30c115ad7354689dc7858604356ecb7f9b1c", "commit_date": "2021-09-25T06:11:41Z", "commit_message": "asm: Use .asciz and .ascii instead of .string\n\nWe use the .string pseudo-op both in some of our test assembly files\nand in our -Oasm output.  We expect this to emit a \\0 terminated\nstring into the .o file.  However for certain targets (e.g. HP\nPA-RISC) it doesn't include the \\0.  Use .asciz instead, which\nexplicitly does what we want.\n\nThere's also one place we can use .ascii (which explicitly emits a\nstring *without* \\0 termination) instead of multiple .byte directives.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5eb5927d81ee6036f45c4e1bd89ae66ed325d721", "commit_date": "2021-08-26T00:58:26Z", "commit_message": "fdtdump: fix -Werror=int-to-pointer-cast\n\nWith mingw64-gcc, the compiler complains with various warnings:\nerror: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20210825121350.213551-1-marcandre.lureau@redhat.com>\nAcked-by: Rob Herring <robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0869f8269161843a46c0cac0e35b4dc9324bf1a6", "commit_date": "2021-08-02T02:21:53Z", "commit_message": "libfdt: Add ALIGNMENT error string\n\nThe ALIGNMENT error was missing a string, leading to <unknown error>\nbeing returned.\n\nSigned-off-by: Georg Kotheimer <georg.kotheimer@kernkonzept.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69595a167f06c4482ce784e30df1ac9b16ceb5b0", "commit_date": "2021-06-30T00:32:13Z", "commit_message": "checks: Fix bus-range check\n\nThe upper limit of the bus-range is specified by the second cell of the\nbus-range property.\n\nSigned-off-by: Thierry Reding <treding@nvidia.com>\nMessage-Id: <20210629114304.2451114-1-thierry.reding@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72d09e2682a41589b46b8cdd4c393b8ed47ac266", "commit_date": "2021-06-21T05:34:49Z", "commit_message": "Makefile: add -Wsign-compare to warning options\n\nNow that all signedness comparison warnings in the source tree have been\nfixed, let's enable the warning option, to avoid them creeping in again.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b587787ef38802e43972e1b7a36a8358ae25db86", "commit_date": "2021-06-21T05:34:05Z", "commit_message": "checks: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various parts in checks.c.\n\nFix those by making all affected variables unsigned. This covers return\nvalues of the (unsigned) size_t type, phandles, variables holding sizes\nin general and loop counters only ever counting positives values.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-5-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69bed6c2418f484561263aadbb886ffb925e6b38", "commit_date": "2021-06-21T05:28:21Z", "commit_message": "dtc: Wrap phandle validity check\n\nIn several places we check for a returned phandle value to be valid,\nfor that it must not be 0 or \"-1\".\n\nWrap this check in a static inline function in dtc.h, and use ~0U instead\nof -1 on the way, to keep everything in the unsigned realm.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-4-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "910221185560fe0c5dc0997dd7d3b472a0a7cdea", "commit_date": "2021-06-21T05:27:39Z", "commit_message": "fdtget: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\nthe different legs of the conditional operator, in fdtget.c.\n\nIn the questionable expression, we are constructing a 16-bit value out of\ntwo unsigned 8-bit values, however are relying on the compiler's\nautomatic expansion of the uint8_t to a larger type, to survive the left\nshift. This larger type happens to be an \"int\", so this part of the\nexpression becomes signed.\n\nFix this by explicitly blowing up the uint8_t to a larger *unsigned* type,\nbefore doing the left shift. And while we are at it, convert the hardly\nreadable conditional operator usage into a sane switch/case expression.\n\nThis fixes \"make fdtget\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d966f08fcd21ded2ed6608097e9832e9466857fd", "commit_date": "2021-06-21T05:25:44Z", "commit_message": "tests: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various files in the tests/ directory.\n\nFor about half of the cases we can simply change the signed variable to\nbe of an unsigned type, because they will never need to store negative\nvalues (which is the best fix of the problem).\n\nIn the remaining cases we can cast the signed variable to an unsigned\ntype, provided we know for sure it is not negative.\nWe see two different scenarios here:\n- We either just explicitly checked for this variable to be positive\n  (if (rc < 0) FAIL();), or\n- We rely on a function returning only positive values in the \"length\"\n  pointer if the function returned successfully: which we just checked.\n\nAt two occassions we compare with a constant \"-1\" (even though the\nvariable is unsigned), so we just change this to ~0U to create an\nunsigned comparison value.\n\nSince this is about the tests, let's also add explicit tests for those\nvalues really not being negative.\n\nThis fixes \"make tests\" (but not \"make check\" yet), when compiled\nwith -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-2-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecfb438c07fa468a129e81c7d84c7c293c7b0150", "commit_date": "2021-06-15T02:49:23Z", "commit_message": "dtc: Fix signedness comparisons warnings: pointer diff\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in the function get_node_by_path().\n\nTaking the difference between two pointers results in a signed ptrdiff_t\ntype, which mismatches the unsigned type returned by strlen().\nSince \"p\" has been returned by a call to strchr() with \"path\" as its\nargument, we know for sure that it's bigger than \"path\", so the\ndifference must be positive. So a cast to an unsigned type is valid.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-7-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bec74a6d13519381a40b5433ede7849a75a8d79", "commit_date": "2021-06-15T02:48:25Z", "commit_message": "dtc: Fix signedness comparisons warnings: reservednum\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in code using the \"reservednum\" variable.\n\nThere is obviously little sense in having a negative number of reserved\nmemory entries, so let's make this variable and all its users unsigned.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e7f511fd4acaf48d25374f88dbdbdb277e6a26", "commit_date": "2021-06-15T02:35:54Z", "commit_message": "fdtdump: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in fdtdump.c.\n\nThe \"len\" parameter to valid_header() refers to a memory size, not a\nfile offset, so the (unsigned) size_t is better fit, and fixes the\nwarning nicely.\n\nIn the main function we compare the difference between two pointers,\nwhich produces a signed ptrdiff_t type. However the while loop above the\ncomparison makes sure that \"p\" always points before \"endp\" (by virtue of\nthe limit in the memchr() call). This means \"endp - p\" is never\nnegative, so we can safely cast this expression to an unsigned type.\n\nThis fixes \"make fdtdump\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "main": [{"commit_oid": "52157f13ef3d45984ab17fd79bf0d9c69b57ae66", "commit_date": "2023-09-15T06:00:43Z", "commit_message": "pylibfdt: Support boolean properties\n\nBoolean properties are unusual in that their presense or absence\nindicates the value of the property. This makes them a little painful to\nsupport using the existing getprop() support.\n\nAdd new methods to deal with booleans specifically.\n\nSigned-off-by: Simon Glass <sjg@chromium.org>\nMessage-ID: <20230912182716.248253-1-sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d774337275666e013a5930aebace1c6f76e343b1", "commit_date": "2023-09-05T01:44:10Z", "commit_message": "dtc: fix missing string in usage_opts_help\n\nThis fixes the output of the `dtc --help` command as the last few\nentries were offset by one.\n\nSigned-off-by: Charles Perry <charles.perry@savoirfairelinux.com>\nMessage-ID: <20230904143104.1941715-1-charles.perry@savoirfairelinux.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ad8bf9f9aa39625d732b7db16badecc0842750e2", "commit_date": "2023-09-04T05:27:55Z", "commit_message": "libfdt: Fix fdt_appendprop_addrrange documentation\n\nAccording to the documentation, the function should default to the very\ncommon property name <reg> when none is \"specified\". However, neither\npassing NULL (ends up calling strlen(NULL) and segfaults) nor \"\"\n(appends a property with an empty name) implements this behavior.\n\nFurthermore, the test case supposed to cover this default value actually\npasses the value to the function, somewhat defeating its own purpose:\n\n    /* 2. default property name */\n\n    // ...\n\n    err = fdt_appendprop_addrrange(fdt, 0, offset, \"reg\", addr, size);\n    if (err)\n            FAIL(\"Failed to set \\\"reg\\\": %s\", fdt_strerror(err));\n    check_getprop_addrrange(fdt, 0, offset, \"reg\", 1);\n\nFinally, nothing in the implementation of the function seems to attempt\nto cover that use-case.\n\nAs the feature can't ever have been used by clients and as the resulting\nreduced readability of the caller seems (IMO) to outweigh any potential\nbenefit this API would bring, remove the erroneous documentation instead\nof trying to fix the function.\n\nReported-by: Mostafa Saleh <smostafa@google.com>\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-ID: <20230831123918.rf54emwkzgtcb7aw@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c5e189fb9527c4f69f8bd80e34eb24878795c47", "commit_date": "2023-09-03T12:20:35Z", "commit_message": "github: add workflow for Meson builds\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a3dc9f006a783bc0267784772e21a54cb54d85cf", "commit_date": "2023-08-06T04:53:29Z", "commit_message": "libfdt: rename libfdt-X.Y.Z.so to libfdt.so.X.Y.Z\n\nThe Meson build system requires that the generated shared library uses\nthe libfdt.so.X.Y.Z naming scheme. But the Makefile is generating\nlibfdt-X.Y.Z.so. We want to keep the output of both systems the same to\navoid issues, so we rename the Makefile to match Meson.\n\nAdditionally, Meson generates the base \"libfdt.so -> libfdt.so.1\"\nsymlink which the Makefile hasn't been doing, add that as well.\n\nThis shouldn't impact existing users as the linker should be looking for\nlibfdt.so.1 which won't change and will still point to the correct file.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35019949c4c72cfe4d9a95db7108758d2c7944a1", "commit_date": "2023-08-06T04:53:29Z", "commit_message": "workflows: build: remove setuptools_scm hack\n\nThe SETUPTOOLS_SCM_PRETEND_VERSION was needed as ./setup.py would fail\nwithout it. As setuptools_scm will fail if there is not git repo, and\nthe github workflow container does not include the source code git repo.\n\nA previous commit added \"fallback_version\" to setuptools_scm which\ninstructs it to use the version from VERSION.txt when the git repo is\nmissing. So this hack is no longer needed.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd3e2304f4a9c4f725dcc548082ccc6c89d078a4", "commit_date": "2023-08-06T04:53:29Z", "commit_message": "pylibfdt: use fallback version in tarballs\n\nWhen building pylibfdt from the released tarballs[1] setup.py will fail\nwith the following.\n\n> LookupError: setuptools-scm was unable to detect version for dtc.\n> Make sure you're either building from a fully intact git repository or\n> PyPI tarballs. Most other sources (such as GitHub's tarballs, a git\n> checkout without the .git folder) don't contain the necessary metadata\n> and will not work.\n\nseutptools_scm supports a 'fallback_version' that will use the provided\nstring as the version when the git repo is not available.\n\n[1] https://www.kernel.org/pub/software/utils/dtc/dtc-1.7.0.tar.xz\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f5864567745c50e481b132538969b87259891e3", "commit_date": "2023-08-06T04:53:29Z", "commit_message": "move release version into VERSION.txt\n\nTo synchronize the release version of the Makefile and Meson build\nsystems, pull the version info from a shared file.\n\nMeson requires that the shared library version follow the X.Y.Z\nnumbering scheme. But the Makefile supported building shared libraries\nwith an EXTRAVERSION appended, for example X.Y.Z-rc1. We want to keep\nthe output of both systems the same to avoid issues, so we drop support\nfor the Makefile EXTRAVERSION.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "38165954c13bdc0efe40593c252de418e6521fe2", "commit_date": "2023-08-04T08:02:33Z", "commit_message": "libfdt: add missing version symbols\n\nThese symbols were not added to the version script when they were added\nto libfdt.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e98b59793542df2731d5b3e5f13b23529208499", "commit_date": "2023-08-04T08:02:21Z", "commit_message": "editorconfig: use tab indentation for version.lds\n\nThis file is indented with tabs, but editorconfig defaults all files to\nspaces.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d030a893be259795e7f3a791d84c262b6419ce20", "commit_date": "2023-08-04T03:15:08Z", "commit_message": "tests: generate dtbs in Meson build directory\n\nWhen running under Meson, check_tests() is generating dtb build files in\nthe source directory. This is because dtb is named by appending\n\".test.dtb\" to the full source file name.\n\nUse basename to extract just the source filename and write it to the\nworking directory which is the build directory.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8d8372b13706514fada1415cb4b29a0ab0235d07", "commit_date": "2023-08-03T02:31:22Z", "commit_message": "tests: fix use of deprecated meson methods\n\nFixes the following warnings\n\n> tests/meson.build:123: WARNING: Project targets '>=0.56.0' but uses\n  feature deprecated since '0.55.0': ExternalProgram.path. use\n  ExternalProgram.full_path() instead\n> tests/meson.build:124: WARNING: Project targets '>=0.56.0' but uses\n  feature deprecated since '0.56.0': meson.source_root. use\n  meson.project_source_root() or meson.global_source_root() instead.\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "761114effaf7216d8d7fc51d8810f2eb27682db8", "commit_date": "2023-08-03T02:30:55Z", "commit_message": "pylibtfdt: fix use of deprecated meson method\n\nFixes the following warning\n\n> pylibfdt/meson.build:2: WARNING: Project targets '>=0.56.0' but uses\n  feature deprecated since '0.55.0': ExternalProgram.path. use\n  ExternalProgram.full_path() instead\n\nDo not use full_path() as suggested. setup_py is being called as a\ncommand by custom_target() which understands how to properly inherit the\nobject returned by find_program().\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bf6377a98d977116f14c438ff2f20d670b6d247a", "commit_date": "2023-08-02T01:04:09Z", "commit_message": "meson: set minimum Meson version to 0.56.0\n\nSet the minimum required version of Meson based on the highest version\nfeature used, as detected by meson-setup.\n\n* 0.56.0: {'meson.project_build_root'}\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c68e4b16b22a8eb9c2dc39086f25c2d1375d049", "commit_date": "2023-08-01T03:09:19Z", "commit_message": "libfdt: fix library version to match project version\n\nBuild the libfdt with the correct version number by pulling the version\nfrom the top-level project.\n\nChange as suggested from https://github.com/dgibson/dtc/pull/95#issuecomment-1546933095\n\nSigned-off-by: Brandon Maier <brandon.maier@collins.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bdc5c8793a13abb8846d115b7923df87605d05bd", "commit_date": "2023-07-29T03:28:40Z", "commit_message": "meson: allow disabling tests\n\nThe new meson build system support diverges from former build system\nwhere the tests were not built until required.\n\nThis has caused an issue in NixOS[1] due to broken build of tests in\nDarwin platform, so this patch allows the control if tests should be\nbuild or not.\n\n1. https://github.com/NixOS/nixpkgs/pull/235210\n\nSigned-off-by: Otavio Salvador <otavio@ossystems.com.br>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f088e381f29eb09bcd9599a942eb4b77949526f5", "commit_date": "2023-07-29T03:03:56Z", "commit_message": "Makefile: allow to install libfdt without building executables\n\nWhen we only need the libfdt calling the target install-lib also builds the\nexecutables listed in $(BINS) because this target depends on all\nInstead lets make install-lib only depend on libfdt.\n\nSigned-off-by: Nicolas Escande <nico.escande@gmail.com>\nMessage-ID: <20230726144336.677135-1-nico.escande@gmail.com>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6df5328a902cf719495ea8a07da383172e358fff", "commit_date": "2023-07-28T10:55:34Z", "commit_message": "Fix use of <ctype.h> functions\n\nThe value passed to the <ctype.h> functions shall be the value of an unsigned\nchar or EOF.  It is implementation-defined if the char type is signed or\nunsigned.  Cast to unsigned char to avoid undefined behaviour on systems where\nchar is signed.\n\nThis cast is already present in other parts of the code base.\n\nSigned-off-by: Sebastian Huber <sebastian.huber@embedded-brains.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ccf1f62d59adc933fb348b866f351824cdd00c73", "commit_date": "2023-06-08T09:47:51Z", "commit_message": "libfdt: Fix a typo in libfdt.h\n\nThe function mentioned in the comment, fdt_finished(), should be\nchanged to fdt_finish().\n\nSigned-off-by: Yan-Jie Wang <yanjiewtw@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71a8b8ef0adf01af4c78c739e04533a35c1dc89c", "commit_date": "2023-06-01T03:42:50Z", "commit_message": "libfdt: meson: Fix linking on macOS linker\n\n-undefined error is the equivalent of --no-undefined for the macOS\nlinker, but -undefined would also be understood as a valid argument for\nGNU ld so we use the supported linker variant.\n\nSigned-off-by: Otavio Salvador <otavio@ossystems.com.br>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "589d8c7653c75d789c6e47d69a4f5bb089aecd5a", "commit_date": "2023-05-26T11:11:32Z", "commit_message": "dtc: Add an option to generate __local_fixups__ and __fixups__\n\nThis records detailed usage of labels in a dtb. This is needed in\noverlays (and enabled implicitly for these). For ordinary device trees\nit can be used to restore labels when compiling back to dts format.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nMessage-Id: <20230523080941.419330-1-u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8364666d5acc985c434fb574e92c5206d9a8d6b", "commit_date": "2023-05-16T09:30:09Z", "commit_message": "CI: Add build matrix with multiple Linux distributions\n\nset SETUPTOOLS_SCM_PRETEND_VERSION=\"0\" variable because GitHub Actions\ndoes not copy the .git directory into the container. Without that, the\nbuild fails with the following error\n\nLookupError: setuptools-scm was unable to detect version for /__w/dtc/dtc.\nSigned-off-by: Biswapriyo Nath <nathbappai@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b02a94b486f998aa22d898b427820a805d0904f", "commit_date": "2023-05-14T06:27:27Z", "commit_message": "dtc: Correct invalid dts output with mixed phandles and integers\n\nThe handling of \"type preservation\" dts output is based on the idea of\n\"phandles with arguments\" in properties, which isn't really a thing, other\nthan a fairly common convention about how bindings are written.  There's\nnothing preventing a binding which freely mixes phandles and other integers\nin an array of cells.\n\nCurrently write_propval() handles this incorrectly: specifically the case\nof a phandle which follows a regular integer in a 32-bit cell array, but\nwithout a new '< >' delimited causing an extra TYPE_UINT32 marker to be\ninserted.  In this case it omits the necessary space between the integer\nand the phandle reference, leading to output which can't be sent back into\ndtc and parsed.\n\nCorrect this, and update tests to match.  I think this is more or less\ncorrect for now, but really write_propval() is a big mess :(.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4888958d64bd9b3e0e2e6582af665f9b81706c9", "commit_date": "2023-05-14T05:22:37Z", "commit_message": "tests: Add additional tests for device graph checks\n\n* bad-graph-child-address.dts: additional child address test since the\n    one in bad-graph.dts is now shadowed by its prerequisites also\n    failing.\n* bad-graph-reg-cells.dts: test warnings produced by check_graph_reg().\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea3b9a1d2c5af56c602fbfb1585536d5b21cb874", "commit_date": "2023-05-14T05:22:22Z", "commit_message": "checks: Fix crash in graph_child_address if 'reg' cell size != 1\n\nIf an endpoint node has a 'reg' property which consists of more than\none cell (4 bytes) and given that matching '#address-cells' and '#size-cells'\nproperties are specified on the port node an assertion is triggered in\ncheck_graph_child_address() before the relevant diagnostic checks in\ncheck_graph_reg() (called by check_graph_port() and check_graph_endpoint()) are executed.\n\nThe issue is fixed by making graph_child_address depend on the\ngraph_port and graph_endpoint checks.\n\nAdditionally the assertion can also be triggered if the length of the\n'reg' property is less than 4 bytes e.g. by specifying\n'reg = \"a\";'. In that case however other warnings are produced\nhighlighting the malformed property before dtc crashes.\n\nExample dts file triggering the issue:\n\n/dts-v1/;\n / {\n\tbar: bar {\n\t\tport {\n\t\t\tbar_con: endpoint {\n\t\t\t\tremote-endpoint = <&foo_con>;\n\t\t\t};\n\t\t};\n\t};\n\tfoo {\n\t\tport {\n\t\t\t#address-cells = <1>;\n\t\t\t#size-cells = <1>; // should always be 0\n\t\t\tfoo_con: endpoint@1 {\n\t\t\t\treg = <1 2>; // causes assertion failure instead of diagnostic\n\t\t\t\tremote-endpoint = <&bar_con>;\n\t\t\t};\n\t\t};\n\t};\n};\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b2b9671583e9b006e69ec7a748fa168ef0c9dd52", "commit_date": "2023-05-14T05:22:09Z", "commit_message": "livetree: fix off-by-one in propval_cell_n() bounds check\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab481e483061af6fa0023cfa7b7c0378dd944160", "commit_date": "2023-05-14T05:11:32Z", "commit_message": "Add definition for a GitHub Actions CI job\n\nThe job just builds the full configuration on latest Ubuntu\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c88038c9b8ca5515df44c1e86bdc4dfa4946f2b2", "commit_date": "2023-05-14T05:11:32Z", "commit_message": "Drop obsolete/broken CI definitions\n\n(Free) Travis-ci is gone since November 2020, cirrus seems to be\nunreliable showing build breakages unrelated to changes.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ac8b30ba5a112a616d0e9d482546e50bf7a6fdf", "commit_date": "2023-05-14T05:11:32Z", "commit_message": "yaml: Depend on libyaml >= 0.2.3\n\nlibyaml before 0.2.3 expects non-const string parameters. Supporting\nboth variants would require either cpp magic or ignoring\n\"discarded-qualifiers\" compiler warnings. For the sake of simplicity\njust support libyaml 0.2.3 and newer.\n\nNote that NO_YAML can be overwritten on the make command line.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f1657b2fb5be12d85ceb6a50d2db8a006dee830c", "commit_date": "2023-05-07T08:47:40Z", "commit_message": "tests: Add test cases for bad endpoint node and remote-endpoint prop checks\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44bb89cafd3d96b8df0f324b652c7bf804b38c05", "commit_date": "2023-05-07T08:47:31Z", "commit_message": "checks: Fix segmentation fault in check_graph_node\n\nDts files which contain an 'endpoint' node as a direct child of the\nroot node cause a segmentation fault inside check_graph_node(). This\ntype of error can easily happen when a 'remote-endpoint' property is\naccidentally placed outside the corresponding endpoint and port nodes.\n\nExample with 'endpoint' node:\n/dts-v1/;\n/ {\tendpoint {};  };\n\nExample with remote-endpoint property:\n/dts-v1/;\n/ {\n\tfoo {\n                remote-endpoint = <0xdeadbeef>;\n\t};\n};\n\nSigned-off-by: Johannes Beisswenger <johannes.beisswenger@cetitec.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "60bcf1cde1a806fb17dd4c892aff9089f12a8165", "commit_date": "2023-05-03T13:51:15Z", "commit_message": "improve documentation for fdt_path_offset()\n\nThe current documentation doesn't mention the possibility of passing a\nnon-absolute path and having that treated as an alias. Add that\ninformation, along with an example (which will further be expanded in\na subsequent patch), and clarify when -FDT_ERR_BADPATH can be returned.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6f997bc77d4c637308c053ec1632493c7ac437b", "commit_date": "2023-05-03T13:51:08Z", "commit_message": "add fdt_get_symbol() and fdt_get_symbol_namelen() functions\n\nThe fdt_get_symbol_namelen() function will be used in a subsequent\npatch.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18f5ec12a10ec84e957222074dadf4a3e4cc8d59", "commit_date": "2023-05-03T13:51:02Z", "commit_message": "use fdt_path_getprop_namelen() in fdt_get_alias_namelen()\n\nSimplify the code by making use of the new helper.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df093279282ca0cff4d20ceb3bb5857117ed4cc4", "commit_date": "2023-05-03T13:50:55Z", "commit_message": "add fdt_path_getprop_namelen() helper\n\nAdd a wrapper for fdt_getprop_namelen() allowing one to specify the node\nby path instead of offset.\n\nSigned-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "129bb4b78bc6c56ee517a044ba5c9dfc220f899c", "commit_date": "2023-04-29T01:45:10Z", "commit_message": "doc: dt-object-internal: Fix a typo\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nMessage-Id: <20230428163034.775288-1-u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "390f481521c350b99787da830ac8dc37b74d3c9d", "commit_date": "2023-04-28T06:26:39Z", "commit_message": "fdtoverlay: Drop a a repeated article\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <uwe@kleine-koenig.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f8b382ed45e7a3ca114c1a371ce6b6edc4b3ed5", "commit_date": "2023-04-28T06:26:02Z", "commit_message": "manual: Fix and improve documentation about -@\n\nDevice trees with a /plugin/ tag (\"overlays\") generate a __fixups__ node\nwhen needed and independent of -q being given or not. The same is true for\n__local__fixups__. So don't mention these two nodes in the paragraph about\n-@.\n\nTo not shorten the description too much, describe the semantic of the\nproperties contained in the generated __symbols__ node.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cdf93a6d402a161edf16de6011bd5ad76382e92", "commit_date": "2023-03-18T01:59:46Z", "commit_message": "fdtoverlay: Fix usage string to not mention \"<type>\"\n\nfdtoverlay doesn't have a -t option, so explaining the type formats and\nmodifier prefixes doesn't make much sense.\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nMessage-Id: <20230315100819.13387-1-u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72fc810c3025f07de718f5f32a290a6cd5d1f4ee", "commit_date": "2023-03-01T07:43:15Z", "commit_message": "build-sys: add -Wwrite-strings\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "083ab26da83bf5d14df5733e3b9954a0881f9ecc", "commit_date": "2023-03-01T07:43:15Z", "commit_message": "tests: fix leaks spotted by ASAN\n\nAlways allocate from open_blob_rw(), to simplify memory management.\n\nThe fixes are not exhaustive.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f8b28f496093156ae126b434ed753094943da03", "commit_date": "2023-03-01T07:43:15Z", "commit_message": "livetree: fix leak spotted by ASAN\n\n./dtc -I dts -O dtb -o overlay_base_manual_symbols.test.dtb /home/elmarco/src/dtc/tests/overlay_base_manual_symbols.dts\n../data.c:109:2: runtime error: null pointer passed as argument 2, which is declared to never be null\n\n=================================================================\n==933317==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f49a2aba6af in __interceptor_malloc (/lib64/libasan.so.8+0xba6af)\n    #1 0x43183d in xmalloc ../util.h:45\n    #2 0x43482f in data_add_marker ../data.c:230\n    #3 0x449bb8 in get_node_phandle ../livetree.c:632\n    #4 0x421058 in fixup_phandle_references ../checks.c:627\n    #5 0x41b0ba in check_nodes_props ../checks.c:141\n    #6 0x41b1c8 in check_nodes_props ../checks.c:144\n    #7 0x41b9f1 in run_check ../checks.c:181\n    #8 0x430a68 in process_checks ../checks.c:2057\n    #9 0x436abd in main ../dtc.c:327\n    #10 0x7f49a30d850f in __libc_start_call_main (/lib64/libc.so.6+0x2750f)\n\nOnly create data when necessary, and do not alias it.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\n[dwg: Small fixup for a slightly different approach to adjacent cleanups]\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd68bb8c56587114fa6eeed39c36c4b347a6a5fc", "commit_date": "2023-03-01T06:55:35Z", "commit_message": "Make name_node() xstrdup its name argument\n\nThe name field of 'struct node' was really always supposed to be a\nmalloc()ed string, that is owned by the structure.  To avoid an extra\nstrdup() for strings coming up from the lexer, name_node() expects to take\nuch an already malloc()ed string, which means it's not correct to pass it\na static string literal.\n\nThat's a pretty non-obvious constraint, so a bunch of incorrect uses have\ncrept in.  Really, avoiding the extra dup from the lexer isn't a big enough\nbenefit for this demonstrably dangerous interface.  So change it to do the\nxstrdup() itself, removing the burden from callers.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4718189c4ca83ddaa38a4990bddd1d4196b11933", "commit_date": "2023-03-01T06:53:27Z", "commit_message": "Delay xstrdup() of node and property names coming from a flat tree\n\nThe 'name' field of 'struct node' is supposed to be an (individually)\nmalloc()ed string.  So, when taking a name from a flattened blob we need\nto strdup() it.\n\nCurrently that happens in flat_read_string() as we take it from the\nflattened structure itself.  That obscures what's going on because it's\nseveral steps removed from actually inserting it into node->name.  It also\nmeans we need an additional strdup() and free() for the case of old dtb\nformats where we need to extract just the final path component from the\nblob for the name.\n\nWhile we're scanning the blob, we're doing so read-only, so it's fine to\nhave pointers into it.  Therefore simplify things a bit by delaying the\nxstrdup() to the point where we're actually inserting into node->name.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b842c3c819971cdbe0915469759c40f6eb3db7e", "commit_date": "2023-03-01T06:47:27Z", "commit_message": "Make build_property() xstrdup its name argument\n\nThe name field of 'struct property' was really always supposed to be a\nmalloc()ed string, that is owned by the structure.  To avoid an extra\nstrdup() for strings coming up from the lexer, build_property() and\nbuild_property_delete() expect to take such an already malloc()ed string,\nwhich means it's not correct to pass it a static string literal.\n\nThat's a pretty non-obvious constraint, so a bunch of incorrect uses have\ncrept in.  Really, avoiding the extra dup from the lexer isn't a big enough\nbenefit for this demonstrably dangerous interface.  So change it to do the\nxstrdup() itself, removing the burden from callers.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9cceabea1ee09ae0864d365b7b3cc89a01b1287c", "commit_date": "2023-03-01T05:08:28Z", "commit_message": "checks: correct I2C 10-bit address check\n\nCurrently if there is a valid 10-bit address the following warning is\nalways displayed due to the 7-bit check failing due to reg > 0x7f\n\n\"I2C address must be less than 7-bits, got \"0x800000a6\". Set I2C_TEN_BIT_ADDRESS for 10 bit addresses or fix the property\"\n\nFix this issue by checking if a 10-bit address is expected, and is valid in separate if statements.\n\nFixes: 8259d59f (\"checks: Improve i2c reg property checking\")\nSigned-off-by: Matt Ranostay <matt.ranostay@konsulko.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d56145938fe5299c7a4fe0342fe8ba80698d564", "commit_date": "2023-03-01T05:02:36Z", "commit_message": "yamltree.c: fix -Werror=discarded-qualifiers & -Werror=cast-qual\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61fa22b05f693df1e4f7760ad8681b17bd8ae410", "commit_date": "2023-03-01T05:01:37Z", "commit_message": "checks: make check.data const\n\nFixes:\n../checks.c:47:25: error: initialization discards \u2018const\u2019 qualifier from pointer target type [-Werror=discarded-qualifiers]\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a1d72a788e06ed899095a892315d6cce5994a8e", "commit_date": "2023-03-01T04:57:03Z", "commit_message": "checks.c: fix check_msg() leak\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee5799938697db66ed93bbb0e474d389de58185d", "commit_date": "2023-03-01T04:56:29Z", "commit_message": "checks.c: fix heap-buffer-overflow\n\n./dtc -I dts -O dtb -o aliases.dtb /home/elmarco/src/dtc/tests/aliases.dts\n=================================================================\n==882911==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000113 at pc 0x7f34ba0abf50 bp 0x7ffc8db22450 sp 0x7ffc8db21c00\nREAD of size 4 at 0x602000000113 thread T0\n    #0 0x7f34ba0abf4f in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) (/lib64/libasan.so.8+0xabf4f)\n    #1 0x7f34ba0ac5e8 in memcmp (/lib64/libasan.so.8+0xac5e8)\n    #2 0x4282dc in check_spi_bus_bridge ../checks.c:1110\n    #3 0x41b08d in check_nodes_props ../checks.c:140\n    #4 0x41b9c4 in run_check ../checks.c:180\n    #5 0x430a3b in process_checks ../checks.c:2056\n    #6 0x436a90 in main ../dtc.c:327\n    #7 0x7f34b964a50f in __libc_start_call_main (/lib64/libc.so.6+0x2750f)\n    #8 0x7f34b964a5c8 in __libc_start_main@GLIBC_2.2.5 (/lib64/libc.so.6+0x275c8)\n    #9 0x4025c4 in _start (/home/elmarco/src/dtc/build/dtc+0x4025c4)\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44c9b73801c1e02e95b533a3cb498ab8c532e98b", "commit_date": "2023-03-01T04:37:19Z", "commit_message": "tests: fix -Wwrite-strings\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b60f5104fccb12964632b07a49011a222522d84", "commit_date": "2023-03-01T04:36:40Z", "commit_message": "srcpos.c: fix -Wwrite-strings\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "32174a66efa4ad19fc6a2a6422e4af2ae4f055cb", "commit_date": "2023-02-27T23:33:58Z", "commit_message": "meson: Fix cell overflow tests when running from meson\n\nBecause meson always builds out-of-tree we need to reference things in the\noriginal source tree via $SRCDIR from run_tests.sh.  We forgot a couple of\ncases for the cell overflow tests.  Fix them.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64a907f08b9bedd89833c1eee674148cff2343c6", "commit_date": "2023-02-27T22:50:20Z", "commit_message": "meson.build: bump version to 1.7.0\n\n[This was botched in the actual 1.7.0 release :( - David Gibson]\n\nSigned-off-by: Nikolay Letov <letov.nikolay@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3cde0613bfdd59d525770bc0e15c54e58b08412", "commit_date": "2023-02-27T08:18:35Z", "commit_message": "Add -Wsuggest-attribute=format warning, correct warnings thus generated\n\nAdd this new warning to the default build flags.  It suggests adding\na ((format)) attribute to xavsprintf_append(), so do that.\n\nSuggested-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41821821101ad8a9f83746b96b163e5bcbdbe804", "commit_date": "2023-02-27T08:01:23Z", "commit_message": "Use #ifdef NO_VALGRIND\n\nUsing simply #if will fail when NO_VALGRIND is undefined.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "71c19f20b3ef780c17c97e3495c584532c1c6921", "commit_date": "2023-02-27T08:00:17Z", "commit_message": "Do not redefine _GNU_SOURCE if already set\n\nOr else, compilation will fail.\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "039a99414e778332d8f9c04cbd3072e1dcc62798", "commit_date": "2023-02-09T10:01:35Z", "commit_message": "Bump version to v1.7.0\n\nIt's been rather too long since the last release, and quite a lot of\nchanges have accumulated.  Finally get around to rolling a release.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b62ec84bb2da0ce42bc978ce8dc0ba197c9fa71", "commit_date": "2023-02-05T06:34:50Z", "commit_message": "Merge remote-tracking branch 'gitlab/main'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f29d6d85c244ad3a74f3b516075d52c0ff35ea6", "commit_date": "2023-02-05T06:29:25Z", "commit_message": "pylibfdt: add size_hint parameter for get_path\n\nThis also enables us to test the -NOSPACE condition by adding a test\nsetting size_hint=1 so this path is taken.\n\nMessage-Id: <20230201181112.1644842-1-luca@z3ntu.xyz>\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2022bb10879d8716d3e01468fd2fcea8ff28c803", "commit_date": "2023-02-02T06:46:54Z", "commit_message": "checks: Update #{size,address}-cells check for 'dma-ranges'\n\nThe \"dma-ranges\" property value is a sequence of\n\tchild-address  parent-address  child-size\n\nThe size of each field is determined by taking the child's\n\"#address-cells\" value, the parent's \"#address-cells\" value,\nand the child's \"#size-cells\" value.\n\nHowever, in the following example, it gives a false alarm:\n+-----------------------------------+---------------------------------------+\n| ranges.dts                        | dma-ranges.dts                        |\n+-----------------------------------+---------------------------------------+\n| /dts-v1/;                         | /dts-v1/;                             |\n|                                   |                                       |\n| /{                                | /{                                    |\n|   #address-cells = <1>;           |   #address-cells = <1>;               |\n|                                   |                                       |\n|   parent {                        |   parent {                            |\n|     #address-cells = <1>;         |     #address-cells = <1>;             |\n|     #size-cells = <1>;            |     #size-cells = <1>;                |\n|     ranges = <0x0 0xe000 0x1000>; |     dma-ranges = <0x0 0xe000 0x1000>; |\n|     child {                       |     child {                           |\n|       ...                         |       ...                             |\n|     };                            |     };                                |\n|   };                              |   };                                  |\n| };                                | };                                    |\n+-----------------------------------+---------------------------------------+\n| no warning                        | Warning (avoid_unnecessary_addr_size) |\n+-----------------------------------+---------------------------------------+\n\nSame as \"ranges\", it should not be reported in this check.\n\nSigned-off-by: Qun-Wei Lin <qun-wei.lin@mediatek.com>\nMessage-Id: <20230112125654.13390-1-qun-wei.lin@mediatek.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abbd523bae6e75545ccff126a4a47218ec0defab", "commit_date": "2023-02-02T05:32:47Z", "commit_message": "pylibfdt: Work-around SWIG limitations with flexible arrays\n\nCommit a41509bea3e7 (\"libfdt: Replace deprecated 0-length arrays with\nproper flexible arrays\") fails to build pylibfdt:\n\n./pylibfdt/libfdt_wrap.c: In function \u2018_wrap_fdt_node_header_name_set\u2019:\n./pylibfdt/libfdt_wrap.c:4350:18: error: cast specifies array type\n 4350 |     arg1->name = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                  ^\n./pylibfdt/libfdt_wrap.c:4350:16: error: invalid use of flexible array member\n 4350 |     arg1->name = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                ^\n./pylibfdt/libfdt_wrap.c:4352:16: error: invalid use of flexible array member\n 4352 |     arg1->name = 0;\n      |                ^\n./pylibfdt/libfdt_wrap.c: In function \u2018_wrap_fdt_property_data_set\u2019:\n./pylibfdt/libfdt_wrap.c:4613:18: error: cast specifies array type\n 4613 |     arg1->data = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                  ^\n./pylibfdt/libfdt_wrap.c:4613:16: error: invalid use of flexible array member\n 4613 |     arg1->data = (char [])(char *)memcpy(malloc((size)*sizeof(char)), (const char *)(arg2), sizeof(char)*(size));\n      |                ^\n./pylibfdt/libfdt_wrap.c:4615:16: error: invalid use of flexible array member\n 4615 |     arg1->data = 0;\n      |                ^\n\nTurns out this is known issue with SWIG: https://github.com/swig/swig/issues/1699\n\nImplement the work-around to ignore the flexible array member.\n\nFixes: a41509bea3e7 (\"libfdt: Replace deprecated 0-length arrays with proper flexible arrays\")\nCc: Kees Cook <keescook@chromium.org>\nCc: Simon Glass <sjg@chromium.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20230201224441.305757-1-robh@kernel.org>\nReviewed-by: Simon Glass <sjg@chromium.org>\nTested-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a41509bea3e73b8dc63bf666a82275bc7d040266", "commit_date": "2023-01-29T03:42:57Z", "commit_message": "libfdt: Replace deprecated 0-length arrays with proper flexible arrays\n\nReplace the 0-length arrays in structures with proper flexible\narrays. This will avoid warnings when building under GCC 13 with\n-fstrict-flex-arrays, which the Linux kernel will be doing soon:\n\nIn file included from ../lib/fdt_ro.c:2:\n../lib/../scripts/dtc/libfdt/fdt_ro.c: In function 'fdt_get_name':\n../lib/../scripts/dtc/libfdt/fdt_ro.c:319:24: warning: 'strrchr' reading 1 or more bytes from a region of size 0 [-Wstringop-overread]\n  319 |                 leaf = strrchr(nameptr, '/');\n      |                        ^~~~~~~~~~~~~~~~~~~~~\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cd89f862cdb04d91c5d59c5b39647f7d5d5b3b8", "commit_date": "2022-11-21T03:18:44Z", "commit_message": "dtc: Warning rather than error on possible truncation of cell values\n\nWe always evaluate integer values in cell arrays as 64-bit quantities, then\ntruncate to the size of the array cells (32-bit by default).  However to\ndetect accidental truncation of meaningful values, we give an error if the\ntruncated portion isn't either all 0 or all 1 bits.  However, this can\nstill give counterintuitive errors.  For if the user is thinking in 2's\ncomplement 32-bit arithmetic (which would be quite natural), then they'd\nexpect the expression (-0xffffffff-2) to evaluate to -1 (0xffffffff).\nHowever in 64-bit it evaluates to 0xfffffffeffffffff which does truncate\nto the expected value but trips this error message.\n\nBecause of this reduce the error to only a warnings, with a somewhat more\nhelpful message.\n\nFixes: https://github.com/dgibson/dtc/issues/74\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55778a03df61623ddd743b04772ab90ce128db61", "commit_date": "2022-10-11T23:49:36Z", "commit_message": "libfdt: tests: add get_next_tag_invalid_prop_len\n\nAdd a new test get_next_tag_invalid_prop_len, which covers\nfdt_next_tag(), when it is passed an corrupted blob, with\ninvalid property len values. The test runs twice, on a blob\nin sw and finished state.\n\nSigned-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nMessage-Id: <20221011182611.116011-2-tadeusz.struk@linaro.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "73590342fc85ca207ca1e6cbc110179873a96962", "commit_date": "2022-10-11T23:49:36Z", "commit_message": "libfdt: prevent integer overflow in fdt_next_tag\n\nSince fdt_next_tag() in a public API function all input parameters,\nincluding the fdt blob should not be trusted. It is possible to forge\na blob with invalid property length that will cause integer overflow\nduring offset calculation. To prevent that, validate the property length\nread from the blob before doing calculations.\n\nSigned-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nMessage-Id: <20221005232931.3016047-1-tadeusz.struk@linaro.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "035fb90d537540a5fbf24569df74aec667704e4d", "commit_date": "2022-10-11T23:49:36Z", "commit_message": "libfdt: add fdt_get_property_by_offset_w helper\n\nAdd a new fdt_get_property_by_offset_w helper function.\nIt is a wrapper on fdt_get_property_by_offset that returns\na writable pointer to a property at a given offset.\n\nSigned-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nMessage-Id: <20221011182611.116011-1-tadeusz.struk@linaro.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98a07006c48dc0bc3f42b3b3ce75b7f03e87e724", "commit_date": "2022-09-26T05:22:05Z", "commit_message": "Makefile: fix infinite recursion by dropping non-existent `%.output`\n\nWithout the change GNU `make-4.4` falls into infinite recursion of trying\nto generate %.output files (bison is not passed flags to generate debug\noutput).\n\nThis happens on GNU `make-4.4` only after GNU make change to more eagerly\nrebuild all target outputs in multiple targets:\n    https://savannah.gnu.org/bugs/index.php?63098\n\nThe recursion here is the following:\n\n- Makefile depends on *.d files\n- *.d files depend on *.c files\n- *.c files are generated by bison\n- bison is triggered whenever some of it's multiple targets are missing\n\nIn our case `%.output` is always missing and bison is always reran.\n*.d files are always regenerated on `make` run. And make is always\nrestarted as *.d files are always regenerated.\n\nThe fix removes infeasible `%.output`.\n\nSigned-off-by: Sergei Trofimovich <slyich@gmail.com>\nMessage-Id: <20220925104203.648449-2-slyich@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a036cc7b0c10474a4cf1cdbe0e232e637e1f2edd", "commit_date": "2022-09-26T05:22:05Z", "commit_message": "Makefile: limit make re-execution to avoid infinite spin\n\nmake-4.4 became intentionally more eager at rebuilding outdated Makefile\nincludes. Currently this causes `dtc` to spin infinitely in\nparser/dependency loop:\n\n    $ make\n    ...\n        CHK version_gen.h\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n        CHK version_gen.h\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n    ... # never stops\n\nAfter the change build eventually fails when gets into this state:\n\n    $ make\n    ...\n        CHK version_gen.h\n        UPD version_gen.h\n         DEP util.c\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n        CHK version_gen.h\n         BISON dtc-parser.tab.h\n         DEP dtc-lexer.lex.c\n         DEP dtc-parser.tab.c\n    Makefile:394: *** \"Make re-executed itself 10 times. Infinite recursion?\".  Stop.\n\nThe actual recursion will be fixed separately.\n\nSigned-off-by: Sergei Trofimovich <slyich@gmail.com>\nMessage-Id: <20220925104203.648449-1-slyich@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6e92108bcd9c13ebbbcab44a49fa5f39c21621e", "commit_date": "2022-09-16T09:02:06Z", "commit_message": "libdtc: remove duplicate judgments\n\nThere is no need to check the VALID_DTB repeatedly, and can be combined\ninto one if statement.\n\nSigned-off-by: Jia Xianhua <jiaxianhua@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e37c25677dc946a025002a394172788b3169b3ce", "commit_date": "2022-07-31T12:10:05Z", "commit_message": "Don't generate erroneous fixups from reference to path\n\nThe dtb overlay format only permits (non local) fixups to reference labels,\nnot paths.  That's because the fixup target goes into the property name in\nthe overlay, and property names aren't permitted to include '/' characters.\n\nStop erroneously generating such fixups, because we didn't check for this\ncase.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50454658f2b5c8968ccd7856d94020c893a4be46", "commit_date": "2022-07-30T03:52:33Z", "commit_message": "libfdt: Don't mask fdt_get_name() returned error\n\nReturn the error code from fdt_get_name() (contained in len when the\nresult is NULL) instead of masking it with FDT_ERR_BADSTRUCTURE.\n\nFixes: fda71da26e7f (\"libfdt: Handle failed get_name() on BEGIN_NODE\")\nReported-by: Mike McTernan <mikemcternan@google.com>\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220729130019.804288-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e64a204196c924288b8bcd741d969160cd9ac6d9", "commit_date": "2022-07-30T03:50:27Z", "commit_message": "manual.txt: Follow README.md and remove Jon\n\nFollowing 0ee1d479b23a (\"Remove Jon Loeliger from maintainers list\"),\nmake the \"Submitting Patches\" section of the manual.txt consistent with\nthe README by requesting patches to only be sent to David.\n\nCc: Jon Loeliger <loeliger@gmail.com>\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220729131019.806164-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f508c83fe6f0c58a59132bd3a0887aebfcd6b16f", "commit_date": "2022-07-30T03:42:39Z", "commit_message": "Update README in MANIFEST.in and setup.py to README.md\n\nSigned-off-by: Saad Waheed <saad.waheed@10xengineers.ai>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c2ccf8a77dd296e3723e285a5b556da709f09020", "commit_date": "2022-07-29T02:55:15Z", "commit_message": "Add description of Signed-off-by lines\n\ndtc and libfdt have been using Signed-off-by lines (as used in the Linux\nkernel) for some time, like a lot of open source projects.  However\nUwe Kleine-K\u00f6nig pointed out we never really stated what they mean in our\ncontext.\n\nAdd information on what the S-o-b line means in CONTRIBUTING.md - this is\nessentially a quote of the same information from the kernel documentation,\nwith some tweaks to make sense in the new context.\n\nSuggested-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>\nAcked-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90b9d9de42caa136436652f63407a50c9641c00f", "commit_date": "2022-07-28T06:25:56Z", "commit_message": "Split out information for contributors to CONTRIBUTING.md\n\nREADME.md covers both general information for people using and building\nthe software, and more specific information for people contributing to\neither dtc or libfdt.  Split out the latter information into its own file\nfor easier reference.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ee1d479b23a35dbcf9a756b5c9437ac6cf12dcf", "commit_date": "2022-07-28T06:16:08Z", "commit_message": "Remove Jon Loeliger from maintainers list\n\nJon hasn't been actively working on dtc maintenance for some years.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33a73c62c1cd1e6062dc5416037accdc8a90b5e", "commit_date": "2022-07-28T06:15:06Z", "commit_message": "Convert README to README.md\n\nLet's move vaguely into the twenty-first century by converting our old\nplain text README file to Markdown.  While we're updating the formatting,\nmake some small polish changes to the content.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ad60734b1c1ac12856674fa7913fc9492dc5d28", "commit_date": "2022-07-27T06:38:45Z", "commit_message": "Allow static building with meson\n\nAdded \"static-build\" option in the meson_options.txt.\nSetting it to \"true\" allows static building.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163557.932298-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd9b8c96c780c90dd0f1af46963bf2c52de1f0a6", "commit_date": "2022-07-27T06:35:29Z", "commit_message": "Allow static building with make\n\nSet STATIC_BUILD=1 environment variable to enable static building\nwhen using makefiles.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163531.932281-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fda71da26e7fa00966a58afeb2114269b5512e59", "commit_date": "2022-07-26T11:46:18Z", "commit_message": "libfdt: Handle failed get_name() on BEGIN_NODE\n\nValidate the return value of fdt_get_name() as an ill-formed DT, causing\nit to fail, could result in fdt_check_full() dereferencing NULL.\n\nfixes: a2def5479950 (\"libfdt: Check that the root-node name is empty\")\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220714083848.958492-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7c7f17a83d5ec1049ddfcaf22f40fcdc53ac0c4", "commit_date": "2022-07-26T11:39:07Z", "commit_message": "Fix test script to run also on dash shell\n\n/bin/sh points to dash instead of bash in some linux distros.\nOne test would fail if dash was used, this fix will allow all tests\nto run properly on dash too.\n\ndash built-in printf does not support \"\\xNN\" -hex escape format.\n\"\\NNN\" -octal escape format is supported by both bash and dash printf.\n\nReplaced \"$(echo \"$expect\")\" because this actually runs /bin/echo\ninstead of shell internal echo and in some cases causes \"\\NNN\" escapes\nto be printed as the actual characters they represent instead of the\nescape sequence itself.\n\nCosmetic quotes added to make printout a bit clearer.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220704073722.1075849-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f23ffe1679bc8009fa14b7d8d728f317d053ea", "commit_date": "2022-07-02T06:37:02Z", "commit_message": "Add missing relref_merge test to meson test list\n\nWill remove one \"Strange test result\" when running tests with\nmeson\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163114.932175-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed310803ea893ed0a8bba9c4ff0d9eb0063a8bef", "commit_date": "2022-04-20T02:55:14Z", "commit_message": "pylibfdt: add FdtRo.get_path()\n\nAdd a new Python method wrapping fdt_get_path() from the C API.\n\nAlso add a test for the new method.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20220419194537.63170-1-luca@z3ntu.xyz>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c001fc01a43e7a06447c06ea3d50bd60641322b8", "commit_date": "2022-02-04T07:52:36Z", "commit_message": "pylibfdt: fix swig build in install\n\nA 'pip install' is silently broken unless the tree is dirty and contains\npylibfdt/libfdt.py. The problem is a known issue[1] with SWIG and\nsetuptools where the 'build_py' stage needing module.py runs before\nthe 'build_ext' stage which generates it. The work-around is to override\n'build_py' to run 'build_ext' first.\n\n[1] https://stackoverflow.com/questions/50239473/building-a-module-with-setuptools-and-swig\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20220203180408.611645-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "26c54f840d2340271f305c04f0d66bafac93274f", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "tests: add test cases for label-relative path references\n\nNewly added &{label/path} feature doesn't yet have any tests. Add some.\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec7986e682cf9a5078bdbad341feb807a56b21e0", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "dtc: introduce label relative path references\n\nReference via label allows extending nodes with compile-time checking of\nwhether the node being extended exists. This is useful to catch\nrenamed/removed nodes after an update of the device trees to be extended.\n\nIn absence of labels in the original device trees, new style path\nreferences can be used:\n\n  /* upstream device tree */\n  / {\n\tleds: some-non-standard-led-controller-name {\n\t\tled-0 {\n\t\t\tdefault-state = \"off\";\n\t\t};\n\t};\n  };\n\n  /* downstream device tree */\n  &{/some-non-standard-led-controller-name/led-0} {\n\tdefault-state = \"on\";\n  };\n\nThis is a common theme within the barebox bootloader[0], which extends the\nupstream (Linux) device trees in that manner. The downside is that,\nespecially for deep nodes, these references can get quite long and tend to\nbreak often due to upstream rework (e.g. rename to adhere to bindings).\n\nOften there is a label a level or two higher that could be used. This\npatch allows combining both a label and a new style path reference to\nget a compile-time-checked reference, which allows rewriting the\nprevious downstream device tree snippet to:\n\n  &{leds/led-0} {\n\tdefault-state = \"on\";\n  };\n\nThis won't be broken when /some-non-standard-led-controller-name is\nrenamed or moved while keeping the label. And if led-0 is renamed, we\nwill get the expected compile-time error.\n\nOverlay support is skipped for now as they require special support: The\nlabel and relative path parts need to be resolved at overlay apply-time,\nnot at compile-time.\n\n[0]: https://www.barebox.org/doc/latest/devicetree/index.html\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "651410e54cb9a478f2fbb16cb493a5e7808ad8fe", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "util: introduce xstrndup helper\n\nWe already have xstrdup, add xstrndup as well to make it\nstraight-forward to clone part of a string.\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4048aed12b81c5a0154b9af438edc99ec7d2b6a1", "commit_date": "2022-01-03T23:48:59Z", "commit_message": "setup.py: fix out of tree build\n\nFixes: commit 1cc41b1c9 (\"pylibfdt: Add packaging metadata\")\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20220103073855.1468799-3-marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff5afb96d0c08133b6f709a197b8bda023531757", "commit_date": "2021-12-29T06:04:18Z", "commit_message": "Handle integer overflow in check_property_phandle_args()\n\nIf the corresponding '#xxx-cells' value is much too large, an integer\noverflow can prevent the checks in check_property_phandle_args() from\ncorrectly determining that the checked property is too short for the\ngiven cells value.  This leads to an infinite loops.\n\nThis patch fixes the bug, and adds a testcase for it.  Further\ninformation in https://github.com/dgibson/dtc/issues/64\n\nReported-by: Anciety <anciety@pku.edu.cn>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca7294434309930076ff99ff4f0c817499f50f5a", "commit_date": "2021-12-28T09:14:05Z", "commit_message": "README: Explain how to add a new API function\n\nThis is not obvious so add a little note about it.\n\nSigned-off-by: Simon Glass <sjg@chromium.org>\nMessage-Id: <20211107224346.3181320-2-sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0c2e115f82ed3bc5f9d3f9e5380f0f7e81a1c21", "commit_date": "2021-12-28T09:11:11Z", "commit_message": "Fix a UB when fdt_get_string return null\n\nWhen fdt_get_string return null, `namep` is not correctly reset.\nFrom the document of `fdt_getprop_by_offset`, the parameter `namep` will\nbe always overwritten (that is, it will be overwritten without exception\nof error occurance).\n\nAs for the caller (like\nhttps://github.com/topjohnwu/Magisk/blob/e097c097feb881f6097b6d1dc346f310bc92f5d6/native/jni/magiskboot/dtb.cpp#L42),\nthe code may be like:\n```cpp\nsize_t size;\nconst char *name;\nauto *value = fdt_getprop_by_offset(fdt, prop, &name, &size);\n```\nand if `value == nullptr`, `size` is also be overwritten correctly but\n`name` is not, which is quite inconsistent.\n\nThis commit makes sure `name` and `size` behavior consistently (reset to\nreasonable value) when error occurs.\n\nSigned-off-by: LoveSy <shana@zju.edu.cn>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd5f69cbc0d4bc34a509b5f6f62234e25893b684", "commit_date": "2021-12-28T09:10:57Z", "commit_message": "tests: setprop_inplace: use xstrdup instead of unchecked strdup\n\nThis is the only strdup instance we have, all others are xstrdup. As\nstrdup is _POSIX_C_SOURCE >= v200809L, which we don't require and we\ndon't check strdup error return here, switch to xstrdup instead. This\naligns the test with others that call xfuncs, mainly xmalloc().\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a04f69025003890be265e007238dc91041e5529b", "commit_date": "2021-12-28T04:30:33Z", "commit_message": "pylibfdt: add Property.as_*int*_array()\n\nAdd new methods to handle decoding of int32, uint32, int64 and uint64\narrays.\n\nAlso add tests for the new methods.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211225132558.167123-3-luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83102717d7c4171aeb2d26941fa1ee2997bf4a7d", "commit_date": "2021-12-28T04:29:31Z", "commit_message": "pylibfdt: add Property.as_stringlist()\n\nAdd a new method for decoding a string list property, useful for e.g.\nthe \"reg-names\" property.\n\nAlso add a test for the new method.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211225132558.167123-2-luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d152126bb0293c321cae437bdf7437c393ee3619", "commit_date": "2021-12-26T04:44:32Z", "commit_message": "Fix Python crash on getprop deallocation\n\nFatal Python error: none_dealloc: deallocating None\nPython runtime state: finalizing (tstate=0x000055c9bac70920)\n\nCurrent thread 0x00007fbe34e47740 (most recent call first):\n  <no Python frame>\nAborted (core dumped)\n\nThis is caused by a missing Py_INCREF on the returned Py_None, as\ndemonstrated e.g. in https://github.com/mythosil/swig-python-incref or\ndescribed at https://edcjones.tripod.com/refcount.html (\"Remember to\nINCREF Py_None!\")\n\nA PoC for triggering this crash is uploaded to\nhttps://github.com/z3ntu/pylibfdt-crash .\nWith this patch applied to pylibfdt the crash does not happen.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211224102811.70695-1-luca@z3ntu.xyz>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17739b7ef510917471409d71fb45d8eaf6a1e1fb", "commit_date": "2021-12-09T06:48:58Z", "commit_message": "Support 'r' format for printing raw bytes with fdtget\n\nFT is sometimes used for storing raw data. That is quite common for\nU-Boot FIT images.\n\nExtracting such data is not trivial currently. Using type 's' (string)\nwill replace every 0x00 (NUL) with 0x20 (space). Using type 'x' will\nprint bytes but in xxd incompatible format.\n\nThis commit adds support for 'r' (raw) format. Example usage:\nfdtget -t r firmware.itb /images/foo data > image.raw\n\nSupport for encoding isn't added as there isn't any clean way of passing\nbinary data as command line argument.\n\nSigned-off-by: Rafa\u0142 Mi\u0142ecki <rafal@milecki.pl>\nMessage-Id: <20211209061420.29466-1-zajec5@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45f3d1a095dd3440578d5c6313eba555a791f3fb", "commit_date": "2021-11-18T05:25:10Z", "commit_message": "libfdt: overlay: make overlay_get_target() public\n\nThis is done to get the target path for the overlay nodes which is very useful\nin many cases. For example, Xen hypervisor needs it when applying overlays\nbecause Xen needs to do further processing of the overlay nodes, e.g. mapping of\nresources(IRQs and IOMMUs) to other VMs, creation of SMMU pagetables, etc.\n\nSigned-off-by: Vikram Garhwal <fnu.vikram@xilinx.com>\nMessage-Id: <1637204036-382159-2-git-send-email-fnu.vikram@xilinx.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c19a4bafa514c2c85876f0de35782abd11bed7ec", "commit_date": "2021-11-17T01:22:53Z", "commit_message": "libfdt: fix an incorrect integer promotion\n\nUINT32_MAX is an integer of type unsigned int. UINT32_MAX + 1 overflows\nunless explicitly computed as unsigned long long. This led to some\ninvalid addresses being treated as valid.\n\nCast UINT32_MAX to uint64_t explicitly.\n\nSigned-off-by: Elvira Khabirova <e.khabirova@omp.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cc41b1c969f1fa5090b166397e4bab4ab1aa449", "commit_date": "2021-11-12T04:58:23Z", "commit_message": "pylibfdt: Add packaging metadata\n\nPyPI expects to have various package metadata including long\ndescription, license, and classifiers. Add them.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211112041633.741598-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db72398cd4371324901e8ff54980543e0139c1b9", "commit_date": "2021-11-12T04:58:23Z", "commit_message": "README: Update pylibfdt install instructions\n\nNow that pip is supported for installs, update the install instructions to\nuse it. Using pip over setup.py is generally recommended and simpler.\n\nAlso, drop 'SETUP_PREFIX' as it doesn't exist anywhere.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211112041633.741598-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "383e148b70a47ab15f97a19bb999d54f9c3e810f", "commit_date": "2021-11-12T01:45:46Z", "commit_message": "pylibfdt: fix with Python 3.10\n\nSince Python 2.5 the argument parsing functions when parsing expressions\nsuch as s# (string plus length) expect the length to be an int or a\nssize_t, depending on whether PY_SSIZE_T_CLEAN is defined or not.\n\nPython 3.8 deprecated the use of int, and with Python 3.10 this symbol\nmust be defined and ssize_t used[1].\n\nDefine the magic symbol when building the extension, and cast the ints\nfrom the libfdt API to ssize_t as appropriate.\n\n[1] https://docs.python.org/3.10/whatsnew/3.10.html#id2\n\nSigned-off-by: Ross Burton <ross.burton@arm.com>\nMessage-Id: <20211111160536.2516573-1-ross.burton@arm.com>\n[dwg: Adjust for new location of setup.py]\nTested-by: Rob Herring <robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23b56cb7e18992650c79a04c9e4e3f2740bc1fbd", "commit_date": "2021-11-11T03:34:51Z", "commit_message": "pylibfdt: Move setup.py to the top level\n\nUsing 'pip' and several setup.py sub-commands currently don't work with\npylibfdt. The primary reason is Python packaging has opinions on the\ndirectory structure of repositories and one of those appears to be the\ninability to reference source files outside of setup.py's subtree. This\nmeans a sdist cannot be created with all necessary source components\n(i.e. libfdt headers). Moving setup.py to the top-level solves these\nproblems.\n\nWith this change. the following commands now work:\n\nCreating packages for pypi.org:\n./setup.py sdist bdist_wheel\n\nUsing pip for installs:\npip install .\npip install git+http://github.com/robherring/dtc.git@pypi-v2\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-5-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69a760747d8d9d1c5dcceebc05e868e1eaf13a2b", "commit_date": "2021-11-11T03:34:51Z", "commit_message": "pylibfdt: Split setup.py author name and email\n\nThe 'author' field in setup.py is supposed to be just the name. The\nemail address goes in 'author_email' field.\n\nCc: Simon Glass <sjg@chromium.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-4-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b106a77dbdc34ef809526febafc490b90d79a54", "commit_date": "2021-11-11T03:30:33Z", "commit_message": "pylibfdt: Use setuptools_scm for the version\n\nThe DTC version in version_gen.h causes a warning with setuptools:\n\nsetuptools/dist.py:501: UserWarning: The version specified ('1.6.1-g5454474d') \\\nis an invalid version, this may not work as expected with newer versions of \\\nsetuptools, pip, and PyPI. Please see PEP 440 for more details.\n\nIt also creates an unnecessary dependency on the rest of the build\nsystem(s). Switch to use setuptools_scm instead to get the version for\npylibfdt.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c691776ddb26acbd3674722caafacaf7b6e3e807", "commit_date": "2021-11-11T03:29:12Z", "commit_message": "pylibfdt: Use setuptools instead of distutils\n\nThe use of setuptools is favored over distutils. setuptools is needed to\nsupport building Python 'wheels' and for pip support.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5216f3f1bbb70aef463b6cd78dbbb0f4c4c71606", "commit_date": "2021-11-11T03:27:09Z", "commit_message": "libfdt: Add static lib to meson build\n\nThe meson build is not building the static libfdt, so add it.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111003329.2347536-1-robh@kernel.org>\nReviewed-by: Simon Glass <sjg@chromium.org>\nTested-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eda2590f481db53318a2f203c85eab3dde4b340", "commit_date": "2021-11-01T03:02:44Z", "commit_message": "CI: Cirrus: bump used FreeBSD from 12.1 to 13.0\n\nCI freebsd_12 job currently fails to build PRs, because of:\r\n```\r\nld-elf.so.1: /usr/local/bin/bison: Undefined symbol \"fread_unlocked@FBSD_1.6\"\r\n```\r\n\r\nAccording to FreeBSD issue tracker[1], the proper solution is to upgrade to a\r\nsupported release, so do that for our CI.\r\n\r\n[1]: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=253452\r\n\r\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a3a9d3449c88aabe88685ea99811bf6c02a570d", "commit_date": "2021-10-21T04:48:41Z", "commit_message": "checks: Add an interrupt-map check\n\nAdd a check for parsing 'interrupt-map' properties. The check primarily\ntests parsing 'interrupt-map' properties which depends on and the parent\ninterrupt controller (or another map) node.\n\nNote that this does not require '#address-cells' in the interrupt-map\nparent, but treats missing '#address-cells' as 0 which is how the Linux\nkernel parses it. There's numerous cases that expect this behavior.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211015213527.2237774-1-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8fd24744e3618be99a939009349418fcbfa362b3", "commit_date": "2021-10-14T03:46:17Z", "commit_message": "checks: Ensure '#interrupt-cells' only exists in interrupt providers\n\nThe interrupt provider check currently checks if an interrupt provider\nhas #interrupt-cells, but not whether #interrupt-cells is present\noutside of interrupt-providers. Rework the check to cover the latter\ncase.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-4-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8d1a9a77863a8c7031ae82a1d461aa78eb72a7b", "commit_date": "2021-10-14T03:45:22Z", "commit_message": "checks: Drop interrupt provider '#address-cells' check\n\n'#address-cells' is only needed when parsing 'interrupt-map' properties, so\nremove it from the common interrupt-provider test.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52a16fd7282463e05ee86071463bf0499a9cedf6", "commit_date": "2021-10-14T03:35:45Z", "commit_message": "checks: Make interrupt_provider check dependent on interrupts_extended_is_cell\n\nIf '#interrupt-cells' doesn't pass checks, no reason to run interrupt\nprovider check.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-1-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37fd700685da9001643d1b1f63ad4332e1148b04", "commit_date": "2021-10-11T05:20:53Z", "commit_message": "treesource: Maintain phandle label/path on output\n\nThe dts output will just output phandle integer values, but often the\nnecessary markers are present with path or label references. Improve the\noutput and maintain phandle label or path references when present in dts\noutput.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20210727183023.3212077-6-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e33ce1d6a8c7e54e3ad12cff33690b6da0aee1dc", "commit_date": "2021-09-27T01:54:56Z", "commit_message": "flattree: Use '\\n', not ';' to separate asm pseudo-ops\n\nThe output of -Oasm is peculiar for assembler in that we want its output\nto be portable across targets (it consists entirely of pseudo-ops and\nlabels, no actual instructions).\n\nIt turns out that while ';' is a valid instruction/pseudo-op separator\non most targets, it's not correct for all of them - e.g. HP PA-RISC.  So,\nswitch to using an actual \\n instead.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d24cc189dca6148eedf9dc9e2d45144b3851dae0", "commit_date": "2021-09-27T01:54:56Z", "commit_message": "asm: Use assembler macros instead of cpp macros\n\ntests/trees.S is a weird thing: a portable aseembler file, used to produce\na specific binary output.  Currently it uses CPP macros quite heavily to\nconstruct the dtbs we want (including some partial and broken trees).\n\nUsing cpp has the side effect that we need to use ; separators between\ninstructions (or, rather, pseudo-ops), because cpp won't expand newlines.\nHowever, it turns out that while ; is a suitable separator on most\ntargets, it doesn't work for all of them (e.g. HP PA-RISC).\n\nSwitch to using the assembler's inbuilt macros rather than CPP, so that we\ncan use genuine newlines.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff3a30c115ad7354689dc7858604356ecb7f9b1c", "commit_date": "2021-09-25T06:11:41Z", "commit_message": "asm: Use .asciz and .ascii instead of .string\n\nWe use the .string pseudo-op both in some of our test assembly files\nand in our -Oasm output.  We expect this to emit a \\0 terminated\nstring into the .o file.  However for certain targets (e.g. HP\nPA-RISC) it doesn't include the \\0.  Use .asciz instead, which\nexplicitly does what we want.\n\nThere's also one place we can use .ascii (which explicitly emits a\nstring *without* \\0 termination) instead of multiple .byte directives.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5eb5927d81ee6036f45c4e1bd89ae66ed325d721", "commit_date": "2021-08-26T00:58:26Z", "commit_message": "fdtdump: fix -Werror=int-to-pointer-cast\n\nWith mingw64-gcc, the compiler complains with various warnings:\nerror: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20210825121350.213551-1-marcandre.lureau@redhat.com>\nAcked-by: Rob Herring <robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0869f8269161843a46c0cac0e35b4dc9324bf1a6", "commit_date": "2021-08-02T02:21:53Z", "commit_message": "libfdt: Add ALIGNMENT error string\n\nThe ALIGNMENT error was missing a string, leading to <unknown error>\nbeing returned.\n\nSigned-off-by: Georg Kotheimer <georg.kotheimer@kernkonzept.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69595a167f06c4482ce784e30df1ac9b16ceb5b0", "commit_date": "2021-06-30T00:32:13Z", "commit_message": "checks: Fix bus-range check\n\nThe upper limit of the bus-range is specified by the second cell of the\nbus-range property.\n\nSigned-off-by: Thierry Reding <treding@nvidia.com>\nMessage-Id: <20210629114304.2451114-1-thierry.reding@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72d09e2682a41589b46b8cdd4c393b8ed47ac266", "commit_date": "2021-06-21T05:34:49Z", "commit_message": "Makefile: add -Wsign-compare to warning options\n\nNow that all signedness comparison warnings in the source tree have been\nfixed, let's enable the warning option, to avoid them creeping in again.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b587787ef38802e43972e1b7a36a8358ae25db86", "commit_date": "2021-06-21T05:34:05Z", "commit_message": "checks: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various parts in checks.c.\n\nFix those by making all affected variables unsigned. This covers return\nvalues of the (unsigned) size_t type, phandles, variables holding sizes\nin general and loop counters only ever counting positives values.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-5-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69bed6c2418f484561263aadbb886ffb925e6b38", "commit_date": "2021-06-21T05:28:21Z", "commit_message": "dtc: Wrap phandle validity check\n\nIn several places we check for a returned phandle value to be valid,\nfor that it must not be 0 or \"-1\".\n\nWrap this check in a static inline function in dtc.h, and use ~0U instead\nof -1 on the way, to keep everything in the unsigned realm.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-4-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "910221185560fe0c5dc0997dd7d3b472a0a7cdea", "commit_date": "2021-06-21T05:27:39Z", "commit_message": "fdtget: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\nthe different legs of the conditional operator, in fdtget.c.\n\nIn the questionable expression, we are constructing a 16-bit value out of\ntwo unsigned 8-bit values, however are relying on the compiler's\nautomatic expansion of the uint8_t to a larger type, to survive the left\nshift. This larger type happens to be an \"int\", so this part of the\nexpression becomes signed.\n\nFix this by explicitly blowing up the uint8_t to a larger *unsigned* type,\nbefore doing the left shift. And while we are at it, convert the hardly\nreadable conditional operator usage into a sane switch/case expression.\n\nThis fixes \"make fdtget\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d966f08fcd21ded2ed6608097e9832e9466857fd", "commit_date": "2021-06-21T05:25:44Z", "commit_message": "tests: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various files in the tests/ directory.\n\nFor about half of the cases we can simply change the signed variable to\nbe of an unsigned type, because they will never need to store negative\nvalues (which is the best fix of the problem).\n\nIn the remaining cases we can cast the signed variable to an unsigned\ntype, provided we know for sure it is not negative.\nWe see two different scenarios here:\n- We either just explicitly checked for this variable to be positive\n  (if (rc < 0) FAIL();), or\n- We rely on a function returning only positive values in the \"length\"\n  pointer if the function returned successfully: which we just checked.\n\nAt two occassions we compare with a constant \"-1\" (even though the\nvariable is unsigned), so we just change this to ~0U to create an\nunsigned comparison value.\n\nSince this is about the tests, let's also add explicit tests for those\nvalues really not being negative.\n\nThis fixes \"make tests\" (but not \"make check\" yet), when compiled\nwith -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-2-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecfb438c07fa468a129e81c7d84c7c293c7b0150", "commit_date": "2021-06-15T02:49:23Z", "commit_message": "dtc: Fix signedness comparisons warnings: pointer diff\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in the function get_node_by_path().\n\nTaking the difference between two pointers results in a signed ptrdiff_t\ntype, which mismatches the unsigned type returned by strlen().\nSince \"p\" has been returned by a call to strchr() with \"path\" as its\nargument, we know for sure that it's bigger than \"path\", so the\ndifference must be positive. So a cast to an unsigned type is valid.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-7-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bec74a6d13519381a40b5433ede7849a75a8d79", "commit_date": "2021-06-15T02:48:25Z", "commit_message": "dtc: Fix signedness comparisons warnings: reservednum\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in code using the \"reservednum\" variable.\n\nThere is obviously little sense in having a negative number of reserved\nmemory entries, so let's make this variable and all its users unsigned.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e7f511fd4acaf48d25374f88dbdbdb277e6a26", "commit_date": "2021-06-15T02:35:54Z", "commit_message": "fdtdump: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in fdtdump.c.\n\nThe \"len\" parameter to valid_header() refers to a memory size, not a\nfile offset, so the (unsigned) size_t is better fit, and fixes the\nwarning nicely.\n\nIn the main function we compare the difference between two pointers,\nwhich produces a signed ptrdiff_t type. However the while loop above the\ncomparison makes sure that \"p\" always points before \"endp\" (by virtue of\nthe limit in the memchr() call). This means \"endp - p\" is never\nnegative, so we can safely cast this expression to an unsigned type.\n\nThis fixes \"make fdtdump\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "readme": [{"commit_oid": "d5dac348258def56e024581fa08818dc031a8311", "commit_date": "2022-07-28T07:46:44Z", "commit_message": "sob", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90b9d9de42caa136436652f63407a50c9641c00f", "commit_date": "2022-07-28T06:25:56Z", "commit_message": "Split out information for contributors to CONTRIBUTING.md\n\nREADME.md covers both general information for people using and building\nthe software, and more specific information for people contributing to\neither dtc or libfdt.  Split out the latter information into its own file\nfor easier reference.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ee1d479b23a35dbcf9a756b5c9437ac6cf12dcf", "commit_date": "2022-07-28T06:16:08Z", "commit_message": "Remove Jon Loeliger from maintainers list\n\nJon hasn't been actively working on dtc maintenance for some years.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b33a73c62c1cd1e6062dc5416037accdc8a90b5e", "commit_date": "2022-07-28T06:15:06Z", "commit_message": "Convert README to README.md\n\nLet's move vaguely into the twenty-first century by converting our old\nplain text README file to Markdown.  While we're updating the formatting,\nmake some small polish changes to the content.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ad60734b1c1ac12856674fa7913fc9492dc5d28", "commit_date": "2022-07-27T06:38:45Z", "commit_message": "Allow static building with meson\n\nAdded \"static-build\" option in the meson_options.txt.\nSetting it to \"true\" allows static building.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163557.932298-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd9b8c96c780c90dd0f1af46963bf2c52de1f0a6", "commit_date": "2022-07-27T06:35:29Z", "commit_message": "Allow static building with make\n\nSet STATIC_BUILD=1 environment variable to enable static building\nwhen using makefiles.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163531.932281-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fda71da26e7fa00966a58afeb2114269b5512e59", "commit_date": "2022-07-26T11:46:18Z", "commit_message": "libfdt: Handle failed get_name() on BEGIN_NODE\n\nValidate the return value of fdt_get_name() as an ill-formed DT, causing\nit to fail, could result in fdt_check_full() dereferencing NULL.\n\nfixes: a2def5479950 (\"libfdt: Check that the root-node name is empty\")\nSigned-off-by: Pierre-Cl\u00e9ment Tosi <ptosi@google.com>\nMessage-Id: <20220714083848.958492-1-ptosi@google.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c7c7f17a83d5ec1049ddfcaf22f40fcdc53ac0c4", "commit_date": "2022-07-26T11:39:07Z", "commit_message": "Fix test script to run also on dash shell\n\n/bin/sh points to dash instead of bash in some linux distros.\nOne test would fail if dash was used, this fix will allow all tests\nto run properly on dash too.\n\ndash built-in printf does not support \"\\xNN\" -hex escape format.\n\"\\NNN\" -octal escape format is supported by both bash and dash printf.\n\nReplaced \"$(echo \"$expect\")\" because this actually runs /bin/echo\ninstead of shell internal echo and in some cases causes \"\\NNN\" escapes\nto be printed as the actual characters they represent instead of the\nescape sequence itself.\n\nCosmetic quotes added to make printout a bit clearer.\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220704073722.1075849-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01f23ffe1679bc8009fa14b7d8d728f317d053ea", "commit_date": "2022-07-02T06:37:02Z", "commit_message": "Add missing relref_merge test to meson test list\n\nWill remove one \"Strange test result\" when running tests with\nmeson\n\nSigned-off-by: Tero Tervala <tero.tervala@unikie.com>\nMessage-Id: <20220629163114.932175-1-tero.tervala@unikie.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed310803ea893ed0a8bba9c4ff0d9eb0063a8bef", "commit_date": "2022-04-20T02:55:14Z", "commit_message": "pylibfdt: add FdtRo.get_path()\n\nAdd a new Python method wrapping fdt_get_path() from the C API.\n\nAlso add a test for the new method.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20220419194537.63170-1-luca@z3ntu.xyz>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c001fc01a43e7a06447c06ea3d50bd60641322b8", "commit_date": "2022-02-04T07:52:36Z", "commit_message": "pylibfdt: fix swig build in install\n\nA 'pip install' is silently broken unless the tree is dirty and contains\npylibfdt/libfdt.py. The problem is a known issue[1] with SWIG and\nsetuptools where the 'build_py' stage needing module.py runs before\nthe 'build_ext' stage which generates it. The work-around is to override\n'build_py' to run 'build_ext' first.\n\n[1] https://stackoverflow.com/questions/50239473/building-a-module-with-setuptools-and-swig\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20220203180408.611645-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "26c54f840d2340271f305c04f0d66bafac93274f", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "tests: add test cases for label-relative path references\n\nNewly added &{label/path} feature doesn't yet have any tests. Add some.\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec7986e682cf9a5078bdbad341feb807a56b21e0", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "dtc: introduce label relative path references\n\nReference via label allows extending nodes with compile-time checking of\nwhether the node being extended exists. This is useful to catch\nrenamed/removed nodes after an update of the device trees to be extended.\n\nIn absence of labels in the original device trees, new style path\nreferences can be used:\n\n  /* upstream device tree */\n  / {\n\tleds: some-non-standard-led-controller-name {\n\t\tled-0 {\n\t\t\tdefault-state = \"off\";\n\t\t};\n\t};\n  };\n\n  /* downstream device tree */\n  &{/some-non-standard-led-controller-name/led-0} {\n\tdefault-state = \"on\";\n  };\n\nThis is a common theme within the barebox bootloader[0], which extends the\nupstream (Linux) device trees in that manner. The downside is that,\nespecially for deep nodes, these references can get quite long and tend to\nbreak often due to upstream rework (e.g. rename to adhere to bindings).\n\nOften there is a label a level or two higher that could be used. This\npatch allows combining both a label and a new style path reference to\nget a compile-time-checked reference, which allows rewriting the\nprevious downstream device tree snippet to:\n\n  &{leds/led-0} {\n\tdefault-state = \"on\";\n  };\n\nThis won't be broken when /some-non-standard-led-controller-name is\nrenamed or moved while keeping the label. And if led-0 is renamed, we\nwill get the expected compile-time error.\n\nOverlay support is skipped for now as they require special support: The\nlabel and relative path parts need to be resolved at overlay apply-time,\nnot at compile-time.\n\n[0]: https://www.barebox.org/doc/latest/devicetree/index.html\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "651410e54cb9a478f2fbb16cb493a5e7808ad8fe", "commit_date": "2022-01-25T06:10:47Z", "commit_message": "util: introduce xstrndup helper\n\nWe already have xstrdup, add xstrndup as well to make it\nstraight-forward to clone part of a string.\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4048aed12b81c5a0154b9af438edc99ec7d2b6a1", "commit_date": "2022-01-03T23:48:59Z", "commit_message": "setup.py: fix out of tree build\n\nFixes: commit 1cc41b1c9 (\"pylibfdt: Add packaging metadata\")\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20220103073855.1468799-3-marcandre.lureau@redhat.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff5afb96d0c08133b6f709a197b8bda023531757", "commit_date": "2021-12-29T06:04:18Z", "commit_message": "Handle integer overflow in check_property_phandle_args()\n\nIf the corresponding '#xxx-cells' value is much too large, an integer\noverflow can prevent the checks in check_property_phandle_args() from\ncorrectly determining that the checked property is too short for the\ngiven cells value.  This leads to an infinite loops.\n\nThis patch fixes the bug, and adds a testcase for it.  Further\ninformation in https://github.com/dgibson/dtc/issues/64\n\nReported-by: Anciety <anciety@pku.edu.cn>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca7294434309930076ff99ff4f0c817499f50f5a", "commit_date": "2021-12-28T09:14:05Z", "commit_message": "README: Explain how to add a new API function\n\nThis is not obvious so add a little note about it.\n\nSigned-off-by: Simon Glass <sjg@chromium.org>\nMessage-Id: <20211107224346.3181320-2-sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0c2e115f82ed3bc5f9d3f9e5380f0f7e81a1c21", "commit_date": "2021-12-28T09:11:11Z", "commit_message": "Fix a UB when fdt_get_string return null\n\nWhen fdt_get_string return null, `namep` is not correctly reset.\nFrom the document of `fdt_getprop_by_offset`, the parameter `namep` will\nbe always overwritten (that is, it will be overwritten without exception\nof error occurance).\n\nAs for the caller (like\nhttps://github.com/topjohnwu/Magisk/blob/e097c097feb881f6097b6d1dc346f310bc92f5d6/native/jni/magiskboot/dtb.cpp#L42),\nthe code may be like:\n```cpp\nsize_t size;\nconst char *name;\nauto *value = fdt_getprop_by_offset(fdt, prop, &name, &size);\n```\nand if `value == nullptr`, `size` is also be overwritten correctly but\n`name` is not, which is quite inconsistent.\n\nThis commit makes sure `name` and `size` behavior consistently (reset to\nreasonable value) when error occurs.\n\nSigned-off-by: LoveSy <shana@zju.edu.cn>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd5f69cbc0d4bc34a509b5f6f62234e25893b684", "commit_date": "2021-12-28T09:10:57Z", "commit_message": "tests: setprop_inplace: use xstrdup instead of unchecked strdup\n\nThis is the only strdup instance we have, all others are xstrdup. As\nstrdup is _POSIX_C_SOURCE >= v200809L, which we don't require and we\ndon't check strdup error return here, switch to xstrdup instead. This\naligns the test with others that call xfuncs, mainly xmalloc().\n\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a04f69025003890be265e007238dc91041e5529b", "commit_date": "2021-12-28T04:30:33Z", "commit_message": "pylibfdt: add Property.as_*int*_array()\n\nAdd new methods to handle decoding of int32, uint32, int64 and uint64\narrays.\n\nAlso add tests for the new methods.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211225132558.167123-3-luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "83102717d7c4171aeb2d26941fa1ee2997bf4a7d", "commit_date": "2021-12-28T04:29:31Z", "commit_message": "pylibfdt: add Property.as_stringlist()\n\nAdd a new method for decoding a string list property, useful for e.g.\nthe \"reg-names\" property.\n\nAlso add a test for the new method.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211225132558.167123-2-luca@z3ntu.xyz>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d152126bb0293c321cae437bdf7437c393ee3619", "commit_date": "2021-12-26T04:44:32Z", "commit_message": "Fix Python crash on getprop deallocation\n\nFatal Python error: none_dealloc: deallocating None\nPython runtime state: finalizing (tstate=0x000055c9bac70920)\n\nCurrent thread 0x00007fbe34e47740 (most recent call first):\n  <no Python frame>\nAborted (core dumped)\n\nThis is caused by a missing Py_INCREF on the returned Py_None, as\ndemonstrated e.g. in https://github.com/mythosil/swig-python-incref or\ndescribed at https://edcjones.tripod.com/refcount.html (\"Remember to\nINCREF Py_None!\")\n\nA PoC for triggering this crash is uploaded to\nhttps://github.com/z3ntu/pylibfdt-crash .\nWith this patch applied to pylibfdt the crash does not happen.\n\nSigned-off-by: Luca Weiss <luca@z3ntu.xyz>\nMessage-Id: <20211224102811.70695-1-luca@z3ntu.xyz>\nReviewed-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17739b7ef510917471409d71fb45d8eaf6a1e1fb", "commit_date": "2021-12-09T06:48:58Z", "commit_message": "Support 'r' format for printing raw bytes with fdtget\n\nFT is sometimes used for storing raw data. That is quite common for\nU-Boot FIT images.\n\nExtracting such data is not trivial currently. Using type 's' (string)\nwill replace every 0x00 (NUL) with 0x20 (space). Using type 'x' will\nprint bytes but in xxd incompatible format.\n\nThis commit adds support for 'r' (raw) format. Example usage:\nfdtget -t r firmware.itb /images/foo data > image.raw\n\nSupport for encoding isn't added as there isn't any clean way of passing\nbinary data as command line argument.\n\nSigned-off-by: Rafa\u0142 Mi\u0142ecki <rafal@milecki.pl>\nMessage-Id: <20211209061420.29466-1-zajec5@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45f3d1a095dd3440578d5c6313eba555a791f3fb", "commit_date": "2021-11-18T05:25:10Z", "commit_message": "libfdt: overlay: make overlay_get_target() public\n\nThis is done to get the target path for the overlay nodes which is very useful\nin many cases. For example, Xen hypervisor needs it when applying overlays\nbecause Xen needs to do further processing of the overlay nodes, e.g. mapping of\nresources(IRQs and IOMMUs) to other VMs, creation of SMMU pagetables, etc.\n\nSigned-off-by: Vikram Garhwal <fnu.vikram@xilinx.com>\nMessage-Id: <1637204036-382159-2-git-send-email-fnu.vikram@xilinx.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c19a4bafa514c2c85876f0de35782abd11bed7ec", "commit_date": "2021-11-17T01:22:53Z", "commit_message": "libfdt: fix an incorrect integer promotion\n\nUINT32_MAX is an integer of type unsigned int. UINT32_MAX + 1 overflows\nunless explicitly computed as unsigned long long. This led to some\ninvalid addresses being treated as valid.\n\nCast UINT32_MAX to uint64_t explicitly.\n\nSigned-off-by: Elvira Khabirova <e.khabirova@omp.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cc41b1c969f1fa5090b166397e4bab4ab1aa449", "commit_date": "2021-11-12T04:58:23Z", "commit_message": "pylibfdt: Add packaging metadata\n\nPyPI expects to have various package metadata including long\ndescription, license, and classifiers. Add them.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211112041633.741598-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "db72398cd4371324901e8ff54980543e0139c1b9", "commit_date": "2021-11-12T04:58:23Z", "commit_message": "README: Update pylibfdt install instructions\n\nNow that pip is supported for installs, update the install instructions to\nuse it. Using pip over setup.py is generally recommended and simpler.\n\nAlso, drop 'SETUP_PREFIX' as it doesn't exist anywhere.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211112041633.741598-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "383e148b70a47ab15f97a19bb999d54f9c3e810f", "commit_date": "2021-11-12T01:45:46Z", "commit_message": "pylibfdt: fix with Python 3.10\n\nSince Python 2.5 the argument parsing functions when parsing expressions\nsuch as s# (string plus length) expect the length to be an int or a\nssize_t, depending on whether PY_SSIZE_T_CLEAN is defined or not.\n\nPython 3.8 deprecated the use of int, and with Python 3.10 this symbol\nmust be defined and ssize_t used[1].\n\nDefine the magic symbol when building the extension, and cast the ints\nfrom the libfdt API to ssize_t as appropriate.\n\n[1] https://docs.python.org/3.10/whatsnew/3.10.html#id2\n\nSigned-off-by: Ross Burton <ross.burton@arm.com>\nMessage-Id: <20211111160536.2516573-1-ross.burton@arm.com>\n[dwg: Adjust for new location of setup.py]\nTested-by: Rob Herring <robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23b56cb7e18992650c79a04c9e4e3f2740bc1fbd", "commit_date": "2021-11-11T03:34:51Z", "commit_message": "pylibfdt: Move setup.py to the top level\n\nUsing 'pip' and several setup.py sub-commands currently don't work with\npylibfdt. The primary reason is Python packaging has opinions on the\ndirectory structure of repositories and one of those appears to be the\ninability to reference source files outside of setup.py's subtree. This\nmeans a sdist cannot be created with all necessary source components\n(i.e. libfdt headers). Moving setup.py to the top-level solves these\nproblems.\n\nWith this change. the following commands now work:\n\nCreating packages for pypi.org:\n./setup.py sdist bdist_wheel\n\nUsing pip for installs:\npip install .\npip install git+http://github.com/robherring/dtc.git@pypi-v2\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-5-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69a760747d8d9d1c5dcceebc05e868e1eaf13a2b", "commit_date": "2021-11-11T03:34:51Z", "commit_message": "pylibfdt: Split setup.py author name and email\n\nThe 'author' field in setup.py is supposed to be just the name. The\nemail address goes in 'author_email' field.\n\nCc: Simon Glass <sjg@chromium.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-4-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b106a77dbdc34ef809526febafc490b90d79a54", "commit_date": "2021-11-11T03:30:33Z", "commit_message": "pylibfdt: Use setuptools_scm for the version\n\nThe DTC version in version_gen.h causes a warning with setuptools:\n\nsetuptools/dist.py:501: UserWarning: The version specified ('1.6.1-g5454474d') \\\nis an invalid version, this may not work as expected with newer versions of \\\nsetuptools, pip, and PyPI. Please see PEP 440 for more details.\n\nIt also creates an unnecessary dependency on the rest of the build\nsystem(s). Switch to use setuptools_scm instead to get the version for\npylibfdt.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c691776ddb26acbd3674722caafacaf7b6e3e807", "commit_date": "2021-11-11T03:29:12Z", "commit_message": "pylibfdt: Use setuptools instead of distutils\n\nThe use of setuptools is favored over distutils. setuptools is needed to\nsupport building Python 'wheels' and for pip support.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111011135.2386773-2-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5216f3f1bbb70aef463b6cd78dbbb0f4c4c71606", "commit_date": "2021-11-11T03:27:09Z", "commit_message": "libfdt: Add static lib to meson build\n\nThe meson build is not building the static libfdt, so add it.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211111003329.2347536-1-robh@kernel.org>\nReviewed-by: Simon Glass <sjg@chromium.org>\nTested-by: Simon Glass <sjg@chromium.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eda2590f481db53318a2f203c85eab3dde4b340", "commit_date": "2021-11-01T03:02:44Z", "commit_message": "CI: Cirrus: bump used FreeBSD from 12.1 to 13.0\n\nCI freebsd_12 job currently fails to build PRs, because of:\r\n```\r\nld-elf.so.1: /usr/local/bin/bison: Undefined symbol \"fread_unlocked@FBSD_1.6\"\r\n```\r\n\r\nAccording to FreeBSD issue tracker[1], the proper solution is to upgrade to a\r\nsupported release, so do that for our CI.\r\n\r\n[1]: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=253452\r\n\r\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a3a9d3449c88aabe88685ea99811bf6c02a570d", "commit_date": "2021-10-21T04:48:41Z", "commit_message": "checks: Add an interrupt-map check\n\nAdd a check for parsing 'interrupt-map' properties. The check primarily\ntests parsing 'interrupt-map' properties which depends on and the parent\ninterrupt controller (or another map) node.\n\nNote that this does not require '#address-cells' in the interrupt-map\nparent, but treats missing '#address-cells' as 0 which is how the Linux\nkernel parses it. There's numerous cases that expect this behavior.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211015213527.2237774-1-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8fd24744e3618be99a939009349418fcbfa362b3", "commit_date": "2021-10-14T03:46:17Z", "commit_message": "checks: Ensure '#interrupt-cells' only exists in interrupt providers\n\nThe interrupt provider check currently checks if an interrupt provider\nhas #interrupt-cells, but not whether #interrupt-cells is present\noutside of interrupt-providers. Rework the check to cover the latter\ncase.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-4-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8d1a9a77863a8c7031ae82a1d461aa78eb72a7b", "commit_date": "2021-10-14T03:45:22Z", "commit_message": "checks: Drop interrupt provider '#address-cells' check\n\n'#address-cells' is only needed when parsing 'interrupt-map' properties, so\nremove it from the common interrupt-provider test.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-3-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52a16fd7282463e05ee86071463bf0499a9cedf6", "commit_date": "2021-10-14T03:35:45Z", "commit_message": "checks: Make interrupt_provider check dependent on interrupts_extended_is_cell\n\nIf '#interrupt-cells' doesn't pass checks, no reason to run interrupt\nprovider check.\n\nCc: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20211011191245.1009682-1-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37fd700685da9001643d1b1f63ad4332e1148b04", "commit_date": "2021-10-11T05:20:53Z", "commit_message": "treesource: Maintain phandle label/path on output\n\nThe dts output will just output phandle integer values, but often the\nnecessary markers are present with path or label references. Improve the\noutput and maintain phandle label or path references when present in dts\noutput.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nMessage-Id: <20210727183023.3212077-6-robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e33ce1d6a8c7e54e3ad12cff33690b6da0aee1dc", "commit_date": "2021-09-27T01:54:56Z", "commit_message": "flattree: Use '\\n', not ';' to separate asm pseudo-ops\n\nThe output of -Oasm is peculiar for assembler in that we want its output\nto be portable across targets (it consists entirely of pseudo-ops and\nlabels, no actual instructions).\n\nIt turns out that while ';' is a valid instruction/pseudo-op separator\non most targets, it's not correct for all of them - e.g. HP PA-RISC.  So,\nswitch to using an actual \\n instead.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d24cc189dca6148eedf9dc9e2d45144b3851dae0", "commit_date": "2021-09-27T01:54:56Z", "commit_message": "asm: Use assembler macros instead of cpp macros\n\ntests/trees.S is a weird thing: a portable aseembler file, used to produce\na specific binary output.  Currently it uses CPP macros quite heavily to\nconstruct the dtbs we want (including some partial and broken trees).\n\nUsing cpp has the side effect that we need to use ; separators between\ninstructions (or, rather, pseudo-ops), because cpp won't expand newlines.\nHowever, it turns out that while ; is a suitable separator on most\ntargets, it doesn't work for all of them (e.g. HP PA-RISC).\n\nSwitch to using the assembler's inbuilt macros rather than CPP, so that we\ncan use genuine newlines.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff3a30c115ad7354689dc7858604356ecb7f9b1c", "commit_date": "2021-09-25T06:11:41Z", "commit_message": "asm: Use .asciz and .ascii instead of .string\n\nWe use the .string pseudo-op both in some of our test assembly files\nand in our -Oasm output.  We expect this to emit a \\0 terminated\nstring into the .o file.  However for certain targets (e.g. HP\nPA-RISC) it doesn't include the \\0.  Use .asciz instead, which\nexplicitly does what we want.\n\nThere's also one place we can use .ascii (which explicitly emits a\nstring *without* \\0 termination) instead of multiple .byte directives.\n\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5eb5927d81ee6036f45c4e1bd89ae66ed325d721", "commit_date": "2021-08-26T00:58:26Z", "commit_message": "fdtdump: fix -Werror=int-to-pointer-cast\n\nWith mingw64-gcc, the compiler complains with various warnings:\nerror: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]\n\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20210825121350.213551-1-marcandre.lureau@redhat.com>\nAcked-by: Rob Herring <robh@kernel.org>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0869f8269161843a46c0cac0e35b4dc9324bf1a6", "commit_date": "2021-08-02T02:21:53Z", "commit_message": "libfdt: Add ALIGNMENT error string\n\nThe ALIGNMENT error was missing a string, leading to <unknown error>\nbeing returned.\n\nSigned-off-by: Georg Kotheimer <georg.kotheimer@kernkonzept.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69595a167f06c4482ce784e30df1ac9b16ceb5b0", "commit_date": "2021-06-30T00:32:13Z", "commit_message": "checks: Fix bus-range check\n\nThe upper limit of the bus-range is specified by the second cell of the\nbus-range property.\n\nSigned-off-by: Thierry Reding <treding@nvidia.com>\nMessage-Id: <20210629114304.2451114-1-thierry.reding@gmail.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72d09e2682a41589b46b8cdd4c393b8ed47ac266", "commit_date": "2021-06-21T05:34:49Z", "commit_message": "Makefile: add -Wsign-compare to warning options\n\nNow that all signedness comparison warnings in the source tree have been\nfixed, let's enable the warning option, to avoid them creeping in again.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b587787ef38802e43972e1b7a36a8358ae25db86", "commit_date": "2021-06-21T05:34:05Z", "commit_message": "checks: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various parts in checks.c.\n\nFix those by making all affected variables unsigned. This covers return\nvalues of the (unsigned) size_t type, phandles, variables holding sizes\nin general and loop counters only ever counting positives values.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-5-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "69bed6c2418f484561263aadbb886ffb925e6b38", "commit_date": "2021-06-21T05:28:21Z", "commit_message": "dtc: Wrap phandle validity check\n\nIn several places we check for a returned phandle value to be valid,\nfor that it must not be 0 or \"-1\".\n\nWrap this check in a static inline function in dtc.h, and use ~0U instead\nof -1 on the way, to keep everything in the unsigned realm.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-4-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "910221185560fe0c5dc0997dd7d3b472a0a7cdea", "commit_date": "2021-06-21T05:27:39Z", "commit_message": "fdtget: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\nthe different legs of the conditional operator, in fdtget.c.\n\nIn the questionable expression, we are constructing a 16-bit value out of\ntwo unsigned 8-bit values, however are relying on the compiler's\nautomatic expansion of the uint8_t to a larger type, to survive the left\nshift. This larger type happens to be an \"int\", so this part of the\nexpression becomes signed.\n\nFix this by explicitly blowing up the uint8_t to a larger *unsigned* type,\nbefore doing the left shift. And while we are at it, convert the hardly\nreadable conditional operator usage into a sane switch/case expression.\n\nThis fixes \"make fdtget\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d966f08fcd21ded2ed6608097e9832e9466857fd", "commit_date": "2021-06-21T05:25:44Z", "commit_message": "tests: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in various files in the tests/ directory.\n\nFor about half of the cases we can simply change the signed variable to\nbe of an unsigned type, because they will never need to store negative\nvalues (which is the best fix of the problem).\n\nIn the remaining cases we can cast the signed variable to an unsigned\ntype, provided we know for sure it is not negative.\nWe see two different scenarios here:\n- We either just explicitly checked for this variable to be positive\n  (if (rc < 0) FAIL();), or\n- We rely on a function returning only positive values in the \"length\"\n  pointer if the function returned successfully: which we just checked.\n\nAt two occassions we compare with a constant \"-1\" (even though the\nvariable is unsigned), so we just change this to ~0U to create an\nunsigned comparison value.\n\nSince this is about the tests, let's also add explicit tests for those\nvalues really not being negative.\n\nThis fixes \"make tests\" (but not \"make check\" yet), when compiled\nwith -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210618172030.9684-2-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecfb438c07fa468a129e81c7d84c7c293c7b0150", "commit_date": "2021-06-15T02:49:23Z", "commit_message": "dtc: Fix signedness comparisons warnings: pointer diff\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in the function get_node_by_path().\n\nTaking the difference between two pointers results in a signed ptrdiff_t\ntype, which mismatches the unsigned type returned by strlen().\nSince \"p\" has been returned by a call to strchr() with \"path\" as its\nargument, we know for sure that it's bigger than \"path\", so the\ndifference must be positive. So a cast to an unsigned type is valid.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-7-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bec74a6d13519381a40b5433ede7849a75a8d79", "commit_date": "2021-06-15T02:48:25Z", "commit_message": "dtc: Fix signedness comparisons warnings: reservednum\n\nWith -Wsign-compare, compilers warn about a mismatching signedness\nin comparisons in code using the \"reservednum\" variable.\n\nThere is obviously little sense in having a negative number of reserved\nmemory entries, so let's make this variable and all its users unsigned.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-6-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24e7f511fd4acaf48d25374f88dbdbdb277e6a26", "commit_date": "2021-06-15T02:35:54Z", "commit_message": "fdtdump: Fix signedness comparisons warnings\n\nWith -Wsign-compare, compilers warn about a mismatching signedness in\ncomparisons in fdtdump.c.\n\nThe \"len\" parameter to valid_header() refers to a memory size, not a\nfile offset, so the (unsigned) size_t is better fit, and fixes the\nwarning nicely.\n\nIn the main function we compare the difference between two pointers,\nwhich produces a signed ptrdiff_t type. However the while loop above the\ncomparison makes sure that \"p\" always points before \"endp\" (by virtue of\nthe limit in the memchr() call). This means \"endp - p\" is never\nnegative, so we can safely cast this expression to an unsigned type.\n\nThis fixes \"make fdtdump\", when compiled with -Wsign-compare.\n\nSigned-off-by: Andre Przywara <andre.przywara@arm.com>\nMessage-Id: <20210611171040.25524-3-andre.przywara@arm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}