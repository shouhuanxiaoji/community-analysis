{"master": [{"commit_oid": "088fe2618fcc286be0686d4c679d225d734427bb", "commit_date": "2023-10-16T17:45:21Z", "commit_message": "Fix badname option to be singular just like useradd.\n\nBadnames still accepted, note that previously usage already stated\nsingular form, whilst manpage and real one was plural only.\n\nFixes: 45d6746219 (\"src: correct \"badname\" option\")\n\nSigned-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e45fff44b55d0daa59cc6aedfb26ae81a2ebc62", "commit_date": "2023-10-16T17:45:21Z", "commit_message": "Fix mixed-whitespace\n\nSigned-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d50e1e15f749467fa3f93386d15b8651dd5d2bf", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "Remove TODO\n\nSad to remove this file, but things are going on and it doesn't seem to\nbe up to date.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe299017b1ead8a712c9f65f6aa7c47b0bae4a6f", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "Remove shadow.spec.in\n\nThe file isn't up to date with the latest development, the last change\nwas made 15 years ago, so I'm removing it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0546212c017f5550cf69d8ba7e779ae7ff9f5dc", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "Remove .travis.yml\n\nIt isn't used anywhere so let's remove it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c883786f4f089671769fb335e81d93d800782280", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "doc: remove WISHLIST\n\nAnother file that I remove with sadness. We were unable to complete the\nfirst item but we are working hard on it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc35dfe4ecfdea64e5b9ffaf05724c2ce59bcb0b", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "doc: remove README.platforms\n\nI remove this file with sadness, as it contains data from old times.\nUnfortunately, this data is no longer relevant. The source code\nmanagement tool will keep it in memory.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2cfa1743d3a6560692266940464f918638e55be1", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "doc: remove cracklib26.diff\n\nKeeping a patch for a file no longer maintained is a bad idea, so I'm\nremoving it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a43d72e42fd0c9f54842af56e6ceda5ec4b290f", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "doc: remove console.c.spec.txt\n\nI guess we are keeping this for historical purposes more than anything\nelse. If so, anybody can check the git history to recover the\nspecification.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b91b3793a94fba18d2f4307bb828772184b302c8", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "contrib: remove udbachk.tgz\n\nHaving source code in a compressed file doesn't seem like a good idea. I\nchecked several distributions and they don't distribute this binary, so\nlet's remove it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d702e0809793ec0d00ba675097caec0f30a8033f", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "contrib: remove shadow-anonftp.patch\n\nThe patch is never applied upstream. If I were to take a gamble, I would\neven say that it throws an error when trying to patch.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "52d219825266b658cf208f590bd695d1cebb5995", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "contrib: remove groupmems.shar\n\nNot sure what this file is exactly, but there's already a groupmems.c\nthat should generate the binary responsible for managing  the members of\na user's primary group.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fbcd8b536aadf022efe0ddf8be92a631889d6bf8", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "contrib: remove atudel\n\nAFAIK, it isn't included in any distribution and it isn't used\ninternally in the project, so let's remove it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13a77133841982e3ce604e0b78a334f22b71df7d", "commit_date": "2023-10-04T18:31:38Z", "commit_message": "CI: remove .builds folder\n\nWe stopped using the CI relying on this folder and moved to Github's, so\nI'm removing these files.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48aa12af31c0b72872b411857d03a518a4200a3d", "commit_date": "2023-10-03T07:24:47Z", "commit_message": "useradd: Set proper SELinux labels for def_usrtemplate\n\nFixes: 74c17c716 (\"Add support for skeleton files from /usr/etc/skel\")\n\nSigned-off-by: Johannes Segitz <jsegitz@suse.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f49e3fd3e869246a4f78efe07c104c0b681e41b", "commit_date": "2023-09-29T07:24:01Z", "commit_message": "doc: add unit tests\n\nBrief description of the unit testing framework and how to create test\ncases with it.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0fc697a4b1bee92e568f0c0ac7e612db88736fcd", "commit_date": "2023-09-29T07:24:01Z", "commit_message": "CI: build and run unit tests\n\nRun `make check` after the project is built in every runner.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "015448b049a748126589463b4366a1fbda909c15", "commit_date": "2023-09-29T07:24:01Z", "commit_message": "tests: happy path for active_sessions_count()\n\nSimple test to check the recently implemented logind functionality. It\nalso contains the changes to the build infrastructure, and the\ngitignore.\n\nResolves: https://github.com/shadow-maint/shadow/issues/790\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "163c424999a3e097c6c6da87cc9df3041b4e03f6", "commit_date": "2023-09-29T07:24:01Z", "commit_message": "configure: add cmocka for unit tests\n\nPrepare the ground for unit tests.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "247a869ccdc442d39cd1d0d2a53014e3af26516c", "commit_date": "2023-09-29T07:20:43Z", "commit_message": "faillog: check for overflows\n\nCheck for arithmetic overflows when computing offsets to avoid file\ncorruptions for huge UIDs.\n\nRefactor the file lookup into a separate function.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5178f8c5afb612f6ddf5363823547e080e7f546b", "commit_date": "2023-09-15T17:57:16Z", "commit_message": "utmp: call prepare_utmp() even if utent is NULL\n\nupdate_utmp() should also return 0 when success.\n\nFixes: 1f368e1c1838de9d476a36897d7c53394569de08 (\"utmp: update\n`update_utmp()\")\nResolves: https://github.com/shadow-maint/shadow/issues/805\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bef4da47be72a7fd63f87f327daea9669746bb65", "commit_date": "2023-09-04T14:04:42Z", "commit_message": "groupadd: Improve error message when opening group file fails.\n\nBoth gr_open and sgr_open are using commonio_open function and when\nthere is a failure this function sets errno accordingly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1fd94d7d5b14e34a26ea1b3a2030c376df9ba36", "commit_date": "2023-09-04T13:57:43Z", "commit_message": "lib/mempcpy.[ch]: Remove our definition of mempcpy(3)\n\nIt is provided by glibc, musl, and FreeBSD.\n\nReported-by: Sam James <sam@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9b0f8ddc30527727d66ca2bd9cd64977993b8cf5", "commit_date": "2023-09-04T13:57:18Z", "commit_message": "lib/pwauth.c: Replace getpass(3) by agetpass()\n\nCloses: <https://github.com/shadow-maint/shadow/issues/797>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c45a6e8bab48aec2c527e33d55ac60f19507dfb", "commit_date": "2023-09-04T13:57:18Z", "commit_message": "lib/agetpass.h: Move prototypes to dedicated header\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "158866bfdcaa9aea4a8e355975b9aa9200c69fce", "commit_date": "2023-09-04T13:57:18Z", "commit_message": "lib/pwauth.c: Simplify empty string\n\nAnd do not set 'clear' to point to the empty string.  After this commit,\n'clear' only stores the result of getpass(3).  This will be useful to\nchange the code to use agetpass().\n\n$ grep '\\<clear\\>' lib/pwauth.c;\n\tchar *clear = NULL;\n\t\tclear = getpass (prompt);\n\t\tinput = (clear == NULL) ? \"\" : clear;\n\t\tclear = getpass (prompt);\n\t\tinput = (clear == NULL) ? \"\" : clear;\n\tif (NULL != clear) {\n\t\tstrzero (clear);\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "adbdd086a27f865284c954a467a4def30ca147ac", "commit_date": "2023-09-04T13:57:18Z", "commit_message": "lib/pwauth.c: Remove dead code\n\nThere are no users of 'clear_pass' and 'wipe_clear_pass'.\n\n$ grep -rn '\\<clear_pass\\>'\nlib/pwauth.c:35:/*@null@*/char *clear_pass = NULL;\nlib/pwauth.c:199:\t * not wipe it (the caller should wipe clear_pass when it is\nlib/pwauth.c:203:\tclear_pass = clear;\n\n$ grep -rn wipe_clear_pass\nlib/pwauth.c:34:bool wipe_clear_pass = true;\nlib/pwauth.c:198:\t * if the external variable wipe_clear_pass is zero, we will\nlib/pwauth.c:204:\tif (wipe_clear_pass && (NULL != clear) && ('\\0' != *clear)) {\nChangeLog:3813:\t* lib/pwauth.c: Use a boolean for wipe_clear_pass and use_skey.\n\nRemove them.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b393114c7b83ea1c9e8278be2a5a8fc94626fab", "commit_date": "2023-09-04T13:57:18Z", "commit_message": "lib/pwauth.c: Remove dead code\n\nIf the string is \"\", then strzero() is a no-op.  We don't need to test\nthat.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8893c514806a3e9cba3842de0e342b0c69b1e5d5", "commit_date": "2023-09-04T13:47:14Z", "commit_message": "autogen.sh: Support out-of-tree builds\n\nThis allows to do the following:\n\n~/src/shadow/shadow/master$ mkdir .tmp/ && cd .tmp/\n~/src/shadow/shadow/master/.tmp$ ../autogen.sh\n\nLink: <https://github.com/shadow-maint/shadow/issues/795>\nReviewed-by: Sam James <sam@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9514a841bc90d2a8f6b66768f79c995fe77514f3", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "zustr2stp.h: Assert some assumptions about the size\n\nIf the destination buffer is an array, we can check our assumptions.\nThis adds a readable way to explain that dsize must be strictly > ssize.\nThe reason is that the destination string is the source + '\\0'.\n\nIf the destination is not an array, it's up to _FORTIFY_SOURCE or\n-fanalyzer to catch newly introduced errors.  There's nothing we can do;\nat least not portably.\n\nSuggested-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3bf8d68f10f2426eda2dd27a21cc0f2a996d5693", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "strlcpy.[ch]: Add strlcpy_()\n\nThis function is like strlcpy(3), but returns -1 on truncation, which\nmakes it much easier to test.  strlcpy(3) is useful in two cases:\n\n-  We don't care if the output is truncated.  strlcpy(3) is fine for\n   those, and the return value can be ignored.\n\n-  Truncation is bad.  In that case, we just want to signal truncation,\n   and the length of the original string is quite useless.  Return the\n   length iff no truncation so that we can use it if necessary.\n\nThis simplifies the definition of the STRLCPY() macro.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7a292ed4f69bd2d5b97dd25cfdeccdde5319512", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "Use bzero(3) instead of its pattern\n\nIt was blessed by POSIX.1-2001, and GCC says that it won't go away,\npossibly ever.\n\nmemset(3) is dangerous, as the 2nd and 3rd arguments can be accidentally\nswapped --who remembers what's the order of the 2nd and 3rd parameters\nto memset(3) without checking the manual page or some code that uses\nit?--.  Some recent compilers may be able to catch that via some\nwarnings, but those are not infalible.  And even if compiler warnings\ncould always catch that, the time lost in fixing or checking the docs is\nlost for no clear gain.  Having a sane API that is unambiguous is the\nRight Thing (tm); and that API is bzero(3).\n\nIf someone doesn't believe memset(3) is error-prone, please read the\nbook \"Unix Network Programming\", Volume 1, 3rd Edition by Stevens, et\nal., Section 1.2.  See a stackoverflow reference in the link below[1].\n\nbzero(3) had a bad fame in the bad old days, because some ancient\nsystems (I'm talking of many decades ago) shipped a broken version of\nbzero(3).  We can assume that all systems in which current shadow utils\ncan be built, have a working version of bzero(3) --if not, please fix\nyour broken system; don't blame the programmer--.\n\nOne reason that some use today to avoid bzero(3) in favor of memset(3)\nis that memset(3) is more often used; but that's a circular reasoning.\nEven if bzero(3) wasn't supported by the system, it would need to be\ninvented.  It's the right API.\n\nAnother reason that some argue is that POSIX.1-2008 removed the\nspecification of bzero(3).  That's not a problem, because GCC will\nprobably support it forever, and even if it didn't, we can redefine it\nlike we do with memzero().  bzero(3) is just a one-liner wrapper around\nmemset(3).\n\nLink: [1] <https://stackoverflow.com/a/17097978>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "624bacfbd86eddae09fa08d08685b8f6fcdff9f1", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "Use CALLOC() instead of its pattern\n\nMALLOC() + memset() is simpler written as CALLOC().\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24367027d6aa3b2a906c303d3adc6020fcc1a0a3", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "Use STRLCPY() instead of its pattern\n\nThis makes it harder to make mistakes while editing the code.  Since the\nsizeof's can be autocalculated, let the machine do that.  It also\nreduces the cognitive load while reading the code.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "370652ba058c6a1099d40fa813e0d8a71ba4cb4c", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "defines.h: Remove definition of STRFCPY()\n\nIt's not being used anymore.  We got rid of it in favor of better APIs.\n\nWell, it's still being used in one place: a contrib/ patch, but I\nexplicitly want to break it, so that someone reviews it.  I don't want\nto modify it, since it's not being tested, so it would be very risky for\nme to touch it.  Instead, let it bitrot, and if someone cares, they'll\nupdate it correctly.\n\nBTW, the comment that said /* danger -side effects */ was wrong:\nsizeof() doesn't evaluate the argument (unless it's a VLA), so there\nwasn't really a double-evaluation issue.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3029883888266d7121bb267c6cf4ad79b6f2c144", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "passwd: Replace STRFCPY() by STRLCPY()\n\nThe variables are only being read as strings (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bfcf1724c4885879a3001710c143385140678d5", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "gpasswd: Replace STRFCPY() by STRLCPY()\n\nThe variable is only being read as a string (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcc25a03cd448597472c076e6fae0c0face0693e", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "login: Replace STRFCPY() by STRLCPY()\n\nThe variable is only being read as a string (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6dacb154e51c3f79d42652003ce5b6e160ef4195", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "su: Replace STRFCPY() by STRLCPY()\n\nThe variables are only being read as strings (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3e0913f11923edca6999d8682b18ad2b3579bfd1", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "sulogin: Replace STRFCPY() by STRLCPY()\n\nThe variable is only being read as a string (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ffc1a76f58aae642358d7a4fb9a305c98e26273", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "chsh: Replace STRFCPY() by STRLCPY()\n\nThe variables are only being read as strings (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e33195c8e05169767e472ed73cd482aafdc2bea", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "chfn: Replace STRFCPY() by STRLCPY()\n\nThe variables are only being read as strings (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5579b40e357a69df434b7549680d2e13ffab16e0", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "chage: Replace STRFCPY() by STRLCPY()\n\nThe variables are only being read as strings (char *), so data after the\n'\\0' can't be leaked.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "33abc8bcd96fcc77684ba31e7eaf3d6cac09c293", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "strlcpy.h: Add STRLCPY() macro\n\nIt wraps strlcpy(3bsd) so that it performs some steps that one might\nforget, or might be prone to accidents:\n\n-  It calculates the size of the destination buffer, and makes sure it's\n   an array (otherwise, using sizeof(dst) would be very bad).\n\n-  It calculates if there's truncation, returning an easy-to-use value.\n\nBTW, this macro doesn't have any issues of double evaluation, because\nsizeof() doesn't evaluate its argument (unless it's a VLA, but then\nthe static_assert(3) within SIZEOF_ARRAY() makes sure VLAs are not\nallowed).\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b1b5c46668385e8021e2b1faf569b1bea27e769a", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "Use ZUSTR2STP() instead of its pattern\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "983a8446337abd80cce3883a864b82367b78d52f", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "zustr2stp.h: Add ZUSTR2STP() macro\n\nIt's a wrapper around zustr2stp() that calls SIZEOF_ARRAY() internally.\nThe function call is usually --in our code base, always-- called with an\narray as the second argument.  For such an argument, one should call\nSIZEOF_ARRAY().  To avoid mistakes, and simplify usage, let's add this\nmacro that does it internally.\n\nBTW, this macro doesn't have any issues of double evaluation, because\nsizeof() doesn't evaluate its argument (unless it's a VLA, but then\nthe static_assert(3) within SIZEOF_ARRAY() makes sure VLAs are not\nallowed).\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02b1471d5bef083726bcfdf493cd344974de4009", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "Call zustr2stp() where appropriate\n\nThese calls were intending to copy from a NUL-padded (possibly\nnon-NUL-terminated) character sequences contained in fixed-width arrays,\ninto a string, where extra padding is superfluous.  Use the appropriate\ncall, which removes the superfluous work.  That reduces the chance of\nconfusing maintainers about the intention of the code.\n\nWhile at it, use the appropriate third parameter, which is the size of\nthe source buffer, and not the one of the destination buffer.  As a side\neffect, this reduces the use of '-1', which itself reduces the chance of\noff-by-one bugs.\n\nAlso, since using sizeof() on an array is dangerous, use SIZEOF_ARRAY().\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a576391d66483048095998d6f81b175a1ef5ee3", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "zustr2stp.[ch]: Add zustr2stp()\n\nThere's no standard function that copies from a null-padded character\nsequence into a string.\n\nA few standard functions can be workarounded to do that:\n\n-  strncat(3):  This function is designed to catenate from a null-padded\n   character sequence into a string.  The catch is that there's no\n   *cpy() equivalent of it --strncpy(3) is not at all related to\n   strncat(3); don't be fooled by the confusing name--, so one would\n   need to zero the first byte before the call to strncat(3).  It also\n   has the inconvenient that it returns a useless value.\n\n-  strncpy(3):  This function is designed to copy from a string to a\n   null-padded character sequence; the opposite of what we want to do.\n   If one passes the size of src instead of the size of dst, and then\n   manually zeroes the last byte of the dst buffer, something similar\n   to what we want happens.  However, this does more than what we want:\n   it also padds with NUL the remaining bytes after the terminating NUL.\n   That extra work can confuse maintainers to believe that it's\n   necessary.  That is exactly what happens in logout.c.\n\nsrc/logoutd.c-46-\t/*\nsrc/logoutd.c-47-\t * ut_user may not have the terminating NUL.\nsrc/logoutd.c-48-\t */\nsrc/logoutd.c:49:\tstrncpy (user, ut->ut_user, sizeof (ut->ut_user));\nsrc/logoutd.c-50-\tuser[sizeof (ut->ut_user)] = '\\0';\n\n   In that logout.c case --and in most invocations of strncpy(3), which\n   is usually a wrong tool-- the extra work is not wanted, so it's\n   preferrable to use the right tool, a function that does exactly\n   what's needed and nothing more than that.  That tool is zustr2stp().\n\nRead string_copying(7) for a more complete comparison of string copying\nfunctions.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec1cc096e8aee8284bfffbe8b1045c3e5297e2f2", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "libmisc: Fix wrong #include\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f3ee47fe3f538c72e9d4b4f2c167d102110a1672", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "Use MEMZERO() instead of its pattern\n\nThis patch implicitly adds the safety of SIZEOF_ARRAY(), since the calls\nwere using sizeof() instead.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64ab4012398343e474e61fc4214dccb37f9ee994", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "memzero.h: Add MEMZERO() macro\n\nIt calculates the size of the array safely, via SIZEOF_ARRAY(), instead of\nsizeof(), which can be dangerous.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e29994218960382fea8854d58e44af3b5a405f94", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "sizeof.h: Add SIZEOF_ARRAY() macro\n\nThis makes it safe to call sizeof() on an array.  Calling sizeof()\ndirectly on an array is dangerous, because if the array changes to be a\npointer, the behavior will unexpectedly change.  It's the same problem\nas with NITEMS().\n\nLink: <https://stackoverflow.com/a/57537491>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "49ea7327d96d1f5793fdd9b5c2bd1d6e252b3f6b", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "sizeof.h: Make NITEMS() and derivative macros safe against pointers\n\nBy using must_be_array(), code that calls NITEMS() or STRLEN() with\nnon-arrays will not compile.\n\nLink: <https://stackoverflow.com/a/57537491>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c3a8d02b9f66763b3ef1756ba1dec4e9b039d14e", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "must_be.h: Add must_be_array() macro\n\nThis macro statically asserts that the argument is an array.\n\nLink: <https://stackoverflow.com/a/57537491>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10f31a97e2b2d0de396702bce56ce9464c4cc4ac", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "must_be.h: Add must_be() macro\n\nIt's like static_assert(3), but can be used in more places.  It's\nnecessary for writing a must_be_array() macro.\n\nLink: <https://stackoverflow.com/a/57537491>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "328958ca0168e3ce29509efeb190961d3affcc8f", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "sizeof.h: Move sizeof()-related macros to their own header\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "246edc0481298dfcce505fedbc5e429738fccde2", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "memzero.h: Remove no-op assignment\n\nmemset(3) returns the input pointer.  The assignment was effectively a\nno-op, and just confused the code.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2daa6cc65d51b8360517a896e7a06bfd46de8a6e", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "memzero.[ch]: Define memzero() and strzero() as inline functions\n\nThere's no need to have these as macros, so use functions, which are a\nlot safer: there's no need to worry about multiple evaluation of args,\nand there's also more type safety.  Compiler warnings are also simpler,\nas they don't dump all the nested macros.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fca2fd65c08c2012e5c3ccc0fceb588f07c920cc", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "memzero.h: Remove outdated comments\n\nThese comments were wrong.  Remove them instead of fixing them, since\nnow that we have this small header file, it's much easier to follow the\npreprocessor conditionals.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6b11077f09c7990740d82c020b97c3819747effb", "commit_date": "2023-09-01T07:39:23Z", "commit_message": "memzero.h: Move memzero() and strzero() to their own header\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "093fb605f9ca0df8310210377b12c0cf2ea5110c", "commit_date": "2023-08-31T06:55:26Z", "commit_message": "lib: Merge libmisc into libshadow\n\nThe separation was unnecessary, and caused build problems.  Let's go\nwild and obliterate the library.  The files are moved to libshadow.\n\nScripted change:\n\n$ find libmisc/ -type f \\\n| grep '\\.[chy]$' \\\n| xargs mv -t lib;\n\nPlus updating the Makefile and other references.  While at it, I've\nsorted the sources lists.\n\nLink: <https://github.com/shadow-maint/shadow/pull/792>\nReported-by: David Seifert <soap@gentoo.org>\nCc: Sam James <sam@gentoo.org>\nCc: Christian Bricart <christian@bricart.de>\nCc: Michael Vetter <jubalh@iodoru.org>\nCc: Robert F\u00f6rster <Dessa@gmake.de>\n[ soap tested the Gentoo package ]\nTested-by: David Seifert <soap@gentoo.org>\nAcked-by: David Seifert <soap@gentoo.org>\nAcked-by: Serge Hallyn <serge@hallyn.com>\nAcked-by: Iker Pedrosa <ipedrosa@redhat.com>\nAcked-by: <lslebodn@fedoraproject.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c34c2606cf8f0a52113156d9e22b7a35b391a17e", "commit_date": "2023-08-30T15:22:38Z", "commit_message": "lib, libmisc: Move source files to lib (where their headers were)\n\nScripted change:\n\n$ find lib/ -type f \\\n| grep '\\.h$' \\\n| sed 's,lib/,libmisc/,' \\\n| sed 's,\\.h$,.c,' \\\n| xargs find 2>/dev/null \\\n| xargs mv -t lib/;\n\nPlus updating the Makefiles.\n\nCloses: <https://github.com/shadow-maint/shadow/issues/791>\nCloses: <https://bugs.gentoo.org/912446>\nLink: <https://github.com/shadow-maint/shadow/issues/763#issuecomment-1664383425>\nLink: <https://github.com/shadow-maint/shadow/pull/776>\nLink: <https://github.com/shadow-maint/shadow/commit/d0518cc250afeaceb772a7f50a900cfc9b3ab937>\nReported-by: Christian Bricart <christian@bricart.de>\nReported-by: Robert Marmorstein <robert@marmorstein.org>\nCc: Sam James <sam@gentoo.org>\n[ jubalh tested the openSUSE package ]\nTested-by: Michael Vetter <jubalh@iodoru.org>\nAcked-by: Michael Vetter <jubalh@iodoru.org>\n[ Robert F. tested the Gentoo package ]\nTested-by: Robert F\u00f6rster <Dessa@gmake.de>\nCc: David Seifert <soap@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f76c31f50ed0cca018591cc2d0b43837d6224f7d", "commit_date": "2023-08-21T21:04:09Z", "commit_message": "Avoid usage of sprintf\n\nsprintf(3) does not take the destination buffer into account. Although\nthe destination in these case is large enough, sprintf(3) indicates a\ncode smell.\n\nUse snprintf(3).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0d3ba69340f9257501681ec516d75f5c5562e6e", "commit_date": "2023-08-21T20:56:44Z", "commit_message": "commonio: check for path truncations\n\nBail out if the paths generated for the backup and replacement database\nare truncated.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54ab542887994f8b6e5411469d6867e3a2e58800", "commit_date": "2023-08-21T19:05:34Z", "commit_message": "lib/btrfs: avoid NULL-dereference\n\n    btrfs.c:42:13: warning: use of NULL 'cmd' where non-null expected [CWE-476] [-Wanalyzer-null-argument]\n\nReviewed-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a08021eb0e6d711a8e1655eb5736a7f3679ab7a9", "commit_date": "2023-08-21T19:05:27Z", "commit_message": "lib/commonio: drop dead store\n\n    commonio.c:522:15: warning: Although the value stored to 'cp' is used in the enclosing expression, the value is never actually read from 'cp' [deadcode.DeadStores]\n\nReviewed-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "931e7c0c2fbcff472e489c5c5a1d42746d93868b", "commit_date": "2023-08-21T19:05:18Z", "commit_message": "login: use strlcpy to always NUL terminate\n\n    login.c:728:25: warning: \u2018strncpy\u2019 specified bound 256 equals destination size [-Wstringop-truncation]\n\nReviewed-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15f4421f10c0056c9ae7619dbb5bc2fd4a54c95c", "commit_date": "2023-08-21T18:54:27Z", "commit_message": "lib: avoid dropping const qualifier during cast\n\n    subordinateio.c:360:20: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      360 |         range1 = (*(struct commonio_entry **) p1)->eptr;\n          |                    ^\n    subordinateio.c:364:20: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      364 |         range2 = (*(struct commonio_entry **) p2)->eptr;\n          |                    ^\n\n    groupio.c:215:15: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      215 |         if ((*(struct commonio_entry **) p1)->eptr == NULL) {\n          |               ^\n    groupio.c:218:15: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      218 |         if ((*(struct commonio_entry **) p2)->eptr == NULL) {\n          |               ^\n    groupio.c:222:34: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      222 |         u1 = ((struct group *) (*(struct commonio_entry **) p1)->eptr)->gr_gid;\n          |                                  ^\n    groupio.c:223:34: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      223 |         u2 = ((struct group *) (*(struct commonio_entry **) p2)->eptr)->gr_gid;\n          |                                  ^\n\n    pwio.c:187:15: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      187 |         if ((*(struct commonio_entry **) p1)->eptr == NULL)\n          |               ^\n    pwio.c:189:15: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      189 |         if ((*(struct commonio_entry **) p2)->eptr == NULL)\n          |               ^\n    pwio.c:192:35: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      192 |         u1 = ((struct passwd *) (*(struct commonio_entry **) p1)->eptr)->pw_uid;\n          |                                   ^\n    pwio.c:193:35: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]\n      193 |         u2 = ((struct passwd *) (*(struct commonio_entry **) p2)->eptr)->pw_uid;\n          |                                   ^\n\nReviewed-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "856ffcfa5e998f323c8f40a215e5695cd6d5e75b", "commit_date": "2023-08-21T09:43:30Z", "commit_message": "Drop unnecessary cast to same type", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35edae5892eabfefa0bb485a7a431bd0c938395a", "commit_date": "2023-08-21T09:43:18Z", "commit_message": "Declare usage and failure handler noreturn\n\nAssist static analyzers in understanding final code paths.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1aaa4ec5ba8c59130ebe28d3e0f5c9121f86d8c7", "commit_date": "2023-08-21T09:29:17Z", "commit_message": "lib/tcbfuncs: operate on file descriptor rather than path", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f45498a6c2867c26ecfd388e15cadf73d12b98eb", "commit_date": "2023-08-19T01:35:15Z", "commit_message": "libmisc/write_full.c: Improve write_full()\n\nDocumentation:\n\n-  Correct the comment documenting the function:\n\n   write_full() doesn't write \"up to\" count bytes (which is write(2)'s\n   behavior, and exactly what this function is designed to avoid), but\n   rather exactly count bytes (on success).\n\n-  While fixing the documentation, take the time to add a man-page-like\n   comment as in other APIs.  Especially, since we'll have to document\n   a few other changes from this patch, such as the modified return\n   values.\n\n-  Partial writes are still possible on error.  It's the caller's\n   responsibility to handle that possibility.\n\nAPI:\n\n-  In write(2), it's useful to know how many bytes were transferred,\n   since it can have short writes.  In this API, since it either writes\n   it all or fails, that value is useless, and callers only want to know\n   if it succeeded or not.  Thus, just return 0 or -1.\n\nImplementation:\n\n-  Use `== -1` instead of `< 0` to check for write(2) syscall errors.\n   This is wisdom from Michael Kerrisk.  This convention is useful\n   because it more explicitly tells maintainers that the only value\n   which can lead to that path is -1.  Otherwise, a maintainer of the\n   code might be confused to think that other negative values are\n   possible.  Keep it simple.\n\n-  The path under `if (res == 0)` was unreachable, since the loop\n   condition `while (count > 0)` precludes that possibility.  Remove the\n   dead code.\n\n-  Use a temporary variable of type `const char *` to avoid a cast.\n\n-  Rename `res`, which just holds the result from write(2), to `w`,\n   which more clearly shows that it's just a very-short-lived variable\n   (by it's one-letter name), and also relates itself more to write(2).\n   I find it more readable.\n\n-  Move the definition of `w` to the top of the function.  Now that the\n   function is significantly shorter, the lifetime of the variable is\n   clearer, and I find it more readable this way.\n\nUse:\n\n-  Also use `== -1` to check errors.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "890f911e17169e44b43fe98742540267093559ea", "commit_date": "2023-08-18T23:04:11Z", "commit_message": "Replace __{BEGIN,END}_DECLS with #ifdef __cplusplus\n\nFixes the build with musl libc.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "014536f5d55df33fc032d7a14d9f9d975d569722", "commit_date": "2023-08-16T02:38:30Z", "commit_message": "release 4.14.0\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca0f828e7a108b2860c10c2027115e45f74479f6", "commit_date": "2023-08-14T16:51:36Z", "commit_message": "pre-release 4.14.0-rc5\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebad5f840a53d6824b1ee65f420837aa2a496380", "commit_date": "2023-08-14T14:08:35Z", "commit_message": "configure.ac: check for strlcpy\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae2a4507ed145b511f65db051448097d09fef02a", "commit_date": "2023-08-14T12:06:51Z", "commit_message": "Remove intree website\n\nAFAIK these files were not used in a while.\nOn 2023-04-27 we also archived the GitHub pages based repo:\nhttps://github.com/shadow-maint/shadow-www\n\nIn https://github.com/shadow-maint/shadow/commit/1654f42194ba7804c99d5ac96346a1a19fb793d7 we mention the regular repo URL as our home page.\n\nAlso see:\nhttps://github.com/shadow-maint/shadow/issues/114", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1924dc5a1e55066c8dbfb04009a409e28fa7128", "commit_date": "2023-08-13T04:17:52Z", "commit_message": "4.14.0-rc4 pre-release\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee3e6112d3800757208732d6a4ca6e1141cbbf06", "commit_date": "2023-08-13T04:16:56Z", "commit_message": "Releases: add etc/shadow-maint to distfiles\n\nCloses #784\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2492fc00d4d082c21df771b0938dfadd26c5529f", "commit_date": "2023-08-10T14:33:07Z", "commit_message": "4.14.0-rc3\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "776bbd0ccb7460d51d17fd41cd8bbf793f18d0e9", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "libmisc: include freezero\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e0a310acf5111251589116343897a63ebc88e7a", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "libmisc: add freezero source code\n\nIf shadow is built without libbsd support, then freezero() needs to be\nprovided from the project.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7d5eeb21353489a6295c08bb5df99d7781fabb5a", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "libmisc: add readpassphrase source code\n\nIf shadow is built without libbsd support, then readpassphrase() needs\nto be provided from the project.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c408c4ad3db6fd713098d821773f91eaf081f798", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "configure: add `with-libbsd` option\n\nIt enables the build with libbsd support. By default it is enabled.\n\nResolves: https://github.com/shadow-maint/shadow/issues/779\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ddd10482b2e0d5b60af9573385f1da50e312dc0", "commit_date": "2023-08-10T02:33:21Z", "commit_message": "man: include `shadow-man.xsl` in tarball\n\nThis will help generate man pages from tarball.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e17459fa15fea9ac675bab0059193026aaf6e18", "commit_date": "2023-08-10T02:33:21Z", "commit_message": "man: include `its.rules` in tarball\n\nThis will help generate the man pages from tarball.\n\nResolves: https://github.com/shadow-maint/shadow/issues/781\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c89b3263509f1d7dde353df87e46a4c8d8dc8cae", "commit_date": "2023-08-07T14:42:11Z", "commit_message": "autogen: enable lastlog build\n\nAdd \"--enable-lastlog\" to include lastlog man pages in tarball.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "969549fdf0cd43b46c778a7854c053af19248711", "commit_date": "2023-08-04T22:15:42Z", "commit_message": "Add wrapper for write(2)\n\nwrite(2) may not write the complete given buffer.  Add a wrapper to\navoid short writes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d63f3a0c0a3bcb185d12db72ac477e1cf91f50d9", "commit_date": "2023-08-04T21:24:54Z", "commit_message": "tag 4.14.0-rc2\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0518cc250afeaceb772a7f50a900cfc9b3ab937", "commit_date": "2023-08-04T20:39:55Z", "commit_message": "Add new files to libmisc_la_SOURCES\n\nResolves https://github.com/shadow-maint/shadow/issues/763", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4107c49ecdf6c0bf5d5a152f86da7fb1a2fdb2db", "commit_date": "2023-08-04T19:15:49Z", "commit_message": "Add a make dist CI test\n\nAdd a CI test to check that make dist builds a usable tarball.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95296dfd674fc053b21ad5067dde5578055c0524", "commit_date": "2023-08-03T16:28:59Z", "commit_message": "4.14.0-rc1\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf5596fc79b18c65d68f5465a4eea87ab2d25be9", "commit_date": "2023-08-03T16:28:54Z", "commit_message": "remove xmalloc.c from POTFILES.in\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2155fadf15706b8591c59ea57276f31fe2dd254", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "logoutd: add missing <utmp.h> include\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02e3e04205e5cb46916408632a43f9fe7391b83f", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "CI: compile old utmp interface in Fedora\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50affc546ff96e9a91dba2339a696b5b0c3c9ad8", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "src: add SELINUX library\n\nWith the recent changes both login and su compilation fail because there\nare some missing dependencies from SELINUX library. Thus, add LIBSELINUX\nto su and login for those cases where the library is used.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78c09e3afe6d3dc281b416fbc47204387072a7e0", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: conditionally compile `utmp.c` and `logind.c`\n\nDepending on the configuration option selected.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b7cc053872cf4ce77fd74dc037f43f34e951e83", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "lib: replace `USER_NAME_MAX_LENGTH` macro\n\nReplace it by `sysconf(_SC_LOGIN_NAME_MAX)`, which is the maximum\nusername length supported by the kernel.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb8f44d73fc64cf26ed10cebf9dce9d0b865501d", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: call `active_sessions_count()`\n\nReplace the utmp dependent code with the call to\n`active_sessions_count()`.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ede0665a5a2aca27eb2c97f6ba756d3164442341", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: implement `active_sessions_count()`\n\nImplement `active_sessions_count()` in `utmp.c` and `logind.c`.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f368e1c1838de9d476a36897d7c53394569de08", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "utmp: update `update_utmp()`\n\nRemove `utmp` structure as an argument and include its logic inside the\nfunction. This will help remove any reference to utmp from login.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6b7108e347f35db04cf21024868ee0482c5090be", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "utmp: move `update_utmp`\n\nThe functionality from this function is related to utmp. Restrict access\nto `setutmp()` to the same file.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b6ca83ea4c4404771d896a23c3ac7fbb4d44a4d1", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "utmp: move `failtmp()`\n\nThe functionality from this function is related to btmp.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f40bdfa66a3a284a15f7b6f15aa379010d466212", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: implement `get_session_host()`\n\nImplement `get_session_host()` in `utmp.c` and `logind.c`.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb35ad15aef6190914a939b299e10c343e3e4c2a", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "configure: new option `enable-logind`\n\nCreate new configuration option `enable-logind` to select which session\nsupport functionality to build, logind or utmp. By default the option is\nlogind.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bced397c9fd66965753e5fc0fd3dfa535ca1c9b", "commit_date": "2023-07-29T02:24:36Z", "commit_message": "shadow userdel: add the adaptation to the busybox ps in 01-kill_user_procs.sh\n\nIn some embedded systems, users only use the ps\nprovided by the busybox. But the ps provided by\nthe busybox does not support the -eo option by\ndefault. As a result, an error is reported when\nthe userdel is used. So add a judgment on ps.\nIf there is no ps -eo, traverse the process directly.\n\nThe error information is as follows:\n # userdel xsl\nps: invalid option -- 'e'\n\nSigned-off-by: xiongshenglan <xiongshenglan@huawei.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a692c880f10bc561155cecda5e2bc4b40a669776", "commit_date": "2023-07-27T17:35:27Z", "commit_message": "chsh: warn if root sets a shell not listed in /etc/shells\n\nPrint a warning even for the root user if the provided shell isn't\nlisted in /etc/shells, but continue to execute the action.\nIn case of non root user exit.\n\nSee https://github.com/shadow-maint/shadow/issues/535", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5f05d78127489648330c0c136afb7eba61bd2e0", "commit_date": "2023-07-27T15:03:28Z", "commit_message": "doc: mention ci workflow file to learn about deps\n\nFix https://github.com/shadow-maint/shadow/issues/38", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35e91daba0c42df264ab2abca72f7546b549e586", "commit_date": "2023-07-22T04:34:32Z", "commit_message": "man/po/Makefile: add a comment to shadow-man-pages.pot\n\nAdd a comment at the top of that file explaining how to\nregenerate it.\n\nWe should add a README, but I don't have time to draft one\nright now.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9df4801e0b65073cc8a9031b22a73532ef7fdc2c", "commit_date": "2023-07-22T04:32:19Z", "commit_message": "newgrp: fix potential string injection\n\nSince newgrp is setuid-root, any write() system calls it does in order\nto print error messages will be done as the root user.\n\nUnprivileged users can get newgrp to print essentially arbitrary strings\nto any open file in this way by passing those strings as argv[0] when\ncalling execve(). For example:\n\n    $ setpid() { (exec -a $1$'\\n:' newgrp '' 2>/proc/sys/kernel/ns_last_pid & wait) >/dev/null; }\n    $ setpid 31000\n    $ readlink /proc/self\n    31001\n\nThis is not a vulnerability in newgrp; it is a bug in the Linux kernel.\n\nHowever, this type of bug is not new [1] and it makes sense to try to\nmitigate these types of bugs in userspace where possible.\n\n[1]: https://lwn.net/Articles/476947/\n\nSigned-off-by: Vegard Nossum <vegard.nossum@oracle.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2643f27b360d44dcb5514072316eb112a867904e", "commit_date": "2023-07-18T15:49:13Z", "commit_message": "lastlog: fix alignment of Latest header\n\nb1282224 (Add maximum padding to fit IPv6-Addresses, 2020-05-24) pads\nthe From field header using `maxIPv6Addrlen - 3`.  This leaves the\nLatest field header misaligned.  Subtract 4 (the length of \"From\").", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f4dc321c3822742cbb19c7656e56e1c0651ba9e", "commit_date": "2023-07-17T18:01:34Z", "commit_message": "configure: fix lastlog check\n\nFixes: 1bdcfa8d3710bf0a3f180b590017df096d346ade (\"lastlog: stop building by\ndefault\")\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65255ea3047be8aee7079a4f3c0cf6874232d28a", "commit_date": "2023-07-17T08:10:01Z", "commit_message": "subuid.5: reference newusers(8) rather than newusers(1)\n\nResolves: https://github.com/shadow-maint/shadow/issues/752\n\nSigned-off-by: Alan D. Salewski <ads@salewski.email>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c69fd917e3ae6b034960264649cc534eab7102a2", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "CI: build lastlog in Fedora\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "acea93eda905cf24023f2338bfebbc43429c8d18", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "man: conditionally build lastlog documentation\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03251ffbc099286b56df1a9fc8dd3bb054bf7015", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "usermod: conditionally build lastlog functionality\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d60595d8f2a3a54c239ee27cc1ea4643d4a27c1d", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "useradd: conditionally build lastlog functionality\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84a10ca019083ce971f43e29eb22bf4d3242481e", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "login: conditionally build lastlog functionality\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1bdcfa8d3710bf0a3f180b590017df096d346ade", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "lastlog: stop building by default\n\nCreated a new configuration option `--enable-lastlog` to conditionally\nbuild the lastlog binary. By default the option is disabled.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0eeb9fbf282f939edb103b73ca448b96b6214eb", "commit_date": "2023-07-14T09:49:40Z", "commit_message": "CI: update debian repos\n\nLatest debian version changed the location and format for the repos\nfile.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29da702491eea314b915ea9c7a83c9af80cf5797", "commit_date": "2023-07-12T13:31:51Z", "commit_message": "Fix yescrypt support\n\nFixes build error:\nnewusers.c: In function 'update_passwd':\nnewusers.c:433:21: error: 'sflg' undeclared (first use in this function); did you mean 'rflg'?\n\nintroduced by\nhttps://github.com/shadow-maint/shadow/commit/5cd04d03f94622c12220d4a6352824af081b8531\nwhich forgot to define sflg for these configure options:\n\n--without-sha-crypt --without-bcrypt --with-yescrypt", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53a17c1742a4b5fcf9280fd6dd85fc77588535c2", "commit_date": "2023-06-22T19:51:34Z", "commit_message": "chgpasswd: fix segfault in command-line options\n\nUsing the --sha-rounds option without first giving a crypt method via the --crypt-method option results in comparisons with a NULL pointer and thus make chgpasswd segfault:\n\n$ chgpasswd -s 1\nzsh: segmentation fault  chgpasswd -s 1\n\nCurrent patch add a sanity check before these comparisons to ensure there is a defined encryption method.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65c88a43a23c2391dcc90c0abda3e839e9c57904", "commit_date": "2023-06-11T01:35:50Z", "commit_message": "gpasswd(1): Fix password leak\n\nHow to trigger this password leak?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen gpasswd(1) asks for the new password, it asks twice (as is usual\nfor confirming the new password).  Each of those 2 password prompts\nuses agetpass() to get the password.  If the second agetpass() fails,\nthe first password, which has been copied into the 'static' buffer\n'pass' via STRFCPY(), wasn't being zeroed.\n\nagetpass() is defined in <./libmisc/agetpass.c> (around line 91), and\ncan fail for any of the following reasons:\n\n-  malloc(3) or readpassphrase(3) failure.\n\n   These are going to be difficult to trigger.  Maybe getting the system\n   to the limits of memory utilization at that exact point, so that the\n   next malloc(3) gets ENOMEM, and possibly even the OOM is triggered.\n   About readpassphrase(3), ENFILE and EINTR seem the only plausible\n   ones, and EINTR probably requires privilege or being the same user;\n   but I wouldn't discard ENFILE so easily, if a process starts opening\n   files.\n\n-  The password is longer than PASS_MAX.\n\n   The is plausible with physical access.  However, at that point, a\n   keylogger will be a much simpler attack.\n\nAnd, the attacker must be able to know when the second password is being\nintroduced, which is not going to be easy.\n\nHow to read the password after the leak?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nProvoking the leak yourself at the right point by entering a very long\npassword is easy, and inspecting the process stack at that point should\nbe doable.  Try to find some consistent patterns.\n\nThen, search for those patterns in free memory, right after the victim\nleaks their password.\n\nOnce you get the leak, a program should read all the free memory\nsearching for patterns that gpasswd(1) leaves nearby the leaked\npassword.\n\nOn 6/10/23 03:14, Seth Arnold wrote:\n> An attacker process wouldn't be able to use malloc(3) for this task.\n> There's a handful of tools available for userspace to allocate memory:\n>\n> -  brk / sbrk\n> -  mmap MAP_ANONYMOUS\n> -  mmap /dev/zero\n> -  mmap some other file\n> -  shm_open\n> -  shmget\n>\n> Most of these return only pages of zeros to a process.  Using mmap of an\n> existing file, you can get some of the contents of the file demand-loaded\n> into the memory space on the first use.\n>\n> The MAP_UNINITIALIZED flag only works if the kernel was compiled with\n> CONFIG_MMAP_ALLOW_UNINITIALIZED.  This is rare.\n>\n> malloc(3) doesn't zero memory, to our collective frustration, but all the\n> garbage in the allocations is from previous allocations in the current\n> process.  It isn't leftover from other processes.\n>\n> The avenues available for reading the memory:\n> -  /dev/mem and /dev/kmem (requires root, not available with Secure Boot)\n> -  /proc/pid/mem (requires ptrace privileges, mediated by YAMA)\n> -  ptrace (requires ptrace privileges, mediated by YAMA)\n> -  causing memory to be swapped to disk, and then inspecting the swap\n>\n> These all require a certain amount of privileges.\n\nHow to fix it?\n~~~~~~~~~~~~~~\n\nmemzero(), which internally calls explicit_bzero(3), or whatever\nalternative the system provides with a slightly different name, will\nmake sure that the buffer is zeroed in memory, and optimizations are not\nallowed to impede this zeroing.\n\nThis is not really 100% effective, since compilers may place copies of\nthe string somewhere hidden in the stack.  Those copies won't get zeroed\nby explicit_bzero(3).  However, that's arguably a compiler bug, since\ncompilers should make everything possible to avoid optimizing strings\nthat are later passed to explicit_bzero(3).  But we all know that\nsometimes it's impossible to have perfect knowledge in the compiler, so\nthis is plausible.  Nevertheless, there's nothing we can do against such\nissues, except minimizing the time such passwords are stored in plain\ntext.\n\nSecurity concerns\n~~~~~~~~~~~~~~~~~\n\nWe believe this isn't easy to exploit.  Nevertheless, and since the fix\nis trivial, this fix should probably be applied soon, and backported to\nall supported distributions, to prevent someone else having more\nimagination than us to find a way.\n\nAffected versions\n~~~~~~~~~~~~~~~~~\n\nAll.  Bug introduced in shadow 19990709.  That's the second commit in\nthe git history.\n\nFixes: 45c6603cc86c (\"[svn-upgrade] Integrating new upstream version, shadow (19990709)\")\nReported-by: Alejandro Colomar <alx@kernel.org>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Seth Arnold <seth.arnold@canonical.com>\nCc: Christian Brauner <christian@brauner.io>\nCc: Balint Reczey <rbalint@debian.org>\nCc: Sam James <sam@gentoo.org>\nCc: David Runge <dvzrv@archlinux.org>\nCc: Andreas Jaeger <aj@suse.de>\nCc: <~hallyn/shadow@lists.sr.ht>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e69d556b63f202680a47a40a974046140a3cff15", "commit_date": "2023-06-10T00:04:51Z", "commit_message": "src/useradd.c: create_mail(): Cosmetic\n\n-  Invert conditional to reduce indentation.\n-  Reduce use of whitespace and newlines while unindenting.\n-  Reorder variable declarations.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a9011808971ab8841ea13eb54cfa4c2c5d7d850", "commit_date": "2023-06-10T00:04:51Z", "commit_message": "src/useradd.c: create_home(): Cosmetic\n\n-  Invert conditional to reduce indentation.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "adf8b3f64f9a6994ce0d1bfb57d455b55a09ee05", "commit_date": "2023-06-10T00:04:47Z", "commit_message": "src/useradd.c: create_home(): Cosmetic\n\n-  Invert conditional to reduce indentation.\n-  Rewrite while loop calling strtok(3) as a for loop.  This allows\n   doing more simplification inside the loop (see next commit).\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c01664c30c217822f76eedc4a217cb383f91fde4", "commit_date": "2023-06-10T00:03:57Z", "commit_message": "src/useradd.c: create_home(): Cosmetic\n\n-  Fix indentation.  It was very broken.\n-  Move variable declaration to the top of the block in which it's used.\n-  Reduce use of whitespace and newlines.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7415885fb37505f8c543814e7508ab4dd7f234d3", "commit_date": "2023-06-10T00:02:41Z", "commit_message": "src/useradd.c: close_group_files(): Cosmetic\n\n-  Invert conditional, to reduce indentation.\n-  Reduce use of whitespace and newlines while unindenting.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89bdd3660c2bf4544b08ef9a7271f6bc8f810a52", "commit_date": "2023-06-10T00:02:41Z", "commit_message": "src/useradd.c: check_uid_range(): Cosmetic\n\n-  Merge nested conditionals into a single if, to reduce indentation.\n-  Indent (1 SP) nested preprocessor conditionals.\n-  Reduce use of whitespace and newlines while unindenting.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b06c28353157fefc82801df326d518512233d94", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "build: link passwd, chpasswd and chage against libdl", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc0aaaa18f0571af8121757c2213eda92424358e", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "configure: check whether fgetpwent_r is available before marking xprefix_getpwnam_r as reentrant", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68bf73f3196b3a05846e2eabcb1e472ede8265f0", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "passwd: fall back to non-PAM code when prefix is used\n\nPrefix does not make sense when we use PAM, so when the option\nis used behave as if --with-libpam=no was used to configure the\nproject.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2d0beef3bb27ce0d2ee7c814ecf3223d9af1b645", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "chpasswd: fall back to non-PAM code when prefix is used\n\nThe prefix option does not make sense in that scenario and the\nencryption options already do this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13b0a2bf3bcf108f550100aa04d962754f2a3476", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "chpasswd: add --prefix/-P options", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef8a4449b1345ec46054fcd9cc0c59de3fbdae83", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "chage: add --prefix/-P options", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43e60eb681513adc90fbbec67fd23091a46352fe", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "passwd: Respect --prefix/-P options\n\nAdd prefix_getpwnam_r() and xprefix_getpwnam() and make passwd\nuse prefix-aware functions when handling the database.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ded9cab35d703f21b249d8d534611319f6cf8578", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "prefix: add prefix support", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89a7ee7b227b977b1714ba8ee8fa8e4a58b2782f", "commit_date": "2023-06-09T12:48:48Z", "commit_message": "strtoday: remove unnecessary cast\n\nResolves: https://github.com/shadow-maint/shadow/issues/704\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "787ea57a186e0e7a60c75026038056cc2131ec0c", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "Use temporary variable\n\n-  Use the temporary variable more, as it helps readability: it removes\n   a derefecence, which itself allows removing some parentheses.\n\n-  Use a shorter name, which is more common with temporaries, and so\n   there's less to read.\n\n-  Assign to *ranges at the end of the function.  It's the same, but\n   with the other changes, I think this makes it slightly clearer.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2ac1e254044aa7de1bd4b8deb08b8017813f730", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "realloc(NULL, ...) is equivalent to malloc(...)\n\nDon't have a branch for when the old pointer is NULL.  realloc(3) can\nhandle that case just fine.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "09775d3718df216c75b62d73bbcc5aa060e0fc94", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "Simplify allocation APIs\n\nIf we consider simple objects as arrays of size 1, we can considerably\nsimplify these APIs, merging the *ARRAY and the non-array variants.\n\nThat will produce more readable code, since lines will be shorter (by\nnot having ARRAY in the macro names, as all macros will consistently\nhandle arrays), and the allocated size will be also more explicit.\n\nThe syntax will now be of the form:\n\n    p = MALLOC(42, foo_t);  // allocate 42 elements of type foo_t.\n    p = MALLOC(1, bar_t);   // allocate 1 element of type foo_t.\n\nThe _array() allocation functions should _never_ be called directly, and\ninstead these macros should be used.\n\nThe non-array functions (e.g., malloc(3)) still have their place, but\nare limited to allocating structures with flexible array members.  For\nany other uses, the macros should be used.\n\nThus, we don't use any array or ARRAY variants in any code any more, and\nthey are only used as implementation details of these macros.\n\nLink: <https://software.codidact.com/posts/285898/288023#answer-288023>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065a752b426266462dc0e7d9ad5a9fe79e6be16a", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "Drop alloca(3)\n\nalloca(3) fails silently if not enough memory can be allocated on the\nstack.  Use checked dynamic allocation instead.\n\nAlso drop unnecessary manual NUL assignment, ensured by snprintf(3).\n\nCo-developed-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a2b302e68a4f3e324b851c7361e40aa20a86a64", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "usermod: fix off-by-one issues\n\nAllocate enough memory for the strings, two slashes and the NUL\nterminator.\n\nReported-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "170d24a251c11dadee35f14fd2c2348fa06279b0", "commit_date": "2023-06-05T21:50:40Z", "commit_message": "libmisc/csrand.c: Update comments\n\nThose comments were written when this function used 64 bits (and\ntemporary variables of 128 bits).  Now it uses 32 bits, with temporaries\nof 64 bits, so some values have changed.\n\nFixes: 2a61122b5e8f (\"Unoptimize the higher part of the domain of csrand_uniform()\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70399856c1e7ae6bddbe26319895fd53ab895be4", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "lib/nss.c: Fix use of invalid p\n\ngetline(3) might have succeeded in a previous iteration, in which case\np points to an offset that is not valid.  Make p NULL at the end of the\nloop, to make sure it doesn't hold old stuff.\n\nLink: <https://github.com/shadow-maint/shadow/pull/737#issuecomment-1568948769>\nReported-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "848a95329c867aae726ae990051700c9ef6541fa", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "lib/nss.c: Fix use of uninitialized p\n\ngetline(3) might have never succeeded, in which case p is uninitialized\nwhen used in strtok_r(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/737#discussion_r1206007358>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54ba4814aeede61b25dc9e6212cd82787d0a4103", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "Centralize error handling\n\nThis makes the function fit in less screens.  This is to avoid consuming\nmore natural resources than we have available, and everyone knows the\nsupply of new-lines on a screen is not a renewable source[1].\n\nSome transformations have been done thanks to free(NULL) being an alias\nfor loopity_loop(), as defined three comits ago.  The real definition of\nfree(3) that everyone has been hiding is this:\n\nvoid\nfree(void *p)\n{\n\tif (p == NULL)\n\t\tloopity_loop();\n\telse\n\t\treal_free(p);\n}\n\nLink: [1] <https://www.kernel.org/doc/html/v6.3/process/coding-style.html#placing-braces-and-spaces>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07b885318f237f7129229cfb61496886a89ae505", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "Second verse, it gets worse; it gets no better than this\n\nJust in case it's not obious:\n\n\tstrlen(\"\") < 8\n\tisalpha('\\0') == false\n\tisdigit('\\0') == false\n\tisspace('\\0') == false\n\nLink: <https://github.com/shadow-maint/shadow/pull/737>\nEaster-egg: 8492dee6632e (\"subids: support nsswitch\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f9ca4b49d30c7095fab4f2e0f6a03afed6b906a", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "ROFL: Rolling on the floor looping\n\nPlease tell me this was an easter egg :P\n\n #define go_banana() ({ goto nowhere; nowhere: 0-0; })\n\nCloses: <https://github.com/shadow-maint/shadow/issues/736>\nEaster-egg: 8492dee6632e (\"subids: support nsswitch\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8219fbd421b52e6d7d5751211910be512388065c", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "This ain't no loop\n\nThis was to a loop, as \"1234\" is to computer security.\n\nNo really; a loop that ends in a (forward) goto, and has no continue in it.\n\nStill want a loop?  Take two:\n\n #define loopity_loop() do { for (;;) { break; } continue; } while (0-0)\n\nCloses: <https://github.com/shadow-maint/shadow/issues/736>\nEaster-egg: 8492dee6632e (\"subids: support nsswitch\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9233e5e0aebc210c56375a3a2bc779f20a09a82d", "commit_date": "2023-05-31T07:53:31Z", "commit_message": "newusers: Improve error message\n\nFixes: b422e3c31691: Check if crypt_method null before dereferencing\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c7327842cdcebe15caecb84a14c2b6b6eb10560", "commit_date": "2023-05-31T07:44:25Z", "commit_message": "ch(g)passwd: Check selinux permissions upon startup\n\nThe permission also need to be checked before process_root_flag() since\nthat can chroot into non-selinux environment (unavailable selinux mount\npoint for example).\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b422e3c31691412f0a5404d09f7b328477e23c48", "commit_date": "2023-05-30T19:00:12Z", "commit_message": "Check if crypt_method null before dereferencing\n\nMake sure crypto_method set before sha-rounds. Only affects newusers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d9f0246611aea527f21c15256a6340c618f22d73", "commit_date": "2023-05-30T18:56:55Z", "commit_message": "xgetXXbyYY: Simplify elifs\n\n-  Use SIZE_MAX rather than (size_t)-1, to improve readability.\n\n-  Move the only branch that breaks to the first place, so that we\n   remove an else.  This reduces nesting while parsing the code.\n\n-  Now that we only have a 2-branch conditional where both branches\n   assign to the same variable, rewrite it as a ternary, to shorten.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89c9427087f029cad177eb8fee6884d1b218a3ab", "commit_date": "2023-05-30T18:56:55Z", "commit_message": "xgetXXbyYY: Centralize error handling\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c8741a400d6a6208c334c5228b9f2db28401b578", "commit_date": "2023-05-30T18:56:55Z", "commit_message": "xgetXXbyYY: tfix\n\nIt seems obvious that it was a typo.\n\nLink: <https://github.com/shadow-maint/shadow/pull/729#discussion_r1207551013>\nFixes: e73a2194b3d2 (\"xgetXXbyYY: Handle DUP_FUNCTION failure\")\nCc: Samanta Navarro <ferivoz@riseup.net>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcc90658fd672c63e5498619e77f2d5a3d95f7d7", "commit_date": "2023-05-26T21:03:27Z", "commit_message": "xgetXXbyYY: Avoid duplicated error handling block\n\nThe error handling is performed after the loop. By just calling break it\nis possible to reuse the error handling if status is not ERANGE.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e73a2194b3d257da996cbcceaa0fb376831ae62b", "commit_date": "2023-05-26T21:03:27Z", "commit_message": "xgetXXbyYY: Handle DUP_FUNCTION failure\n\nA failure of DUP_FUNCTION is already handled for non-reentrant\nfunction wrapper. Perform the check for reentrant version as well.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a80b792afc7d557270bf4024fddc97199a5a31fb", "commit_date": "2023-05-26T20:16:29Z", "commit_message": "sub_[ug]id_{add,remove}: fix return values\n\nOn failure, these are meant to return 0 with errno set.  But if\nan nss module is loaded, they were returning -ERRNO instead.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8665fe1957b0d565701ff1b834eae89e5c4d2c9a", "commit_date": "2023-05-26T20:14:02Z", "commit_message": "usermod: Small optimization using memmove for password unlock\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3b7058110edbffcdcc592d03951cdafca184113", "commit_date": "2023-05-26T02:22:08Z", "commit_message": "Reorder logic to improve comprehensibility\n\n-  Don't else after return or fail_exit().\n-  Prefer == over != (negated logic is more complex to think about it).\n-  Reduce nesting when reasonable.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b117d55261cd4882df9571d2801dc4b1da2176f", "commit_date": "2023-05-26T02:22:08Z", "commit_message": "newusers: Fail early\n\nThere's no reason to report all errors.  Bail out at the first one,\nwhich is simpler.\n\nSuggested-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1957c8c881e232843a8d1617d66f223bf1e229c9", "commit_date": "2023-05-26T02:22:08Z", "commit_message": "newusers: Add missing error handling\n\nSome errors were being reported in stderr, but then they weren't really\nbeing treated as errors.\n\nIf mkdir(2) for EEXIST, it's possible that the sysadmin pre-created the\nuser dir; don't fail.  However, let's keep a log line, for having some\nnotice that it happened.\n\nAlso, run chmod(2) if mkdir(2) failed for EEXIST (so transform the\n'else if' into an 'if').\n\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6491fef1e0be72661aa8ed60d3784d4426f41c76", "commit_date": "2023-05-25T13:25:42Z", "commit_message": "libmisc: Use safer chroot/chdir sequence\n\nOpenSSH and coreutils' chroot call chroot first and then chdir. Doing it\nthis way is a bit safer because otherwise something could happen between\nchdir and chroot to the specified path (like exchange of links) so the\nworking directory would not end up within the chroot environment.\n\nThis is a purely defensive measure.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a116e20c76f36d6f72f101508f634b6c1bddb9be", "commit_date": "2023-05-25T13:25:42Z", "commit_message": "su: Prevent stack overflow in check_perms\n\nThis is no real world security fix.\n\nThe overflow could occur if too many layered subsystems are encountered\nbecause the function check_perms calls itself recursively.\n\nIt would already take a misconfigured system for this to achieve it.\n\nUse an iterative approach by calling the do_check_perms in a loop\ninstead of calling itself recursively.\n\nAs a side note: At least GCC 13 optimized this code and already uses\na jmp in its assembler code. I could only see the stack overflow by\nactivating address sanitizer which prevented the optimization.\n\nCo-developed-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ad359ccc69ebfac5e6447562fca5a1741111324", "commit_date": "2023-05-25T13:25:42Z", "commit_message": "subsystem: Prevent endless loop\n\nIf a user has home directory \"/\" and login shell \"*\" then login and su\nenter an endless loop by constantly switching to the next subsystem.\n\nThis could also be achieved with a layered approach so just checking\nfor \"/\" as home directory is not enough to protect against such a\nmisconfiguration.\n\nJust break the loop if it progressed too far. I doubt that this has\nnegative impact on any real setup.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "419cf1f1c4721829c4d68c9e5fee112a5da5890f", "commit_date": "2023-05-22T08:23:12Z", "commit_message": "def_load: avoid NULL deref\n\nIf econf_getStringValue() fails, it will return an error and\nset value to NULL.  Look for the error and avoid dereferencing\nvalue in that case.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e854f525d2965e45b0bb2bcfa6761a990d0c751", "commit_date": "2023-05-22T08:23:12Z", "commit_message": "def_load: split the econf from non-econf definition\n\nThe function is completely different based on USE_CONF.  Either copy\nwill be easier to read if we just keep them completely separate.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8175b1532e4bb1951264e8a6ee5f484137e5306c", "commit_date": "2023-05-19T13:02:24Z", "commit_message": "Plug econf memory leaks\n\nYou can see the memory leaks with address sanitizer if shadow is\ncompiled with `--enable-vendordir=/usr/etc`.\n\nHow to reproduce:\n\n1. Prepare a custom shell file as root\n```\nmkdir -p /etc/shells.d\necho /bin/myshell > /etc/shells.d/custom\n```\n\n2. Run chsh as regular user\n```\nchsh\n```\n\nSigned-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7321ceaf69a7028a04056e548d861b291634c2d0", "commit_date": "2023-05-18T14:03:41Z", "commit_message": "chsh: Verify that login shell path is absolute\n\nThe getusershell implementation of musl returns every line within the\n/etc/shells file, which even includes comments. Only consider absolute\npaths for login shells.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "812f934e77700afedbf5e929b282f29a47b2d9c6", "commit_date": "2023-05-18T13:36:59Z", "commit_message": "process_prefix_flag: Drop privileges\n\nUsing --prefix in a setuid binary is quite dangerous. An unprivileged\nuser could prepare a custom shadow file in home directory. During a data\nrace the user could exchange directories with links which could lead to\nexchange of shadow file in system's /etc directory.\n\nThis could be used for local privilege escalation.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1132b8923624b07183c2202c63c21ad4325ee5e8", "commit_date": "2023-05-15T13:42:40Z", "commit_message": "Update French translations\n\nPlease find attached the french updated translation of shadow-man-page,\nproofread by the debian-l10n-french mailing list contributors.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ef4477535682fd3baa242450f62d546ee3974ce", "commit_date": "2023-05-15T07:21:16Z", "commit_message": "get_pid.c: Use tighter validation checks\n\nNeither a pid_t below 1 nor a negative fd could be valid in this context.\n\nProof of Concept:\n\n$ newuidmap -1 1 1 1\nnewuidmap: Could not open proc directory for target 4294967295\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a022d39d2abbee48d3223689bea5c31592420ca6", "commit_date": "2023-05-11T22:01:43Z", "commit_message": "replace inadequate German translation of login error message\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd6db6f226db7a88d2e1c1edfcbc3f434e155b55", "commit_date": "2023-05-11T16:05:59Z", "commit_message": "Update German translations\n\nfind the attached German message catalogue proofread by the German\nlanguage team.\n\nBest regards\nMarkus\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "666468cc36197b2f313f05cc04f2b53cb8aeec14", "commit_date": "2023-05-11T16:05:29Z", "commit_message": "Remove some static char arrays\n\nSome strings are first written into static char arrays before passed to\nfunctions which expect a const char pointer anyway.\n\nIt is easier to pass these strings directly as arguments.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72290ede0e0d0cf960127bf42f11a7e227d4dac5", "commit_date": "2023-05-11T15:59:21Z", "commit_message": "commonio: Use do_lock_file again\n\nThis avoids regressions introduced with do_fcntl_lock.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4abcbb056e8894e92c71508c9ae7c63051cf4d37", "commit_date": "2023-05-10T07:15:53Z", "commit_message": "Fix broken docbook translations\n\nits by default does not support xml tags inside translatable\nunits.  Use custom its rules from\n\nhttps://www.w3.org/TR/xml-i18n-bp/#relating-docbook-plus-its\n\nto enable the tags which are in use by docbook.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0bce9c9808e6932b63a50caf537eaa528d7ed73c", "commit_date": "2023-05-08T13:16:11Z", "commit_message": "open with O_CREAT when lock path does not exist\n\nReported in #686, by wyj611 when trying to lock a file that is not\npresent\n\nLock method should be F_SETLKW rather than open file descriptor", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "627631bf9a403d39663a3c33a8e4b13147996639", "commit_date": "2023-05-05T14:15:46Z", "commit_message": "commonio_open: Remove fcntl call\n\nThe fcntl call to set FD_CLOEXEC can be performed directly with the\npreviously performed open call by using the O_CLOEXEC flag.\n\nO_CLOEXEC is required by POSIX.1-2008.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e899e3d745e9115b3229ed0b68d268fce7891252", "commit_date": "2023-05-05T14:15:46Z", "commit_message": "commonio_lock_nowait: Remove deprecated code\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7109b7c066fc0bf0b5e2dd99729fb95eef47ed58", "commit_date": "2023-05-03T12:54:28Z", "commit_message": "login_prompt: Simplify login_prompt API\n\nThe only user of login_prompt is the login tool. This implies that the\nfirst argument is always the same.\n\nIt is much easier to verify printf's format string and its argument if\nboth are next to each other.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3010ec11aedf8cb61f8f70d802a2f192375970d9", "commit_date": "2023-05-03T12:54:28Z", "commit_message": "login_prompt: Use _exit in signal handler\n\nCalling exit is not signal safe.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8fc8de382ab3f90bc8eb4807a5ee841a6bb5f647", "commit_date": "2023-05-03T12:54:28Z", "commit_message": "login_prompt: Do not parse environment variables\n\nParsing optional environment variables after a login name is a feature\nwhich is neither documented nor available in util-linux or busybox\nlogin which are other wide spread login utilities used in Linux\ndistributions as reference.\n\nRemoving this feature resolves two issues:\n\n- A memory leak exists if variables without an equal sign are used,\n  because set_env creates copies on its own. This could lead to OOM\n  situations in privileged part of login or may lead to heap spraying.\n- Environment variables are not reset between login attempts. This\n  could lead to additional environment variables set for a user who\n  never intended to do so.\n\nProof of Concept on a system with shadow login without PAM and\nutil-linux agetty:\n\n1. Provoke an invalid login, e.g. user `noone` and password `invalid`.\n   This starts shadow login and subsequent inputs are passed through\n   the function login_prompt.\n2. Provoke an invalid login with environment variables, e.g.\n   user `noone HISTFILE=/tmp/owo` and password `invalid`.\n3. Log in correctly with user `root`.\n\nNow you can see with `echo $HISTFILE` that `/tmp/owo` has been set for\nthe root user.\n\nThis requires a malicious failed login attempt and a successful login\nwithin the configured login timeout (default 60 seconds).\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0fc4d2122057530b11567503839116dca5998ce", "commit_date": "2023-04-28T16:22:48Z", "commit_message": "libmisc/yesno.c: Fix regression\n\nThe getline function does not return a pointer but the amount of read\ncharacters. The error return value to check for is -1.\n\nSet buf to NULL to avoid dereference of an uninitialized stack value.\n\nThe getline function returns -1 if size argument is NULL. Always use\na valid pointer even if size is unimportant.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c4fa6ee0af0c9d52c583d1cea6b655fb95724c1", "commit_date": "2023-04-27T07:16:08Z", "commit_message": "libmisc, man: Drop old check and advice for complex character sets in passwords\n\nAdd the relevant XKCD to the passwd(1) manual page.  It already explains\nmost of the rationale behind this patch.\n\nAdd also reference to makepasswd(1), which is a good way to generate\nstrong passwords.  Personally, I commonly run `makepasswd --chars 64` to\ncreate my passwords, or 32 for passwords I need to type interactively\noften.\n\nThe strength of a password is an exponential formula, where the base is\nthe size of the character set, and the exponent is the length of the\npassword.  That already shows why long passwords of just lowercase\nletters are better than short Pa$sw0rdZ3.  But an even more important\npoint is that humans, when forced to use symbols in a password, are more\nlikely to do trivial substitutions on simple passwords, which doesn't\nincrease strength, and can instead give a false sense of strength, which\nis dangerous.\n\nCloses: <https://github.com/shadow-maint/shadow/issues/688>\nLink: <https://xkcd.com/936/>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7078ed1e0b8a197aa9e5103986bce927abef87a4", "commit_date": "2023-04-26T22:52:54Z", "commit_message": "semanage: disconnect to free libsemanage internals\n\nDestroying the handle does not actually disconnect, see [1].\nAlso free the key on user removal.\n\n[1]: https://github.com/SELinuxProject/selinux/blob/e9072e7d45f4559887d11b518099135cbe564163/libsemanage/src/direct_api.c#L330\n\nExample adduser leak:\n\n    Direct leak of 1008 byte(s) in 14 object(s) allocated from:\n        #0 0x5638f2e782ae in __interceptor_malloc (./src/useradd+0xee2ae)\n        #1 0x7fb5cfffad09 in dbase_file_init src/database_file.c:170:45\n\n    Direct leak of 392 byte(s) in 7 object(s) allocated from:\n        #0 0x5638f2e782ae in __interceptor_malloc (./src/useradd+0xee2ae)\n        #1 0x7fb5cfffc929 in dbase_policydb_init src/database_policydb.c:187:27\n\n    Direct leak of 144 byte(s) in 2 object(s) allocated from:\n        #0 0x5638f2e782ae in __interceptor_malloc (./src/useradd+0xee2ae)\n        #1 0x7fb5cfffb519 in dbase_join_init src/database_join.c:249:28\n\n    [...]", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8dd8ce6c9a5f6e69ed4e9fa7b0c0976bb4ba332", "commit_date": "2023-04-26T22:52:54Z", "commit_message": "commonio: free removed database entries\n\nFree the actual struct of the removed entry.\n\nExample userdel report:\n\n    Direct leak of 40 byte(s) in 1 object(s) allocated from:\n        #0 0x55b230efe857 in reallocarray (./src/userdel+0xda857)\n        #1 0x55b230f6041f in mallocarray ./lib/./alloc.h:97:9\n        #2 0x55b230f6041f in commonio_open ./lib/commonio.c:563:7\n        #3 0x55b230f39098 in open_files ./src/userdel.c:555:6\n        #4 0x55b230f39098 in main ./src/userdel.c:1189:2\n        #5 0x7f9b48c64189 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4e1f674c41724dd96ad2c3a0c02ac9f6666697ba", "commit_date": "2023-04-26T22:38:24Z", "commit_message": "run_parts for groupadd and groupdel\n\nrun_parts currently exists in useradd and userdel, this commit mirrors\nthe functionality with groupadd and groupdel\n\nHook for group{add,del} to include killing processes that have group\nmembership that would no longer exist to avoid membership ID reuse.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15a64f9e7fa24a2c8e0d1754c027a062b9d1e723", "commit_date": "2023-04-26T22:35:58Z", "commit_message": "fix typos\n\nSigned-off-by: lilinjie <lilinjie@uniontech.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e28deeb8e98e59f2b7e78624b31e49a21abf1182", "commit_date": "2023-04-26T22:32:47Z", "commit_message": "libmisc/yesno.c: Use getline(3) and rpmatch(3)\n\ngetline(3) is much more readable than manually looping.  It has some\noverhead due to the allocation of a buffer, but that shouldn't be a\nproblem here.  If that was a problem, we could reuse the buffer (thus\nmaking the function non-reentrant), but I don't think that's worth the\nextra complexity.\n\nUsing rpmatch(3) instead of a simple y/n test provides i18n to the\nresponse checking.  We have a fall-back minimalistic implementation for\nsystems that lack this function (e.g., musl libc).\n\nWhile we're at it, apply some other minor improvements to this file:\n\n-  Remove comment saying which files use this function.  That's likely\n   to get outdated.  And anyway, it's just a grep(1) away, so it doesn't\n   really add any value.\n\n-  Remove unnecessary casts to (void) that were used to verbosely ignore\n   errors from stdio calls.  They add clutter without really adding much\n   value to the code (or I don't see it).\n\n-  Remove comments from the function body.  They make the function less\n   readable.  Instead, centralize the description of the function into a\n   man-page-like comment before the function definition.  This keeps the\n   function body short and sweet.\n\n-  Add '#include <stdbool.h>', which was missing.\n\n-  Minor whitespace style changes (it doesn't hurt the diff at this\n   point, since most of the affected lines were already touched by other\n   changes, so I applied my preferred style :).\n\nAcked-by: Samanta Navarro <ferivoz@riseup.net>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b686d8bd63e45bf2d20438452af58b7908c619f", "commit_date": "2023-04-26T13:27:45Z", "commit_message": "newgrp/useradd: always set SIGCHLD to default\n\nThe tools newgrp and useradd expect waitpid to behave as described in\nits manual page. But the notes indicate that if SIGCHLD is ignored,\nwaitpid behaves differently.\n\nA user could set SIGCHLD to ignore before starting newgrp through exec.\nChildren of newgrp would not become zombies and their PIDs could be\nreassigned before newgrp could call kill with the child pid and SIGCONT.\n\nThe useradd tool is not installed setuid, but I have added the default\nthere as well (copied from vipw).\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ed1df2e8061e296366ce77a7363ab09c4e73566", "commit_date": "2023-04-24T07:01:22Z", "commit_message": "Update AUTHORS to add Marek Micha\u0142kiewicz\n\nCloses #708\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c83b981053b65c9bab4f1c2e60d004e920f8faf", "commit_date": "2023-04-21T23:12:56Z", "commit_message": "Read whole line in yes_or_no\n\nDo not stop after 79 characters. Read the complete line to avoid\narbitrary limitations.\n\nProof of Concept:\n\n```\ncat > passwd-poc << EOF\nroot:x:0:0:root:/root:/bin/bash\nroot:x:0:0:root:/root:/bin/bash\nroot:x:0:0:root:/root:/bin/bash\nEOF\npython -c \"print(80*'y')\" | pwck passwd-poc\n```\n\nTwo lines should still be within the file because we agreed only once\nto remove a duplicated line.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>\nReviewed-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c80788a3ac092bc5abfa89ff48060d3f95cd5812", "commit_date": "2023-04-19T07:19:19Z", "commit_message": "useradd/usermod: add --selinux-range argument\n\nAdd a command line argument to useradd(8) and usermod(8) to specify the\nMLS range for a SELinux user mapping.\n\nImproves: #676", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97f79e3b2715d78c9342cbb292e1a3e72a23fe62", "commit_date": "2023-04-18T07:21:09Z", "commit_message": "CI: Make build logs more readable\n\nIf make fails in a multi-process invocation, the log is pretty much\nunreadable.  To make it readable, build as much as can be built without\nfailing.  Then run a single-process make again.  If we succeeded\npreviously, this should be a no-op.  If not, this run will stop at the\nfirst error, which should be more readable, and will only print the few\nlines we're interested in.\n\nThis has some side effects:  Now we build as much as we can, instead of\nfailing as early as possible; this may make CI a bit slower.  However,\nit also has the benefit that you see _all_ the error messages that could\nbe given, instead of needing to fix the first error to see the next and\nso on.\n\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "075ed522be90bc339c55a73c611453536daf6275", "commit_date": "2023-04-13T11:05:32Z", "commit_message": "ci: remove explicit fedora dependencies\n\nlibbsd-devel libeconf-devel have already been added to the spec file and\nthey should be installed by the `dnf builddep` command.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e047a3acc6c8d6ad959648361f8fca5d653a7735", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "README: add reference to contribution guidelines\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "981bb8f9d1bad9f42302f558ab91631ee6bfb43d", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add contributions introduction\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6f14a2a8346d63a618169e5e479a6f8e85cb02b", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add license\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29df94eb4a17365e367b434775ae7e8866f20adc", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add releases\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ceddd92052f62cdbf680c34a54356e7be715071", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add Continuous Integration\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "77c6cc98579a00bd4db829996286b928c8a07ea7", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add tests\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d40c58dc3be57b4d97030ab8d340d17fc74e18cd", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add coding style\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f15ea59559f346ad812422cffb488c154817fc2", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add build & install\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30f3ea4bd36f2f5c78ee86498da38a8e95ce93f9", "commit_date": "2023-04-03T11:06:14Z", "commit_message": "trivial: vipw.8: fix grammar\n\nSigned-off-by: Serge Hallyn <shallyn@cisco.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eee4c67f5b13c91b9a783a1ba4dd95b28ae0bfb", "commit_date": "2023-04-03T11:05:30Z", "commit_message": "sssd: skip flushing if executable does not exist\n\nAvoid unnecessary syslog output, like:\n\n    Apr 01 13:35:09 dlaptop userdel[45872]: userdel: sss_cache exited with status 1\n    Apr 01 13:35:09 dlaptop userdel[45872]: userdel: Failed to flush the sssd cache.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eaea70111f65b16d55998386e4ceb4273c19eb4", "commit_date": "2023-03-31T14:53:40Z", "commit_message": "Overhaul valid_field()\n\ne5905c4b (\"Added control character check\") introduced checking for\ncontrol characters but had the logic inverted, so it rejects all\ncharacters that are not control ones.\n\nCast the character to `unsigned char` before passing to the character\nchecking functions to avoid UB.\n\nUse strpbrk(3) for the illegal character test and return early.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5f9ef8b7fa7dd108270459325092a2be3847331", "commit_date": "2023-03-31T14:13:02Z", "commit_message": "semanage: Do not set default SELinux range\n\nBoth semanage and libsemanage actually set the user's mls range to the\ndefault of the seuser, which makes more sense and removes a bit of code\nfor usermod and useradd.  More fine-grained details must always be set\nwith some other tool\n(semanage) anyway.\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b44d7f78e0988847b99a7c3ac3a53042db073a92", "commit_date": "2023-03-31T14:04:42Z", "commit_message": "Fix typo in groupadd usage", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "189a01f7a747f7595605a791d40d8a8400e76eab", "commit_date": "2023-03-31T13:54:39Z", "commit_message": "ci: update Differential ShellCheck\n\nRun on pushes and drop unnecessary write access.\n\nShould avoid pull-requests comments like\nhttps://github.com/shadow-maint/shadow/pull/695#issuecomment-1491876950", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5905c4b84d4fb90aefcd96ee618411ebfac663d", "commit_date": "2023-03-31T00:23:00Z", "commit_message": "Added control character check\n\nAdded control character check, returning -1 (to \"err\") if control characters are present.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd2d0079c90241f24671a7946a3ad175dc1a3aeb", "commit_date": "2023-03-29T07:05:23Z", "commit_message": "usermod: respect --prefix for --gid option\n\nThe --gid option accepts a group name or id. When a name is provided, it\nis resolved to an id by looking up the name in the group database\n(/etc/group).\n\nThe --prefix option overides the location of the passwd and group\ndatabases. I suspect the --gid option was overlooked when wiring up the\n--prefix option.\n\nuseradd --gid already respects --prefix; this change makes usermod\nbehave the same way.\n\nFixes: b6b2c756c91806b1c3e150ea0ee4721c6cdaf9d0\nSigned-off-by: Mike Gilbert <floppym@gentoo.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c210a29bc57d584db4e69a28d27fee8d75956cc", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix su(1) silent truncation\n\n*  src/su.c (check_perms): Do not silently truncate user name.\n\nReported-by: Paul Eggert <eggert@cs.ucla.edu>\nCo-developed-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d7d94ed7dc6736b17581d625066114a93252ff5", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Simplify is_my_tty()\n\nThis commit will serve to document why we shouldn't worry about the\ntruncation in the call to strlcpy(3).  Since we have one more byte in\ntmptty than in full_tty, truncation will produce a string that is at\nleast one byte longer than full_tty.  Such a string could never compare\nequal, so we're actually handling the truncation in a clever way.  Maybe\ntoo clever, but that's why I'm documenting it here.\n\nNow, about the simplification itself:\n\nSince we made sure that both full_tty and tmptty are null-terminated, we\ncan call strcmp(3) instead of strncmp(3).  We can also simplify the\nreturn logic avoiding one branch.\n\nCc: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e27ca530912c9386f2a60656b4a2b713521f82b1", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix is_my_tty() buffer overrun\n\n*  libmisc/utmp.c (is_my_tty): Declare the parameter as a char array,\n   not char *, as it is not necessarily null-terminated.\n   Avoid a read overrun when reading 'tty', which comes from\n   'ut_utname'.\n\nReported-by: Paul Eggert <eggert@cs.ucla.edu>\nCo-developed-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "664d361fa549a3be5a00607ec6723f95ce33c688", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Add STRLEN(): a constexpr strlen(3) for string literals\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03af2940f75db47cb8619e4852a47d637d624ac4", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix crash with large timestamps\n\n*  libmisc/date_to_str.c (date_to_str): Do not crash if gmtime(3)\n   returns NULL because the timestamp is far in the future.\n\nReported-by: Paul Eggert <eggert@cs.ucla.edu>\nCo-developed-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea3d49506fb144348be10eba6f6fe1250b875a48", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Prefer strcpy(3) to strlcpy(3) when either works\n\n* lib/gshadow.c (sgetsgent): Use strcpy(3) not strlcpy(3),\nsince the string is known to fit.\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a926a26f0c69ab10e3f9a5335b84b4ab4ac91db1", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix change_field() buffer underrun\n\n* lib/fields.c (change_field): Don't point\nbefore array start; that has undefined behavior.\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "690ca8c238adf63a80c8b9a7571dfb9984f0669b", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Omit unneeded test in change_field()\n\n* fields.c (change_field): Omit unnecessary test.\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5686d9162e81f3226986cbf554aa512b2b7c051f", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Simplify change_field() by using strcpy\n\n* lib/fields.c (change_field): Since we know the string fits,\nuse strcpy(3) rather than strlcpy(3).\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c089196e15dcafc186474469c4914638da233b31", "commit_date": "2023-03-27T15:10:37Z", "commit_message": "Fix null dereference in basename\n\nOn older kernels (<=linux-5.17), argv[0] can be null. Basename would\ncall strrchr with null if argc==0. Fixes issue #680", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "300d6ef45ced3624e61fe0a67690032a7891a3e1", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "CI: script for local container build\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4f31a5b3e1e61b6d8e29317b8d546dd16c361f7", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "CI: build project in containers\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "411a66476d0f12ffdc127eed033a511d37ec991a", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "container: add fedora\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3efab2039f63e1316bc9bdcd49e9edbd9911e8c1", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "container: add debian\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baff19767d9b4fd677368686d124ff167cbf1b73", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "container: add alpine\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53a4bda9ba560db52da475bb27b88b0291fe2835", "commit_date": "2023-03-20T15:54:45Z", "commit_message": "SECURITY.md: add Iker Pedrosa\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2c4949707f6a3b23f55f44c9182bfb18a78f1b4", "commit_date": "2023-03-20T07:47:52Z", "commit_message": "selinux: use type safe function pointer assignment", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37bf59067f2a2dc2af676bf78de7ef435db90768", "commit_date": "2023-03-20T07:47:52Z", "commit_message": "Use strict prototype in definition\n\n    gettime.c:25:30: warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]\n    /*@observer@*/time_t gettime ()\n                                 ^\n                                  void", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e638841f5a2cba0716e188245a12efe0a1f78cf9", "commit_date": "2023-03-02T22:33:06Z", "commit_message": "Add .editorconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61ca915ac5a823a074aa350488b07e8f997336bb", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "run_some: fix shellcheck warning\n\nshellcheck warns against using echo with flags, as posix sh won't\nsupport it.  It suggests using printf, so let's do that.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d03bbea96663d679e09770a2eaba35e08a22d47", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "fail on any run_some test failure\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "add4ab4bf0776426e0eea5dbe20e7e282816558b", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "ignore first test in run_some\n\nbc github...\n\nFor some reason, the first test - ONLY on github - seems to not\ngive the '$ ' prompt expected when you spawn 'su testsuite'.\nSo just run the first test twice, and ignore the first failure.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4da831c02fa85ee483539ac2ab2f8f9b9c268b68", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "swap first two tests - does the first one still fail?\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "421c6cf95160f55b0b4d4e2ab10de1579e99f956", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "tests: remove some github runner PATH tweaking\n\nIt messes with the expected results.\n\nWe can do better than this in the expect scripts, but let's\nget things running for now.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a72065a108cfde70c76f8b0b629e04bdc68bba12", "commit_date": "2023-02-27T20:16:50Z", "commit_message": "tests: Support git-worktree(1)\n\ngit-worktree(1) uses a regular file for <.git>, instead of a directory.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4445cee19d95595afd97043888e0eb1a30ef6089", "commit_date": "2023-02-25T03:46:29Z", "commit_message": "tests: newuidmap and newgidmap: update expected fail message\n\nThe failure message got changed, but the tests looking for it did\nnot.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa15bc445e4601f8b180b659d94f45fd9a6d5581", "commit_date": "2023-02-25T03:27:02Z", "commit_message": "libsubid: include alloc.h\n\nFixes: efbbcade43: Use safer allocation macros\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a9e163e71b03eee866911c58e944135f6e94900", "commit_date": "2023-02-25T02:11:14Z", "commit_message": "run_some: log stderr\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05e2adf509ba0e3779dae66a276b86927a8e1e0e", "commit_date": "2023-02-24T22:20:57Z", "commit_message": "Validate fds created by the user\n\nwrite_mapping() will do the following:\n\nopenat(proc_dir_fd, map_file, O_WRONLY);\n\nAn attacker could create a directory containing a symlink named\n\"uid_map\" pointing to any file owned by root, and thus allow him to\noverwrite any root-owned file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ff33fae6f9cd79c0e012671c37a172e9a681d0b", "commit_date": "2023-02-24T19:54:54Z", "commit_message": "get_pidfd_from_fd: return -1 on error, not 0\n\nFixes: 6974df39a: newuidmap and newgidmap: support passing pid as fd\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17efd5925235685b59be1c267d0dfad7a9bb62b8", "commit_date": "2023-02-24T19:27:57Z", "commit_message": "g-h-a workflow: workaround\n\nSkip updating grub packages that are currently breaking\napt-get dist-upgrade.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4e3212122df68bc57e9a7a6ab04b924ff96eb04", "commit_date": "2023-02-24T18:56:05Z", "commit_message": "Fix regression in some translation strings\n\nFixes: d80df2c8a: Update translation\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b3d3e5cd48d0f54a62afdfbae535547ac56c474", "commit_date": "2023-02-24T18:44:14Z", "commit_message": "lib: bit_ceil_wrapul(): stop recursion\n\nIt should call bit_ceilul() instead of itself.\n\nFixes: 0712b236c3bc (\"Add bit manipulation functions\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21d88b4525aa7f924d140b5d4bf88022587dd224", "commit_date": "2023-02-24T18:44:14Z", "commit_message": "lib: define ULONG_WIDTH if non-existent\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d80df2c8a0d8c43a8957b0d1cae7ee4efa8f7609", "commit_date": "2023-02-24T18:41:50Z", "commit_message": "Update translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6974df39a708abf8bafbdfa2b7827e0f70f874cb", "commit_date": "2023-02-24T18:35:49Z", "commit_message": "newuidmap and newgidmap: support passing pid as fd\n\nCloses #635\n\nnewuidmap and newgidmap currently take an integner pid as\nthe first argument, determining the process id on which to\nact.  Accept also \"fd:N\", where N must be an open file\ndescriptor to the /proc/pid directory for the process to\nact upon.  This way, if you\n\nexec 10</proc/99\nnewuidmap fd:10 100000 0 65536\n\nand pid 99 dies and a new process happens to take pid 99 before\nnewuidmap happens to do its work, then since newuidmap will use\nopenat() using fd 10, it won't change the mapping for the new\nprocess.\n\nExample:\n\n// terminal 1:\nserge@jerom ~/src/nsexec$ ./nsexec -W -s 0 -S 0 -U\nabout to unshare with 10000000\nPress any key to exec (I am 129176)\n\n// terminal 2:\nserge@jerom ~/src/shadow$ exec 10</proc/129176\nserge@jerom ~/src/shadow$ sudo chown root src/newuidmap src/newgidmap\nserge@jerom ~/src/shadow$ sudo chmod u+s src/newuidmap\nserge@jerom ~/src/shadow$ sudo chmod u+s src/newgidmap\nserge@jerom ~/src/shadow$ ./src/newuidmap fd:10 0 100000 10\nserge@jerom ~/src/shadow$ ./src/newgidmap fd:10 0 100000 10\n\n// Terminal 1:\nuid=0(root) gid=0(root) groups=0(root)\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7668f77439b6cc1116cab075dfa4184b2076ada0", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Fix use-after-free of pointer after realloc(3)\n\nWe can't use a pointer that was input to realloc(3), nor any pointers\nthat point to reallocated memory, without making sure that the memory\nwasn't moved.  If we do, the Behavior is Undefined.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efbbcade43ff2dca2b7a271dcbd186be08ac1913", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use safer allocation macros\n\nUse of these macros, apart from the benefits mentioned in the commit\nthat adds the macros, has some other good side effects:\n\n-  Consistency in getting the size of the object from sizeof(type),\n   instead of a mix of sizeof(type) sometimes and sizeof(*p) other\n   times.\n\n-  More readable code: no casts, and no sizeof(), so also shorter lines\n   that we don't need to cut.\n\n-  Consistency in using array allocation calls for allocations of arrays\n   of objects, even when the object size is 1.\n\nCc: Valentin V. Bartenev <vbartenev@gmail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e58c1275252f3314d1aa5cc4d7e7f9068e3a902", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "libmisc: Add safer allocation macros\n\nThis macros have several benefits over the standard functions:\n\n-  The type of the allocated object (not the pointer) is specified as an\n   argument, which improves readability:\n   -  It is directly obvious what is the type of the object just by\n      reading the macro call.\n   -  It allows grepping for all allocations of a given type.\n\n   This is admittedly similar to using sizeof() to get the size of the\n   object, but we'll see why this is better.\n\n-  In the case of reallocation macros, an extra check is performed to\n   make sure that the previous pointer was compatible with the allocated\n   type, which can avoid some mistakes.\n\n-  The cast is performed automatically, with a pointer type derived from\n   the type of the object.  This is the best point of this macro, since\n   it does an automatic cast, where there's no chance of typos.\n\n   Usually, programmers have to decide whether to cast or not the result\n   of malloc(3).  Casts usually hide warnings, so are to be avoided.\n   However, these functions already return a void *, so a cast doesn't\n   really add much danger.  Moreover, a cast can even add warnings in\n   this exceptional case, if the type of the cast is different than the\n   type of the assigned pointer.  Performing a manual cast is still not\n   perfect, since there are chances that a mistake will be done, and\n   even ignoring accidents, they clutter code, hurting readability.\n   And now we have a cast that is synced with sizeof.\n\n-  Whenever the type of the object changes, since we perform an explicit\n   cast to the old type, there will be a warning due to type mismatch in\n   the assignment, so we'll be able to see all lines that are affected\n   by such a change.  This is especially important, since changing the\n   type of a variable and missing to update an allocation call far away\n   from the declaration is easy, and the consequences can be quite bad.\n\nCc: Valentin V. Bartenev <vbartenev@gmail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f332379ea036e503c4e740f7c72935e8612ad3c7", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use xreallocarray() instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "190a702225b57eaf520b3c907070ccd649ebbb75", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use reallocarrayf() instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "191f04f7dcb92a2c7de99dbf1108563ea8832927", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use *array() allocation functions where appropriate\n\nThis prevents overflow from multiplication.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "727275a0270bdfee0fb269319cee139bfd597b0c", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use xcalloc(3) instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d81506de1e8e2ba544a30e54e863fcafda9cde86", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "libmisc: Add safer allocation functions\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "881c1d63a19713bf62d9fbe3da0e15a4b4f9b375", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "libmisc: Move xmalloc.c to alloc.c\n\nWe'll expand the contents in a following commit, so let's move the file\nto a more generic name, have a dedicated header, and update includes.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\n\nUse the new header for xstrdup()\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a578617cc00276be61f47cf515962c5ff6bf2bc5", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use calloc(3) instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1aa22c14674e14e84efa171614dea2b515d5a223", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use reallocarray(3) instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45c0003e53ab671c63dcd530fd9f3245d3b29e76", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use reallocf(3) instead of its pattern\n\nIn addition, don't set local variables just before return.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "56e4842db00b2ae6ebcfcc69a4c62ac97bec21b4", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "malloc(3) already sets errno to ENOMEM\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e1d0179939434361b561459ccd009480dc16b7d", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Rely on realloc(NULL, ...) being equivalent to malloc(...)\n\nThis is guaranteed by ISO C.  Now that we require ISO C (and even POSIX)\nto compile, we can simplify this code.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c5dc756419e1d3cad63c66c4bb803eadf1074fd", "commit_date": "2023-02-20T11:16:01Z", "commit_message": "libmisc: agetpass(): Fix bug detecting truncation\n\nOn 2/19/23 18:09, David Mudrich wrote:\n> I am working on a RAM based Linux OS from source, and try to use\n> latest versions of all software.  I found shadow needs libbsd's\n> readpassphrase(3) as superior alternative to getpass(3).  While\n> considering if I a) include libbsd, or include libbsd's code of\n> readpassphrase(3) into shadow, found, that libbsd's readpassphrase(3)\n> never returns \\n or \\r\n> <https://cgit.freedesktop.org/libbsd/tree/src/readpassphrase.c>\n> line 122, while agetpass() uses a check for \\n in agetpass.c line 108.\n> I assume it always fails.\n\nIndeed, it always failed.  I made a mistake when writing agetpass(),\nassuming that readpassphrase(3) would keep newlines.\n\n>\n> I propose a check of len == PASS_MAX - 1, with false positive error for\n> exactly PASS_MAX - 1 long passwords.\n\nInstead, I added an extra byte to the allocation to allow a maximum\npassword length of PASS_MAX (which is the maximum for getpass(3), which\nwe're replacing.\n\nWhile doing that, I notice that my previous implementation also had\nanother bug (minor): The maximum password length was PASS_MAX - 1\ninstead of PASS_MAX.  That's also fixed in this commit.\n\nReported-by: David Mudrich <dmudrich@gmx.de>\nFixes: 155c9421b935 (\"libmisc: agetpass(), erase_pass(): Add functions for getting passwords safely\")\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baae5b4a06c905d9f52ed1f922a0d7d0625d11cf", "commit_date": "2023-02-20T11:10:02Z", "commit_message": "find_new_[gu]id(): Skip over IDs that are reserved for legacy reasons\n\nSome programs don't support `(uint16_t) -1` or `(uint32_t) -1` as user\nor group IDs.  This is because `-1` is used as an error code or as an\nunspecified ID, e.g. in `chown(2)` parameters, and in the past, `gid_t`\nand `uid_t` have changed width.  For legacy reasons, those values have\nbeen kept reserved in programs today (for example systemd does this; see\nthe documentation in the link below).\n\nThis should not be confused with catching overflow in the ID values,\nsince that is already caught by our ERANGE checks.  This is about not\nusing reserved values that have been reserved for legacy reasons.\n\nLink: <https://systemd.io/UIDS-GIDS/>\nReviewed-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0dfeb9e6747bdbd58d0e262fc22947e4e628eefb", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix comments\n\nThese comments should indicate which functions they really wrap.\nAn alternative would be to remove the line completely to avoid\nfuture copy&paste mistakes.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c53b36fe8595a516f9a4ea15b78bc2eca4422db0", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix grammar\n\nUse proper grammar (third-person singular).\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8ea76ba72ba2e1579fe39322f337ef7d58288b3", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix typo\n\nIt should be \"if\" not \"is\".\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5d1932370a31dbd98e97bd330b62eb33a2202e3", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix typos\n\nIt is a user, not an user.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5956cea1d18b269fc4c0b1201b4e81a6f03bbe70", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Use stpecpy() where appropriate\n\nThis function simplifies the calculation of the bounds of the buffer for\ncatenating strings.  It would also reduce error checking, but we don't\ncare about truncation in this specific code. :)\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709e6b4497c7be9c5301e3c7ef8fe9e6f0f5db8d", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Add stpecpy()\n\nstrncat(3), strlcpy(3), and many other functions are often misused for\ncatenating strings, when they should never be used for that.  strlcat(3)\nis good.  However, there's no equivalent to strlcat(3) similar to\nsnprintf(3).  Let's add stpecpy(), which is similar to strlcat(3), but\nit is also the only function compatible with stpeprintf(), which makes\nit more useful than strlcat(3).\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0e9e57a72e9f1bf2acb3156cc982d59b9ee4248", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Add mempcpy(3)\n\nWe'll use it for implementing stpecpy(), and may be interesting to have\nit around.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a9285aacbf2944e113914e6432c6f8d3efe2692", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Remove unnecessary NUL terminators\n\nAll the string-copying functions called above do terminate the strings\nthey create with a NUL byte.  Writing it again at the end of the buffer\nis unnecessary paranoid code.  Let's remove it.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46610792e90f35864ff94c289adecb56cdd8682b", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Use stpeprintf() where appropriate\n\nThis function allows reducing error checking (since errors are\npropagated across chained calls), and also simplifies the calculation of\nthe start and end of the buffer where the string should be written.\n\nMoreover, the new code is more optimized, since many calls to strlen(3)\nhave been removed.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e213cfb50e9db6838bf6f27867ed3ab5af67529", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Add stpeprintf()\n\n[v]stpeprintf() are similar to [v]snprintf(3), but they allow chaining.\n[v]snprintf(3) are very dangerous for catenating strings, since the\nobvious ways to do it invoke Undefined Behavior, and the ways that avoid\nUB are very error-prone.\n\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a187ad8e9e790161a6b2f8982b61b938b6b3438b", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "agetpass.c: Use SPDX tags\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca9e309d30bf3c1dc1c4e93aeaa00363d3a8dd51", "commit_date": "2023-02-13T09:01:17Z", "commit_message": "Fix VPATH build\n\nWhen trying to build shadow in a different directory I stumbled upon few\nissues, this commit aims to fix all of them:\n\n- The `subid.h` file is generated and hence in the build directory and\n\tnot in the source directory, so use `$(builddir)` instead of\n\t`$(srcdir)`.\n\n- Using `$<` instead of filenames utilises autotools to locate the files\n  in either the source or build directory automatically.\n\n- `xsltproc` needs to access the files in login.defs.d in either the\n  source directory or the symlink in a language subdirectory, but it\n\tdoes not interpret the `--path` as prefix of the entity path, but\n\trather a path under which to locate the basename of the entity\n\tfrom the XML file.  So specify the whole path to login.defs.d.\n\n- The above point could be used to make the symlinks of login.defs.d\n  and entity path specifications in the XMLs obsolete, but I trying\n\tnot to propose possibly disrupting patches, so for the sake of\n\tsimplicity just specify `$(srcdir)` when creating the symlink.\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5da8388fc6009d2841459cf7e7e093d424c4213c", "commit_date": "2023-02-09T16:03:03Z", "commit_message": "ttytype(): Fix race\n\nThe intention of the code is just to not report an error message when\n'typefile' doesn't exist.  If we call access(2) and then fopen(2),\nthere's a race.  It's not a huge problem, and the worst thing that can\nhappen is reporting an error when the file has been removed after\naccess(2).  It's not a problem, but we can fix the race and at the same\ntime clarify the intention of not warning about ENOENT and also remove\none syscall.  Seems like a win-win.\n\nSuggested-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bddcd9b0952f9b6f9b800dfafe6585b4ceb495cf", "commit_date": "2023-02-09T16:03:03Z", "commit_message": "Remove superfluous casts\n\n-  Every non-const pointer converts automatically to void *.\n-  Every pointer converts automatically to void *.\n-  void * converts to any other pointer.\n-  const void * converts to any other const pointer.\n-  Integer variables convert to each other.\n\nI changed the declaration of a few variables in order to allow removing\na cast.\n\nHowever, I didn't attempt to edit casts inside comparisons, since they\nare very delicate.  I also kept casts in variadic functions, since they\nare necessary, and in allocation functions, because I have other plans\nfor them.\n\nI also changed a few casts to int that are better as ptrdiff_t.\n\nThis change has triggered some warnings about const correctness issues,\nwhich have also been fixed in this patch (see for example src/login.c).\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66daa7423258cee3bef8240a3fc9b554bb7a69c0", "commit_date": "2023-02-09T15:55:04Z", "commit_message": "run on github runner", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8728bd87ed7e34aa92b6eb42cc74657415f73b44", "commit_date": "2023-02-09T15:55:04Z", "commit_message": "tests: print default timeout message to stderr\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a51e6893e71df70ce4638d7a3000b042e24b0e2", "commit_date": "2023-02-09T15:55:04Z", "commit_message": "use self-hosted runner for testsuite\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "416707b087e69f728f3ddee6a9b9aa63c998cd18", "commit_date": "2023-02-09T04:01:01Z", "commit_message": "Use the noreturn attribute, rather than comments\n\nThis will allow the compiler to understand these functions better.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b34387745afc180fd03ebca5a6ee00f3d665c657", "commit_date": "2023-02-09T04:01:01Z", "commit_message": "lib/defines.h: Add NORETURN attribute macro\n\nWe could use the standard (C11) _Noreturn qualifier, but it will be\ndeprecated in C23, and replaced by C++'s [[noreturn]], which is\ncompatible with the GCC attribute, so let's directly use the attribute,\nand in the future we'll be able to switch to [[]].\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e762ab8b54eab539952a136296be9a9bd6132444", "commit_date": "2023-02-08T16:21:34Z", "commit_message": "Assume getutent(3) exists (remove dead code)\n\nRecently, we removed support for 'struct utmpx'.  We did it because utmp\nand utmpx are identical, and while POSIX specifies utmpx (and not utmp),\nGNU/Linux documentation seems to favor utmp.  Also, this project\ndefaulted to utmp, so changing to utmpx would be more dangerous than\nkeeping old defaults, even if it's supposed to be the same.\n\nNow, I just found more code that didn't make much sense: lib/utent.c\nprovides definitions for getutent(3) and friends in case the system\ndoesn't provide them, but we don't provide prototypes for those\ndefinitions, so code using the functions would have never compiled.\n\nLet's just remove these definitions as dead code.\n\nFixes: 3be7b9d75a6b (\"Remove traces of utmpx\")\nFixes: 170b76cdd1a9 (\"Disable utmpx permanently\")\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f301a4ca19533a5c93bba44db2d8e345fa909e35", "commit_date": "2023-02-04T04:03:38Z", "commit_message": "Handle reallocf(3) errors\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ec157d579931cfec1cc8439288ed17adf19da5d", "commit_date": "2023-02-04T04:03:38Z", "commit_message": "Fix memory leaks by replacing realloc(3) with reallocf(3)\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "82480995b449d55d386c495066a5b2a0d03a9865", "commit_date": "2023-02-04T04:03:38Z", "commit_message": "Remove unused function: gr_append_member()\n\nReported-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1058872a0b630e543e7e4d4d4340104e1f3e7edc", "commit_date": "2023-02-03T04:03:45Z", "commit_message": "Improve TTYGROUP description in login.defs manpage\n\nCloses #457\n\nThe existing prose was confusing, or simply wrong.  Make it clear\nthat only the group ownership of the tty is affected, and how.\nAlso move the paragraph about defaults after the discussion of\nacceptable TTYGROUPs, as this seems more natural.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f6f1669cf693faf422b28bda396c4ed72fe44a9", "commit_date": "2023-02-03T04:03:26Z", "commit_message": "Remove superfluous casts to 'void*'\n\nEvery non-const pointer converts automatically to it.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62172f6fb51519a8cf56e35e4ce2b76cc301a7fc", "commit_date": "2023-02-02T19:08:30Z", "commit_message": "Call NULL by its name\n\nIn variadic functions we still do the cast.  In POSIX, it's not\nnecessary, since NULL is required to be of type 'void *', and 'void *'\nis guaranteed to have the same alignment and representation as 'char *'.\nHowever, since ISO C still doesn't mandate that, and moreover they're\ndoing dubious stuff by adding nullptr, let's be on the cautious side.\nAlso, C++ requires that NULL is _not_ 'void *', but either plain 0 or\nsome magic stuff.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1482224c546cabc3a08ec069c775b116171f182a", "commit_date": "2023-02-02T11:04:28Z", "commit_message": "Use freezero(3) where suitable\n\nIt originated in OpenBSD, and is available in libbsd.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e0ad48c21bd7d5506ff44eb4c04f796b80045ce", "commit_date": "2023-02-01T21:47:35Z", "commit_message": "Prevent out of boundary access\n\nIf lines start with '\\0' then it is possible to trigger out of\nboundary accesses.\n\nCheck if indices are valid before accessing them.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffc480c2e93f05266e4b130229877ad13f71a8c0", "commit_date": "2023-02-01T21:47:35Z", "commit_message": "Explicitly override only newlines\n\nOverride only newlines with '\\0' to avoid undesired truncation of\nactual line content.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37ae2320809cb16afa9dacd8e5ea317ae216ee36", "commit_date": "2023-02-01T21:47:35Z", "commit_message": "Correctly handle illegal system file in tz\n\nIf the file referenced by ENV_TZ has a zero length string, then an out\nof boundary write occurs. Also the result can be wrong because it is\nassumed that the file will always end with a newline.\n\nOnly override a newline character with '\\0' to avoid these cases.\n\nThis cannot be considered to be security relevant because login.defs\nand its contained references to system files should be trusted to begin\nwith.\n\nProof of Concept:\n\n1. Compile shadow's su with address sanitizer and --without-libpam\n\n2. Setup your /etc/login.defs to contain ENV_TZ=/etc/tzname\n\n3. Prepare /etc/tzname to contain a '\\0' byte at the beginning\n\n`python -c \"print('\\x00')\" > /etc/tzname`\n\n4. Use su\n\n`su -l`\n\nYou can see the following output:\n\n`tz.c:45:8: runtime error: index 18446744073709551615 out of bounds for type 'char [8192]'`\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03bbe6c4187d801057db6de24b47f309b12590e9", "commit_date": "2023-02-01T08:10:34Z", "commit_message": "leading_zerosul(): Fix bug\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a61122b5e8f89484dcc88dfd5f6c11de2d8c95a", "commit_date": "2023-01-30T17:24:15Z", "commit_message": "Unoptimize the higher part of the domain of csrand_uniform()\n\n__int128, which is needed for optimizing that part of the range, is not\nalways available.  We need the unoptimized version for portability\nreasons.\n\nCloses: <https://github.com/shadow-maint/shadow/issues/634>\nFixes: 1a0e13f94edc (\"Optimize csrand_uniform()\")\nReported-by: Adam Sampson <ats@offog.org>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0712b236c3bc93987ce64f7631f5a9fa4b042f4f", "commit_date": "2023-01-30T17:24:15Z", "commit_message": "Add bit manipulation functions\n\nWe do need the unoptimized version of csrand_uniform() for high values\nof `n`, since the optimized version depends on having __int128, and it's\nnot available on several platforms, including ARMv7, IA32, and MK68k.\n\nThis reverts commit 848f53c1d3c1362c86d3baab6906e1e4419d2634; however,\nI applied some tweaks to the reverted commit.\n\nReported-by: Adam Sampson <ats@offog.org>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "848f53c1d3c1362c86d3baab6906e1e4419d2634", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Revert \"Add bit manipulation functions\"\n\nNow that we optimized csrand_uniform(), we don't need these functions.\n\nThis reverts commit 7c8fe291b1260e127c10562bfd7616961013730f.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a0e13f94edc08d4c773a00d710d56fac966e818", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Optimize csrand_uniform()\n\nUse a different algorithm to minimize rejection.  This is essentially\nthe same algorithm implemented in the Linux kernel for\n__get_random_u32_below(), but written in a more readable way, and\navoiding microopimizations that make it less readable.\n\nWhich (the Linux kernel implementation) is itself based on Daniel\nLemire's algorithm from \"Fast Random Integer Generation in an Interval\",\nlinked below.  However, I couldn't really understand that paper very\nmuch, so I had to reconstruct the proofs from scratch, just from what I\ncould understand from the Linux kernel implementation source code.\n\nI constructed some graphical explanation of how it works, and why it\nis optimal, because I needed to visualize it to understand it.  It is\npublished in the GitHub pull request linked below.\n\nHere goes a wordy explanation of why this algorithm based on\nmultiplication is better optimized than my original implementation based\non masking.\n\nmasking:\n\n\tIt discards the extra bits of entropy that are not necessary for\n\tthis operation.  This works as if dividing the entire space of\n\tpossible csrand() values into smaller spaces of a size that is\n\ta smaller power of 2.  Each of those smaller spaces has a\n\trejection band, so we get as many rejection bands as spaces\n\tthere are.  For smaller values of 'n', the size of each\n\trejection band is smaller, but having more rejection bands\n\tcompensates for this, and results in the same inefficiency as\n\tfor large values of 'n'.\n\nmultiplication:\n\n\tIt divides the entire space of possible random numbers in\n\tchunks of size exactly 'n', so that there is only one rejection\n\tband that is the remainder of `2^64 % n`.  The worst case is\n\tstill similar to the masking algorithm, a rejection band that is\n\talmost half the entire space (n = 2^63 + 1), but for lower\n\tvalues of 'n', by only having one small rejection band, it is\n\tmuch faster than the masking algorithm.\n\n\tThis algorithm, however, has one caveat: the implementation\n\tis harder to read, since it relies on several bitwise tricky\n\toperations to perform operations like `2^64 % n`, `mult % 2^64`,\n\tand `mult / 2^64`.  And those operations are different depending\n\ton the number of bits of the maximum possible random number\n\tgenerated by the function.  This means that while this algorithm\n\tcould also be applied to get uniform random numbers in the range\n\t[0, n-1] quickly from a function like rand(3), which only\n\tproduces 31 bits of (non-CS) random numbers, it would need to be\n\timplemented differently.  However, that's not a concern for us,\n\tit's just a note so that nobody picks this code and expects it\n\tto just work with rand(3) (which BTW I tried for testing it, and\n\tgot a bit confused until I realized this).\n\nFinally, here's some light testing of this implementation, just to know\nthat I didn't goof it.  I pasted this function into a standalone\nprogram, and run it many times to find if it has any bias (I tested also\nto see how many iterations it performs, and it's also almost always 1,\nbut that test is big enough to not paste it here).\n\nint main(int argc, char *argv[])\n{\n\tprintf(\"%lu\\n\", csrand_uniform(atoi(argv[1])));\n}\n\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 1 | wc -l\n341\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 1 | wc -l\n339\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 1 | wc -l\n338\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 2 | wc -l\n336\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 2 | wc -l\n328\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 2 | wc -l\n335\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 0 | wc -l\n332\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 0 | wc -l\n331\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 0 | wc -l\n327\n\nThis isn't a complete test for a cryptographically-secure random number\ngenerator, of course, but I leave that for interested parties.\n\nLink: <https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=e9a688bcb19348862afe30d7c85bc37c4c293471>\nLink: <https://github.com/shadow-maint/shadow/pull/624#discussion_r1059574358>\nLink: <https://arxiv.org/abs/1805.10941>\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Sam James <sam@gentoo.org>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\n[Daniel Lemire: Added link to research paper in source code]\nCc: Daniel Lemire <daniel@lemire.me>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "217b054cf53ed71169621d297acc79b42e4abccd", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Use WIDTHOF() instead of its expansion\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f90eff4947ffeb7022696ab9861ed3d80bb61d8", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Add WIDTHOF() to get the width in bits\n\nIt is common to use the expression 'sizeof(x) * CHAR_BIT' to mean the\nwidth in bits of a type or object.  Now that there are _WIDTH macros for\nsome types, indicating the number of bits that they use, it makes sense\nto wrap this calculation in a macro of a similar name.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1db190cb66339cd2c052ab2f868410455e215b8a", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Rewrite csrand_interval() as a wrapper around csrand_uniform()\n\nThe old code didn't produce very good random numbers.  It had a bias.\nAnd that was from performing some unnecessary floating-point\ncalculations that overcomplicate the problem.\n\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Sam James <sam@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31375d48cac5e8050957f1f18a9a4f5615d25711", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Add csrand_uniform()\n\nThis API is similar to arc4random_uniform(3).  However, for an input of\n0, this function is equivalent to csrand(), while arc4random_uniform(0)\nreturns 0.\n\nThis function will be used to reimplement csrand_interval() as a wrapper\naround this one.\n\nThe current implementation of csrand_interval() doesn't produce very good\nrandom numbers.  It has a bias.  And that comes from performing some\nunnecessary floating-point calculations that overcomplicate the problem.\n\nLooping until the random number hits within bounds is unbiased, and\ntruncating unwanted bits makes the overhead of the loop very small.\n\nWe could reduce loop overhead even more, by keeping unused bits of the\nrandom number, if the width of the mask is not greater than\nULONG_WIDTH/2, however, that complicates the code considerably, and I\nprefer to be a bit slower but have simple code.\n\nBTW, Bj\u00f6rn really deserves the copyright for csrand() (previously known\nas read_random_bytes()), since he rewrote it almost from scratch last\nyear, and I kept most of its contents.  Since he didn't put himself in\nthe copyright back then, and BSD-3-Clause doesn't allow me to attribute\nderived works, I won't add his name, but if he asks, he should be put in\nthe copyright too.\n\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Sam James <sam@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a56f2baabd6c4ef3f485e9a5f7f3d4168a2d60b", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Add bit manipulation functions\n\nThese functions implement bit manipulation APIs, which will be added to\nC23, so that in the far future, we will be able to replace our functions\nby the standard ones, just by adding the stdc_ prefix, and including\n<stdbit.h>.\n\nHowever, we need to avoid UB for an input of 0, so slightly deviate from\nC23, and use a different name (with _wrap) for distunguishing our API\nfrom the standard one.\n\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be1f4f7972ad7ec151c31ad408083828bbdefd4b", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Move csrand() to a new file csrand.c\n\nA set of APIs similar to arc4random(3) is complex enough to deserve its\nown file.\n\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "986ef4e69c6dbe6e9c56b9322ce1ee976763d2eb", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Use naming consistent with other common functions\n\narc4random(3) returns a number.\narc4random_buf(3) fills a buffer.\narc4random_uniform(3) returns a number less than a bound.\n\nand I'd add a hypothetical one which we use:\n\n*_interval() should return a number within the interval [min, max].\n\nIn reality, the function being called csrand() in this patch is not\nreally cryptographically secure, since it had a bias, but a subsequent\npatch will fix that.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d2337d9e80eb38ab92708c7fc44b3bdeb016bad", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Fix types of the csrand_interval() API\n\nWe were always casting the result to u_long.  Better just use that type\nin the function.  Since we're returning u_long, it makes sense to also\nspecify the input as u_long.  In fact, that'll help for doing bitwise\noperations inside this function.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f441c9f7a8d1c8019e5b1d843821a456022b525", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Use a more precise name for a CSPRNG API with an interval\n\nI have plans to split this function in smaller functions that implement\nbits of this functionallity, to simplify the implementation.  So, let's\nuse names that distinguish them.\n\nThis one produces a number within an interval, so make that clear.  Also\nmake clear that the function produces cryptographically-secure numbers.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a27d5c51f1f34b0c3d965482de400447c072de96", "commit_date": "2023-01-27T04:45:32Z", "commit_message": "Supporting vendor given -shells- configuration file", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b2d202cb5d59ef5aeda0dfd4c30ff8adca02dd06", "commit_date": "2023-01-27T04:44:39Z", "commit_message": "libmisc: fix grammar\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b312bc0b4d79a54352f7eea28ed261b8c67e2602", "commit_date": "2023-01-27T04:44:39Z", "commit_message": "Fix typos\n\nTypos found with codespell.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "194014678e13dfcd9e418f76fec5ae701b507d54", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Declare constant data structure const\n\n    ./lib/pam_defs.h:18:24: warning: \u2018conv\u2019 defined but not used [-Wunused-variable]\n       18 | static struct pam_conv conv = {\n          |                        ^~~~", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89be7c04654964654098006dfd7a5690da31c1cf", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Provide strlcpy declaration\n\nstrlcpy(3) might not be visible since it is declared in <bsd/string.h>.\nThis can lead to warnings, like:\n\n    fields.c: In function 'change_field':\n    fields.c:103:17: warning: implicit declaration of function 'strlcpy'; did you mean 'strncpy'? [-Wimplicit-function-declaration]\n      103 |                 strlcpy (buf, cp, maxsize);\n          |                 ^~~~~~~\n          |                 strncpy\n\n    ../lib/fields.c:103:17: warning: type of 'strlcpy' does not match original declaration [-Wlto-type-mismatch]\n      103 |                 strlcpy (buf, cp, maxsize);\n          |                 ^\n    /usr/include/bsd/string.h:44:8: note: return value type mismatch\n       44 | size_t strlcpy(char *dst, const char *src, size_t siz);\n          |        ^\n    /usr/include/bsd/string.h:44:8: note: type 'size_t' should match type 'int'\n    /usr/include/bsd/string.h:44:8: note: 'strlcpy' was previously declared here\n    /usr/include/bsd/string.h:44:8: note: code may be misoptimized unless '-fno-strict-aliasing' is used", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c99d8d0a086efb6073417b8c9104fc30a98e72db", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Avoid comparisons of different signs\n\nComparisons if different signedness can result in unexpected results.\nAdd casts to ensure operants are of the same type.\n\n    gettime.c: In function 'gettime':\n    gettime.c:58:26: warning: comparison of integer expressions of different signedness: 'long long unsigned int' and 'time_t' {aka 'long int'} [-Wsign-compare]\n       58 |         } else if (epoch > fallback) {\n          |                          ^\n\nCast to time_t, since epoch is less than ULONG_MAX at this point.\n\n    idmapping.c: In function 'write_mapping':\n    idmapping.c:202:48: warning: comparison of integer expressions of different signedness: 'int' and 'long unsigned int' [-Wsign-compare]\n      202 |                 if ((written <= 0) || (written >= (bufsize - (pos - buf)))) {\n          |                                                ^~\n\n    newgidmap.c: In function \u2018main\u2019:\n    newgidmap.c:178:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      178 |         if ((written <= 0) || (written >= sizeof(proc_dir_name))) {\n          |                                        ^~\n    newuidmap.c: In function \u2018main\u2019:\n    newuidmap.c:107:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      107 |         if ((written <= 0) || (written >= sizeof(proc_dir_name))) {\n          |                                        ^~", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43508ac4763591a5f05b884abeeed934b6748680", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Drop redundant declaration\n\nenviron is exported in <unistd.h>.\n\n    env.c:29:15: warning: redundant redeclaration of 'environ' [-Wredundant-decls]\n       29 | extern char **environ;\n          |               ^~~~~~~\n    login.c:92:15: warning: redundant redeclaration of \u2018environ\u2019 [-Wredundant-decls]\n       92 | extern char **environ;\n          |               ^~~~~~~\n    sulogin.c:40:15: warning: redundant redeclaration of \u2018environ\u2019 [-Wredundant-decls]\n       40 | extern char **environ;\n          |               ^~~~~~~\n    newgrp.c:32:15: warning: redundant redeclaration of \u2018environ\u2019 [-Wredundant-decls]\n       32 | extern char **environ;\n          |               ^~~~~~~", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46d305834115b8d43a73338d903a659be8c1ae25", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "copydir: fix impl usage\n\n    copydir.c: In function 'copy_dir':\n    copydir.c:517:32: warning: passing argument 1 of 'copy_tree' from incompatible pointer type [-Wincompatible-pointer-types]\n      517 |             return (copy_tree (src, dst, false, reset_selinux,\n          |                                ^~~\n          |                                |\n          |                                const struct path_info *\n    In file included from copydir.c:20:\n    ../lib/prototypes.h:108:35: note: expected 'const char *' but argument is of type 'const struct path_info *'\n      108 | extern int copy_tree (const char *src_root, const char *dst_root,\n          |                       ~~~~~~~~~~~~^~~~~~~~\n    copydir.c:517:37: warning: passing argument 2 of 'copy_tree' from incompatible pointer type [-Wincompatible-pointer-types]\n      517 |             return (copy_tree (src, dst, false, reset_selinux,\n          |                                     ^~~\n          |                                     |\n          |                                     const struct path_info *\n    ../lib/prototypes.h:108:57: note: expected 'const char *' but argument is of type 'const struct path_info *'\n      108 | extern int copy_tree (const char *src_root, const char *dst_root,\n          |                                             ~~~~~~~~~~~~^~~~~~~~\n\nFixes: 74c17c71 (\"Add support for skeleton files from /usr/etc/skel\")", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0d79ee0320b337510aee5734579973597653df6", "commit_date": "2023-01-25T10:07:25Z", "commit_message": "Modernize manual memzero implementation\n\nInstead of using volatile pointers to prevent the compiler from\noptimizing the call away, use a memory barrier.\nThis requires support for embedded assembly, which should be fine after\nthe recent requirement bumps.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90ead3cfb8fff90f53f3dbab387e9de66b617872", "commit_date": "2023-01-25T10:07:25Z", "commit_message": "Replace flawed memset_s usage\n\nmemset_s() has a different signature than memset(3) or explicit_bzero(),\nthus the current code would not compile.  Also memset_s()\nimplementations are quite rare.\nUse the C23 standardized version memset_explicit(3).\n\nFixes: 7a799ebb (\"Ensure memory cleaning\")", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b2bed465e81e52e8a1ce29c94c2590099c63ff76", "commit_date": "2023-01-20T16:23:03Z", "commit_message": "Use getnameinfo(3) instead of our own equivalent\n\nI didn't know getnameinfo(3) existed, so I implemented it, or something\nsimilar to it called inet_sockaddr2str().  Let's use the standard API.\n\nLink: <https://inbox.sourceware.org/libc-alpha/0f25d60f-f183-b518-b6c1-6d46aa63ee57@gmail.com/T/>\nLink: <https://stackoverflow.com/a/42190913/6872717>\nLink: <https://github.com/shadow-maint/shadow/pull/617>\nLink: <https://software.codidact.com/posts/287748>\nCc: Zack Weinberg <zack@owlfolio.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac8b81c2b7ed378528e5cc60754e10be1e369e40", "commit_date": "2023-01-16T09:12:31Z", "commit_message": "Prefer getrandom(3)/getentropy(3) over arc4random(3bsd)\n\narc4random(3) without kernel support is unsafe, as it can't know when to\ndrop the buffer.  Since we depend on libbsd since recently, we have\narc4random(3) functions always available, and thus, this code would have\nalways called arc4random_buf(3bsd), which is unsafe.  Put it after some\nbetter alternatives, at least until in a decade or so all systems have a\nrecent enough glibc.\n\nglibc implements arc4random(3) safely, since it's just a wrapper around\ngetrandom(2).\n\nLink: <https://inbox.sourceware.org/libc-alpha/20220722122137.3270666-1-adhemerval.zanella@linaro.org/>\nLink: <https://inbox.sourceware.org/libc-alpha/5c29df04-6283-9eee-6648-215b52cfa26b@cs.ucla.edu/T/>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Guillem Jover <guillem@hadrons.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nReviewed-by: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "39ecca84d4f26ae61d20bff57b27c09681538205", "commit_date": "2023-01-13T08:51:05Z", "commit_message": "workflow: update checkout acton v2 to v3\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "670cae834827a8f794e6f7464fa57790d911b63c", "commit_date": "2023-01-13T00:30:32Z", "commit_message": "shadow: Fix can not print full login timeout message\n\nLogin timed out message prints only first few bytes when write is immediately followed by exit.\r\nCalling exit from new handler provides enough time to display full message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abeb5f3794c2dbdb51b256a6f8c5d2f6bb83efa1", "commit_date": "2023-01-12T11:10:57Z", "commit_message": "fix typo\n\nSigned-off-by: lilinjie <lilinjie@uniontech.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d936c968a213319eff46e78284c9dd45d6c79dd", "commit_date": "2023-01-04T20:21:43Z", "commit_message": "Warn if failed to read existing /etc/nsswitch.conf\n\nCommit 90424e7c (\"Don't warn when failed to open /etc/nsswitch.conf\")\nremoved the logging for failing to read /etc/nsswitch.conf to reduce the\nnoise in the case the file does not exists (e.g. musl based systems).\n\nReintroduce a warning if /etc/nsswitch.conf exists but we failed to read\nit (e.g. permission denied).\n\nImproves: 90424e7c (\"Don't warn when failed to open /etc/nsswitch.conf\")", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "609c6413238db7c49e11a0ce5c08ad8f1d6b3424", "commit_date": "2023-01-02T07:20:43Z", "commit_message": "Call inet_sockaddr2str() instead of inet_ntop(3)\n\nTo simplify.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb3a89577ca8166c56172fd45e85a02ab696aa34", "commit_date": "2023-01-02T07:20:43Z", "commit_message": "Add inet_sockaddr2str() to wrap inet_ntop(3)\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eec5f9fccca971eb5d601906d40780a1a14abc34", "commit_date": "2023-01-02T07:20:43Z", "commit_message": "Replace gethostbyname(3) by getaddrinfo(3)\n\ngethostbyname(3) was removed in POSIX.1-2008.  It has been obsoleted,\nand replaced by getaddrinfo(3), which is superior in several ways:\n\n-  gethostbyname(3) is not reentrant.  There's a GNU extension,\n   gethostbyname_r(3) which is reentrant, but it's not likely to be\n   standardized for the following reason.  And we don't care too much\n   about this point either.\n\n-  gethostbyname(3) only supports IPv4, but getaddrinfo(3) supports both\n   IPv4 and IPv6 (and may support other address families in the future).\n\nWe don't care about reentrancy, so for keeping the code simple (i.e.,\nnot touch call site to add code to free(3) an allocated buffer), I added\na static buffer for inet_ntop(3).  We could address that in the future,\nbut I don't think it's worth it.\n\nBTW, we also replace inet_ntoa(3) by inet_ntop(3), as a consequence of\nusing getaddrinfo(3).  inet_ntoa(3) is also marked as deprecated, but\nthat deprecation seems to have been documented only in the manual page,\nand POSIX doesn't mark it as deprecated.  The deprecation notice goes\nback to when the inet_ntop(3) manual page was added by Sam Varshavchik\nto the Linux man-pages in version 1.30 (year 2000).\n\nSo, this, apart from updating the code to POSIX.1-2008, is also adding\nsupport for IPv6 :)  Although, probably many other parts of the code are\nwritten for IPv4 only, so I wouldn't yet claim support for it.\n\nA few notes:\n\n-  I didn't check the return value of inet_ntop(3), since it can't fail\n   for the given input:\n\n   -  EAFNOSUPPORT:  We only call it with AF_INET and AF_INET6.\n   -  ENOSPC:  We calculate the size of the buffer to be wide enough:\n               MAX(INET_ADDRSTRLEN, INET6_ADDRSTRLEN) so it always fits.\n\nCc: Dave Hagewood <admin@arrowweb.com>\nCc: Sam Varshavchik\nCc: Jakub Jelinek <jakub@redhat.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65470e5c7ddbc2885ad35fbd0218b91a75626c2f", "commit_date": "2022-12-29T19:58:49Z", "commit_message": "changing lock mechanism\n\nSystems can suffer power interruptions whilst .lock files are in /etc,\npreventing scripts and other automation tools from updating shadow's\nfiles which persist across boots.\n\nThis commit replaces that mechanism with file locking to avoid problems\nof power interruption/crashing.\n\nMinor tweak to groupmems man page, requested by 'xx' on IRC.\n\nSigned-off-by: ed neville <ed@s5h.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc18c184e56ff9aa6b092b01116b46cea4f34492", "commit_date": "2022-12-23T08:04:02Z", "commit_message": "chfn: new_fields: fix wrong fields printed\n\nWhen the caller may not change the room number, work phone, or\nhome number, then rather than prompting for the new one it will\nprint the existing one.  But due to a typo it printed the full name\nin place of each of those.\n\nFix the fields being printed.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb164165f66e5785f5a5f8e0af650f4ff5d9ae95", "commit_date": "2022-12-23T00:20:02Z", "commit_message": "Add NITEMS(arr) to get the number of elements of an array\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "220b352b707e66c93242670100d31975e9661c49", "commit_date": "2022-12-23T00:03:39Z", "commit_message": "Use strlcpy(3) instead of its pattern\n\n-  Since strncpy(3) is not designed to write strings, but rather\n   (null-padded) character sequences (a.k.a. unterminated strings), we\n   had to manually append a '\\0'.  strlcpy(3) creates strings, so they\n   are always terminated.  This removes dependencies between lines, and\n   also removes chances of accidents.\n\n-  Repurposing strncpy(3) to create strings requires calculating the\n   location of the terminating null byte, which involves a '-1'\n   calculation.  This is a source of off-by-one bugs.  The new code has\n   no '-1' calculations, so there's almost-zero chance of these bugs.\n\n-  strlcpy(3) doesn't padd with null bytes.  Padding is relevant when\n   writing fixed-width buffers to binary files, when interfacing certain\n   APIs (I believe utmpx requires null padding at lease in some\n   systems), or when sending them to other processes or through the\n   network.  This is not the case, so padding is effectively ignored.\n\n-  strlcpy(3) requires that the input string is really a string;\n   otherwise it crashes (SIGSEGV).  Let's check if the input strings are\n   really strings:\n\n   -  lib/fields.c:\n      -  'cp' was assigned from 'newft', and 'newft' comes from fgets(3).\n\n   -  lib/gshadow.c:\n      -  strlen(string) is calculated a few lines above.\n\n   -  libmisc/console.c:\n      -  'cons' comes from getdef_str, which is a bit cryptic, but seems\n         to generate strings, I guess.1\n\n   -  libmisc/date_to_str.c:\n      -  It receives a string literal.  :)\n\n   -  libmisc/utmp.c:\n      -  'tname' comes from ttyname(3), which returns a string.\n\n   -  src/su.c:\n      -  'tmp_name' has been passed to strcmp(3) a few lines above.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a48d77bdef894cb27376a77ee30e4507953c09d5", "commit_date": "2022-12-22T16:39:45Z", "commit_message": "strtoday.c: remove unused defines.h inclusion\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb0c89d944a0d5c42972fdcf8176782cf473654e", "commit_date": "2022-12-22T16:39:45Z", "commit_message": "strtoday.c: remove USE_GETDATE as it was always used\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4441489bc2c47c89f5f9823b76f3a65f045d061", "commit_date": "2022-12-22T16:39:45Z", "commit_message": "strtoday.c: remove POSIX 1995 conditional dependency\n\nSince the project is supposed to be POSIX.1-2001 compliant it doesn't\nmake sense to have that added conditionally.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "647d46507dd2d0bf57fba5e8f829a363b28224d3", "commit_date": "2022-12-22T15:49:02Z", "commit_message": "Assume struct tm is defined in <time.h>\n\nIt has been a requirement since at least C90, according to tm(3type).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d96bb2868d5613850cef0817569115ea92046d51", "commit_date": "2022-12-22T15:49:02Z", "commit_message": "Assume struct stat has st_atim and st_mtim fields\n\nThat's required by POSIX.1-2008.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d7a3b80e99fe3e3dc833064352699d68ce16a5a", "commit_date": "2022-12-22T10:44:36Z", "commit_message": "Remove USE_SYSLOG preprocessor conditional, which was always defined\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "350b1e86836b8839e03b997f8d75150a70965ca5", "commit_date": "2022-12-22T10:44:36Z", "commit_message": "Remove dead code\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2df287aad883368584ccb2f460a47e9d3c41b42", "commit_date": "2022-12-22T10:43:29Z", "commit_message": "Don't redefine errno(3)\n\nIt is Undefined Behavior to declare errno (see NOTES in its manual page).\nInstead of using the errno dummy declaration, use one that doesn't need\na comment.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed69feaaff3c86745390c9839ecfc4b8f9706075", "commit_date": "2022-12-22T09:34:04Z", "commit_message": "Fix typos in length calculations\n\nLink: <https://github.com/shadow-maint/shadow/pull/607>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06c30450ce4a57c3bf9d56374cf4d5d2480086e9", "commit_date": "2022-12-22T09:34:04Z", "commit_message": "Use 'uintmax_t' to print 'gid_t'\n\nThis is shorter to write than 'unsigned long int', so we can collapse\nsome lines.  It is guaranteed by C99.\n\nLink: <https://github.com/shadow-maint/shadow/pull/607>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "587ce83e3ff4bea64ac028149ac9b66df37f688c", "commit_date": "2022-12-22T09:34:04Z", "commit_message": "Fix off-by-one mistakes\n\nThe buffers have a size of 512 (see xmalloc() above), which is what\nsnprintf(3) expects.\n\nLink: <https://github.com/shadow-maint/shadow/pull/607>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b990b167d470ec5c6d4e63221f99aa36f8b19c21", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Cosmetic fixes\n\nPrevious commits, to keep readability of the diffs, left the code that\nwas previously wrapped by preprocessor coditionals untouched.  Apply\nsome minor cosmetic changes to merge it in the surrounding code.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3be7b9d75a6b73fe24394d7ac1e315d60d45b5ee", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Remove traces of utmpx\n\n-  USER_NAME_MAX_LENGTH was being calculated in terms of utmpx.  Do it\n   in terms of utmp.\n-  Remove utmpx support from the whishlist.\n-  Remove unused tests about utmpx members.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "170b76cdd1a9b3879817b961a402a5c952cbe169", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Disable utmpx permanently\n\nOn Linux, utmpx and utmp are identical.  However, documentation (manual\npages) covers utmp, and just says about utmpx that it's identical to\nutmp.  It seems that it's preferred to use utmp, at least by reading the\nmanual pages.\n\nMoreover, we were defaulting to utmp (utmpx had to be explicitly enabled\nat configuration time).  So, it seems safer to just make it permanent,\nwhich should not affect default builds.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2da7607ea6880999b7a6d3d38a1338b5ab0ddd8a", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Assume <utmpx.h> always exists\n\nWe already made that assumption in commit b47aa1e9aaf4.  While the\nheader is not required by POSIX (it is an XSI extension), it is defined\nin systems that are of interest to this project (GNU/Linux).\n\nFixes: b47aa1e9aaf4 (\"Assume <utmpx.h> exists\")\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fae37271ec8d3a7dc81b83f8de30016cdd5ec61", "commit_date": "2022-12-21T14:22:22Z", "commit_message": "Remove pwdauth.c\n\nWe don't know what it was for.  If anyone cares, it's in git history.\nIn my distro, there seem to be no traces of it:\n\nalx@debian:~$ apt-file find pwdauth\nalx@debian:~$\n\nLink: <https://codesearch.debian.net/search?q=pwdauth&literal=1>\nLink: <https://github.com/shadow-maint/shadow/pull/612>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c17c71675a60edaa47b280b0b4e2190ddcaee0", "commit_date": "2022-12-19T15:43:03Z", "commit_message": "Add support for skeleton files from /usr/etc/skel\n\nThis patch is used by openSUSE to make useradd look for\nskeleton files in /usr/etc/skel additionally to /etc/skel\nin accordance with\nhttps://uapi-group.org/specifications/specs/base_directory_specification/", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37412f505ed0bc5c9e3f04b2266b40f8f6fc310f", "commit_date": "2022-12-15T22:29:42Z", "commit_message": "Fix useradd audit event logging of ID field\n\nWhen useradd sends its ADD_USER event, it is filling in the id field. This is not yet written to disk. When auditd sees the event and the log format is enriched, auditd tries to lookup the user name but it does not exist. This causes the event to never be resolvable since ausearch relies on the lookup information attached by auditd.\n\nThe fix is to not send the id information for any event until after close_files() is called. Just the acct field is all that is\n\nPatch by Steve Grubb (afaik).\n\nReported at https://bugzilla.redhat.com/show_bug.cgi?id=1713432", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6b6e005ce1cc4a5e4fc7fc40a52f2ed229f54b5b", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove comments that survived the Helicoprion\n\nThe OSes that are referred to by these comments, are extinct, but\ntheir comments survived, fossilized in amber.\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "428a2078b6c435f1780ec8f381033e7bd937d29e", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Ping? :)\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54847a76da53799b8f22a7849aa8758af8ef8769", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove preprocessor conditionals that are always true\n\nIn a previous commit, we made USE_TERMIOS unconditionally defined.\nLet's just remove it, and remove the condition everywhere.\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2ae6a42a4986ebae3d56a28c2859d3abc472234", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove code conditional on USE_TERMIO\n\nThe definition for this macro was removed in a previous commit.\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5669b34891fcc393e916980c7a2ad02350e91953", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume socket(2) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3d32dd05bb4b5597411745299c4c5f9a25f8ef15", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume inet_ntoa(3) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e0c55aecabf98dd2fadd6986472d5e1b1bd491c", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume F_* and SEEK_* macros are defined\n\nThey are required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9dfa71f71cd0665ec2b5d45d7e9ae9a35ab74011", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove code conditional on S_SPLINT_S\n\nI don't know for sure what that is, but it's redefining setlocale(3)\nand LC_ALL, which is are defined by C99, so it's supect of being some\nvariety of an extinct dynosaur.  Maybe related to the Dodo.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "143e346dd50a71a26ea697561e18aa9aa92f796d", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume strdup(3) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "56e989ccf7b09904d1b644ebbd5991796452f5fb", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume strcasecmp(3) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06f4acee994835b4abb49db49538e6077e0814f6", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume rmdir(2) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dfc93b35cca3a1a161ecb5ae4e95975355bd23cb", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume mkdir(2) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61299d69ad2278624714b97ebe6835c0a93a2484", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume B[0-9]* macros are defined\n\nAll of the macros we're using are required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f51c6838ac02725e6928ac0aa4d8c312dd0e86a7", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume SIGTTOU is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "307502d8b559516e01be154e1ce3f37df73bc965", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume SIGTSTP is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c8015730e4ea8f1f90349ea969f977eae05b12", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_STACK is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c916715a6c542b2dc18dfc49b14af85da2d49dab", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_NOFILE is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ebf28c999582c2a08d021a79d5f5121af843249", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_FSIZE is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91adf3b8bb435d4c45250d3dbffb9aba3ff9d218", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_DATA is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "891d8dbeddc644d3821c1a0df4559eda5f20827b", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_CPU is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a4906fc753a5b6f26bbe952f3846fe741a440ef", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_AS is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1a39e1dfc7cee2488b85f09e007b078112a4749", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_CORE is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbc363f671989bc3fdfaccc88d47ee675328237a", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getgrgid_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88eb38f4abcaeda635f92e70bbf83f5b0b02c06c", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getgrnam_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5e5df19661a022f7f49e47441e346a2db2b1705", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getpwuid_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e78800197737c25fbd46d3ff278d9bcf60eed096", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getpwnam_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a082a3975f069c309553f625e580cd9d7142380e", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume fsync(2) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e71c23586a8921b6c5feab5bffa5d3d11e546a74", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume fchown(2) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c86e07067a8ced798e059f1d58dec2c1af82362", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume fchmod(2) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55c62b663f9fe9891f39c576dc7c105010e4b1c3", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume l64a(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48391fb8626c8e22280fe4590d9253f8340a3f1d", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <netdb.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b76d9b540a793df9e0a4861a85501ba4e29e6230", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove preprocessor conditionals that are always true\n\nSince the last commit, LIMITS is always defined.  Remove the dummy\nmacro, and all conditionals on it.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d695340b47d9820743ca1fa4df15e9ea11b539f", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <sys/resource.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdaa04e4601b91b4b13979ebb3865bc9db2e5467", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove uses of ulimit(3)\n\nThe function is obsolete.  It is recommended to use getrlimit(2) instead\n(see the manual page for ulimit(3) or the POSIX manual for it).  Since\ngetrlimit(2) is required by POSIX.1-2001, we can rely on it.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0527fa677bfcdb34b34fd5ffef0ae8d97f25709c", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Add indentation to heavy use of preprocessor conditionals\n\nThis clarifies which code is under which conditions,\nfor further clenaup.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b1fc83e9b2b85914a2569352f099883a968c592", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <utime.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eecd021c043bcb7d28ada74daa666f051b506b4f", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <syslog.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5777e583cd1b493d382866922bf295983f97c1fe", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <termios.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b47aa1e9aaf4690c67cb325af126c0b18dcfaad6", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <utmpx.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "85d2688d629a8ecbbc64437491a03d0dc34377a9", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <sys/time.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "578f2862152e2c3831330ce413ab9c53e13fafbc", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <unistd.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28e565aa8313b282ee9f9164ff4486467c62bc07", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <fcntl.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7baafb2eb1040aace9f7fb1b3638d21c5a129c6", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume strstr(3) exists\n\nISO C99 requires strstr(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0793782d312469a6580940f6e162c28c24c215c2", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume snprintf(3) exists\n\nISO C99 requires snprintf(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7d3213741e0e33d62159ca77e9ee38f9184a1222", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume rename(2) exists\n\nISO C99 requires rename(2).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d8c3df93ca0fad4f7766a997674c3502939cf30", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume NULL exists\n\nISO C99 requires NULL.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a32f5278d4048159272531db89f7be7026b2b94", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume strerror(3) exists\n\nISO C99 requires strerror(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e8df2b2b52ac458fc2394387bcfdd1917fd9ab6", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume fputs(3) exists\n\nISO C99 requires fputs(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c26b682381a6cb567c95bc8336052f5fca98e87d", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume <locale.h> exists\n\nISO C99 requires <locale.h>.\n\nOther files in the project already include <locale.h> unconditionally,\nso it's reasonable to assume that it is always available.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d34c834ea866da0a5aeebd13c65c532165c680a2", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Remove unused check for <limits.h>\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1eaa30756eaa696e8a24cae52e38c5819763bf91", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume <errno.h> exists\n\nISO C99 requires <errno.h>.\n\nMany files in the project already include <errno.h> unconditionally,\nso it's reasonable to assume that it is always available.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c4d9dcacc96376d3b605e81c063292b66ac35d8f", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume <stdbool.h> exists\n\nISO C99 requires <stdbool.h>.\n\nMany files in the project already include <stdbool.h> unconditionally,\nso it's reasonable to assume that it is always available.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed6c5053124b56ff7278a2df5f102912efb010c0", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Add '62_usermod_remove_supplementary_groups' test case to test runner scripts (run_some)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2bcb7a1b83a07b10c4753b2af5ce0ecdb0966b2", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Add '62_usermod_remove_supplementary_groups' test case to test runner scripts (run_all, run_all.coverage)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20f8ead9eceaa65f9c0abc37135c900c474062e2", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Add regression test for 'usermod -rG' -- it should not add users to groups they did not previously belong to", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "899f7a43b1dbaf564fc8b2673aa9aba6d0607a14", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Preparation / clarity: rename existing usermod test from 'remove_supplemental_groups' to 'clear_supplemental_groups'", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a5b8810bb1791ef044b9421969131bd385b8a70", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "agetpass: Hook into build-system\n\nSigned-off-by: Guillem Jover <guillem@hadrons.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab91ec10b4a42b935183e06df3791f74869ed823", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "Hide [[gnu::malloc(deallocator)]] in a macro\n\nClang doesn't implement this attribute and reports an error.  Work\naround it by hiding it in a macro that will be empty in clang.\n\nReported-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "554f86bafa2581d81ffb39e92240e39d630c43c4", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "Replace the deprecated getpass(3) by our agetpass()\n\ngetpass(3) is broken in all implementations; in some, more than\nothers, but somewhat broken in all of them.  Check the immediate\nprevious commit, which added the functions, for more details.\nCheck also the Linux man-pages commit that marked it as\ndeprecated, for more details:\n7ca189099d73bde954eed2d7fc21732bcc8ddc6b.\n\nLink: <https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/commit?id=7ca189099d73bde954eed2d7fc21732bcc8ddc6b>\nReported-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "155c9421b935202a550193b15dfd4eba014d21df", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "libmisc: agetpass(), erase_pass(): Add functions for getting passwords safely\n\nThere are several issues with getpass(3).\n\nMany implementations of it share the same issues that the infamous\ngets(3).  In glibc it's not so terrible, since it's a wrapper\naround getline(3).  But it still has an important bug:\n\nIf the password is long enough, getline(3) will realloc(3) memory,\nand prefixes of the password will be laying around in some\ndeallocated memory.\n\nSee the getpass(3) manual page for more details, and especially\nthe commit that marked it as deprecated, which links to a long\ndiscussion in the linux-man@ mailing list.\n\nSo, readpassphrase(3bsd) is preferrable, which is provided by\nlibbsd on GNU systems.  However, using readpassphrase(3) directly\nis a bit verbose, so we can write our own wrapper with a simpler\ninterface similar to that of getpass(3).\n\nOne of the benefits of writing our own interface around\nreadpassphrase(3) is that we can hide there any checks that should\nbe done always and which would be error-prone to repeat every\ntime.  For example, check that there was no truncation in the\npassword.\n\nAlso, use malloc(3) to get the buffer, instead of using a global\nbuffer.  We're not using a multithreaded program (and it wouldn't\nmake sense to do so), but it's nice to know that the visibility of\nour passwords is as limited as possible.\n\nerase_pass() is a clean-up function that handles all clean-up\ncorrectly, including zeroing the entire buffer, and then\nfree(3)ing the memory.  By using [[gnu::malloc(erase_pass)]], we\nmake sure that we don't leak the buffers in any case, since the\ncompiler will be able to enforce clean up.\n\nLink: <https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/commit?id=7ca189099d73bde954eed2d7fc21732bcc8ddc6b>\nReported-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8cce4557e00e9e556e49b10e604eea2e88d3846d", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "Don't 'else' after a 'noreturn' call\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99ce21a3131f54f7e59d55325b5b2ac0b2c0b00c", "commit_date": "2022-11-28T15:07:41Z", "commit_message": "CI: add libbsd and pkg-config dependencies\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>\nCo-developed-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a281f241b592aec636d1b93a99e764499d68c7ef", "commit_date": "2022-11-21T14:06:14Z", "commit_message": "Fix HAVE_SHADOWGRP configure check\n\nThe missing #include <gshadow.h> causes the configure check to fail\nspuriously, resulting in HAVE_SHADOWGRP not being defined even\non systems that actually have sgetsgent (such as current glibc).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8d2bc8d8b2c827e67cb8e3f9a6e1800af25c86f", "commit_date": "2022-11-18T21:10:56Z", "commit_message": "Allow supplementary groups to be added via config file\n\nAllow supplementary groups to be set via the /etc/default/useradd config\nfile. Allowing an administrator to set additonal groups via the GROUPS\nconfigurable and control the default behaviour of useradd.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0524e813a3bae2891b33a66f35876841c11cee7", "commit_date": "2022-11-18T15:04:42Z", "commit_message": "useradd: check if subid range exists for user\n\nCheck if a user already has a subid range before assigning one.\n\nResolves: https://bugzilla.redhat.com/show_bug.cgi?id=2012929\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}], "4.14.x": [{"commit_oid": "817f3283d10ead2ba50c88b9d8f62fb8c7fa94c5", "commit_date": "2023-09-25T15:55:14Z", "commit_message": "Release 4.14.1\n\nThe same thing, but this time, it's official.  :)\n\nLink: <https://lists.sr.ht/~hallyn/shadow/%3Cphikwsgcwerp4anb4qpfkruwqqy4rqsmowv6pi23m5rqvhxw4i%40yuexyhynkim3%3E>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e0bcacf3c6484ae10c28a196ab1185b3d97f4b3", "commit_date": "2023-09-18T12:50:02Z", "commit_message": "Release 4.14.1-alx\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0004cc46ddc0a198ae32a18125444e78019aab58", "commit_date": "2023-09-10T12:13:01Z", "commit_message": "lib: Merge libmisc into libshadow\n\nThe separation was unnecessary, and caused build problems.  Let's go\nwild and obliterate the library.  The files are moved to libshadow.\n\nScripted change:\n\n$ find libmisc/ -type f \\\n| grep '\\.[chy]$' \\\n| xargs mv -t lib;\n\nPlus updating the Makefile and other references.  While at it, I've\nsorted the sources lists.\n\nLink: <https://github.com/shadow-maint/shadow/pull/792>\nReported-by: David Seifert <soap@gentoo.org>\nCc: Sam James <sam@gentoo.org>\nCc: Christian Bricart <christian@bricart.de>\nCc: Michael Vetter <jubalh@iodoru.org>\nCc: Robert F\u00f6rster <Dessa@gmake.de>\n[ soap tested the Gentoo package ]\nTested-by: David Seifert <soap@gentoo.org>\nAcked-by: David Seifert <soap@gentoo.org>\nAcked-by: Serge Hallyn <serge@hallyn.com>\nAcked-by: Iker Pedrosa <ipedrosa@redhat.com>\nAcked-by: <lslebodn@fedoraproject.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c330177f0575c735f95a8b5a46723b4f209c5bb", "commit_date": "2023-09-10T12:12:54Z", "commit_message": "lib, libmisc: Move source files to lib (where their headers were)\n\nScripted change:\n\n$ find lib/ -type f \\\n| grep '\\.h$' \\\n| sed 's,lib/,libmisc/,' \\\n| sed 's,\\.h$,.c,' \\\n| xargs find 2>/dev/null \\\n| xargs mv -t lib/;\n\nPlus updating the Makefiles.\n\nCloses: <https://github.com/shadow-maint/shadow/issues/791>\nCloses: <https://bugs.gentoo.org/912446>\nLink: <https://github.com/shadow-maint/shadow/issues/763#issuecomment-1664383425>\nLink: <https://github.com/shadow-maint/shadow/pull/776>\nLink: <https://github.com/shadow-maint/shadow/commit/d0518cc250afeaceb772a7f50a900cfc9b3ab937>\nReported-by: Christian Bricart <christian@bricart.de>\nReported-by: Robert Marmorstein <robert@marmorstein.org>\nCc: Sam James <sam@gentoo.org>\n[ jubalh tested the openSUSE package ]\nTested-by: Michael Vetter <jubalh@iodoru.org>\nAcked-by: Michael Vetter <jubalh@iodoru.org>\n[ Robert F. tested the Gentoo package ]\nTested-by: Robert F\u00f6rster <Dessa@gmake.de>\nCc: David Seifert <soap@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "014536f5d55df33fc032d7a14d9f9d975d569722", "commit_date": "2023-08-16T02:38:30Z", "commit_message": "release 4.14.0\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca0f828e7a108b2860c10c2027115e45f74479f6", "commit_date": "2023-08-14T16:51:36Z", "commit_message": "pre-release 4.14.0-rc5\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ebad5f840a53d6824b1ee65f420837aa2a496380", "commit_date": "2023-08-14T14:08:35Z", "commit_message": "configure.ac: check for strlcpy\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae2a4507ed145b511f65db051448097d09fef02a", "commit_date": "2023-08-14T12:06:51Z", "commit_message": "Remove intree website\n\nAFAIK these files were not used in a while.\nOn 2023-04-27 we also archived the GitHub pages based repo:\nhttps://github.com/shadow-maint/shadow-www\n\nIn https://github.com/shadow-maint/shadow/commit/1654f42194ba7804c99d5ac96346a1a19fb793d7 we mention the regular repo URL as our home page.\n\nAlso see:\nhttps://github.com/shadow-maint/shadow/issues/114", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c1924dc5a1e55066c8dbfb04009a409e28fa7128", "commit_date": "2023-08-13T04:17:52Z", "commit_message": "4.14.0-rc4 pre-release\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee3e6112d3800757208732d6a4ca6e1141cbbf06", "commit_date": "2023-08-13T04:16:56Z", "commit_message": "Releases: add etc/shadow-maint to distfiles\n\nCloses #784\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2492fc00d4d082c21df771b0938dfadd26c5529f", "commit_date": "2023-08-10T14:33:07Z", "commit_message": "4.14.0-rc3\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "776bbd0ccb7460d51d17fd41cd8bbf793f18d0e9", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "libmisc: include freezero\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e0a310acf5111251589116343897a63ebc88e7a", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "libmisc: add freezero source code\n\nIf shadow is built without libbsd support, then freezero() needs to be\nprovided from the project.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7d5eeb21353489a6295c08bb5df99d7781fabb5a", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "libmisc: add readpassphrase source code\n\nIf shadow is built without libbsd support, then readpassphrase() needs\nto be provided from the project.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c408c4ad3db6fd713098d821773f91eaf081f798", "commit_date": "2023-08-10T14:29:17Z", "commit_message": "configure: add `with-libbsd` option\n\nIt enables the build with libbsd support. By default it is enabled.\n\nResolves: https://github.com/shadow-maint/shadow/issues/779\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ddd10482b2e0d5b60af9573385f1da50e312dc0", "commit_date": "2023-08-10T02:33:21Z", "commit_message": "man: include `shadow-man.xsl` in tarball\n\nThis will help generate man pages from tarball.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e17459fa15fea9ac675bab0059193026aaf6e18", "commit_date": "2023-08-10T02:33:21Z", "commit_message": "man: include `its.rules` in tarball\n\nThis will help generate the man pages from tarball.\n\nResolves: https://github.com/shadow-maint/shadow/issues/781\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c89b3263509f1d7dde353df87e46a4c8d8dc8cae", "commit_date": "2023-08-07T14:42:11Z", "commit_message": "autogen: enable lastlog build\n\nAdd \"--enable-lastlog\" to include lastlog man pages in tarball.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "969549fdf0cd43b46c778a7854c053af19248711", "commit_date": "2023-08-04T22:15:42Z", "commit_message": "Add wrapper for write(2)\n\nwrite(2) may not write the complete given buffer.  Add a wrapper to\navoid short writes.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d63f3a0c0a3bcb185d12db72ac477e1cf91f50d9", "commit_date": "2023-08-04T21:24:54Z", "commit_message": "tag 4.14.0-rc2\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0518cc250afeaceb772a7f50a900cfc9b3ab937", "commit_date": "2023-08-04T20:39:55Z", "commit_message": "Add new files to libmisc_la_SOURCES\n\nResolves https://github.com/shadow-maint/shadow/issues/763", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4107c49ecdf6c0bf5d5a152f86da7fb1a2fdb2db", "commit_date": "2023-08-04T19:15:49Z", "commit_message": "Add a make dist CI test\n\nAdd a CI test to check that make dist builds a usable tarball.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95296dfd674fc053b21ad5067dde5578055c0524", "commit_date": "2023-08-03T16:28:59Z", "commit_message": "4.14.0-rc1\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf5596fc79b18c65d68f5465a4eea87ab2d25be9", "commit_date": "2023-08-03T16:28:54Z", "commit_message": "remove xmalloc.c from POTFILES.in\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2155fadf15706b8591c59ea57276f31fe2dd254", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "logoutd: add missing <utmp.h> include\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02e3e04205e5cb46916408632a43f9fe7391b83f", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "CI: compile old utmp interface in Fedora\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "50affc546ff96e9a91dba2339a696b5b0c3c9ad8", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "src: add SELINUX library\n\nWith the recent changes both login and su compilation fail because there\nare some missing dependencies from SELINUX library. Thus, add LIBSELINUX\nto su and login for those cases where the library is used.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "78c09e3afe6d3dc281b416fbc47204387072a7e0", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: conditionally compile `utmp.c` and `logind.c`\n\nDepending on the configuration option selected.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b7cc053872cf4ce77fd74dc037f43f34e951e83", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "lib: replace `USER_NAME_MAX_LENGTH` macro\n\nReplace it by `sysconf(_SC_LOGIN_NAME_MAX)`, which is the maximum\nusername length supported by the kernel.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb8f44d73fc64cf26ed10cebf9dce9d0b865501d", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: call `active_sessions_count()`\n\nReplace the utmp dependent code with the call to\n`active_sessions_count()`.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ede0665a5a2aca27eb2c97f6ba756d3164442341", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: implement `active_sessions_count()`\n\nImplement `active_sessions_count()` in `utmp.c` and `logind.c`.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f368e1c1838de9d476a36897d7c53394569de08", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "utmp: update `update_utmp()`\n\nRemove `utmp` structure as an argument and include its logic inside the\nfunction. This will help remove any reference to utmp from login.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6b7108e347f35db04cf21024868ee0482c5090be", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "utmp: move `update_utmp`\n\nThe functionality from this function is related to utmp. Restrict access\nto `setutmp()` to the same file.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b6ca83ea4c4404771d896a23c3ac7fbb4d44a4d1", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "utmp: move `failtmp()`\n\nThe functionality from this function is related to btmp.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f40bdfa66a3a284a15f7b6f15aa379010d466212", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "libmisc: implement `get_session_host()`\n\nImplement `get_session_host()` in `utmp.c` and `logind.c`.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb35ad15aef6190914a939b299e10c343e3e4c2a", "commit_date": "2023-08-02T15:13:28Z", "commit_message": "configure: new option `enable-logind`\n\nCreate new configuration option `enable-logind` to select which session\nsupport functionality to build, logind or utmp. By default the option is\nlogind.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7bced397c9fd66965753e5fc0fd3dfa535ca1c9b", "commit_date": "2023-07-29T02:24:36Z", "commit_message": "shadow userdel: add the adaptation to the busybox ps in 01-kill_user_procs.sh\n\nIn some embedded systems, users only use the ps\nprovided by the busybox. But the ps provided by\nthe busybox does not support the -eo option by\ndefault. As a result, an error is reported when\nthe userdel is used. So add a judgment on ps.\nIf there is no ps -eo, traverse the process directly.\n\nThe error information is as follows:\n # userdel xsl\nps: invalid option -- 'e'\n\nSigned-off-by: xiongshenglan <xiongshenglan@huawei.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a692c880f10bc561155cecda5e2bc4b40a669776", "commit_date": "2023-07-27T17:35:27Z", "commit_message": "chsh: warn if root sets a shell not listed in /etc/shells\n\nPrint a warning even for the root user if the provided shell isn't\nlisted in /etc/shells, but continue to execute the action.\nIn case of non root user exit.\n\nSee https://github.com/shadow-maint/shadow/issues/535", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5f05d78127489648330c0c136afb7eba61bd2e0", "commit_date": "2023-07-27T15:03:28Z", "commit_message": "doc: mention ci workflow file to learn about deps\n\nFix https://github.com/shadow-maint/shadow/issues/38", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "35e91daba0c42df264ab2abca72f7546b549e586", "commit_date": "2023-07-22T04:34:32Z", "commit_message": "man/po/Makefile: add a comment to shadow-man-pages.pot\n\nAdd a comment at the top of that file explaining how to\nregenerate it.\n\nWe should add a README, but I don't have time to draft one\nright now.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9df4801e0b65073cc8a9031b22a73532ef7fdc2c", "commit_date": "2023-07-22T04:32:19Z", "commit_message": "newgrp: fix potential string injection\n\nSince newgrp is setuid-root, any write() system calls it does in order\nto print error messages will be done as the root user.\n\nUnprivileged users can get newgrp to print essentially arbitrary strings\nto any open file in this way by passing those strings as argv[0] when\ncalling execve(). For example:\n\n    $ setpid() { (exec -a $1$'\\n:' newgrp '' 2>/proc/sys/kernel/ns_last_pid & wait) >/dev/null; }\n    $ setpid 31000\n    $ readlink /proc/self\n    31001\n\nThis is not a vulnerability in newgrp; it is a bug in the Linux kernel.\n\nHowever, this type of bug is not new [1] and it makes sense to try to\nmitigate these types of bugs in userspace where possible.\n\n[1]: https://lwn.net/Articles/476947/\n\nSigned-off-by: Vegard Nossum <vegard.nossum@oracle.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2643f27b360d44dcb5514072316eb112a867904e", "commit_date": "2023-07-18T15:49:13Z", "commit_message": "lastlog: fix alignment of Latest header\n\nb1282224 (Add maximum padding to fit IPv6-Addresses, 2020-05-24) pads\nthe From field header using `maxIPv6Addrlen - 3`.  This leaves the\nLatest field header misaligned.  Subtract 4 (the length of \"From\").", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f4dc321c3822742cbb19c7656e56e1c0651ba9e", "commit_date": "2023-07-17T18:01:34Z", "commit_message": "configure: fix lastlog check\n\nFixes: 1bdcfa8d3710bf0a3f180b590017df096d346ade (\"lastlog: stop building by\ndefault\")\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65255ea3047be8aee7079a4f3c0cf6874232d28a", "commit_date": "2023-07-17T08:10:01Z", "commit_message": "subuid.5: reference newusers(8) rather than newusers(1)\n\nResolves: https://github.com/shadow-maint/shadow/issues/752\n\nSigned-off-by: Alan D. Salewski <ads@salewski.email>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c69fd917e3ae6b034960264649cc534eab7102a2", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "CI: build lastlog in Fedora\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "acea93eda905cf24023f2338bfebbc43429c8d18", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "man: conditionally build lastlog documentation\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03251ffbc099286b56df1a9fc8dd3bb054bf7015", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "usermod: conditionally build lastlog functionality\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d60595d8f2a3a54c239ee27cc1ea4643d4a27c1d", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "useradd: conditionally build lastlog functionality\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84a10ca019083ce971f43e29eb22bf4d3242481e", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "login: conditionally build lastlog functionality\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1bdcfa8d3710bf0a3f180b590017df096d346ade", "commit_date": "2023-07-15T12:39:53Z", "commit_message": "lastlog: stop building by default\n\nCreated a new configuration option `--enable-lastlog` to conditionally\nbuild the lastlog binary. By default the option is disabled.\n\nResolves: https://github.com/shadow-maint/shadow/issues/674\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a0eeb9fbf282f939edb103b73ca448b96b6214eb", "commit_date": "2023-07-14T09:49:40Z", "commit_message": "CI: update debian repos\n\nLatest debian version changed the location and format for the repos\nfile.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29da702491eea314b915ea9c7a83c9af80cf5797", "commit_date": "2023-07-12T13:31:51Z", "commit_message": "Fix yescrypt support\n\nFixes build error:\nnewusers.c: In function 'update_passwd':\nnewusers.c:433:21: error: 'sflg' undeclared (first use in this function); did you mean 'rflg'?\n\nintroduced by\nhttps://github.com/shadow-maint/shadow/commit/5cd04d03f94622c12220d4a6352824af081b8531\nwhich forgot to define sflg for these configure options:\n\n--without-sha-crypt --without-bcrypt --with-yescrypt", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53a17c1742a4b5fcf9280fd6dd85fc77588535c2", "commit_date": "2023-06-22T19:51:34Z", "commit_message": "chgpasswd: fix segfault in command-line options\n\nUsing the --sha-rounds option without first giving a crypt method via the --crypt-method option results in comparisons with a NULL pointer and thus make chgpasswd segfault:\n\n$ chgpasswd -s 1\nzsh: segmentation fault  chgpasswd -s 1\n\nCurrent patch add a sanity check before these comparisons to ensure there is a defined encryption method.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65c88a43a23c2391dcc90c0abda3e839e9c57904", "commit_date": "2023-06-11T01:35:50Z", "commit_message": "gpasswd(1): Fix password leak\n\nHow to trigger this password leak?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen gpasswd(1) asks for the new password, it asks twice (as is usual\nfor confirming the new password).  Each of those 2 password prompts\nuses agetpass() to get the password.  If the second agetpass() fails,\nthe first password, which has been copied into the 'static' buffer\n'pass' via STRFCPY(), wasn't being zeroed.\n\nagetpass() is defined in <./libmisc/agetpass.c> (around line 91), and\ncan fail for any of the following reasons:\n\n-  malloc(3) or readpassphrase(3) failure.\n\n   These are going to be difficult to trigger.  Maybe getting the system\n   to the limits of memory utilization at that exact point, so that the\n   next malloc(3) gets ENOMEM, and possibly even the OOM is triggered.\n   About readpassphrase(3), ENFILE and EINTR seem the only plausible\n   ones, and EINTR probably requires privilege or being the same user;\n   but I wouldn't discard ENFILE so easily, if a process starts opening\n   files.\n\n-  The password is longer than PASS_MAX.\n\n   The is plausible with physical access.  However, at that point, a\n   keylogger will be a much simpler attack.\n\nAnd, the attacker must be able to know when the second password is being\nintroduced, which is not going to be easy.\n\nHow to read the password after the leak?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nProvoking the leak yourself at the right point by entering a very long\npassword is easy, and inspecting the process stack at that point should\nbe doable.  Try to find some consistent patterns.\n\nThen, search for those patterns in free memory, right after the victim\nleaks their password.\n\nOnce you get the leak, a program should read all the free memory\nsearching for patterns that gpasswd(1) leaves nearby the leaked\npassword.\n\nOn 6/10/23 03:14, Seth Arnold wrote:\n> An attacker process wouldn't be able to use malloc(3) for this task.\n> There's a handful of tools available for userspace to allocate memory:\n>\n> -  brk / sbrk\n> -  mmap MAP_ANONYMOUS\n> -  mmap /dev/zero\n> -  mmap some other file\n> -  shm_open\n> -  shmget\n>\n> Most of these return only pages of zeros to a process.  Using mmap of an\n> existing file, you can get some of the contents of the file demand-loaded\n> into the memory space on the first use.\n>\n> The MAP_UNINITIALIZED flag only works if the kernel was compiled with\n> CONFIG_MMAP_ALLOW_UNINITIALIZED.  This is rare.\n>\n> malloc(3) doesn't zero memory, to our collective frustration, but all the\n> garbage in the allocations is from previous allocations in the current\n> process.  It isn't leftover from other processes.\n>\n> The avenues available for reading the memory:\n> -  /dev/mem and /dev/kmem (requires root, not available with Secure Boot)\n> -  /proc/pid/mem (requires ptrace privileges, mediated by YAMA)\n> -  ptrace (requires ptrace privileges, mediated by YAMA)\n> -  causing memory to be swapped to disk, and then inspecting the swap\n>\n> These all require a certain amount of privileges.\n\nHow to fix it?\n~~~~~~~~~~~~~~\n\nmemzero(), which internally calls explicit_bzero(3), or whatever\nalternative the system provides with a slightly different name, will\nmake sure that the buffer is zeroed in memory, and optimizations are not\nallowed to impede this zeroing.\n\nThis is not really 100% effective, since compilers may place copies of\nthe string somewhere hidden in the stack.  Those copies won't get zeroed\nby explicit_bzero(3).  However, that's arguably a compiler bug, since\ncompilers should make everything possible to avoid optimizing strings\nthat are later passed to explicit_bzero(3).  But we all know that\nsometimes it's impossible to have perfect knowledge in the compiler, so\nthis is plausible.  Nevertheless, there's nothing we can do against such\nissues, except minimizing the time such passwords are stored in plain\ntext.\n\nSecurity concerns\n~~~~~~~~~~~~~~~~~\n\nWe believe this isn't easy to exploit.  Nevertheless, and since the fix\nis trivial, this fix should probably be applied soon, and backported to\nall supported distributions, to prevent someone else having more\nimagination than us to find a way.\n\nAffected versions\n~~~~~~~~~~~~~~~~~\n\nAll.  Bug introduced in shadow 19990709.  That's the second commit in\nthe git history.\n\nFixes: 45c6603cc86c (\"[svn-upgrade] Integrating new upstream version, shadow (19990709)\")\nReported-by: Alejandro Colomar <alx@kernel.org>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Seth Arnold <seth.arnold@canonical.com>\nCc: Christian Brauner <christian@brauner.io>\nCc: Balint Reczey <rbalint@debian.org>\nCc: Sam James <sam@gentoo.org>\nCc: David Runge <dvzrv@archlinux.org>\nCc: Andreas Jaeger <aj@suse.de>\nCc: <~hallyn/shadow@lists.sr.ht>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e69d556b63f202680a47a40a974046140a3cff15", "commit_date": "2023-06-10T00:04:51Z", "commit_message": "src/useradd.c: create_mail(): Cosmetic\n\n-  Invert conditional to reduce indentation.\n-  Reduce use of whitespace and newlines while unindenting.\n-  Reorder variable declarations.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0a9011808971ab8841ea13eb54cfa4c2c5d7d850", "commit_date": "2023-06-10T00:04:51Z", "commit_message": "src/useradd.c: create_home(): Cosmetic\n\n-  Invert conditional to reduce indentation.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "adf8b3f64f9a6994ce0d1bfb57d455b55a09ee05", "commit_date": "2023-06-10T00:04:47Z", "commit_message": "src/useradd.c: create_home(): Cosmetic\n\n-  Invert conditional to reduce indentation.\n-  Rewrite while loop calling strtok(3) as a for loop.  This allows\n   doing more simplification inside the loop (see next commit).\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c01664c30c217822f76eedc4a217cb383f91fde4", "commit_date": "2023-06-10T00:03:57Z", "commit_message": "src/useradd.c: create_home(): Cosmetic\n\n-  Fix indentation.  It was very broken.\n-  Move variable declaration to the top of the block in which it's used.\n-  Reduce use of whitespace and newlines.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7415885fb37505f8c543814e7508ab4dd7f234d3", "commit_date": "2023-06-10T00:02:41Z", "commit_message": "src/useradd.c: close_group_files(): Cosmetic\n\n-  Invert conditional, to reduce indentation.\n-  Reduce use of whitespace and newlines while unindenting.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89bdd3660c2bf4544b08ef9a7271f6bc8f810a52", "commit_date": "2023-06-10T00:02:41Z", "commit_message": "src/useradd.c: check_uid_range(): Cosmetic\n\n-  Merge nested conditionals into a single if, to reduce indentation.\n-  Indent (1 SP) nested preprocessor conditionals.\n-  Reduce use of whitespace and newlines while unindenting.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4b06c28353157fefc82801df326d518512233d94", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "build: link passwd, chpasswd and chage against libdl", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc0aaaa18f0571af8121757c2213eda92424358e", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "configure: check whether fgetpwent_r is available before marking xprefix_getpwnam_r as reentrant", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68bf73f3196b3a05846e2eabcb1e472ede8265f0", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "passwd: fall back to non-PAM code when prefix is used\n\nPrefix does not make sense when we use PAM, so when the option\nis used behave as if --with-libpam=no was used to configure the\nproject.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2d0beef3bb27ce0d2ee7c814ecf3223d9af1b645", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "chpasswd: fall back to non-PAM code when prefix is used\n\nThe prefix option does not make sense in that scenario and the\nencryption options already do this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13b0a2bf3bcf108f550100aa04d962754f2a3476", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "chpasswd: add --prefix/-P options", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef8a4449b1345ec46054fcd9cc0c59de3fbdae83", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "chage: add --prefix/-P options", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43e60eb681513adc90fbbec67fd23091a46352fe", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "passwd: Respect --prefix/-P options\n\nAdd prefix_getpwnam_r() and xprefix_getpwnam() and make passwd\nuse prefix-aware functions when handling the database.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ded9cab35d703f21b249d8d534611319f6cf8578", "commit_date": "2023-06-09T14:22:24Z", "commit_message": "prefix: add prefix support", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89a7ee7b227b977b1714ba8ee8fa8e4a58b2782f", "commit_date": "2023-06-09T12:48:48Z", "commit_message": "strtoday: remove unnecessary cast\n\nResolves: https://github.com/shadow-maint/shadow/issues/704\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "787ea57a186e0e7a60c75026038056cc2131ec0c", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "Use temporary variable\n\n-  Use the temporary variable more, as it helps readability: it removes\n   a derefecence, which itself allows removing some parentheses.\n\n-  Use a shorter name, which is more common with temporaries, and so\n   there's less to read.\n\n-  Assign to *ranges at the end of the function.  It's the same, but\n   with the other changes, I think this makes it slightly clearer.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2ac1e254044aa7de1bd4b8deb08b8017813f730", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "realloc(NULL, ...) is equivalent to malloc(...)\n\nDon't have a branch for when the old pointer is NULL.  realloc(3) can\nhandle that case just fine.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "09775d3718df216c75b62d73bbcc5aa060e0fc94", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "Simplify allocation APIs\n\nIf we consider simple objects as arrays of size 1, we can considerably\nsimplify these APIs, merging the *ARRAY and the non-array variants.\n\nThat will produce more readable code, since lines will be shorter (by\nnot having ARRAY in the macro names, as all macros will consistently\nhandle arrays), and the allocated size will be also more explicit.\n\nThe syntax will now be of the form:\n\n    p = MALLOC(42, foo_t);  // allocate 42 elements of type foo_t.\n    p = MALLOC(1, bar_t);   // allocate 1 element of type foo_t.\n\nThe _array() allocation functions should _never_ be called directly, and\ninstead these macros should be used.\n\nThe non-array functions (e.g., malloc(3)) still have their place, but\nare limited to allocating structures with flexible array members.  For\nany other uses, the macros should be used.\n\nThus, we don't use any array or ARRAY variants in any code any more, and\nthey are only used as implementation details of these macros.\n\nLink: <https://software.codidact.com/posts/285898/288023#answer-288023>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "065a752b426266462dc0e7d9ad5a9fe79e6be16a", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "Drop alloca(3)\n\nalloca(3) fails silently if not enough memory can be allocated on the\nstack.  Use checked dynamic allocation instead.\n\nAlso drop unnecessary manual NUL assignment, ensured by snprintf(3).\n\nCo-developed-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a2b302e68a4f3e324b851c7361e40aa20a86a64", "commit_date": "2023-06-08T14:05:39Z", "commit_message": "usermod: fix off-by-one issues\n\nAllocate enough memory for the strings, two slashes and the NUL\nterminator.\n\nReported-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "170d24a251c11dadee35f14fd2c2348fa06279b0", "commit_date": "2023-06-05T21:50:40Z", "commit_message": "libmisc/csrand.c: Update comments\n\nThose comments were written when this function used 64 bits (and\ntemporary variables of 128 bits).  Now it uses 32 bits, with temporaries\nof 64 bits, so some values have changed.\n\nFixes: 2a61122b5e8f (\"Unoptimize the higher part of the domain of csrand_uniform()\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70399856c1e7ae6bddbe26319895fd53ab895be4", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "lib/nss.c: Fix use of invalid p\n\ngetline(3) might have succeeded in a previous iteration, in which case\np points to an offset that is not valid.  Make p NULL at the end of the\nloop, to make sure it doesn't hold old stuff.\n\nLink: <https://github.com/shadow-maint/shadow/pull/737#issuecomment-1568948769>\nReported-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "848a95329c867aae726ae990051700c9ef6541fa", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "lib/nss.c: Fix use of uninitialized p\n\ngetline(3) might have never succeeded, in which case p is uninitialized\nwhen used in strtok_r(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/737#discussion_r1206007358>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54ba4814aeede61b25dc9e6212cd82787d0a4103", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "Centralize error handling\n\nThis makes the function fit in less screens.  This is to avoid consuming\nmore natural resources than we have available, and everyone knows the\nsupply of new-lines on a screen is not a renewable source[1].\n\nSome transformations have been done thanks to free(NULL) being an alias\nfor loopity_loop(), as defined three comits ago.  The real definition of\nfree(3) that everyone has been hiding is this:\n\nvoid\nfree(void *p)\n{\n\tif (p == NULL)\n\t\tloopity_loop();\n\telse\n\t\treal_free(p);\n}\n\nLink: [1] <https://www.kernel.org/doc/html/v6.3/process/coding-style.html#placing-braces-and-spaces>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "07b885318f237f7129229cfb61496886a89ae505", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "Second verse, it gets worse; it gets no better than this\n\nJust in case it's not obious:\n\n\tstrlen(\"\") < 8\n\tisalpha('\\0') == false\n\tisdigit('\\0') == false\n\tisspace('\\0') == false\n\nLink: <https://github.com/shadow-maint/shadow/pull/737>\nEaster-egg: 8492dee6632e (\"subids: support nsswitch\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f9ca4b49d30c7095fab4f2e0f6a03afed6b906a", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "ROFL: Rolling on the floor looping\n\nPlease tell me this was an easter egg :P\n\n #define go_banana() ({ goto nowhere; nowhere: 0-0; })\n\nCloses: <https://github.com/shadow-maint/shadow/issues/736>\nEaster-egg: 8492dee6632e (\"subids: support nsswitch\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8219fbd421b52e6d7d5751211910be512388065c", "commit_date": "2023-05-31T14:29:49Z", "commit_message": "This ain't no loop\n\nThis was to a loop, as \"1234\" is to computer security.\n\nNo really; a loop that ends in a (forward) goto, and has no continue in it.\n\nStill want a loop?  Take two:\n\n #define loopity_loop() do { for (;;) { break; } continue; } while (0-0)\n\nCloses: <https://github.com/shadow-maint/shadow/issues/736>\nEaster-egg: 8492dee6632e (\"subids: support nsswitch\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9233e5e0aebc210c56375a3a2bc779f20a09a82d", "commit_date": "2023-05-31T07:53:31Z", "commit_message": "newusers: Improve error message\n\nFixes: b422e3c31691: Check if crypt_method null before dereferencing\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c7327842cdcebe15caecb84a14c2b6b6eb10560", "commit_date": "2023-05-31T07:44:25Z", "commit_message": "ch(g)passwd: Check selinux permissions upon startup\n\nThe permission also need to be checked before process_root_flag() since\nthat can chroot into non-selinux environment (unavailable selinux mount\npoint for example).\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b422e3c31691412f0a5404d09f7b328477e23c48", "commit_date": "2023-05-30T19:00:12Z", "commit_message": "Check if crypt_method null before dereferencing\n\nMake sure crypto_method set before sha-rounds. Only affects newusers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d9f0246611aea527f21c15256a6340c618f22d73", "commit_date": "2023-05-30T18:56:55Z", "commit_message": "xgetXXbyYY: Simplify elifs\n\n-  Use SIZE_MAX rather than (size_t)-1, to improve readability.\n\n-  Move the only branch that breaks to the first place, so that we\n   remove an else.  This reduces nesting while parsing the code.\n\n-  Now that we only have a 2-branch conditional where both branches\n   assign to the same variable, rewrite it as a ternary, to shorten.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89c9427087f029cad177eb8fee6884d1b218a3ab", "commit_date": "2023-05-30T18:56:55Z", "commit_message": "xgetXXbyYY: Centralize error handling\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c8741a400d6a6208c334c5228b9f2db28401b578", "commit_date": "2023-05-30T18:56:55Z", "commit_message": "xgetXXbyYY: tfix\n\nIt seems obvious that it was a typo.\n\nLink: <https://github.com/shadow-maint/shadow/pull/729#discussion_r1207551013>\nFixes: e73a2194b3d2 (\"xgetXXbyYY: Handle DUP_FUNCTION failure\")\nCc: Samanta Navarro <ferivoz@riseup.net>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcc90658fd672c63e5498619e77f2d5a3d95f7d7", "commit_date": "2023-05-26T21:03:27Z", "commit_message": "xgetXXbyYY: Avoid duplicated error handling block\n\nThe error handling is performed after the loop. By just calling break it\nis possible to reuse the error handling if status is not ERANGE.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e73a2194b3d257da996cbcceaa0fb376831ae62b", "commit_date": "2023-05-26T21:03:27Z", "commit_message": "xgetXXbyYY: Handle DUP_FUNCTION failure\n\nA failure of DUP_FUNCTION is already handled for non-reentrant\nfunction wrapper. Perform the check for reentrant version as well.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a80b792afc7d557270bf4024fddc97199a5a31fb", "commit_date": "2023-05-26T20:16:29Z", "commit_message": "sub_[ug]id_{add,remove}: fix return values\n\nOn failure, these are meant to return 0 with errno set.  But if\nan nss module is loaded, they were returning -ERRNO instead.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8665fe1957b0d565701ff1b834eae89e5c4d2c9a", "commit_date": "2023-05-26T20:14:02Z", "commit_message": "usermod: Small optimization using memmove for password unlock\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3b7058110edbffcdcc592d03951cdafca184113", "commit_date": "2023-05-26T02:22:08Z", "commit_message": "Reorder logic to improve comprehensibility\n\n-  Don't else after return or fail_exit().\n-  Prefer == over != (negated logic is more complex to think about it).\n-  Reduce nesting when reasonable.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b117d55261cd4882df9571d2801dc4b1da2176f", "commit_date": "2023-05-26T02:22:08Z", "commit_message": "newusers: Fail early\n\nThere's no reason to report all errors.  Bail out at the first one,\nwhich is simpler.\n\nSuggested-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1957c8c881e232843a8d1617d66f223bf1e229c9", "commit_date": "2023-05-26T02:22:08Z", "commit_message": "newusers: Add missing error handling\n\nSome errors were being reported in stderr, but then they weren't really\nbeing treated as errors.\n\nIf mkdir(2) for EEXIST, it's possible that the sysadmin pre-created the\nuser dir; don't fail.  However, let's keep a log line, for having some\nnotice that it happened.\n\nAlso, run chmod(2) if mkdir(2) failed for EEXIST (so transform the\n'else if' into an 'if').\n\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6491fef1e0be72661aa8ed60d3784d4426f41c76", "commit_date": "2023-05-25T13:25:42Z", "commit_message": "libmisc: Use safer chroot/chdir sequence\n\nOpenSSH and coreutils' chroot call chroot first and then chdir. Doing it\nthis way is a bit safer because otherwise something could happen between\nchdir and chroot to the specified path (like exchange of links) so the\nworking directory would not end up within the chroot environment.\n\nThis is a purely defensive measure.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a116e20c76f36d6f72f101508f634b6c1bddb9be", "commit_date": "2023-05-25T13:25:42Z", "commit_message": "su: Prevent stack overflow in check_perms\n\nThis is no real world security fix.\n\nThe overflow could occur if too many layered subsystems are encountered\nbecause the function check_perms calls itself recursively.\n\nIt would already take a misconfigured system for this to achieve it.\n\nUse an iterative approach by calling the do_check_perms in a loop\ninstead of calling itself recursively.\n\nAs a side note: At least GCC 13 optimized this code and already uses\na jmp in its assembler code. I could only see the stack overflow by\nactivating address sanitizer which prevented the optimization.\n\nCo-developed-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ad359ccc69ebfac5e6447562fca5a1741111324", "commit_date": "2023-05-25T13:25:42Z", "commit_message": "subsystem: Prevent endless loop\n\nIf a user has home directory \"/\" and login shell \"*\" then login and su\nenter an endless loop by constantly switching to the next subsystem.\n\nThis could also be achieved with a layered approach so just checking\nfor \"/\" as home directory is not enough to protect against such a\nmisconfiguration.\n\nJust break the loop if it progressed too far. I doubt that this has\nnegative impact on any real setup.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "419cf1f1c4721829c4d68c9e5fee112a5da5890f", "commit_date": "2023-05-22T08:23:12Z", "commit_message": "def_load: avoid NULL deref\n\nIf econf_getStringValue() fails, it will return an error and\nset value to NULL.  Look for the error and avoid dereferencing\nvalue in that case.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e854f525d2965e45b0bb2bcfa6761a990d0c751", "commit_date": "2023-05-22T08:23:12Z", "commit_message": "def_load: split the econf from non-econf definition\n\nThe function is completely different based on USE_CONF.  Either copy\nwill be easier to read if we just keep them completely separate.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8175b1532e4bb1951264e8a6ee5f484137e5306c", "commit_date": "2023-05-19T13:02:24Z", "commit_message": "Plug econf memory leaks\n\nYou can see the memory leaks with address sanitizer if shadow is\ncompiled with `--enable-vendordir=/usr/etc`.\n\nHow to reproduce:\n\n1. Prepare a custom shell file as root\n```\nmkdir -p /etc/shells.d\necho /bin/myshell > /etc/shells.d/custom\n```\n\n2. Run chsh as regular user\n```\nchsh\n```\n\nSigned-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7321ceaf69a7028a04056e548d861b291634c2d0", "commit_date": "2023-05-18T14:03:41Z", "commit_message": "chsh: Verify that login shell path is absolute\n\nThe getusershell implementation of musl returns every line within the\n/etc/shells file, which even includes comments. Only consider absolute\npaths for login shells.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "812f934e77700afedbf5e929b282f29a47b2d9c6", "commit_date": "2023-05-18T13:36:59Z", "commit_message": "process_prefix_flag: Drop privileges\n\nUsing --prefix in a setuid binary is quite dangerous. An unprivileged\nuser could prepare a custom shadow file in home directory. During a data\nrace the user could exchange directories with links which could lead to\nexchange of shadow file in system's /etc directory.\n\nThis could be used for local privilege escalation.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1132b8923624b07183c2202c63c21ad4325ee5e8", "commit_date": "2023-05-15T13:42:40Z", "commit_message": "Update French translations\n\nPlease find attached the french updated translation of shadow-man-page,\nproofread by the debian-l10n-french mailing list contributors.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ef4477535682fd3baa242450f62d546ee3974ce", "commit_date": "2023-05-15T07:21:16Z", "commit_message": "get_pid.c: Use tighter validation checks\n\nNeither a pid_t below 1 nor a negative fd could be valid in this context.\n\nProof of Concept:\n\n$ newuidmap -1 1 1 1\nnewuidmap: Could not open proc directory for target 4294967295\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a022d39d2abbee48d3223689bea5c31592420ca6", "commit_date": "2023-05-11T22:01:43Z", "commit_message": "replace inadequate German translation of login error message\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd6db6f226db7a88d2e1c1edfcbc3f434e155b55", "commit_date": "2023-05-11T16:05:59Z", "commit_message": "Update German translations\n\nfind the attached German message catalogue proofread by the German\nlanguage team.\n\nBest regards\nMarkus\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "666468cc36197b2f313f05cc04f2b53cb8aeec14", "commit_date": "2023-05-11T16:05:29Z", "commit_message": "Remove some static char arrays\n\nSome strings are first written into static char arrays before passed to\nfunctions which expect a const char pointer anyway.\n\nIt is easier to pass these strings directly as arguments.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "72290ede0e0d0cf960127bf42f11a7e227d4dac5", "commit_date": "2023-05-11T15:59:21Z", "commit_message": "commonio: Use do_lock_file again\n\nThis avoids regressions introduced with do_fcntl_lock.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4abcbb056e8894e92c71508c9ae7c63051cf4d37", "commit_date": "2023-05-10T07:15:53Z", "commit_message": "Fix broken docbook translations\n\nits by default does not support xml tags inside translatable\nunits.  Use custom its rules from\n\nhttps://www.w3.org/TR/xml-i18n-bp/#relating-docbook-plus-its\n\nto enable the tags which are in use by docbook.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0bce9c9808e6932b63a50caf537eaa528d7ed73c", "commit_date": "2023-05-08T13:16:11Z", "commit_message": "open with O_CREAT when lock path does not exist\n\nReported in #686, by wyj611 when trying to lock a file that is not\npresent\n\nLock method should be F_SETLKW rather than open file descriptor", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "627631bf9a403d39663a3c33a8e4b13147996639", "commit_date": "2023-05-05T14:15:46Z", "commit_message": "commonio_open: Remove fcntl call\n\nThe fcntl call to set FD_CLOEXEC can be performed directly with the\npreviously performed open call by using the O_CLOEXEC flag.\n\nO_CLOEXEC is required by POSIX.1-2008.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e899e3d745e9115b3229ed0b68d268fce7891252", "commit_date": "2023-05-05T14:15:46Z", "commit_message": "commonio_lock_nowait: Remove deprecated code\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7109b7c066fc0bf0b5e2dd99729fb95eef47ed58", "commit_date": "2023-05-03T12:54:28Z", "commit_message": "login_prompt: Simplify login_prompt API\n\nThe only user of login_prompt is the login tool. This implies that the\nfirst argument is always the same.\n\nIt is much easier to verify printf's format string and its argument if\nboth are next to each other.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3010ec11aedf8cb61f8f70d802a2f192375970d9", "commit_date": "2023-05-03T12:54:28Z", "commit_message": "login_prompt: Use _exit in signal handler\n\nCalling exit is not signal safe.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8fc8de382ab3f90bc8eb4807a5ee841a6bb5f647", "commit_date": "2023-05-03T12:54:28Z", "commit_message": "login_prompt: Do not parse environment variables\n\nParsing optional environment variables after a login name is a feature\nwhich is neither documented nor available in util-linux or busybox\nlogin which are other wide spread login utilities used in Linux\ndistributions as reference.\n\nRemoving this feature resolves two issues:\n\n- A memory leak exists if variables without an equal sign are used,\n  because set_env creates copies on its own. This could lead to OOM\n  situations in privileged part of login or may lead to heap spraying.\n- Environment variables are not reset between login attempts. This\n  could lead to additional environment variables set for a user who\n  never intended to do so.\n\nProof of Concept on a system with shadow login without PAM and\nutil-linux agetty:\n\n1. Provoke an invalid login, e.g. user `noone` and password `invalid`.\n   This starts shadow login and subsequent inputs are passed through\n   the function login_prompt.\n2. Provoke an invalid login with environment variables, e.g.\n   user `noone HISTFILE=/tmp/owo` and password `invalid`.\n3. Log in correctly with user `root`.\n\nNow you can see with `echo $HISTFILE` that `/tmp/owo` has been set for\nthe root user.\n\nThis requires a malicious failed login attempt and a successful login\nwithin the configured login timeout (default 60 seconds).\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0fc4d2122057530b11567503839116dca5998ce", "commit_date": "2023-04-28T16:22:48Z", "commit_message": "libmisc/yesno.c: Fix regression\n\nThe getline function does not return a pointer but the amount of read\ncharacters. The error return value to check for is -1.\n\nSet buf to NULL to avoid dereference of an uninitialized stack value.\n\nThe getline function returns -1 if size argument is NULL. Always use\na valid pointer even if size is unimportant.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c4fa6ee0af0c9d52c583d1cea6b655fb95724c1", "commit_date": "2023-04-27T07:16:08Z", "commit_message": "libmisc, man: Drop old check and advice for complex character sets in passwords\n\nAdd the relevant XKCD to the passwd(1) manual page.  It already explains\nmost of the rationale behind this patch.\n\nAdd also reference to makepasswd(1), which is a good way to generate\nstrong passwords.  Personally, I commonly run `makepasswd --chars 64` to\ncreate my passwords, or 32 for passwords I need to type interactively\noften.\n\nThe strength of a password is an exponential formula, where the base is\nthe size of the character set, and the exponent is the length of the\npassword.  That already shows why long passwords of just lowercase\nletters are better than short Pa$sw0rdZ3.  But an even more important\npoint is that humans, when forced to use symbols in a password, are more\nlikely to do trivial substitutions on simple passwords, which doesn't\nincrease strength, and can instead give a false sense of strength, which\nis dangerous.\n\nCloses: <https://github.com/shadow-maint/shadow/issues/688>\nLink: <https://xkcd.com/936/>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7078ed1e0b8a197aa9e5103986bce927abef87a4", "commit_date": "2023-04-26T22:52:54Z", "commit_message": "semanage: disconnect to free libsemanage internals\n\nDestroying the handle does not actually disconnect, see [1].\nAlso free the key on user removal.\n\n[1]: https://github.com/SELinuxProject/selinux/blob/e9072e7d45f4559887d11b518099135cbe564163/libsemanage/src/direct_api.c#L330\n\nExample adduser leak:\n\n    Direct leak of 1008 byte(s) in 14 object(s) allocated from:\n        #0 0x5638f2e782ae in __interceptor_malloc (./src/useradd+0xee2ae)\n        #1 0x7fb5cfffad09 in dbase_file_init src/database_file.c:170:45\n\n    Direct leak of 392 byte(s) in 7 object(s) allocated from:\n        #0 0x5638f2e782ae in __interceptor_malloc (./src/useradd+0xee2ae)\n        #1 0x7fb5cfffc929 in dbase_policydb_init src/database_policydb.c:187:27\n\n    Direct leak of 144 byte(s) in 2 object(s) allocated from:\n        #0 0x5638f2e782ae in __interceptor_malloc (./src/useradd+0xee2ae)\n        #1 0x7fb5cfffb519 in dbase_join_init src/database_join.c:249:28\n\n    [...]", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8dd8ce6c9a5f6e69ed4e9fa7b0c0976bb4ba332", "commit_date": "2023-04-26T22:52:54Z", "commit_message": "commonio: free removed database entries\n\nFree the actual struct of the removed entry.\n\nExample userdel report:\n\n    Direct leak of 40 byte(s) in 1 object(s) allocated from:\n        #0 0x55b230efe857 in reallocarray (./src/userdel+0xda857)\n        #1 0x55b230f6041f in mallocarray ./lib/./alloc.h:97:9\n        #2 0x55b230f6041f in commonio_open ./lib/commonio.c:563:7\n        #3 0x55b230f39098 in open_files ./src/userdel.c:555:6\n        #4 0x55b230f39098 in main ./src/userdel.c:1189:2\n        #5 0x7f9b48c64189 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4e1f674c41724dd96ad2c3a0c02ac9f6666697ba", "commit_date": "2023-04-26T22:38:24Z", "commit_message": "run_parts for groupadd and groupdel\n\nrun_parts currently exists in useradd and userdel, this commit mirrors\nthe functionality with groupadd and groupdel\n\nHook for group{add,del} to include killing processes that have group\nmembership that would no longer exist to avoid membership ID reuse.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "15a64f9e7fa24a2c8e0d1754c027a062b9d1e723", "commit_date": "2023-04-26T22:35:58Z", "commit_message": "fix typos\n\nSigned-off-by: lilinjie <lilinjie@uniontech.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e28deeb8e98e59f2b7e78624b31e49a21abf1182", "commit_date": "2023-04-26T22:32:47Z", "commit_message": "libmisc/yesno.c: Use getline(3) and rpmatch(3)\n\ngetline(3) is much more readable than manually looping.  It has some\noverhead due to the allocation of a buffer, but that shouldn't be a\nproblem here.  If that was a problem, we could reuse the buffer (thus\nmaking the function non-reentrant), but I don't think that's worth the\nextra complexity.\n\nUsing rpmatch(3) instead of a simple y/n test provides i18n to the\nresponse checking.  We have a fall-back minimalistic implementation for\nsystems that lack this function (e.g., musl libc).\n\nWhile we're at it, apply some other minor improvements to this file:\n\n-  Remove comment saying which files use this function.  That's likely\n   to get outdated.  And anyway, it's just a grep(1) away, so it doesn't\n   really add any value.\n\n-  Remove unnecessary casts to (void) that were used to verbosely ignore\n   errors from stdio calls.  They add clutter without really adding much\n   value to the code (or I don't see it).\n\n-  Remove comments from the function body.  They make the function less\n   readable.  Instead, centralize the description of the function into a\n   man-page-like comment before the function definition.  This keeps the\n   function body short and sweet.\n\n-  Add '#include <stdbool.h>', which was missing.\n\n-  Minor whitespace style changes (it doesn't hurt the diff at this\n   point, since most of the affected lines were already touched by other\n   changes, so I applied my preferred style :).\n\nAcked-by: Samanta Navarro <ferivoz@riseup.net>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b686d8bd63e45bf2d20438452af58b7908c619f", "commit_date": "2023-04-26T13:27:45Z", "commit_message": "newgrp/useradd: always set SIGCHLD to default\n\nThe tools newgrp and useradd expect waitpid to behave as described in\nits manual page. But the notes indicate that if SIGCHLD is ignored,\nwaitpid behaves differently.\n\nA user could set SIGCHLD to ignore before starting newgrp through exec.\nChildren of newgrp would not become zombies and their PIDs could be\nreassigned before newgrp could call kill with the child pid and SIGCONT.\n\nThe useradd tool is not installed setuid, but I have added the default\nthere as well (copied from vipw).\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ed1df2e8061e296366ce77a7363ab09c4e73566", "commit_date": "2023-04-24T07:01:22Z", "commit_message": "Update AUTHORS to add Marek Micha\u0142kiewicz\n\nCloses #708\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c83b981053b65c9bab4f1c2e60d004e920f8faf", "commit_date": "2023-04-21T23:12:56Z", "commit_message": "Read whole line in yes_or_no\n\nDo not stop after 79 characters. Read the complete line to avoid\narbitrary limitations.\n\nProof of Concept:\n\n```\ncat > passwd-poc << EOF\nroot:x:0:0:root:/root:/bin/bash\nroot:x:0:0:root:/root:/bin/bash\nroot:x:0:0:root:/root:/bin/bash\nEOF\npython -c \"print(80*'y')\" | pwck passwd-poc\n```\n\nTwo lines should still be within the file because we agreed only once\nto remove a duplicated line.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>\nReviewed-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c80788a3ac092bc5abfa89ff48060d3f95cd5812", "commit_date": "2023-04-19T07:19:19Z", "commit_message": "useradd/usermod: add --selinux-range argument\n\nAdd a command line argument to useradd(8) and usermod(8) to specify the\nMLS range for a SELinux user mapping.\n\nImproves: #676", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97f79e3b2715d78c9342cbb292e1a3e72a23fe62", "commit_date": "2023-04-18T07:21:09Z", "commit_message": "CI: Make build logs more readable\n\nIf make fails in a multi-process invocation, the log is pretty much\nunreadable.  To make it readable, build as much as can be built without\nfailing.  Then run a single-process make again.  If we succeeded\npreviously, this should be a no-op.  If not, this run will stop at the\nfirst error, which should be more readable, and will only print the few\nlines we're interested in.\n\nThis has some side effects:  Now we build as much as we can, instead of\nfailing as early as possible; this may make CI a bit slower.  However,\nit also has the benefit that you see _all_ the error messages that could\nbe given, instead of needing to fix the first error to see the next and\nso on.\n\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "075ed522be90bc339c55a73c611453536daf6275", "commit_date": "2023-04-13T11:05:32Z", "commit_message": "ci: remove explicit fedora dependencies\n\nlibbsd-devel libeconf-devel have already been added to the spec file and\nthey should be installed by the `dnf builddep` command.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e047a3acc6c8d6ad959648361f8fca5d653a7735", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "README: add reference to contribution guidelines\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "981bb8f9d1bad9f42302f558ab91631ee6bfb43d", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add contributions introduction\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6f14a2a8346d63a618169e5e479a6f8e85cb02b", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add license\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29df94eb4a17365e367b434775ae7e8866f20adc", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add releases\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6ceddd92052f62cdbf680c34a54356e7be715071", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add Continuous Integration\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "77c6cc98579a00bd4db829996286b928c8a07ea7", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add tests\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d40c58dc3be57b4d97030ab8d340d17fc74e18cd", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add coding style\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f15ea59559f346ad812422cffb488c154817fc2", "commit_date": "2023-04-03T15:42:22Z", "commit_message": "doc: add build & install\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30f3ea4bd36f2f5c78ee86498da38a8e95ce93f9", "commit_date": "2023-04-03T11:06:14Z", "commit_message": "trivial: vipw.8: fix grammar\n\nSigned-off-by: Serge Hallyn <shallyn@cisco.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eee4c67f5b13c91b9a783a1ba4dd95b28ae0bfb", "commit_date": "2023-04-03T11:05:30Z", "commit_message": "sssd: skip flushing if executable does not exist\n\nAvoid unnecessary syslog output, like:\n\n    Apr 01 13:35:09 dlaptop userdel[45872]: userdel: sss_cache exited with status 1\n    Apr 01 13:35:09 dlaptop userdel[45872]: userdel: Failed to flush the sssd cache.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2eaea70111f65b16d55998386e4ceb4273c19eb4", "commit_date": "2023-03-31T14:53:40Z", "commit_message": "Overhaul valid_field()\n\ne5905c4b (\"Added control character check\") introduced checking for\ncontrol characters but had the logic inverted, so it rejects all\ncharacters that are not control ones.\n\nCast the character to `unsigned char` before passing to the character\nchecking functions to avoid UB.\n\nUse strpbrk(3) for the illegal character test and return early.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a5f9ef8b7fa7dd108270459325092a2be3847331", "commit_date": "2023-03-31T14:13:02Z", "commit_message": "semanage: Do not set default SELinux range\n\nBoth semanage and libsemanage actually set the user's mls range to the\ndefault of the seuser, which makes more sense and removes a bit of code\nfor usermod and useradd.  More fine-grained details must always be set\nwith some other tool\n(semanage) anyway.\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b44d7f78e0988847b99a7c3ac3a53042db073a92", "commit_date": "2023-03-31T14:04:42Z", "commit_message": "Fix typo in groupadd usage", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "189a01f7a747f7595605a791d40d8a8400e76eab", "commit_date": "2023-03-31T13:54:39Z", "commit_message": "ci: update Differential ShellCheck\n\nRun on pushes and drop unnecessary write access.\n\nShould avoid pull-requests comments like\nhttps://github.com/shadow-maint/shadow/pull/695#issuecomment-1491876950", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5905c4b84d4fb90aefcd96ee618411ebfac663d", "commit_date": "2023-03-31T00:23:00Z", "commit_message": "Added control character check\n\nAdded control character check, returning -1 (to \"err\") if control characters are present.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd2d0079c90241f24671a7946a3ad175dc1a3aeb", "commit_date": "2023-03-29T07:05:23Z", "commit_message": "usermod: respect --prefix for --gid option\n\nThe --gid option accepts a group name or id. When a name is provided, it\nis resolved to an id by looking up the name in the group database\n(/etc/group).\n\nThe --prefix option overides the location of the passwd and group\ndatabases. I suspect the --gid option was overlooked when wiring up the\n--prefix option.\n\nuseradd --gid already respects --prefix; this change makes usermod\nbehave the same way.\n\nFixes: b6b2c756c91806b1c3e150ea0ee4721c6cdaf9d0\nSigned-off-by: Mike Gilbert <floppym@gentoo.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c210a29bc57d584db4e69a28d27fee8d75956cc", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix su(1) silent truncation\n\n*  src/su.c (check_perms): Do not silently truncate user name.\n\nReported-by: Paul Eggert <eggert@cs.ucla.edu>\nCo-developed-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d7d94ed7dc6736b17581d625066114a93252ff5", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Simplify is_my_tty()\n\nThis commit will serve to document why we shouldn't worry about the\ntruncation in the call to strlcpy(3).  Since we have one more byte in\ntmptty than in full_tty, truncation will produce a string that is at\nleast one byte longer than full_tty.  Such a string could never compare\nequal, so we're actually handling the truncation in a clever way.  Maybe\ntoo clever, but that's why I'm documenting it here.\n\nNow, about the simplification itself:\n\nSince we made sure that both full_tty and tmptty are null-terminated, we\ncan call strcmp(3) instead of strncmp(3).  We can also simplify the\nreturn logic avoiding one branch.\n\nCc: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e27ca530912c9386f2a60656b4a2b713521f82b1", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix is_my_tty() buffer overrun\n\n*  libmisc/utmp.c (is_my_tty): Declare the parameter as a char array,\n   not char *, as it is not necessarily null-terminated.\n   Avoid a read overrun when reading 'tty', which comes from\n   'ut_utname'.\n\nReported-by: Paul Eggert <eggert@cs.ucla.edu>\nCo-developed-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "664d361fa549a3be5a00607ec6723f95ce33c688", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Add STRLEN(): a constexpr strlen(3) for string literals\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03af2940f75db47cb8619e4852a47d637d624ac4", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix crash with large timestamps\n\n*  libmisc/date_to_str.c (date_to_str): Do not crash if gmtime(3)\n   returns NULL because the timestamp is far in the future.\n\nReported-by: Paul Eggert <eggert@cs.ucla.edu>\nCo-developed-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea3d49506fb144348be10eba6f6fe1250b875a48", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Prefer strcpy(3) to strlcpy(3) when either works\n\n* lib/gshadow.c (sgetsgent): Use strcpy(3) not strlcpy(3),\nsince the string is known to fit.\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a926a26f0c69ab10e3f9a5335b84b4ab4ac91db1", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Fix change_field() buffer underrun\n\n* lib/fields.c (change_field): Don't point\nbefore array start; that has undefined behavior.\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "690ca8c238adf63a80c8b9a7571dfb9984f0669b", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Omit unneeded test in change_field()\n\n* fields.c (change_field): Omit unnecessary test.\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5686d9162e81f3226986cbf554aa512b2b7c051f", "commit_date": "2023-03-28T11:00:38Z", "commit_message": "Simplify change_field() by using strcpy\n\n* lib/fields.c (change_field): Since we know the string fits,\nuse strcpy(3) rather than strlcpy(3).\n\nSigned-off-by: Paul Eggert <eggert@cs.ucla.edu>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nReviewed-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c089196e15dcafc186474469c4914638da233b31", "commit_date": "2023-03-27T15:10:37Z", "commit_message": "Fix null dereference in basename\n\nOn older kernels (<=linux-5.17), argv[0] can be null. Basename would\ncall strrchr with null if argc==0. Fixes issue #680", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "300d6ef45ced3624e61fe0a67690032a7891a3e1", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "CI: script for local container build\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4f31a5b3e1e61b6d8e29317b8d546dd16c361f7", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "CI: build project in containers\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "411a66476d0f12ffdc127eed033a511d37ec991a", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "container: add fedora\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3efab2039f63e1316bc9bdcd49e9edbd9911e8c1", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "container: add debian\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baff19767d9b4fd677368686d124ff167cbf1b73", "commit_date": "2023-03-26T17:45:34Z", "commit_message": "container: add alpine\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53a4bda9ba560db52da475bb27b88b0291fe2835", "commit_date": "2023-03-20T15:54:45Z", "commit_message": "SECURITY.md: add Iker Pedrosa\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2c4949707f6a3b23f55f44c9182bfb18a78f1b4", "commit_date": "2023-03-20T07:47:52Z", "commit_message": "selinux: use type safe function pointer assignment", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37bf59067f2a2dc2af676bf78de7ef435db90768", "commit_date": "2023-03-20T07:47:52Z", "commit_message": "Use strict prototype in definition\n\n    gettime.c:25:30: warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]\n    /*@observer@*/time_t gettime ()\n                                 ^\n                                  void", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e638841f5a2cba0716e188245a12efe0a1f78cf9", "commit_date": "2023-03-02T22:33:06Z", "commit_message": "Add .editorconfig", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61ca915ac5a823a074aa350488b07e8f997336bb", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "run_some: fix shellcheck warning\n\nshellcheck warns against using echo with flags, as posix sh won't\nsupport it.  It suggests using printf, so let's do that.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d03bbea96663d679e09770a2eaba35e08a22d47", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "fail on any run_some test failure\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "add4ab4bf0776426e0eea5dbe20e7e282816558b", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "ignore first test in run_some\n\nbc github...\n\nFor some reason, the first test - ONLY on github - seems to not\ngive the '$ ' prompt expected when you spawn 'su testsuite'.\nSo just run the first test twice, and ignore the first failure.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4da831c02fa85ee483539ac2ab2f8f9b9c268b68", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "swap first two tests - does the first one still fail?\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "421c6cf95160f55b0b4d4e2ab10de1579e99f956", "commit_date": "2023-02-28T03:38:45Z", "commit_message": "tests: remove some github runner PATH tweaking\n\nIt messes with the expected results.\n\nWe can do better than this in the expect scripts, but let's\nget things running for now.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a72065a108cfde70c76f8b0b629e04bdc68bba12", "commit_date": "2023-02-27T20:16:50Z", "commit_message": "tests: Support git-worktree(1)\n\ngit-worktree(1) uses a regular file for <.git>, instead of a directory.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4445cee19d95595afd97043888e0eb1a30ef6089", "commit_date": "2023-02-25T03:46:29Z", "commit_message": "tests: newuidmap and newgidmap: update expected fail message\n\nThe failure message got changed, but the tests looking for it did\nnot.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aa15bc445e4601f8b180b659d94f45fd9a6d5581", "commit_date": "2023-02-25T03:27:02Z", "commit_message": "libsubid: include alloc.h\n\nFixes: efbbcade43: Use safer allocation macros\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a9e163e71b03eee866911c58e944135f6e94900", "commit_date": "2023-02-25T02:11:14Z", "commit_message": "run_some: log stderr\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "05e2adf509ba0e3779dae66a276b86927a8e1e0e", "commit_date": "2023-02-24T22:20:57Z", "commit_message": "Validate fds created by the user\n\nwrite_mapping() will do the following:\n\nopenat(proc_dir_fd, map_file, O_WRONLY);\n\nAn attacker could create a directory containing a symlink named\n\"uid_map\" pointing to any file owned by root, and thus allow him to\noverwrite any root-owned file.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ff33fae6f9cd79c0e012671c37a172e9a681d0b", "commit_date": "2023-02-24T19:54:54Z", "commit_message": "get_pidfd_from_fd: return -1 on error, not 0\n\nFixes: 6974df39a: newuidmap and newgidmap: support passing pid as fd\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17efd5925235685b59be1c267d0dfad7a9bb62b8", "commit_date": "2023-02-24T19:27:57Z", "commit_message": "g-h-a workflow: workaround\n\nSkip updating grub packages that are currently breaking\napt-get dist-upgrade.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4e3212122df68bc57e9a7a6ab04b924ff96eb04", "commit_date": "2023-02-24T18:56:05Z", "commit_message": "Fix regression in some translation strings\n\nFixes: d80df2c8a: Update translation\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3b3d3e5cd48d0f54a62afdfbae535547ac56c474", "commit_date": "2023-02-24T18:44:14Z", "commit_message": "lib: bit_ceil_wrapul(): stop recursion\n\nIt should call bit_ceilul() instead of itself.\n\nFixes: 0712b236c3bc (\"Add bit manipulation functions\")\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21d88b4525aa7f924d140b5d4bf88022587dd224", "commit_date": "2023-02-24T18:44:14Z", "commit_message": "lib: define ULONG_WIDTH if non-existent\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d80df2c8a0d8c43a8957b0d1cae7ee4efa8f7609", "commit_date": "2023-02-24T18:41:50Z", "commit_message": "Update translation", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6974df39a708abf8bafbdfa2b7827e0f70f874cb", "commit_date": "2023-02-24T18:35:49Z", "commit_message": "newuidmap and newgidmap: support passing pid as fd\n\nCloses #635\n\nnewuidmap and newgidmap currently take an integner pid as\nthe first argument, determining the process id on which to\nact.  Accept also \"fd:N\", where N must be an open file\ndescriptor to the /proc/pid directory for the process to\nact upon.  This way, if you\n\nexec 10</proc/99\nnewuidmap fd:10 100000 0 65536\n\nand pid 99 dies and a new process happens to take pid 99 before\nnewuidmap happens to do its work, then since newuidmap will use\nopenat() using fd 10, it won't change the mapping for the new\nprocess.\n\nExample:\n\n// terminal 1:\nserge@jerom ~/src/nsexec$ ./nsexec -W -s 0 -S 0 -U\nabout to unshare with 10000000\nPress any key to exec (I am 129176)\n\n// terminal 2:\nserge@jerom ~/src/shadow$ exec 10</proc/129176\nserge@jerom ~/src/shadow$ sudo chown root src/newuidmap src/newgidmap\nserge@jerom ~/src/shadow$ sudo chmod u+s src/newuidmap\nserge@jerom ~/src/shadow$ sudo chmod u+s src/newgidmap\nserge@jerom ~/src/shadow$ ./src/newuidmap fd:10 0 100000 10\nserge@jerom ~/src/shadow$ ./src/newgidmap fd:10 0 100000 10\n\n// Terminal 1:\nuid=0(root) gid=0(root) groups=0(root)\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7668f77439b6cc1116cab075dfa4184b2076ada0", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Fix use-after-free of pointer after realloc(3)\n\nWe can't use a pointer that was input to realloc(3), nor any pointers\nthat point to reallocated memory, without making sure that the memory\nwasn't moved.  If we do, the Behavior is Undefined.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efbbcade43ff2dca2b7a271dcbd186be08ac1913", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use safer allocation macros\n\nUse of these macros, apart from the benefits mentioned in the commit\nthat adds the macros, has some other good side effects:\n\n-  Consistency in getting the size of the object from sizeof(type),\n   instead of a mix of sizeof(type) sometimes and sizeof(*p) other\n   times.\n\n-  More readable code: no casts, and no sizeof(), so also shorter lines\n   that we don't need to cut.\n\n-  Consistency in using array allocation calls for allocations of arrays\n   of objects, even when the object size is 1.\n\nCc: Valentin V. Bartenev <vbartenev@gmail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e58c1275252f3314d1aa5cc4d7e7f9068e3a902", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "libmisc: Add safer allocation macros\n\nThis macros have several benefits over the standard functions:\n\n-  The type of the allocated object (not the pointer) is specified as an\n   argument, which improves readability:\n   -  It is directly obvious what is the type of the object just by\n      reading the macro call.\n   -  It allows grepping for all allocations of a given type.\n\n   This is admittedly similar to using sizeof() to get the size of the\n   object, but we'll see why this is better.\n\n-  In the case of reallocation macros, an extra check is performed to\n   make sure that the previous pointer was compatible with the allocated\n   type, which can avoid some mistakes.\n\n-  The cast is performed automatically, with a pointer type derived from\n   the type of the object.  This is the best point of this macro, since\n   it does an automatic cast, where there's no chance of typos.\n\n   Usually, programmers have to decide whether to cast or not the result\n   of malloc(3).  Casts usually hide warnings, so are to be avoided.\n   However, these functions already return a void *, so a cast doesn't\n   really add much danger.  Moreover, a cast can even add warnings in\n   this exceptional case, if the type of the cast is different than the\n   type of the assigned pointer.  Performing a manual cast is still not\n   perfect, since there are chances that a mistake will be done, and\n   even ignoring accidents, they clutter code, hurting readability.\n   And now we have a cast that is synced with sizeof.\n\n-  Whenever the type of the object changes, since we perform an explicit\n   cast to the old type, there will be a warning due to type mismatch in\n   the assignment, so we'll be able to see all lines that are affected\n   by such a change.  This is especially important, since changing the\n   type of a variable and missing to update an allocation call far away\n   from the declaration is easy, and the consequences can be quite bad.\n\nCc: Valentin V. Bartenev <vbartenev@gmail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f332379ea036e503c4e740f7c72935e8612ad3c7", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use xreallocarray() instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "190a702225b57eaf520b3c907070ccd649ebbb75", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use reallocarrayf() instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "191f04f7dcb92a2c7de99dbf1108563ea8832927", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use *array() allocation functions where appropriate\n\nThis prevents overflow from multiplication.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "727275a0270bdfee0fb269319cee139bfd597b0c", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use xcalloc(3) instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d81506de1e8e2ba544a30e54e863fcafda9cde86", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "libmisc: Add safer allocation functions\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "881c1d63a19713bf62d9fbe3da0e15a4b4f9b375", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "libmisc: Move xmalloc.c to alloc.c\n\nWe'll expand the contents in a following commit, so let's move the file\nto a more generic name, have a dedicated header, and update includes.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>\n\nUse the new header for xstrdup()\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a578617cc00276be61f47cf515962c5ff6bf2bc5", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use calloc(3) instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1aa22c14674e14e84efa171614dea2b515d5a223", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use reallocarray(3) instead of its pattern\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45c0003e53ab671c63dcd530fd9f3245d3b29e76", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Use reallocf(3) instead of its pattern\n\nIn addition, don't set local variables just before return.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "56e4842db00b2ae6ebcfcc69a4c62ac97bec21b4", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "malloc(3) already sets errno to ENOMEM\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e1d0179939434361b561459ccd009480dc16b7d", "commit_date": "2023-02-24T02:28:43Z", "commit_message": "Rely on realloc(NULL, ...) being equivalent to malloc(...)\n\nThis is guaranteed by ISO C.  Now that we require ISO C (and even POSIX)\nto compile, we can simplify this code.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c5dc756419e1d3cad63c66c4bb803eadf1074fd", "commit_date": "2023-02-20T11:16:01Z", "commit_message": "libmisc: agetpass(): Fix bug detecting truncation\n\nOn 2/19/23 18:09, David Mudrich wrote:\n> I am working on a RAM based Linux OS from source, and try to use\n> latest versions of all software.  I found shadow needs libbsd's\n> readpassphrase(3) as superior alternative to getpass(3).  While\n> considering if I a) include libbsd, or include libbsd's code of\n> readpassphrase(3) into shadow, found, that libbsd's readpassphrase(3)\n> never returns \\n or \\r\n> <https://cgit.freedesktop.org/libbsd/tree/src/readpassphrase.c>\n> line 122, while agetpass() uses a check for \\n in agetpass.c line 108.\n> I assume it always fails.\n\nIndeed, it always failed.  I made a mistake when writing agetpass(),\nassuming that readpassphrase(3) would keep newlines.\n\n>\n> I propose a check of len == PASS_MAX - 1, with false positive error for\n> exactly PASS_MAX - 1 long passwords.\n\nInstead, I added an extra byte to the allocation to allow a maximum\npassword length of PASS_MAX (which is the maximum for getpass(3), which\nwe're replacing.\n\nWhile doing that, I notice that my previous implementation also had\nanother bug (minor): The maximum password length was PASS_MAX - 1\ninstead of PASS_MAX.  That's also fixed in this commit.\n\nReported-by: David Mudrich <dmudrich@gmx.de>\nFixes: 155c9421b935 (\"libmisc: agetpass(), erase_pass(): Add functions for getting passwords safely\")\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baae5b4a06c905d9f52ed1f922a0d7d0625d11cf", "commit_date": "2023-02-20T11:10:02Z", "commit_message": "find_new_[gu]id(): Skip over IDs that are reserved for legacy reasons\n\nSome programs don't support `(uint16_t) -1` or `(uint32_t) -1` as user\nor group IDs.  This is because `-1` is used as an error code or as an\nunspecified ID, e.g. in `chown(2)` parameters, and in the past, `gid_t`\nand `uid_t` have changed width.  For legacy reasons, those values have\nbeen kept reserved in programs today (for example systemd does this; see\nthe documentation in the link below).\n\nThis should not be confused with catching overflow in the ID values,\nsince that is already caught by our ERANGE checks.  This is about not\nusing reserved values that have been reserved for legacy reasons.\n\nLink: <https://systemd.io/UIDS-GIDS/>\nReviewed-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0dfeb9e6747bdbd58d0e262fc22947e4e628eefb", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix comments\n\nThese comments should indicate which functions they really wrap.\nAn alternative would be to remove the line completely to avoid\nfuture copy&paste mistakes.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c53b36fe8595a516f9a4ea15b78bc2eca4422db0", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix grammar\n\nUse proper grammar (third-person singular).\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8ea76ba72ba2e1579fe39322f337ef7d58288b3", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix typo\n\nIt should be \"if\" not \"is\".\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5d1932370a31dbd98e97bd330b62eb33a2202e3", "commit_date": "2023-02-16T19:23:08Z", "commit_message": "Fix typos\n\nIt is a user, not an user.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5956cea1d18b269fc4c0b1201b4e81a6f03bbe70", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Use stpecpy() where appropriate\n\nThis function simplifies the calculation of the bounds of the buffer for\ncatenating strings.  It would also reduce error checking, but we don't\ncare about truncation in this specific code. :)\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709e6b4497c7be9c5301e3c7ef8fe9e6f0f5db8d", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Add stpecpy()\n\nstrncat(3), strlcpy(3), and many other functions are often misused for\ncatenating strings, when they should never be used for that.  strlcat(3)\nis good.  However, there's no equivalent to strlcat(3) similar to\nsnprintf(3).  Let's add stpecpy(), which is similar to strlcat(3), but\nit is also the only function compatible with stpeprintf(), which makes\nit more useful than strlcat(3).\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0e9e57a72e9f1bf2acb3156cc982d59b9ee4248", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Add mempcpy(3)\n\nWe'll use it for implementing stpecpy(), and may be interesting to have\nit around.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a9285aacbf2944e113914e6432c6f8d3efe2692", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Remove unnecessary NUL terminators\n\nAll the string-copying functions called above do terminate the strings\nthey create with a NUL byte.  Writing it again at the end of the buffer\nis unnecessary paranoid code.  Let's remove it.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46610792e90f35864ff94c289adecb56cdd8682b", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Use stpeprintf() where appropriate\n\nThis function allows reducing error checking (since errors are\npropagated across chained calls), and also simplifies the calculation of\nthe start and end of the buffer where the string should be written.\n\nMoreover, the new code is more optimized, since many calls to strlen(3)\nhave been removed.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e213cfb50e9db6838bf6f27867ed3ab5af67529", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "Add stpeprintf()\n\n[v]stpeprintf() are similar to [v]snprintf(3), but they allow chaining.\n[v]snprintf(3) are very dangerous for catenating strings, since the\nobvious ways to do it invoke Undefined Behavior, and the ways that avoid\nUB are very error-prone.\n\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a187ad8e9e790161a6b2f8982b61b938b6b3438b", "commit_date": "2023-02-16T10:29:33Z", "commit_message": "agetpass.c: Use SPDX tags\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca9e309d30bf3c1dc1c4e93aeaa00363d3a8dd51", "commit_date": "2023-02-13T09:01:17Z", "commit_message": "Fix VPATH build\n\nWhen trying to build shadow in a different directory I stumbled upon few\nissues, this commit aims to fix all of them:\n\n- The `subid.h` file is generated and hence in the build directory and\n\tnot in the source directory, so use `$(builddir)` instead of\n\t`$(srcdir)`.\n\n- Using `$<` instead of filenames utilises autotools to locate the files\n  in either the source or build directory automatically.\n\n- `xsltproc` needs to access the files in login.defs.d in either the\n  source directory or the symlink in a language subdirectory, but it\n\tdoes not interpret the `--path` as prefix of the entity path, but\n\trather a path under which to locate the basename of the entity\n\tfrom the XML file.  So specify the whole path to login.defs.d.\n\n- The above point could be used to make the symlinks of login.defs.d\n  and entity path specifications in the XMLs obsolete, but I trying\n\tnot to propose possibly disrupting patches, so for the sake of\n\tsimplicity just specify `$(srcdir)` when creating the symlink.\n\nSigned-off-by: Martin Kletzander <mkletzan@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5da8388fc6009d2841459cf7e7e093d424c4213c", "commit_date": "2023-02-09T16:03:03Z", "commit_message": "ttytype(): Fix race\n\nThe intention of the code is just to not report an error message when\n'typefile' doesn't exist.  If we call access(2) and then fopen(2),\nthere's a race.  It's not a huge problem, and the worst thing that can\nhappen is reporting an error when the file has been removed after\naccess(2).  It's not a problem, but we can fix the race and at the same\ntime clarify the intention of not warning about ENOENT and also remove\none syscall.  Seems like a win-win.\n\nSuggested-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bddcd9b0952f9b6f9b800dfafe6585b4ceb495cf", "commit_date": "2023-02-09T16:03:03Z", "commit_message": "Remove superfluous casts\n\n-  Every non-const pointer converts automatically to void *.\n-  Every pointer converts automatically to void *.\n-  void * converts to any other pointer.\n-  const void * converts to any other const pointer.\n-  Integer variables convert to each other.\n\nI changed the declaration of a few variables in order to allow removing\na cast.\n\nHowever, I didn't attempt to edit casts inside comparisons, since they\nare very delicate.  I also kept casts in variadic functions, since they\nare necessary, and in allocation functions, because I have other plans\nfor them.\n\nI also changed a few casts to int that are better as ptrdiff_t.\n\nThis change has triggered some warnings about const correctness issues,\nwhich have also been fixed in this patch (see for example src/login.c).\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "66daa7423258cee3bef8240a3fc9b554bb7a69c0", "commit_date": "2023-02-09T15:55:04Z", "commit_message": "run on github runner", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8728bd87ed7e34aa92b6eb42cc74657415f73b44", "commit_date": "2023-02-09T15:55:04Z", "commit_message": "tests: print default timeout message to stderr\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6a51e6893e71df70ce4638d7a3000b042e24b0e2", "commit_date": "2023-02-09T15:55:04Z", "commit_message": "use self-hosted runner for testsuite\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "416707b087e69f728f3ddee6a9b9aa63c998cd18", "commit_date": "2023-02-09T04:01:01Z", "commit_message": "Use the noreturn attribute, rather than comments\n\nThis will allow the compiler to understand these functions better.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b34387745afc180fd03ebca5a6ee00f3d665c657", "commit_date": "2023-02-09T04:01:01Z", "commit_message": "lib/defines.h: Add NORETURN attribute macro\n\nWe could use the standard (C11) _Noreturn qualifier, but it will be\ndeprecated in C23, and replaced by C++'s [[noreturn]], which is\ncompatible with the GCC attribute, so let's directly use the attribute,\nand in the future we'll be able to switch to [[]].\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e762ab8b54eab539952a136296be9a9bd6132444", "commit_date": "2023-02-08T16:21:34Z", "commit_message": "Assume getutent(3) exists (remove dead code)\n\nRecently, we removed support for 'struct utmpx'.  We did it because utmp\nand utmpx are identical, and while POSIX specifies utmpx (and not utmp),\nGNU/Linux documentation seems to favor utmp.  Also, this project\ndefaulted to utmp, so changing to utmpx would be more dangerous than\nkeeping old defaults, even if it's supposed to be the same.\n\nNow, I just found more code that didn't make much sense: lib/utent.c\nprovides definitions for getutent(3) and friends in case the system\ndoesn't provide them, but we don't provide prototypes for those\ndefinitions, so code using the functions would have never compiled.\n\nLet's just remove these definitions as dead code.\n\nFixes: 3be7b9d75a6b (\"Remove traces of utmpx\")\nFixes: 170b76cdd1a9 (\"Disable utmpx permanently\")\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f301a4ca19533a5c93bba44db2d8e345fa909e35", "commit_date": "2023-02-04T04:03:38Z", "commit_message": "Handle reallocf(3) errors\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0ec157d579931cfec1cc8439288ed17adf19da5d", "commit_date": "2023-02-04T04:03:38Z", "commit_message": "Fix memory leaks by replacing realloc(3) with reallocf(3)\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "82480995b449d55d386c495066a5b2a0d03a9865", "commit_date": "2023-02-04T04:03:38Z", "commit_message": "Remove unused function: gr_append_member()\n\nReported-by: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1058872a0b630e543e7e4d4d4340104e1f3e7edc", "commit_date": "2023-02-03T04:03:45Z", "commit_message": "Improve TTYGROUP description in login.defs manpage\n\nCloses #457\n\nThe existing prose was confusing, or simply wrong.  Make it clear\nthat only the group ownership of the tty is affected, and how.\nAlso move the paragraph about defaults after the discussion of\nacceptable TTYGROUPs, as this seems more natural.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f6f1669cf693faf422b28bda396c4ed72fe44a9", "commit_date": "2023-02-03T04:03:26Z", "commit_message": "Remove superfluous casts to 'void*'\n\nEvery non-const pointer converts automatically to it.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62172f6fb51519a8cf56e35e4ce2b76cc301a7fc", "commit_date": "2023-02-02T19:08:30Z", "commit_message": "Call NULL by its name\n\nIn variadic functions we still do the cast.  In POSIX, it's not\nnecessary, since NULL is required to be of type 'void *', and 'void *'\nis guaranteed to have the same alignment and representation as 'char *'.\nHowever, since ISO C still doesn't mandate that, and moreover they're\ndoing dubious stuff by adding nullptr, let's be on the cautious side.\nAlso, C++ requires that NULL is _not_ 'void *', but either plain 0 or\nsome magic stuff.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1482224c546cabc3a08ec069c775b116171f182a", "commit_date": "2023-02-02T11:04:28Z", "commit_message": "Use freezero(3) where suitable\n\nIt originated in OpenBSD, and is available in libbsd.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e0ad48c21bd7d5506ff44eb4c04f796b80045ce", "commit_date": "2023-02-01T21:47:35Z", "commit_message": "Prevent out of boundary access\n\nIf lines start with '\\0' then it is possible to trigger out of\nboundary accesses.\n\nCheck if indices are valid before accessing them.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ffc480c2e93f05266e4b130229877ad13f71a8c0", "commit_date": "2023-02-01T21:47:35Z", "commit_message": "Explicitly override only newlines\n\nOverride only newlines with '\\0' to avoid undesired truncation of\nactual line content.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37ae2320809cb16afa9dacd8e5ea317ae216ee36", "commit_date": "2023-02-01T21:47:35Z", "commit_message": "Correctly handle illegal system file in tz\n\nIf the file referenced by ENV_TZ has a zero length string, then an out\nof boundary write occurs. Also the result can be wrong because it is\nassumed that the file will always end with a newline.\n\nOnly override a newline character with '\\0' to avoid these cases.\n\nThis cannot be considered to be security relevant because login.defs\nand its contained references to system files should be trusted to begin\nwith.\n\nProof of Concept:\n\n1. Compile shadow's su with address sanitizer and --without-libpam\n\n2. Setup your /etc/login.defs to contain ENV_TZ=/etc/tzname\n\n3. Prepare /etc/tzname to contain a '\\0' byte at the beginning\n\n`python -c \"print('\\x00')\" > /etc/tzname`\n\n4. Use su\n\n`su -l`\n\nYou can see the following output:\n\n`tz.c:45:8: runtime error: index 18446744073709551615 out of bounds for type 'char [8192]'`\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03bbe6c4187d801057db6de24b47f309b12590e9", "commit_date": "2023-02-01T08:10:34Z", "commit_message": "leading_zerosul(): Fix bug\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a61122b5e8f89484dcc88dfd5f6c11de2d8c95a", "commit_date": "2023-01-30T17:24:15Z", "commit_message": "Unoptimize the higher part of the domain of csrand_uniform()\n\n__int128, which is needed for optimizing that part of the range, is not\nalways available.  We need the unoptimized version for portability\nreasons.\n\nCloses: <https://github.com/shadow-maint/shadow/issues/634>\nFixes: 1a0e13f94edc (\"Optimize csrand_uniform()\")\nReported-by: Adam Sampson <ats@offog.org>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0712b236c3bc93987ce64f7631f5a9fa4b042f4f", "commit_date": "2023-01-30T17:24:15Z", "commit_message": "Add bit manipulation functions\n\nWe do need the unoptimized version of csrand_uniform() for high values\nof `n`, since the optimized version depends on having __int128, and it's\nnot available on several platforms, including ARMv7, IA32, and MK68k.\n\nThis reverts commit 848f53c1d3c1362c86d3baab6906e1e4419d2634; however,\nI applied some tweaks to the reverted commit.\n\nReported-by: Adam Sampson <ats@offog.org>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "848f53c1d3c1362c86d3baab6906e1e4419d2634", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Revert \"Add bit manipulation functions\"\n\nNow that we optimized csrand_uniform(), we don't need these functions.\n\nThis reverts commit 7c8fe291b1260e127c10562bfd7616961013730f.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a0e13f94edc08d4c773a00d710d56fac966e818", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Optimize csrand_uniform()\n\nUse a different algorithm to minimize rejection.  This is essentially\nthe same algorithm implemented in the Linux kernel for\n__get_random_u32_below(), but written in a more readable way, and\navoiding microopimizations that make it less readable.\n\nWhich (the Linux kernel implementation) is itself based on Daniel\nLemire's algorithm from \"Fast Random Integer Generation in an Interval\",\nlinked below.  However, I couldn't really understand that paper very\nmuch, so I had to reconstruct the proofs from scratch, just from what I\ncould understand from the Linux kernel implementation source code.\n\nI constructed some graphical explanation of how it works, and why it\nis optimal, because I needed to visualize it to understand it.  It is\npublished in the GitHub pull request linked below.\n\nHere goes a wordy explanation of why this algorithm based on\nmultiplication is better optimized than my original implementation based\non masking.\n\nmasking:\n\n\tIt discards the extra bits of entropy that are not necessary for\n\tthis operation.  This works as if dividing the entire space of\n\tpossible csrand() values into smaller spaces of a size that is\n\ta smaller power of 2.  Each of those smaller spaces has a\n\trejection band, so we get as many rejection bands as spaces\n\tthere are.  For smaller values of 'n', the size of each\n\trejection band is smaller, but having more rejection bands\n\tcompensates for this, and results in the same inefficiency as\n\tfor large values of 'n'.\n\nmultiplication:\n\n\tIt divides the entire space of possible random numbers in\n\tchunks of size exactly 'n', so that there is only one rejection\n\tband that is the remainder of `2^64 % n`.  The worst case is\n\tstill similar to the masking algorithm, a rejection band that is\n\talmost half the entire space (n = 2^63 + 1), but for lower\n\tvalues of 'n', by only having one small rejection band, it is\n\tmuch faster than the masking algorithm.\n\n\tThis algorithm, however, has one caveat: the implementation\n\tis harder to read, since it relies on several bitwise tricky\n\toperations to perform operations like `2^64 % n`, `mult % 2^64`,\n\tand `mult / 2^64`.  And those operations are different depending\n\ton the number of bits of the maximum possible random number\n\tgenerated by the function.  This means that while this algorithm\n\tcould also be applied to get uniform random numbers in the range\n\t[0, n-1] quickly from a function like rand(3), which only\n\tproduces 31 bits of (non-CS) random numbers, it would need to be\n\timplemented differently.  However, that's not a concern for us,\n\tit's just a note so that nobody picks this code and expects it\n\tto just work with rand(3) (which BTW I tried for testing it, and\n\tgot a bit confused until I realized this).\n\nFinally, here's some light testing of this implementation, just to know\nthat I didn't goof it.  I pasted this function into a standalone\nprogram, and run it many times to find if it has any bias (I tested also\nto see how many iterations it performs, and it's also almost always 1,\nbut that test is big enough to not paste it here).\n\nint main(int argc, char *argv[])\n{\n\tprintf(\"%lu\\n\", csrand_uniform(atoi(argv[1])));\n}\n\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 1 | wc -l\n341\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 1 | wc -l\n339\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 1 | wc -l\n338\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 2 | wc -l\n336\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 2 | wc -l\n328\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 2 | wc -l\n335\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 0 | wc -l\n332\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 0 | wc -l\n331\n$ seq 1 1000 | while read _; do ./a.out 3; done | grep 0 | wc -l\n327\n\nThis isn't a complete test for a cryptographically-secure random number\ngenerator, of course, but I leave that for interested parties.\n\nLink: <https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=e9a688bcb19348862afe30d7c85bc37c4c293471>\nLink: <https://github.com/shadow-maint/shadow/pull/624#discussion_r1059574358>\nLink: <https://arxiv.org/abs/1805.10941>\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Sam James <sam@gentoo.org>\nCc: Serge Hallyn <serge@hallyn.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\n[Daniel Lemire: Added link to research paper in source code]\nCc: Daniel Lemire <daniel@lemire.me>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "217b054cf53ed71169621d297acc79b42e4abccd", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Use WIDTHOF() instead of its expansion\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f90eff4947ffeb7022696ab9861ed3d80bb61d8", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Add WIDTHOF() to get the width in bits\n\nIt is common to use the expression 'sizeof(x) * CHAR_BIT' to mean the\nwidth in bits of a type or object.  Now that there are _WIDTH macros for\nsome types, indicating the number of bits that they use, it makes sense\nto wrap this calculation in a macro of a similar name.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1db190cb66339cd2c052ab2f868410455e215b8a", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Rewrite csrand_interval() as a wrapper around csrand_uniform()\n\nThe old code didn't produce very good random numbers.  It had a bias.\nAnd that was from performing some unnecessary floating-point\ncalculations that overcomplicate the problem.\n\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Sam James <sam@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31375d48cac5e8050957f1f18a9a4f5615d25711", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Add csrand_uniform()\n\nThis API is similar to arc4random_uniform(3).  However, for an input of\n0, this function is equivalent to csrand(), while arc4random_uniform(0)\nreturns 0.\n\nThis function will be used to reimplement csrand_interval() as a wrapper\naround this one.\n\nThe current implementation of csrand_interval() doesn't produce very good\nrandom numbers.  It has a bias.  And that comes from performing some\nunnecessary floating-point calculations that overcomplicate the problem.\n\nLooping until the random number hits within bounds is unbiased, and\ntruncating unwanted bits makes the overhead of the loop very small.\n\nWe could reduce loop overhead even more, by keeping unused bits of the\nrandom number, if the width of the mask is not greater than\nULONG_WIDTH/2, however, that complicates the code considerably, and I\nprefer to be a bit slower but have simple code.\n\nBTW, Bj\u00f6rn really deserves the copyright for csrand() (previously known\nas read_random_bytes()), since he rewrote it almost from scratch last\nyear, and I kept most of its contents.  Since he didn't put himself in\nthe copyright back then, and BSD-3-Clause doesn't allow me to attribute\nderived works, I won't add his name, but if he asks, he should be put in\nthe copyright too.\n\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Sam James <sam@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a56f2baabd6c4ef3f485e9a5f7f3d4168a2d60b", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Add bit manipulation functions\n\nThese functions implement bit manipulation APIs, which will be added to\nC23, so that in the far future, we will be able to replace our functions\nby the standard ones, just by adding the stdc_ prefix, and including\n<stdbit.h>.\n\nHowever, we need to avoid UB for an input of 0, so slightly deviate from\nC23, and use a different name (with _wrap) for distunguishing our API\nfrom the standard one.\n\nCc: Joseph Myers <joseph@codesourcery.com>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "be1f4f7972ad7ec151c31ad408083828bbdefd4b", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Move csrand() to a new file csrand.c\n\nA set of APIs similar to arc4random(3) is complex enough to deserve its\nown file.\n\nCc: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nCc: Yann Droneaud <ydroneaud@opteya.com>\nCc: Joseph Myers <joseph@codesourcery.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "986ef4e69c6dbe6e9c56b9322ce1ee976763d2eb", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Use naming consistent with other common functions\n\narc4random(3) returns a number.\narc4random_buf(3) fills a buffer.\narc4random_uniform(3) returns a number less than a bound.\n\nand I'd add a hypothetical one which we use:\n\n*_interval() should return a number within the interval [min, max].\n\nIn reality, the function being called csrand() in this patch is not\nreally cryptographically secure, since it had a bias, but a subsequent\npatch will fix that.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6d2337d9e80eb38ab92708c7fc44b3bdeb016bad", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Fix types of the csrand_interval() API\n\nWe were always casting the result to u_long.  Better just use that type\nin the function.  Since we're returning u_long, it makes sense to also\nspecify the input as u_long.  In fact, that'll help for doing bitwise\noperations inside this function.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f441c9f7a8d1c8019e5b1d843821a456022b525", "commit_date": "2023-01-28T03:48:37Z", "commit_message": "Use a more precise name for a CSPRNG API with an interval\n\nI have plans to split this function in smaller functions that implement\nbits of this functionallity, to simplify the implementation.  So, let's\nuse names that distinguish them.\n\nThis one produces a number within an interval, so make that clear.  Also\nmake clear that the function produces cryptographically-secure numbers.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a27d5c51f1f34b0c3d965482de400447c072de96", "commit_date": "2023-01-27T04:45:32Z", "commit_message": "Supporting vendor given -shells- configuration file", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b2d202cb5d59ef5aeda0dfd4c30ff8adca02dd06", "commit_date": "2023-01-27T04:44:39Z", "commit_message": "libmisc: fix grammar\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b312bc0b4d79a54352f7eea28ed261b8c67e2602", "commit_date": "2023-01-27T04:44:39Z", "commit_message": "Fix typos\n\nTypos found with codespell.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "194014678e13dfcd9e418f76fec5ae701b507d54", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Declare constant data structure const\n\n    ./lib/pam_defs.h:18:24: warning: \u2018conv\u2019 defined but not used [-Wunused-variable]\n       18 | static struct pam_conv conv = {\n          |                        ^~~~", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "89be7c04654964654098006dfd7a5690da31c1cf", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Provide strlcpy declaration\n\nstrlcpy(3) might not be visible since it is declared in <bsd/string.h>.\nThis can lead to warnings, like:\n\n    fields.c: In function 'change_field':\n    fields.c:103:17: warning: implicit declaration of function 'strlcpy'; did you mean 'strncpy'? [-Wimplicit-function-declaration]\n      103 |                 strlcpy (buf, cp, maxsize);\n          |                 ^~~~~~~\n          |                 strncpy\n\n    ../lib/fields.c:103:17: warning: type of 'strlcpy' does not match original declaration [-Wlto-type-mismatch]\n      103 |                 strlcpy (buf, cp, maxsize);\n          |                 ^\n    /usr/include/bsd/string.h:44:8: note: return value type mismatch\n       44 | size_t strlcpy(char *dst, const char *src, size_t siz);\n          |        ^\n    /usr/include/bsd/string.h:44:8: note: type 'size_t' should match type 'int'\n    /usr/include/bsd/string.h:44:8: note: 'strlcpy' was previously declared here\n    /usr/include/bsd/string.h:44:8: note: code may be misoptimized unless '-fno-strict-aliasing' is used", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c99d8d0a086efb6073417b8c9104fc30a98e72db", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Avoid comparisons of different signs\n\nComparisons if different signedness can result in unexpected results.\nAdd casts to ensure operants are of the same type.\n\n    gettime.c: In function 'gettime':\n    gettime.c:58:26: warning: comparison of integer expressions of different signedness: 'long long unsigned int' and 'time_t' {aka 'long int'} [-Wsign-compare]\n       58 |         } else if (epoch > fallback) {\n          |                          ^\n\nCast to time_t, since epoch is less than ULONG_MAX at this point.\n\n    idmapping.c: In function 'write_mapping':\n    idmapping.c:202:48: warning: comparison of integer expressions of different signedness: 'int' and 'long unsigned int' [-Wsign-compare]\n      202 |                 if ((written <= 0) || (written >= (bufsize - (pos - buf)))) {\n          |                                                ^~\n\n    newgidmap.c: In function \u2018main\u2019:\n    newgidmap.c:178:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      178 |         if ((written <= 0) || (written >= sizeof(proc_dir_name))) {\n          |                                        ^~\n    newuidmap.c: In function \u2018main\u2019:\n    newuidmap.c:107:40: warning: comparison of integer expressions of different signedness: \u2018int\u2019 and \u2018long unsigned int\u2019 [-Wsign-compare]\n      107 |         if ((written <= 0) || (written >= sizeof(proc_dir_name))) {\n          |                                        ^~", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43508ac4763591a5f05b884abeeed934b6748680", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "Drop redundant declaration\n\nenviron is exported in <unistd.h>.\n\n    env.c:29:15: warning: redundant redeclaration of 'environ' [-Wredundant-decls]\n       29 | extern char **environ;\n          |               ^~~~~~~\n    login.c:92:15: warning: redundant redeclaration of \u2018environ\u2019 [-Wredundant-decls]\n       92 | extern char **environ;\n          |               ^~~~~~~\n    sulogin.c:40:15: warning: redundant redeclaration of \u2018environ\u2019 [-Wredundant-decls]\n       40 | extern char **environ;\n          |               ^~~~~~~\n    newgrp.c:32:15: warning: redundant redeclaration of \u2018environ\u2019 [-Wredundant-decls]\n       32 | extern char **environ;\n          |               ^~~~~~~", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "46d305834115b8d43a73338d903a659be8c1ae25", "commit_date": "2023-01-25T11:31:17Z", "commit_message": "copydir: fix impl usage\n\n    copydir.c: In function 'copy_dir':\n    copydir.c:517:32: warning: passing argument 1 of 'copy_tree' from incompatible pointer type [-Wincompatible-pointer-types]\n      517 |             return (copy_tree (src, dst, false, reset_selinux,\n          |                                ^~~\n          |                                |\n          |                                const struct path_info *\n    In file included from copydir.c:20:\n    ../lib/prototypes.h:108:35: note: expected 'const char *' but argument is of type 'const struct path_info *'\n      108 | extern int copy_tree (const char *src_root, const char *dst_root,\n          |                       ~~~~~~~~~~~~^~~~~~~~\n    copydir.c:517:37: warning: passing argument 2 of 'copy_tree' from incompatible pointer type [-Wincompatible-pointer-types]\n      517 |             return (copy_tree (src, dst, false, reset_selinux,\n          |                                     ^~~\n          |                                     |\n          |                                     const struct path_info *\n    ../lib/prototypes.h:108:57: note: expected 'const char *' but argument is of type 'const struct path_info *'\n      108 | extern int copy_tree (const char *src_root, const char *dst_root,\n          |                                             ~~~~~~~~~~~~^~~~~~~~\n\nFixes: 74c17c71 (\"Add support for skeleton files from /usr/etc/skel\")", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0d79ee0320b337510aee5734579973597653df6", "commit_date": "2023-01-25T10:07:25Z", "commit_message": "Modernize manual memzero implementation\n\nInstead of using volatile pointers to prevent the compiler from\noptimizing the call away, use a memory barrier.\nThis requires support for embedded assembly, which should be fine after\nthe recent requirement bumps.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "90ead3cfb8fff90f53f3dbab387e9de66b617872", "commit_date": "2023-01-25T10:07:25Z", "commit_message": "Replace flawed memset_s usage\n\nmemset_s() has a different signature than memset(3) or explicit_bzero(),\nthus the current code would not compile.  Also memset_s()\nimplementations are quite rare.\nUse the C23 standardized version memset_explicit(3).\n\nFixes: 7a799ebb (\"Ensure memory cleaning\")", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b2bed465e81e52e8a1ce29c94c2590099c63ff76", "commit_date": "2023-01-20T16:23:03Z", "commit_message": "Use getnameinfo(3) instead of our own equivalent\n\nI didn't know getnameinfo(3) existed, so I implemented it, or something\nsimilar to it called inet_sockaddr2str().  Let's use the standard API.\n\nLink: <https://inbox.sourceware.org/libc-alpha/0f25d60f-f183-b518-b6c1-6d46aa63ee57@gmail.com/T/>\nLink: <https://stackoverflow.com/a/42190913/6872717>\nLink: <https://github.com/shadow-maint/shadow/pull/617>\nLink: <https://software.codidact.com/posts/287748>\nCc: Zack Weinberg <zack@owlfolio.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac8b81c2b7ed378528e5cc60754e10be1e369e40", "commit_date": "2023-01-16T09:12:31Z", "commit_message": "Prefer getrandom(3)/getentropy(3) over arc4random(3bsd)\n\narc4random(3) without kernel support is unsafe, as it can't know when to\ndrop the buffer.  Since we depend on libbsd since recently, we have\narc4random(3) functions always available, and thus, this code would have\nalways called arc4random_buf(3bsd), which is unsafe.  Put it after some\nbetter alternatives, at least until in a decade or so all systems have a\nrecent enough glibc.\n\nglibc implements arc4random(3) safely, since it's just a wrapper around\ngetrandom(2).\n\nLink: <https://inbox.sourceware.org/libc-alpha/20220722122137.3270666-1-adhemerval.zanella@linaro.org/>\nLink: <https://inbox.sourceware.org/libc-alpha/5c29df04-6283-9eee-6648-215b52cfa26b@cs.ucla.edu/T/>\nCc: Cristian Rodr\u00edguez <crrodriguez@opensuse.org>\nCc: Adhemerval Zanella <adhemerval.zanella@linaro.org>\nCc: Guillem Jover <guillem@hadrons.org>\nCc: Bj\u00f6rn Esser <besser82@fedoraproject.org>\nReviewed-by: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "39ecca84d4f26ae61d20bff57b27c09681538205", "commit_date": "2023-01-13T08:51:05Z", "commit_message": "workflow: update checkout acton v2 to v3\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "670cae834827a8f794e6f7464fa57790d911b63c", "commit_date": "2023-01-13T00:30:32Z", "commit_message": "shadow: Fix can not print full login timeout message\n\nLogin timed out message prints only first few bytes when write is immediately followed by exit.\r\nCalling exit from new handler provides enough time to display full message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abeb5f3794c2dbdb51b256a6f8c5d2f6bb83efa1", "commit_date": "2023-01-12T11:10:57Z", "commit_message": "fix typo\n\nSigned-off-by: lilinjie <lilinjie@uniontech.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d936c968a213319eff46e78284c9dd45d6c79dd", "commit_date": "2023-01-04T20:21:43Z", "commit_message": "Warn if failed to read existing /etc/nsswitch.conf\n\nCommit 90424e7c (\"Don't warn when failed to open /etc/nsswitch.conf\")\nremoved the logging for failing to read /etc/nsswitch.conf to reduce the\nnoise in the case the file does not exists (e.g. musl based systems).\n\nReintroduce a warning if /etc/nsswitch.conf exists but we failed to read\nit (e.g. permission denied).\n\nImproves: 90424e7c (\"Don't warn when failed to open /etc/nsswitch.conf\")", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "609c6413238db7c49e11a0ce5c08ad8f1d6b3424", "commit_date": "2023-01-02T07:20:43Z", "commit_message": "Call inet_sockaddr2str() instead of inet_ntop(3)\n\nTo simplify.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb3a89577ca8166c56172fd45e85a02ab696aa34", "commit_date": "2023-01-02T07:20:43Z", "commit_message": "Add inet_sockaddr2str() to wrap inet_ntop(3)\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eec5f9fccca971eb5d601906d40780a1a14abc34", "commit_date": "2023-01-02T07:20:43Z", "commit_message": "Replace gethostbyname(3) by getaddrinfo(3)\n\ngethostbyname(3) was removed in POSIX.1-2008.  It has been obsoleted,\nand replaced by getaddrinfo(3), which is superior in several ways:\n\n-  gethostbyname(3) is not reentrant.  There's a GNU extension,\n   gethostbyname_r(3) which is reentrant, but it's not likely to be\n   standardized for the following reason.  And we don't care too much\n   about this point either.\n\n-  gethostbyname(3) only supports IPv4, but getaddrinfo(3) supports both\n   IPv4 and IPv6 (and may support other address families in the future).\n\nWe don't care about reentrancy, so for keeping the code simple (i.e.,\nnot touch call site to add code to free(3) an allocated buffer), I added\na static buffer for inet_ntop(3).  We could address that in the future,\nbut I don't think it's worth it.\n\nBTW, we also replace inet_ntoa(3) by inet_ntop(3), as a consequence of\nusing getaddrinfo(3).  inet_ntoa(3) is also marked as deprecated, but\nthat deprecation seems to have been documented only in the manual page,\nand POSIX doesn't mark it as deprecated.  The deprecation notice goes\nback to when the inet_ntop(3) manual page was added by Sam Varshavchik\nto the Linux man-pages in version 1.30 (year 2000).\n\nSo, this, apart from updating the code to POSIX.1-2008, is also adding\nsupport for IPv6 :)  Although, probably many other parts of the code are\nwritten for IPv4 only, so I wouldn't yet claim support for it.\n\nA few notes:\n\n-  I didn't check the return value of inet_ntop(3), since it can't fail\n   for the given input:\n\n   -  EAFNOSUPPORT:  We only call it with AF_INET and AF_INET6.\n   -  ENOSPC:  We calculate the size of the buffer to be wide enough:\n               MAX(INET_ADDRSTRLEN, INET6_ADDRSTRLEN) so it always fits.\n\nCc: Dave Hagewood <admin@arrowweb.com>\nCc: Sam Varshavchik\nCc: Jakub Jelinek <jakub@redhat.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65470e5c7ddbc2885ad35fbd0218b91a75626c2f", "commit_date": "2022-12-29T19:58:49Z", "commit_message": "changing lock mechanism\n\nSystems can suffer power interruptions whilst .lock files are in /etc,\npreventing scripts and other automation tools from updating shadow's\nfiles which persist across boots.\n\nThis commit replaces that mechanism with file locking to avoid problems\nof power interruption/crashing.\n\nMinor tweak to groupmems man page, requested by 'xx' on IRC.\n\nSigned-off-by: ed neville <ed@s5h.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc18c184e56ff9aa6b092b01116b46cea4f34492", "commit_date": "2022-12-23T08:04:02Z", "commit_message": "chfn: new_fields: fix wrong fields printed\n\nWhen the caller may not change the room number, work phone, or\nhome number, then rather than prompting for the new one it will\nprint the existing one.  But due to a typo it printed the full name\nin place of each of those.\n\nFix the fields being printed.\n\nSigned-off-by: Serge Hallyn <serge@hallyn.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb164165f66e5785f5a5f8e0af650f4ff5d9ae95", "commit_date": "2022-12-23T00:20:02Z", "commit_message": "Add NITEMS(arr) to get the number of elements of an array\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "220b352b707e66c93242670100d31975e9661c49", "commit_date": "2022-12-23T00:03:39Z", "commit_message": "Use strlcpy(3) instead of its pattern\n\n-  Since strncpy(3) is not designed to write strings, but rather\n   (null-padded) character sequences (a.k.a. unterminated strings), we\n   had to manually append a '\\0'.  strlcpy(3) creates strings, so they\n   are always terminated.  This removes dependencies between lines, and\n   also removes chances of accidents.\n\n-  Repurposing strncpy(3) to create strings requires calculating the\n   location of the terminating null byte, which involves a '-1'\n   calculation.  This is a source of off-by-one bugs.  The new code has\n   no '-1' calculations, so there's almost-zero chance of these bugs.\n\n-  strlcpy(3) doesn't padd with null bytes.  Padding is relevant when\n   writing fixed-width buffers to binary files, when interfacing certain\n   APIs (I believe utmpx requires null padding at lease in some\n   systems), or when sending them to other processes or through the\n   network.  This is not the case, so padding is effectively ignored.\n\n-  strlcpy(3) requires that the input string is really a string;\n   otherwise it crashes (SIGSEGV).  Let's check if the input strings are\n   really strings:\n\n   -  lib/fields.c:\n      -  'cp' was assigned from 'newft', and 'newft' comes from fgets(3).\n\n   -  lib/gshadow.c:\n      -  strlen(string) is calculated a few lines above.\n\n   -  libmisc/console.c:\n      -  'cons' comes from getdef_str, which is a bit cryptic, but seems\n         to generate strings, I guess.1\n\n   -  libmisc/date_to_str.c:\n      -  It receives a string literal.  :)\n\n   -  libmisc/utmp.c:\n      -  'tname' comes from ttyname(3), which returns a string.\n\n   -  src/su.c:\n      -  'tmp_name' has been passed to strcmp(3) a few lines above.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a48d77bdef894cb27376a77ee30e4507953c09d5", "commit_date": "2022-12-22T16:39:45Z", "commit_message": "strtoday.c: remove unused defines.h inclusion\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb0c89d944a0d5c42972fdcf8176782cf473654e", "commit_date": "2022-12-22T16:39:45Z", "commit_message": "strtoday.c: remove USE_GETDATE as it was always used\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4441489bc2c47c89f5f9823b76f3a65f045d061", "commit_date": "2022-12-22T16:39:45Z", "commit_message": "strtoday.c: remove POSIX 1995 conditional dependency\n\nSince the project is supposed to be POSIX.1-2001 compliant it doesn't\nmake sense to have that added conditionally.\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "647d46507dd2d0bf57fba5e8f829a363b28224d3", "commit_date": "2022-12-22T15:49:02Z", "commit_message": "Assume struct tm is defined in <time.h>\n\nIt has been a requirement since at least C90, according to tm(3type).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d96bb2868d5613850cef0817569115ea92046d51", "commit_date": "2022-12-22T15:49:02Z", "commit_message": "Assume struct stat has st_atim and st_mtim fields\n\nThat's required by POSIX.1-2008.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d7a3b80e99fe3e3dc833064352699d68ce16a5a", "commit_date": "2022-12-22T10:44:36Z", "commit_message": "Remove USE_SYSLOG preprocessor conditional, which was always defined\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "350b1e86836b8839e03b997f8d75150a70965ca5", "commit_date": "2022-12-22T10:44:36Z", "commit_message": "Remove dead code\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2df287aad883368584ccb2f460a47e9d3c41b42", "commit_date": "2022-12-22T10:43:29Z", "commit_message": "Don't redefine errno(3)\n\nIt is Undefined Behavior to declare errno (see NOTES in its manual page).\nInstead of using the errno dummy declaration, use one that doesn't need\na comment.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed69feaaff3c86745390c9839ecfc4b8f9706075", "commit_date": "2022-12-22T09:34:04Z", "commit_message": "Fix typos in length calculations\n\nLink: <https://github.com/shadow-maint/shadow/pull/607>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06c30450ce4a57c3bf9d56374cf4d5d2480086e9", "commit_date": "2022-12-22T09:34:04Z", "commit_message": "Use 'uintmax_t' to print 'gid_t'\n\nThis is shorter to write than 'unsigned long int', so we can collapse\nsome lines.  It is guaranteed by C99.\n\nLink: <https://github.com/shadow-maint/shadow/pull/607>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "587ce83e3ff4bea64ac028149ac9b66df37f688c", "commit_date": "2022-12-22T09:34:04Z", "commit_message": "Fix off-by-one mistakes\n\nThe buffers have a size of 512 (see xmalloc() above), which is what\nsnprintf(3) expects.\n\nLink: <https://github.com/shadow-maint/shadow/pull/607>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b990b167d470ec5c6d4e63221f99aa36f8b19c21", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Cosmetic fixes\n\nPrevious commits, to keep readability of the diffs, left the code that\nwas previously wrapped by preprocessor coditionals untouched.  Apply\nsome minor cosmetic changes to merge it in the surrounding code.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3be7b9d75a6b73fe24394d7ac1e315d60d45b5ee", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Remove traces of utmpx\n\n-  USER_NAME_MAX_LENGTH was being calculated in terms of utmpx.  Do it\n   in terms of utmp.\n-  Remove utmpx support from the whishlist.\n-  Remove unused tests about utmpx members.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "170b76cdd1a9b3879817b961a402a5c952cbe169", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Disable utmpx permanently\n\nOn Linux, utmpx and utmp are identical.  However, documentation (manual\npages) covers utmp, and just says about utmpx that it's identical to\nutmp.  It seems that it's preferred to use utmp, at least by reading the\nmanual pages.\n\nMoreover, we were defaulting to utmp (utmpx had to be explicitly enabled\nat configuration time).  So, it seems safer to just make it permanent,\nwhich should not affect default builds.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2da7607ea6880999b7a6d3d38a1338b5ab0ddd8a", "commit_date": "2022-12-22T09:31:43Z", "commit_message": "Assume <utmpx.h> always exists\n\nWe already made that assumption in commit b47aa1e9aaf4.  While the\nheader is not required by POSIX (it is an XSI extension), it is defined\nin systems that are of interest to this project (GNU/Linux).\n\nFixes: b47aa1e9aaf4 (\"Assume <utmpx.h> exists\")\nCc: Serge Hallyn <serge@hallyn.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fae37271ec8d3a7dc81b83f8de30016cdd5ec61", "commit_date": "2022-12-21T14:22:22Z", "commit_message": "Remove pwdauth.c\n\nWe don't know what it was for.  If anyone cares, it's in git history.\nIn my distro, there seem to be no traces of it:\n\nalx@debian:~$ apt-file find pwdauth\nalx@debian:~$\n\nLink: <https://codesearch.debian.net/search?q=pwdauth&literal=1>\nLink: <https://github.com/shadow-maint/shadow/pull/612>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c17c71675a60edaa47b280b0b4e2190ddcaee0", "commit_date": "2022-12-19T15:43:03Z", "commit_message": "Add support for skeleton files from /usr/etc/skel\n\nThis patch is used by openSUSE to make useradd look for\nskeleton files in /usr/etc/skel additionally to /etc/skel\nin accordance with\nhttps://uapi-group.org/specifications/specs/base_directory_specification/", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "37412f505ed0bc5c9e3f04b2266b40f8f6fc310f", "commit_date": "2022-12-15T22:29:42Z", "commit_message": "Fix useradd audit event logging of ID field\n\nWhen useradd sends its ADD_USER event, it is filling in the id field. This is not yet written to disk. When auditd sees the event and the log format is enriched, auditd tries to lookup the user name but it does not exist. This causes the event to never be resolvable since ausearch relies on the lookup information attached by auditd.\n\nThe fix is to not send the id information for any event until after close_files() is called. Just the acct field is all that is\n\nPatch by Steve Grubb (afaik).\n\nReported at https://bugzilla.redhat.com/show_bug.cgi?id=1713432", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6b6e005ce1cc4a5e4fc7fc40a52f2ed229f54b5b", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove comments that survived the Helicoprion\n\nThe OSes that are referred to by these comments, are extinct, but\ntheir comments survived, fossilized in amber.\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "428a2078b6c435f1780ec8f381033e7bd937d29e", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Ping? :)\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "54847a76da53799b8f22a7849aa8758af8ef8769", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove preprocessor conditionals that are always true\n\nIn a previous commit, we made USE_TERMIOS unconditionally defined.\nLet's just remove it, and remove the condition everywhere.\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2ae6a42a4986ebae3d56a28c2859d3abc472234", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove code conditional on USE_TERMIO\n\nThe definition for this macro was removed in a previous commit.\n\nReported-by: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5669b34891fcc393e916980c7a2ad02350e91953", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume socket(2) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3d32dd05bb4b5597411745299c4c5f9a25f8ef15", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume inet_ntoa(3) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e0c55aecabf98dd2fadd6986472d5e1b1bd491c", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume F_* and SEEK_* macros are defined\n\nThey are required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9dfa71f71cd0665ec2b5d45d7e9ae9a35ab74011", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove code conditional on S_SPLINT_S\n\nI don't know for sure what that is, but it's redefining setlocale(3)\nand LC_ALL, which is are defined by C99, so it's supect of being some\nvariety of an extinct dynosaur.  Maybe related to the Dodo.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "143e346dd50a71a26ea697561e18aa9aa92f796d", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume strdup(3) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "56e989ccf7b09904d1b644ebbd5991796452f5fb", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume strcasecmp(3) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06f4acee994835b4abb49db49538e6077e0814f6", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume rmdir(2) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dfc93b35cca3a1a161ecb5ae4e95975355bd23cb", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume mkdir(2) exists\n\nIt is required by POSIX.1-2001.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61299d69ad2278624714b97ebe6835c0a93a2484", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume B[0-9]* macros are defined\n\nAll of the macros we're using are required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f51c6838ac02725e6928ac0aa4d8c312dd0e86a7", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume SIGTTOU is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "307502d8b559516e01be154e1ce3f37df73bc965", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume SIGTSTP is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c8015730e4ea8f1f90349ea969f977eae05b12", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_STACK is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c916715a6c542b2dc18dfc49b14af85da2d49dab", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_NOFILE is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ebf28c999582c2a08d021a79d5f5121af843249", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_FSIZE is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "91adf3b8bb435d4c45250d3dbffb9aba3ff9d218", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_DATA is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "891d8dbeddc644d3821c1a0df4559eda5f20827b", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_CPU is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7a4906fc753a5b6f26bbe952f3846fe741a440ef", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_AS is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e1a39e1dfc7cee2488b85f09e007b078112a4749", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume RLIMIT_CORE is defined\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cbc363f671989bc3fdfaccc88d47ee675328237a", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getgrgid_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "88eb38f4abcaeda635f92e70bbf83f5b0b02c06c", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getgrnam_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5e5df19661a022f7f49e47441e346a2db2b1705", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getpwuid_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e78800197737c25fbd46d3ff278d9bcf60eed096", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume getpwnam_r(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a082a3975f069c309553f625e580cd9d7142380e", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume fsync(2) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e71c23586a8921b6c5feab5bffa5d3d11e546a74", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume fchown(2) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c86e07067a8ced798e059f1d58dec2c1af82362", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume fchmod(2) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55c62b663f9fe9891f39c576dc7c105010e4b1c3", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume l64a(3) exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48391fb8626c8e22280fe4590d9253f8340a3f1d", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <netdb.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b76d9b540a793df9e0a4861a85501ba4e29e6230", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove preprocessor conditionals that are always true\n\nSince the last commit, LIMITS is always defined.  Remove the dummy\nmacro, and all conditionals on it.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d695340b47d9820743ca1fa4df15e9ea11b539f", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <sys/resource.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cdaa04e4601b91b4b13979ebb3865bc9db2e5467", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove uses of ulimit(3)\n\nThe function is obsolete.  It is recommended to use getrlimit(2) instead\n(see the manual page for ulimit(3) or the POSIX manual for it).  Since\ngetrlimit(2) is required by POSIX.1-2001, we can rely on it.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0527fa677bfcdb34b34fd5ffef0ae8d97f25709c", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Add indentation to heavy use of preprocessor conditionals\n\nThis clarifies which code is under which conditions,\nfor further clenaup.\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b1fc83e9b2b85914a2569352f099883a968c592", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <utime.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eecd021c043bcb7d28ada74daa666f051b506b4f", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <syslog.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5777e583cd1b493d382866922bf295983f97c1fe", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <termios.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b47aa1e9aaf4690c67cb325af126c0b18dcfaad6", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <utmpx.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "85d2688d629a8ecbbc64437491a03d0dc34377a9", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <sys/time.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "578f2862152e2c3831330ce413ab9c53e13fafbc", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Assume <unistd.h> exists\n\nIt is required by POSIX.1-2001.\n\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28e565aa8313b282ee9f9164ff4486467c62bc07", "commit_date": "2022-12-15T22:22:05Z", "commit_message": "Remove unused check for <fcntl.h>\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d7baafb2eb1040aace9f7fb1b3638d21c5a129c6", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume strstr(3) exists\n\nISO C99 requires strstr(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0793782d312469a6580940f6e162c28c24c215c2", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume snprintf(3) exists\n\nISO C99 requires snprintf(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7d3213741e0e33d62159ca77e9ee38f9184a1222", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume rename(2) exists\n\nISO C99 requires rename(2).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d8c3df93ca0fad4f7766a997674c3502939cf30", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume NULL exists\n\nISO C99 requires NULL.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3a32f5278d4048159272531db89f7be7026b2b94", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume strerror(3) exists\n\nISO C99 requires strerror(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5e8df2b2b52ac458fc2394387bcfdd1917fd9ab6", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume fputs(3) exists\n\nISO C99 requires fputs(3).\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c26b682381a6cb567c95bc8336052f5fca98e87d", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume <locale.h> exists\n\nISO C99 requires <locale.h>.\n\nOther files in the project already include <locale.h> unconditionally,\nso it's reasonable to assume that it is always available.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d34c834ea866da0a5aeebd13c65c532165c680a2", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Remove unused check for <limits.h>\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1eaa30756eaa696e8a24cae52e38c5819763bf91", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume <errno.h> exists\n\nISO C99 requires <errno.h>.\n\nMany files in the project already include <errno.h> unconditionally,\nso it's reasonable to assume that it is always available.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c4d9dcacc96376d3b605e81c063292b66ac35d8f", "commit_date": "2022-12-12T08:16:43Z", "commit_message": "Assume <stdbool.h> exists\n\nISO C99 requires <stdbool.h>.\n\nMany files in the project already include <stdbool.h> unconditionally,\nso it's reasonable to assume that it is always available.\n\nLink: <https://github.com/shadow-maint/shadow/pull/600>\nCc: Christian G\u00f6ttsche <cgzones@googlemail.com>\nCc: Iker Pedrosa <ipedrosa@redhat.com>\nCc: Mike Frysinger <vapier@gentoo.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed6c5053124b56ff7278a2df5f102912efb010c0", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Add '62_usermod_remove_supplementary_groups' test case to test runner scripts (run_some)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f2bcb7a1b83a07b10c4753b2af5ce0ecdb0966b2", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Add '62_usermod_remove_supplementary_groups' test case to test runner scripts (run_all, run_all.coverage)", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20f8ead9eceaa65f9c0abc37135c900c474062e2", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Add regression test for 'usermod -rG' -- it should not add users to groups they did not previously belong to", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "899f7a43b1dbaf564fc8b2673aa9aba6d0607a14", "commit_date": "2022-12-11T16:58:37Z", "commit_message": "Preparation / clarity: rename existing usermod test from 'remove_supplemental_groups' to 'clear_supplemental_groups'", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a5b8810bb1791ef044b9421969131bd385b8a70", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "agetpass: Hook into build-system\n\nSigned-off-by: Guillem Jover <guillem@hadrons.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ab91ec10b4a42b935183e06df3791f74869ed823", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "Hide [[gnu::malloc(deallocator)]] in a macro\n\nClang doesn't implement this attribute and reports an error.  Work\naround it by hiding it in a macro that will be empty in clang.\n\nReported-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "554f86bafa2581d81ffb39e92240e39d630c43c4", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "Replace the deprecated getpass(3) by our agetpass()\n\ngetpass(3) is broken in all implementations; in some, more than\nothers, but somewhat broken in all of them.  Check the immediate\nprevious commit, which added the functions, for more details.\nCheck also the Linux man-pages commit that marked it as\ndeprecated, for more details:\n7ca189099d73bde954eed2d7fc21732bcc8ddc6b.\n\nLink: <https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/commit?id=7ca189099d73bde954eed2d7fc21732bcc8ddc6b>\nReported-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "155c9421b935202a550193b15dfd4eba014d21df", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "libmisc: agetpass(), erase_pass(): Add functions for getting passwords safely\n\nThere are several issues with getpass(3).\n\nMany implementations of it share the same issues that the infamous\ngets(3).  In glibc it's not so terrible, since it's a wrapper\naround getline(3).  But it still has an important bug:\n\nIf the password is long enough, getline(3) will realloc(3) memory,\nand prefixes of the password will be laying around in some\ndeallocated memory.\n\nSee the getpass(3) manual page for more details, and especially\nthe commit that marked it as deprecated, which links to a long\ndiscussion in the linux-man@ mailing list.\n\nSo, readpassphrase(3bsd) is preferrable, which is provided by\nlibbsd on GNU systems.  However, using readpassphrase(3) directly\nis a bit verbose, so we can write our own wrapper with a simpler\ninterface similar to that of getpass(3).\n\nOne of the benefits of writing our own interface around\nreadpassphrase(3) is that we can hide there any checks that should\nbe done always and which would be error-prone to repeat every\ntime.  For example, check that there was no truncation in the\npassword.\n\nAlso, use malloc(3) to get the buffer, instead of using a global\nbuffer.  We're not using a multithreaded program (and it wouldn't\nmake sense to do so), but it's nice to know that the visibility of\nour passwords is as limited as possible.\n\nerase_pass() is a clean-up function that handles all clean-up\ncorrectly, including zeroing the entire buffer, and then\nfree(3)ing the memory.  By using [[gnu::malloc(erase_pass)]], we\nmake sure that we don't leak the buffers in any case, since the\ncompiler will be able to enforce clean up.\n\nLink: <https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/commit?id=7ca189099d73bde954eed2d7fc21732bcc8ddc6b>\nReported-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8cce4557e00e9e556e49b10e604eea2e88d3846d", "commit_date": "2022-12-05T09:47:19Z", "commit_message": "Don't 'else' after a 'noreturn' call\n\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "99ce21a3131f54f7e59d55325b5b2ac0b2c0b00c", "commit_date": "2022-11-28T15:07:41Z", "commit_message": "CI: add libbsd and pkg-config dependencies\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>\nCo-developed-by: Alejandro Colomar <alx@kernel.org>\nSigned-off-by: Alejandro Colomar <alx@kernel.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a281f241b592aec636d1b93a99e764499d68c7ef", "commit_date": "2022-11-21T14:06:14Z", "commit_message": "Fix HAVE_SHADOWGRP configure check\n\nThe missing #include <gshadow.h> causes the configure check to fail\nspuriously, resulting in HAVE_SHADOWGRP not being defined even\non systems that actually have sgetsgent (such as current glibc).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e8d2bc8d8b2c827e67cb8e3f9a6e1800af25c86f", "commit_date": "2022-11-18T21:10:56Z", "commit_message": "Allow supplementary groups to be added via config file\n\nAllow supplementary groups to be set via the /etc/default/useradd config\nfile. Allowing an administrator to set additonal groups via the GROUPS\nconfigurable and control the default behaviour of useradd.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0524e813a3bae2891b33a66f35876841c11cee7", "commit_date": "2022-11-18T15:04:42Z", "commit_message": "useradd: check if subid range exists for user\n\nCheck if a user already has a subid range before assigning one.\n\nResolves: https://bugzilla.redhat.com/show_bug.cgi?id=2012929\n\nSigned-off-by: Iker Pedrosa <ipedrosa@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}