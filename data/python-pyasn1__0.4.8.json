{"add-unittest-assertion": [{"commit_oid": "4d5a3fee95ee35f1c0fbe557b3602b9d98c54766", "commit_date": "2019-11-24T18:07:48Z", "commit_message": "[WIP] Use `unittest` assert methods\n\nChanged assertion in unit tests from Python built-in\nto `unittest` provided. The motivation is to have better\nreporting on test failures.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bb6e5b1cc752caf5c08cafca350644c8028dcda", "commit_date": "2019-11-23T09:08:00Z", "commit_message": "Update CHANGES.rst", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96b0a7742a243dbcdacdcdcc64e141437a40835a", "commit_date": "2019-11-23T09:06:57Z", "commit_message": "Make BER/CER/DER decodersstreaming and suspendible (#176)\n\nThe goal of this change is to make the decoder yielding on input\r\ndata starvation and resuming from where it stopped whenever the\r\ncaller decides to try again (hopefully making sure that some more\r\ninput becomes available).\r\n\r\nThis change makes it possible for the decoder to operate on streams\r\nof data (meaning that the entire DER blob might not be immediately\r\navailable on input).\r\n\r\nOn top of that, the decoder yields partially reconstructed ASN.1\r\nobject on input starvation making it possible for the caller to\r\ninspect what has been decoded so far and possibly consume partial\r\nASN.1 data.\r\n\r\nAll these new feature are natively available through\r\n`StreamingDecoder` class. Previously published API is implemented\r\nas a thin wrapper on top of that ensuring backward compatibility.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cda318a63f8d6a3c43408ac8d3dfa405d3ca7c7c", "commit_date": "2019-11-23T09:06:42Z", "commit_message": "Update CHANGES.rst", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b646e07d5d83f0892fa2a809ae4c981430cb12c", "commit_date": "2019-11-23T08:57:24Z", "commit_message": "Merge branch 'master' into streamoptimum37", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "788af3c44edc2ebd079eda3f7a4ae2f9931446fd", "commit_date": "2019-11-23T08:53:28Z", "commit_message": "Merge pull request #1 from janpipek/support-incomplete-substrate\n\nTurn BER decoder into a suspendible generator", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f10434e31f9293c4e739ac6c5d1519f407bd1540", "commit_date": "2019-11-23T08:50:39Z", "commit_message": "Prepare to branch 0.4.x", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a867de48b5285334e6adde2f4a43d13b61e7d4e4", "commit_date": "2019-11-17T09:35:33Z", "commit_message": "Add Py3.8 Travis job", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcf7c502c49033a31ed27678fd4b93655e9f6f82", "commit_date": "2019-11-16T19:31:31Z", "commit_message": "Add support for Python 3.8, drop EOL 3.4 (#182)\n\n* Drop support for EOL Python 3.4\r\n* Remove Py2.5 workarounds\r\n* Change Travis setup to test on default Xenial\r\n* Add support for Python 3.8 and update changelog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7d2ac036866e5f437bd6f9a9f01723f601b4073", "commit_date": "2019-11-16T18:19:07Z", "commit_message": "Drop support for EOL Pythons (#131)\n\nPython 2.4, 2.5, 2.6, 3.2 and 3.3 are end of life. They are no longer\r\nreceiving bug fixes, including for security issues. These Pythons went\r\nEOL on:\r\n\r\nPython 2.6: 2013-10-29\r\nPython 3.2: 2016-02-20\r\nPython 3.3: 2017-09-29\r\n\r\nFor additional details on supported Python versions, see:\r\n\r\nhttps://devguide.python.org/#status-of-python-branches\r\n\r\nRemoving support for EOL Pythons will reduce testing and maintenance\r\nresources.\r\n\r\nUsing pypinfo, here are the download statistics of the project for the\r\nlast 30 days, showing limited downloads from EOL Pythons:\r\n\r\n| python_version | percent | download_count |\r\n| -------------- | ------: | -------------: |\r\n| 2.7            |  90.33% |      7,975,885 |\r\n| 3.6            |   4.95% |        437,261 |\r\n| 3.5            |   2.99% |        263,637 |\r\n| 3.4            |   1.02% |         89,723 |\r\n| 2.6            |   0.69% |         60,511 |\r\n| 3.7            |   0.02% |          2,024 |\r\n| 3.3            |   0.00% |            441 |\r\n| 3.2            |   0.00% |             38 |\r\n| 3.8            |   0.00% |              9 |\r\n| None           |   0.00% |              2 |\r\n\r\nBy removing support for older Pythons, can remove or update the\r\nfollowing workarounds and code:\r\n\r\n* Built-in function bin() is always available.\r\n* Built-in function callable() is always available.\r\n* Built-in function all() is always available.\r\n* The collections.OrderedDict class is always available.\r\n* The datetime.strptime() method is always available.\r\n* The platform module is always available.\r\n* The string.partition() method is always available.\r\n* The NullHandler class is always available.\r\n* The method .__trunc__() is always available.\r\n* Can use set literals.\r\n* Updated unittest is always available. The unittest2 module is\r\n  unnecessary.\r\n\r\nUsers on older versions of Python can continue to download, install, and\r\nuse older versions of the library that continue to have support for\r\nolder Pythons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e51d6f520bdd57748f70b8defc2bda1ddea9856b", "commit_date": "2019-11-16T17:35:13Z", "commit_message": "Prepare for 0.5.0", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "master": [{"commit_oid": "db8f1a7930c6b5826357646746337dafc983f953", "commit_date": "2020-03-21T18:06:04Z", "commit_message": "Fix `DeprecationWarning: __int__ returned non-int` on Py3\n\nIn `BitString.__int__()`", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d70fb1aa2a7193a5c13a76e1be5891bf31a855c", "commit_date": "2020-03-14T17:42:50Z", "commit_message": "Fix tox docs watning", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74978b7b955b76ba685cb8be7a532f0966894a6a", "commit_date": "2020-03-14T17:37:12Z", "commit_message": "Fix tox deps inheritance", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0421ec974415354d834d86e55b522d17b8c1005c", "commit_date": "2020-03-14T14:45:32Z", "commit_message": "Run unittests from tox across many Pythons", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4078c15c718b3668245ecdb7899f8f4e0c501fb2", "commit_date": "2020-03-08T18:22:13Z", "commit_message": "Add tox.ini with some basic runners", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "acb78299d1270a2fea0d11e5509777b7c5777f3f", "commit_date": "2020-03-08T18:21:47Z", "commit_message": "Advance copyright statement to year 2020", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1de0d168bc3a5d7ddf39002d7433743490aed047", "commit_date": "2019-12-15T18:20:18Z", "commit_message": "Update FUNDING.yml", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bb6e5b1cc752caf5c08cafca350644c8028dcda", "commit_date": "2019-11-23T09:08:00Z", "commit_message": "Update CHANGES.rst", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96b0a7742a243dbcdacdcdcc64e141437a40835a", "commit_date": "2019-11-23T09:06:57Z", "commit_message": "Make BER/CER/DER decodersstreaming and suspendible (#176)\n\nThe goal of this change is to make the decoder yielding on input\r\ndata starvation and resuming from where it stopped whenever the\r\ncaller decides to try again (hopefully making sure that some more\r\ninput becomes available).\r\n\r\nThis change makes it possible for the decoder to operate on streams\r\nof data (meaning that the entire DER blob might not be immediately\r\navailable on input).\r\n\r\nOn top of that, the decoder yields partially reconstructed ASN.1\r\nobject on input starvation making it possible for the caller to\r\ninspect what has been decoded so far and possibly consume partial\r\nASN.1 data.\r\n\r\nAll these new feature are natively available through\r\n`StreamingDecoder` class. Previously published API is implemented\r\nas a thin wrapper on top of that ensuring backward compatibility.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cda318a63f8d6a3c43408ac8d3dfa405d3ca7c7c", "commit_date": "2019-11-23T09:06:42Z", "commit_message": "Update CHANGES.rst", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b646e07d5d83f0892fa2a809ae4c981430cb12c", "commit_date": "2019-11-23T08:57:24Z", "commit_message": "Merge branch 'master' into streamoptimum37", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "788af3c44edc2ebd079eda3f7a4ae2f9931446fd", "commit_date": "2019-11-23T08:53:28Z", "commit_message": "Merge pull request #1 from janpipek/support-incomplete-substrate\n\nTurn BER decoder into a suspendible generator", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f10434e31f9293c4e739ac6c5d1519f407bd1540", "commit_date": "2019-11-23T08:50:39Z", "commit_message": "Prepare to branch 0.4.x", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a867de48b5285334e6adde2f4a43d13b61e7d4e4", "commit_date": "2019-11-17T09:35:33Z", "commit_message": "Add Py3.8 Travis job", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcf7c502c49033a31ed27678fd4b93655e9f6f82", "commit_date": "2019-11-16T19:31:31Z", "commit_message": "Add support for Python 3.8, drop EOL 3.4 (#182)\n\n* Drop support for EOL Python 3.4\r\n* Remove Py2.5 workarounds\r\n* Change Travis setup to test on default Xenial\r\n* Add support for Python 3.8 and update changelog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7d2ac036866e5f437bd6f9a9f01723f601b4073", "commit_date": "2019-11-16T18:19:07Z", "commit_message": "Drop support for EOL Pythons (#131)\n\nPython 2.4, 2.5, 2.6, 3.2 and 3.3 are end of life. They are no longer\r\nreceiving bug fixes, including for security issues. These Pythons went\r\nEOL on:\r\n\r\nPython 2.6: 2013-10-29\r\nPython 3.2: 2016-02-20\r\nPython 3.3: 2017-09-29\r\n\r\nFor additional details on supported Python versions, see:\r\n\r\nhttps://devguide.python.org/#status-of-python-branches\r\n\r\nRemoving support for EOL Pythons will reduce testing and maintenance\r\nresources.\r\n\r\nUsing pypinfo, here are the download statistics of the project for the\r\nlast 30 days, showing limited downloads from EOL Pythons:\r\n\r\n| python_version | percent | download_count |\r\n| -------------- | ------: | -------------: |\r\n| 2.7            |  90.33% |      7,975,885 |\r\n| 3.6            |   4.95% |        437,261 |\r\n| 3.5            |   2.99% |        263,637 |\r\n| 3.4            |   1.02% |         89,723 |\r\n| 2.6            |   0.69% |         60,511 |\r\n| 3.7            |   0.02% |          2,024 |\r\n| 3.3            |   0.00% |            441 |\r\n| 3.2            |   0.00% |             38 |\r\n| 3.8            |   0.00% |              9 |\r\n| None           |   0.00% |              2 |\r\n\r\nBy removing support for older Pythons, can remove or update the\r\nfollowing workarounds and code:\r\n\r\n* Built-in function bin() is always available.\r\n* Built-in function callable() is always available.\r\n* Built-in function all() is always available.\r\n* The collections.OrderedDict class is always available.\r\n* The datetime.strptime() method is always available.\r\n* The platform module is always available.\r\n* The string.partition() method is always available.\r\n* The NullHandler class is always available.\r\n* The method .__trunc__() is always available.\r\n* Can use set literals.\r\n* Updated unittest is always available. The unittest2 module is\r\n  unnecessary.\r\n\r\nUsers on older versions of Python can continue to download, install, and\r\nuse older versions of the library that continue to have support for\r\nolder Pythons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e51d6f520bdd57748f70b8defc2bda1ddea9856b", "commit_date": "2019-11-16T17:35:13Z", "commit_message": "Prepare for 0.5.0", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "release-0.4.9": [{"commit_oid": "ae1a04874565e7db6c595a99846c2605a271344e", "commit_date": "2020-03-21T18:05:03Z", "commit_message": "Fix `DeprecationWarning: __int__ returned non-int` on Py3\n\nIn `BitString.__int__()`", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "470d54db2e5d2056fc291eda92648aad94836e98", "commit_date": "2020-03-14T17:42:16Z", "commit_message": "Fix tox docs watning", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "95be60d5f2d2894961ac1f9129ff7d36c6348673", "commit_date": "2020-03-14T17:36:30Z", "commit_message": "Fix tox deps inheritance", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae62e779010d101da6591547c74dfec76be70d28", "commit_date": "2020-03-14T14:44:58Z", "commit_message": "Run unittests from tox across many Pythons", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1f1e52f394ae35eaeae890b3792188b95483ca3f", "commit_date": "2020-03-08T18:20:36Z", "commit_message": "Add tox.ini with some basic runners", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7e82e2fa2041024de614d8e24696f5632a998fbf", "commit_date": "2020-03-08T18:12:07Z", "commit_message": "Advance copyright statement to year 2020", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f10434e31f9293c4e739ac6c5d1519f407bd1540", "commit_date": "2019-11-23T08:50:39Z", "commit_message": "Prepare to branch 0.4.x", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a867de48b5285334e6adde2f4a43d13b61e7d4e4", "commit_date": "2019-11-17T09:35:33Z", "commit_message": "Add Py3.8 Travis job", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fcf7c502c49033a31ed27678fd4b93655e9f6f82", "commit_date": "2019-11-16T19:31:31Z", "commit_message": "Add support for Python 3.8, drop EOL 3.4 (#182)\n\n* Drop support for EOL Python 3.4\r\n* Remove Py2.5 workarounds\r\n* Change Travis setup to test on default Xenial\r\n* Add support for Python 3.8 and update changelog", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7d2ac036866e5f437bd6f9a9f01723f601b4073", "commit_date": "2019-11-16T18:19:07Z", "commit_message": "Drop support for EOL Pythons (#131)\n\nPython 2.4, 2.5, 2.6, 3.2 and 3.3 are end of life. They are no longer\r\nreceiving bug fixes, including for security issues. These Pythons went\r\nEOL on:\r\n\r\nPython 2.6: 2013-10-29\r\nPython 3.2: 2016-02-20\r\nPython 3.3: 2017-09-29\r\n\r\nFor additional details on supported Python versions, see:\r\n\r\nhttps://devguide.python.org/#status-of-python-branches\r\n\r\nRemoving support for EOL Pythons will reduce testing and maintenance\r\nresources.\r\n\r\nUsing pypinfo, here are the download statistics of the project for the\r\nlast 30 days, showing limited downloads from EOL Pythons:\r\n\r\n| python_version | percent | download_count |\r\n| -------------- | ------: | -------------: |\r\n| 2.7            |  90.33% |      7,975,885 |\r\n| 3.6            |   4.95% |        437,261 |\r\n| 3.5            |   2.99% |        263,637 |\r\n| 3.4            |   1.02% |         89,723 |\r\n| 2.6            |   0.69% |         60,511 |\r\n| 3.7            |   0.02% |          2,024 |\r\n| 3.3            |   0.00% |            441 |\r\n| 3.2            |   0.00% |             38 |\r\n| 3.8            |   0.00% |              9 |\r\n| None           |   0.00% |              2 |\r\n\r\nBy removing support for older Pythons, can remove or update the\r\nfollowing workarounds and code:\r\n\r\n* Built-in function bin() is always available.\r\n* Built-in function callable() is always available.\r\n* Built-in function all() is always available.\r\n* The collections.OrderedDict class is always available.\r\n* The datetime.strptime() method is always available.\r\n* The platform module is always available.\r\n* The string.partition() method is always available.\r\n* The NullHandler class is always available.\r\n* The method .__trunc__() is always available.\r\n* Can use set literals.\r\n* Updated unittest is always available. The unittest2 module is\r\n  unnecessary.\r\n\r\nUsers on older versions of Python can continue to download, install, and\r\nuse older versions of the library that continue to have support for\r\nolder Pythons.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e51d6f520bdd57748f70b8defc2bda1ddea9856b", "commit_date": "2019-11-16T17:35:13Z", "commit_message": "Prepare for 0.5.0", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}