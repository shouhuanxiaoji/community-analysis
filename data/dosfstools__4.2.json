{"master": [{"commit_oid": "289a48b9cb5b3c589391d28aa2515c325c932c7a", "commit_date": "2023-10-09T21:34:43Z", "commit_message": "manpages: Include the security considerations section to the fsck.fat\ndocumentation\n\nSigned-off-by: Maxim Suhanov <dfirblog@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c483196dd46eab22abba756cef511d36f5f42070", "commit_date": "2023-05-05T11:57:33Z", "commit_message": "Fix vasprintf implementation\n\nA va_copy call must be followed by a va_end call.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "812eb5b84011dabb041ad5df1bbfbf3766c5555a", "commit_date": "2023-04-28T12:02:02Z", "commit_message": "mkfs.fat: Reduce visibility of static buffer\n\nThe blkbuf array in check_blocks is not needed. It is always given as an\nargument to do_check. Keep the buffer there for easier access and\nreduced visibility in code.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48e80f766d20d7112d9f850b3b53488bbfb2c18a", "commit_date": "2023-04-26T11:59:21Z", "commit_message": "mkfs.fat: Handle case of bad root cluster\n\nIf the root cluster is bad, then mkfs.fat creates a filesystem which\nfsck.fat considers to be broken and cannot fix.\n\nFind the next free FAT cluster for root instead during creation.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aca5b2e61faa12996f3e9ef487cea0a2ef2504d6", "commit_date": "2023-04-24T12:03:12Z", "commit_message": "mkfs.fat: Update tables in case of bad blocks\n\nIf bad cluster markers have been added to FAT, then FAT32 filesystems\ncontain the wrong amount of free clusters. This ultimately means that\nnewly created filesystems are repaired when calling fsck.fat.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d2872059ac9ec753074174deab8dc83a70b9faa2", "commit_date": "2023-04-24T12:03:12Z", "commit_message": "mkfs.fat: Fix badblocks style\n\nAll other variables which have multiple words in their name use\na separator. Do so for variable \"badblocks\" as well.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "837eaf2bedc3666c91f97b673dce4d3bce6f6a86", "commit_date": "2023-04-23T12:04:49Z", "commit_message": "mkfs.fat: Switch to sigaction\n\nAccording to signal(2) manual page the system call is only portable when\nsetting a signal's disposition to SIG_DFL or SIG_IGN.\n\nUsing sigaction(2) allows specific definition of flags, which in this\ncase will always instruct system calls to restart when SIGALRM is\nreceived. This should be the default on Linux with signal(2) anyway.\n\nThis reduces the signal handler to set only a single variable.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "57c6059b3a4cadf4ede5ea6f259fc451a1ffbc7c", "commit_date": "2023-04-20T11:58:03Z", "commit_message": "mkfs.fat: Fix signal race\n\nThe signal handler used during bad block detection calls the\nsignal-unsafe function printf. This could get in conflict with a printf\nfor an error condition in do_check.\n\nJust set a sig_atomic_t variable to indicate that current status should\nbe displayed and leave the signal handler again.\n\nThe main loop checks the flag and prints the status when needed.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58212c59f94abe9c3e09a477bf19c00ac0d4a93b", "commit_date": "2023-04-04T11:53:54Z", "commit_message": "fsck.fat: Reduce duplicate file name lookups\n\nIf a file has to be generated, then alloc_rootdir_entry tries to create\na unique name by using a counter curr_num for name generation and\nlooking for duplicates. If no duplicate is found, the counter curr_num\nis not incremented, which means that the next file uses the same name\nagain. It is only incremented after the previously created file is\ndetected, just to repeat the loop again.\n\nThe improvement is simple: Increment the counter after creating the\nfilename. This has also the benefit that the check and use of\ncurr_num are closer to each other within the source code.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2a868410d2beef226f126991db7496eb8ff4027d", "commit_date": "2023-04-03T12:07:17Z", "commit_message": "Fix typos\n\nTypos found while reviewing lfn code.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "240a2302e0898c8a1fc47e7996b309b6a0ba77a0", "commit_date": "2023-03-25T14:35:33Z", "commit_message": "fsck.fat: Fix choice number again", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bd7924ebc8e9f8d772f77ab5345ab78057e00207", "commit_date": "2023-03-23T20:25:56Z", "commit_message": "fsck.fat: In interactive mode allow to skip repairing invalid label\n\nIn interactive mode other reparations can be skipped.\nSo for consistency allow it also for label.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b81306fae85f8b4546172ac7b6ab9db2ce046500", "commit_date": "2023-03-23T20:25:56Z", "commit_message": "fsck.fat: Fix choice numbers in check_boot_label() and check_label()", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba972ca969377cad4414b8441785d3d90e814a14", "commit_date": "2023-03-23T11:41:04Z", "commit_message": "mkfs.fat: Correctly count bad blocks\n\nIf a badblocks file contains the same block number multiple times,\nthen the status message of mkfs.fat shows the wrong amount of bad\nblocks.\n\nProof of Concept:\n```\necho -e \"30\\n30\\n30\" > badblocks\ndd if=/dev/zero of=poc.iso bs=512 count=100\nmkfs.fat -l badblocks poc.iso\n```\n\nOutput is `3 bad blocks`.\n\nWith this commit it is `1 bad block`.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca406a4dff78ef30fd4f4d870c8dfcd3c7e7498c", "commit_date": "2023-03-23T11:40:59Z", "commit_message": "mkfs.fat: Switch lineno to unsigned\n\nA signed integer overflow could occur with huge badblocks file because\nwe store the current line number in lineno. The unsigned data type\nshould be large enough for any sane badblocks file, otherwise it still\noverflows but does not lead to C language issues.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b54ef3546b7f9a91cf0506066158281c60979149", "commit_date": "2023-03-21T21:37:35Z", "commit_message": "mkfs.fat: Fix error messages", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc27b5ff267051b65d50497c2b5ad083ec00ec1d", "commit_date": "2023-03-03T19:35:14Z", "commit_message": "fatlabel: Fix a compiler warning about a maybe-unitialized variable\n\nFixes a compiler error that can occur when building with clang:\nerror: variable 'change' is used uninitialized whenever 'if' condition is false [-Werror,-Wsometimes-uninitialized]\n\nPreviously, this variable was initialized on all code paths except for\none that called `usage(1, 1)`.  In practice that should have been safe\nas `usage` should cause the program to exit.  But to make this\nobviously safe, initialize `change` to false when it is declared.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31c2c3a2d59a754926dd8a984e9ba87b4ed3bbbc", "commit_date": "2023-01-25T11:58:05Z", "commit_message": "Fix typos\n\n\"less then\" should be \"less than\" instead. I have looked for more\noccurrences of then/than typos but did not find any.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc83a0ba31bc6d3e09c734909e29f1174efb1d37", "commit_date": "2023-01-16T12:06:00Z", "commit_message": "Fix typos\n\nTypos found with codespell.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c064e181c4963250fe31acca39f0704267727bcb", "commit_date": "2023-01-09T18:44:41Z", "commit_message": "mkfs.fat: Fix reading slaves and removable sysfs entries for partitioned devices\n\nPartitioned devices have slaves and removable sysfs entries in parent device.\n\nIssue #186", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3406a92301f90a45e906462cf7e19bc4524323f2", "commit_date": "2023-01-09T18:41:53Z", "commit_message": "mkfs.fat: Fix detection of badblocks EOF\n\nFunction getline() does not have to set errno to zero on EOF.\nSo use feof() to detect EOF.\n\nFixes #186", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e866102d4378ea1ef5bdc02e11995018206f8af", "commit_date": "2023-01-04T11:52:46Z", "commit_message": "Support multiple codepage command line arguments.\n\nUse last given codepage argument instead of first to comply with\nother command line arguments.\n\nProof of Concept:\n\n1. Prepare a filesystem with label \u00b0 in codepage 1252\n```\n$ dd if=/dev/zero of=poc.iso bs=512 count=100\n$ mkfs.fat -c 1252 -n \"\u00b0\" poc.iso\n```\n\n2. Query the label\n```\n$ fatlabel -c 1252 poc.iso\n$ fatlabel -c 850 -c 1252 poc.iso\n```\n\nThe output should be identical.\n\nSigned-off-by: Samanta Navarro <ferivoz@riseup.net>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "53ef9adf451957f66fbf30a264654243bba0c814", "commit_date": "2022-08-28T21:45:44Z", "commit_message": "Use 'htole' for LE conversion in mkfs.fat.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bff7696312ca9b4ab39b2dfcd357d54c8382764", "commit_date": "2022-08-13T10:14:35Z", "commit_message": "manpages: Update mkfs.fat documentation for -s SECTOR-SIZE option\n\nClarify filesystem sector size.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c888797b1d84ffbb949f147e3116e8bfb2e145a7", "commit_date": "2022-07-25T11:11:44Z", "commit_message": "fatlabel: fix range check for signed characters\n\nchar may be either signed or unsigned and if it is signed the \"< 0x20\"\ncomparison will reject any values >= 0x80 even though these are valid\ncharacters in a label.\n\nCast to an unsigned type to ensure the full range of valid characters\nare accepted.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2d3125c4a74895eae1f66b93287031d340324524", "commit_date": "2022-03-16T00:25:49Z", "commit_message": "blkdev.c: Fix check for DIOCGDINFO\n\nDo not compile DIOCGDINFO code when DIOCGDINFO is not defined.\n\nFixes #177", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58e0c95106d43b0df9ccb8d1edef00949bc8b4e7", "commit_date": "2022-03-16T00:24:22Z", "commit_message": "fsck.fat: Add missing __attribute__ ((packed)) for disk structures\n\nIt is required for proper pointer aligning and also for preventing to fill\ngaps between structure members.\n\nFixes #176", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6319921da6b4ea895af8f406e47c634efbf3c66d", "commit_date": "2022-02-28T17:45:23Z", "commit_message": "DOC(fatlabel.8.in): minor spelling typos\n\nSpelling issues were reported by the manpage-l10n project.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae94d63c46092bf95683dd964e4c1dc5c393458e", "commit_date": "2022-02-22T22:16:08Z", "commit_message": "fsck.fat: Do not truncate files in cluster chain of size 2^32\n\nFile with size 4294967295 (2^32-1) is stored in cluster chain of size\n4294967296 (2^32). This cluster chain length cannot be represented in\n32-bit integer so explicitly cast calculation to 64-bit (long long)\ninteger.\n\nBefore this change all files with size of 4294967295 bytes were auto\ntruncated to zero size because cluster chain size overflowed to zero.\n\nThis change fixes it and valid files are not automatically truncated.\n\nFixes: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1001845", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1da41f0e70dcbfb874e8191c639b91fa58205ea4", "commit_date": "2022-01-22T14:55:15Z", "commit_message": "fsck.fat: Fix showing invalid label with non-printable characters\n\nShow non-printable characters of label in octal format \\ooo like when\nshowing file names.\n\nAlso explicitly mark zero byte as non-printable.\n\nIssue #172", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fed19c29ae86060550e40bcb656b673ac6ba61bc", "commit_date": "2021-11-19T23:56:24Z", "commit_message": "Add new test files into dist_check_DATA", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0eb5a33e08c09e2fd1631553bea6f51576cc93a3", "commit_date": "2021-11-18T23:42:21Z", "commit_message": "Add two tests: volumes with encryption.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6cc2a52e1468b8cb02e17e4fafb647481bfbabe4", "commit_date": "2021-11-17T22:01:06Z", "commit_message": "Rename lcase to ntbyte in the directory entry structure.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c3a71fd25cc9b4e32934d59c62eda7e8ede941c2", "commit_date": "2021-11-17T22:00:57Z", "commit_message": "Remove logic related to FAT_NO_83NAME. This flag wasn't implemented in the kernel.\nThis flag breaks compatibility with encryption metadata from Windows.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac4aa79cc264771e5c7e0cd8abea162ed3549042", "commit_date": "2021-09-19T19:56:00Z", "commit_message": "Fix typo in fat.c", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "77ffb87e8272760b3bb2dec8f722103b0effb801", "commit_date": "2021-08-20T14:30:15Z", "commit_message": "Fix building on macos", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9c2061ea27df341f87ddc96bc4abf2c32978d733", "commit_date": "2021-08-19T21:30:01Z", "commit_message": "mkfs.fat: Fix usage of function isspace()\n\nFunction isspace() takes int as an argument and expects either unsigned\nchar (values 0-255) or EOF (-1). So explicitly cast not-specified char type\nvariables to unsigned char types.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "58c0d808ca4e353e910779213d8dc711f239c6d2", "commit_date": "2021-08-19T21:29:42Z", "commit_message": "fsck.fat: Fix usage of function isspace()\n\nFunction isspace() takes int as an argument and expects either unsigned\nchar (values 0-255) or EOF (-1). So explicitly cast not-specified char type\nvariables to unsigned char types.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "20e4781174874fb34ef12c7c832a1cb386430000", "commit_date": "2021-08-19T21:28:58Z", "commit_message": "fatlabel: Fix usage of function isspace()\n\nFunction isspace() takes int as an argument and expects either unsigned\nchar (values 0-255) or EOF (-1). So explicitly cast not-specified char type\nvariables to unsigned char types.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7cf11f52df32956ee9781a18fb3e8114c988fa57", "commit_date": "2021-08-17T21:18:17Z", "commit_message": "mkfs.fat: start deprecating the --invariant flag\n\nThe invariant flag is superseded by SOURCE_DATE_EPOCH and the existing\nvolume-id (-i) flag. Start by removing --invariant from the help text.\nLater versions may print a warning, and finally remove the flag\ncompletely.\n\nSigned-off-by: Bj\u00f8rn Forsman <bjorn.forsman@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "94dc01ba0c1b644b12f28e23f68faac5d3c8ea88", "commit_date": "2021-08-17T21:18:17Z", "commit_message": "testsuite: use SOURCE_DATE_EPOCH\n\nInstead of the special --invariant flag, use SOURCE_DATE_EPOCH (and the\nvolume-id option) for reproducible build. (Plan for eventual removal of\nthe --invariant flag.)\n\nUse \"export SOURCE_DATE_EPOCH=1426325213; command\" instead of the\nsimpler \"SOURCE_DATE_EPOCH=1426325213 command\". Both forms work in bash,\nbut apparently only the \"export\" version works in dash. Run in a\nsubshell to not leak SOURCE_DATE_EPOCH.\n\nSigned-off-by: Bj\u00f8rn Forsman <bjorn.forsman@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8da7bc93315cb0c32ad868f17808468b81fa76ec", "commit_date": "2021-08-17T21:18:17Z", "commit_message": "Honor the SOURCE_DATE_EPOCH variable\n\nImplement the SOURCE_DATE_EPOCH specification[1] for reproducible\nbuilds. If SOURCE_DATE_EPOCH is set, use it as timestamp instead of the\ncurrent time.\n\n[1] https://reproducible-builds.org/specs/source-date-epoch/\n\nSigned-off-by: Bj\u00f8rn Forsman <bjorn.forsman@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f414e322da17c628a69ef61409b06b8f03e5a17c", "commit_date": "2021-06-12T13:00:14Z", "commit_message": "mkfs.fat: Fix upper limit for CHS overflow in MBR\n\nMaximal head value in MBR CHS is 255. But due to bug in MS-DOS which cause\nsystem crash when head value in MBR CHS is 255, it is common to use only\nmaximal head value 254.\n\nHead value in MBR CHS is zero indexed. So number of disk heads (stored in\nFAT boot sector) is maximal head value in MBR CHS + 1.\n\nSo fix upper limit for number of heads to 255 which can be still\nrepresented in MBR CHS without MS-DOS crash.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d733fb06a0941f54cc23bd7a1e531ec76f319ccb", "commit_date": "2021-06-09T19:09:55Z", "commit_message": "mkfs.fat: Print number of hidden sectors in decimal notation\n\nAll sector numbers are print in decimal notation, so do it also for number\nof hidden sectors.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5fe59602a937e5ce5f4890fd2e4a27ae50e2b082", "commit_date": "2021-02-25T13:48:35Z", "commit_message": "fsck.fat: Remove duplicate version line", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "49755b36c30254eff94245d02aca993f82215462", "commit_date": "2021-02-08T21:27:45Z", "commit_message": "tests: Fix running fsck tests outside of the source directory", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc6a8a4108aea5afdd88ab2caf01fe9055059d10", "commit_date": "2021-02-05T23:41:46Z", "commit_message": "travis: Include Ubuntu Bionic and Ubuntu Focal", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3c9a3f43d68d97342458976cff8a866c5acb038b", "commit_date": "2021-02-05T23:05:55Z", "commit_message": "fatlabel: Show argv[0] in usage", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9617a18f81193f57c41ee44e5c448d8bced7e909", "commit_date": "2021-02-05T23:05:33Z", "commit_message": "Show fsck.fat and fatlabel version like in mkfs.fat", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "483a44da9d1a1d0b4573033fd29185257f97ac94", "commit_date": "2021-02-05T23:01:34Z", "commit_message": "Append +git to version number", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}