{"master": [{"commit_oid": "8b600043624be978c2f83d257864cf1c956cd812", "commit_date": "2023-09-11T16:54:50Z", "commit_message": "parse: do not ask to run as root if not needed\n\nOn macOS it is expected to get the error:\n idVendor:  0x0B05  Can't get iManufacturer string: LIBUSB_ERROR_INVALID_PARAM\n idProduct: 0x1825  Can't get iProduct string: LIBUSB_ERROR_INVALID_PARAM\n\nRunning as root does not solve the problem. So need to fail and ask to\nre-run as root in that case.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe72a2e922274f5afc490b08a6c549985d6655d2", "commit_date": "2023-09-08T19:13:58Z", "commit_message": "Add Identiv uTrust Token Flex", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0895da5ec82e0e512d4342329b5ba1f106f5286e", "commit_date": "2023-09-07T18:10:02Z", "commit_message": "parse: remove output.txt after generation of output.bin\n\nThe real output is output.bin so we can remove the temporary file\noutput.txt when no more useful.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "789bccdee95e633d59d95f90baf8978536b3b1a3", "commit_date": "2023-09-07T17:02:26Z", "commit_message": "parse: correctly handle fread() errors\n\nIf no CCID reader is found then the size of the output.txt file is 0\nbytes and fread(3) returns 0 but that is not an error.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff9a39b3918bc0afe49a83994497a37a84f8add2", "commit_date": "2023-09-07T17:02:26Z", "commit_message": "parse: do not fail if \"output.txt\" does not exist\n\nWe open the file in read + write mode and create the file if it does not\nexist yet.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f2a0b3801612c727e097a759f9f75788915ca61", "commit_date": "2023-09-04T16:45:22Z", "commit_message": "Add Aktiv Rutoken SCR 3101 NFC Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "116dd4418c1ad242104231c5f67ff585da0bbc54", "commit_date": "2023-08-31T19:55:41Z", "commit_message": "Add ACS ACR40U ICC Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "249ebd367de2f8bdea39d9a9292f163be7947066", "commit_date": "2023-08-17T14:42:36Z", "commit_message": "Simulate ACS ACR1552 as multi-slot reader\n\nThis reader has 2 CCID interfaces.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67775961007e58a43c4219f0a9b11d5fff01fc14", "commit_date": "2023-08-16T09:10:36Z", "commit_message": "Append \"Reader\" for ACS ACR1552 1S CL & ACR1552 CL\n\nACS prefers to have the \"Reader\" added.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0f51f96189d202bf898191419c5d12eae28b07bf", "commit_date": "2023-08-16T09:09:08Z", "commit_message": "Remove \"Generated:\" field", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a6c764d75681f68d22dc20bf80ef7d309d73ccf", "commit_date": "2023-08-14T10:56:38Z", "commit_message": "Add ACS ACR1552 CL", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec6fbb81306a5df5fda978622deae18e3a340877", "commit_date": "2023-08-14T10:54:39Z", "commit_message": "Add ACS ACR1552 1S CL", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "283a35d91563c95c3ef097f19e3680e7bd477cd9", "commit_date": "2023-07-26T16:04:19Z", "commit_message": "Check num_altsetting before dereffing altsetting\n\nAccording to the libusb documentation,\nlibusb_interface::num_altsetting must be non-negative, hence it's\nallowed to be zero, in which case dereferencing\nlibusb_interface::altsetting isn't allowed. Fix the places in the CCID\ncode that do this without proper checks.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6bf9eb6220cc09221cb790b16cb4983152cfcc0c", "commit_date": "2023-06-02T12:08:41Z", "commit_message": "Add Dexon Tecnologias Digitais LTDA eSmartDX", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "efba56b1b02e4605f14362a47f75fb58ac3e07ad", "commit_date": "2023-06-01T19:50:26Z", "commit_message": "parse: create output.bin file", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "31acd97f991b202b4215306bc094d3b3d95795a8", "commit_date": "2023-06-01T16:50:25Z", "commit_message": "parse: Redirect output to a file descriptor", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "992026d7c7214f37a4351a4ae2e9057c8a50d57d", "commit_date": "2023-05-30T08:13:22Z", "commit_message": "Simulate ACS ACR1252IMP as multi-slot reader\n\nThis reader has 2 CCID interfaces.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "da8ef2eabf4f2e86a59c44ea185c5abf419d2a1e", "commit_date": "2023-05-30T08:13:22Z", "commit_message": "Simulate ACS ACR1252 as multi-slot reader\n\nThis reader has 2 CCID interfaces.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "baeab7622bfad20ebdd87484508e65d2fc6c1b73", "commit_date": "2023-05-30T08:13:22Z", "commit_message": "Simulate ACS ACR1251 as multi-slot reader\n\nThis reader has 2 CCID interfaces.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "70e71afb3c121ac63319e0a49d620c7e0eb19999", "commit_date": "2023-05-29T10:04:29Z", "commit_message": "Simulate ACS ACR1581 as multi-slot reader\n\nThis reader has 3 CCID interfaces.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bfdcbe4b6f02755727fae8ca38dac89881922b4c", "commit_date": "2023-05-29T10:01:58Z", "commit_message": "Update ACS_ACR1581 name\n\nUse ACS ACR1581 1S Dual Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "daeb4412ebe7fa7be13a3b53f70a7ff252e73a12", "commit_date": "2023-05-26T12:26:53Z", "commit_message": "Firmware update for HID Global OMNIKEY 3x21 Smart Card Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3f1067474e78ba8799b3af5a5e3200234e3fc51f", "commit_date": "2023-05-26T09:49:21Z", "commit_message": "Firmware update for HID Global OMNIKEY 5022 Smart Card Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "345f2a19bb46924bff1ef0c0ca72d88298559892", "commit_date": "2023-05-26T09:47:59Z", "commit_message": "Firmware update for HID OMNIKEY 5422", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "94696d7e6f10ab3132cfa440a8dd2a0b2ed2da70", "commit_date": "2023-05-25T19:41:13Z", "commit_message": "Add ACS ACR1581", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a994d47ac59905ec07fc5db9af938080180fd90", "commit_date": "2023-05-25T19:35:28Z", "commit_message": "Add Excelsecu Card reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cafe3e6431a57fc107d0856cea26530f614eca37", "commit_date": "2023-05-22T19:18:51Z", "commit_message": "ACS ACR40T ICC Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "998a6488481e3aaa455709c2427f9023e08d5ec4", "commit_date": "2023-05-19T09:15:00Z", "commit_message": "Simulate ACS WalletMate as multi-slot reader\n\nThis reader has 2 CCID interfaces.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bc8c51ed61cce2d5710ceee8b9a0ede95089e641", "commit_date": "2023-05-18T13:55:29Z", "commit_message": "Add ACS WalletMate 1S CL Reader", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1da440ab96b68ac00da564ef642b31cc34508baf", "commit_date": "2023-05-17T14:44:34Z", "commit_message": "Revert \"parse.c: fix build error\"\n\nThis reverts commit c72ec8f4fc46db2849a2a6ebd8be8e6559fabafc.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e1481aa3f0a1cfcd33994087df563b52ccfbf3e", "commit_date": "2023-05-17T14:36:56Z", "commit_message": "Revert \"Suspend/resume now simulates a card removal\"\n\nThis reverts commit a4401951b904707a4f93442e96ad7b137c5aa798.\n\nWe do not need this patch. We have 2 cases:\n1. the card is used by an application and is powered up\n\nAfter the PC resumes the card will be \"present\" and \"unpowered\" so a\ncard removal event will be generated because the state known by the CCID\ndriver was \"present\" and \"powered\".\n\n2. the card is NOT used by an application and is not powered (because of\n   pcsc-lite auto power off feature)\n\nAfter the PC resumes the card will be \"present\" and \"unpowered\" (as\npreviously) so the CCID driver will be happy with this state and will\nnot signal a card removal event.\nNo need to report a card removal event when the card is not used by an\napplication.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1a3a090ca7b6eb14f028e79c8f54bfcb95ee1bc", "commit_date": "2023-05-12T15:29:16Z", "commit_message": "Circle CCR7115 ICC firmware update", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c72ec8f4fc46db2849a2a6ebd8be8e6559fabafc", "commit_date": "2023-04-30T15:39:06Z", "commit_message": "parse.c: fix build error\n\n  CCLD     parse\nUndefined symbols for architecture x86_64:\n  \"_get_ccid_slot\", referenced from:\n      _InterruptRead in parse-ccid_usb.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a4401951b904707a4f93442e96ad7b137c5aa798", "commit_date": "2023-04-30T13:28:15Z", "commit_message": "Suspend/resume now simulates a card removal\n\nWhen a laptop (under GNU/Linux) is suspended and then resumed the libusb\ninterrupt read call fails with the error LIBUSB_TRANSFER_NO_DEVICE as if\nthe USB device had been removed.\n\nBut, because of USB-persist or something else, udev does not generate\nremove/insert USB events.\n\nThe card has been powered off (during suspend) but is still present in\nthe reader. It is reported as present but unpowered. We need to generate\na card removal event to force pcscd and the application to negociate a\nnew connection to the card.\n\nThis is done by setting the bPowerFlags field to MASK_POWERFLAGS_PUP to\nindicate to IFDHICCPresence() to report the card as absent on the first\ncall (see lines 2004-2017 of ccid_usb.c).\n\nWe now have:\n[resume from suspend]\n16178450 [139895155128000] ccid_usb.c:1532:InterruptRead() after (0) (5)\n00000008 [139895155128000] ccid_usb.c:1544:InterruptRead() Simulate card removal\n00000013 [139895155128000] ifdhandler.c:1955:IFDHICCPresence() usb:058f/9540:libudev:0:/dev/bus/usb/001/004 (lun: 0)\n00000011 [139895155128000] -> 000000 65 00 00 00 00 00 09 00 00 00\n00001705 [139895155128000] <- 000000 81 00 00 00 00 00 09 01 00 01\n00000018 [139895155128000] ifdhandler.c:2081:IFDHICCPresence() Card absent\n\nThe card is reported as absent even if bmICCStatus=01 indicates: ICC\npresent and inactive (no power).\n\n00000007 [139895155128000] eventhandler.c:358:EHStatusHandlerThread() Card Removed From Alcor Micro AU9540 00 00\n00000009 [139895155128000] ifdhandler.c:318:IFDHPolling() usb:058f/9540:libudev:0:/dev/bus/usb/001/004 (lun: 0) 600000 ms\n00000018 [139895155128000] ccid_usb.c:1486:InterruptRead() before (0), timeout: 600000 ms\n00001706 [139895155128000] ccid_usb.c:1532:InterruptRead() after (0) (0)\n00000010 [139895155128000] NotifySlotChange: 50 03\n00000003 [139895155128000] ifdhandler.c:1955:IFDHICCPresence() usb:058f/9540:libudev:0:/dev/bus/usb/001/004 (lun: 0)\n00000003 [139895155128000] -> 000000 65 00 00 00 00 00 0A 00 00 00\n00000799 [139895155128000] <- 000000 81 00 00 00 00 00 0A 01 00 01\n00000011 [139895155128000] ifdhandler.c:2081:IFDHICCPresence() Card present\n\nSame status for bmICCStatus but this time the card is reported present.\n\npcscd will then generate a power up and report a SCARD_W_REMOVED_CARD\nerror where needed.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f51f8f1e7e2c568f58c33c1c28446a74496f77a", "commit_date": "2023-04-22T10:25:37Z", "commit_message": "Disable USB-persist for CCID devices\n\nThe Linux kernel tries to keep the USB connection during suspend/resume\ncycles. This is a bad idea if the reader/token is unpluged while the\ncomputer is suspended.\nMore documentation is available at\nhttps://docs.kernel.org/driver-api/usb/persist.html\n\nIf a CCID reader (including a composite one) is disconnected and\nreconnected while the computer is suspended then the USB device will be\nconsidered removed and connected again.\nPC/SC applications will have to reconnect.\n\nCloses: https://github.com/LudovicRousseau/PCSC/issues/154\n\"USB resets leave the reader connection in a broken state #154\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "93bf19d1ae8107ae46a8d9979274277e2f4f8c34", "commit_date": "2023-04-22T10:25:37Z", "commit_message": "macOS: complain if libusb is not a Universal Binary\n\nmacOS now uses Universal Binary with arm64 and x86_64.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45f359cba909b816eed3fc140e10b0f2f93a6e37", "commit_date": "2023-04-22T10:25:37Z", "commit_message": "AUTHORS: add authors of src/openct & src/towitoko", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7235e242a77dd873eca9309130e5821743ef06b7", "commit_date": "2023-04-22T10:25:37Z", "commit_message": "Add GHI NC001", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2951a306bb0e2faffa5537283c0b6045ebf98f57", "commit_date": "2023-04-22T10:25:37Z", "commit_message": "Add CIRIGHT ONE PASS U2F", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8eef43d44b17e5da7a19eb780abc8eae0c43f853", "commit_date": "2023-03-08T14:09:19Z", "commit_message": "github actions: remove codespell", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e340209e1d3281ea1d70140e93a64b1d12cdfdcb", "commit_date": "2023-03-08T14:02:55Z", "commit_message": "github actions: move to actions/checkout@v3\n\nFixes:\nbuild\nNode.js 12 actions are deprecated. Please update the following actions to use Node.js 16: actions/checkout@v2. For more information see: https://github.blog/changelog/2022-09-22-github-actions-all-actions-will-begin-running-on-node16-instead-of-node12/.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "194aae51724c12fa4451288ab9a861b41e0c1552", "commit_date": "2023-03-08T14:02:55Z", "commit_message": "Add WCMi SD5931", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1363cd7e29c572cba25406c4aa844cf7dccd1cf0", "commit_date": "2023-03-08T14:02:55Z", "commit_message": ".gitignore: ignore all *.lo and *.o", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eec7cdf03dda2bd26e320ead73b91da5a9d86443", "commit_date": "2023-03-02T20:14:11Z", "commit_message": "configure.ac: fail if flex is not found\n\nWe use the same mechanism in PCSC 3f89340785934785cf1490d3e788eefb25c50a69", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5469f5c468e36d5915a146e3402e9e2ebdf14c09", "commit_date": "2023-02-10T18:13:35Z", "commit_message": "github actions: codespell: Use ignore_words_list", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40abcdcdc44eafa600a8fca479e31dcabc2487fe", "commit_date": "2023-02-09T18:00:56Z", "commit_message": "codespell: Kobil_mIDentity_switch.c\n\nError: ./contrib/Kobil_mIDentity_switch/Kobil_mIDentity_switch.c:53: Initally ==> Initially", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "928806243dbf2bd1682d05299bbb6a9a60557ee0", "commit_date": "2023-02-09T18:00:14Z", "commit_message": "codespell: atr.c\n\nError: ./src/towitoko/atr.c:93: enought ==> enough", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc88e9990c5322e6f7060ecbdc6913fd11310fc1", "commit_date": "2023-02-09T17:59:41Z", "commit_message": "codespell: atr.h\n\nError: ./src/towitoko/atr.h:38: Paramenters ==> Parameters\nError: ./src/towitoko/atr.h:41: Maximun ==> Maximum\nError: ./src/towitoko/atr.h:66: paramenters ==> parameters\nError: ./src/towitoko/atr.h:95: declaraton ==> declaration", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fa1af40993c8d2a002db355cecbefbb364f19364", "commit_date": "2023-02-09T17:57:32Z", "commit_message": "codespell: pps.c\n\nError: ./src/towitoko/pps.c:39: funtions ==> functions\nError: ./src/towitoko/pps.c:83: handsake ==> handshake", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a69d8f589da465d1508437c54cc74c19906c1154", "commit_date": "2023-02-09T17:56:53Z", "commit_message": "codespell: pps.h\n\nError: ./src/towitoko/pps.h:33: Comunication ==> Communication", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "06a514d868f1154694a7fb88fdb2efc1223634a3", "commit_date": "2023-02-09T17:55:53Z", "commit_message": "codespell: proto-t1.c\n\nError: ./src/openct/proto-t1.c:120: parmaters ==> parameters\nError: ./src/openct/proto-t1.c:710: bloc ==> block", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "22bf0d8bd80659aae9986f0203cfac476bbb5523", "commit_date": "2023-02-09T17:54:44Z", "commit_message": "codespell: Makefile.am\n\nError: ./src/Makefile.am:103: explicitely ==> explicitly", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b001d791db5e8ef5c08fc1c1550a0024349643e", "commit_date": "2023-02-09T17:54:13Z", "commit_message": "codespell: commands.c\n\nError: ./src/commands.c:386: occured ==> occurred\nError: ./src/commands.c:756: occured ==> occurred\nError: ./src/commands.c:2150: recieved ==> received\nError: ./src/commands.c:2161: recieved ==> received\nError: ./src/commands.c:2392: interger ==> integer", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0819a6097927bedf6063a8f38a78eb17b4fd0cae", "commit_date": "2023-02-09T17:52:53Z", "commit_message": "codespell ifdhandler.c\n\nError: ./src/ifdhandler.c:262: independance ==> independence\nError: ./src/ifdhandler.c:296: disapeared ==> disappeared\nError: ./src/ifdhandler.c:867: explicitely ==> explicitly\nError: ./src/ifdhandler.c:920: bellow ==> below\nError: ./src/ifdhandler.c:959: negociable ==> negotiable\nError: ./src/ifdhandler.c:1172: negociated ==> negotiated\nError: ./src/ifdhandler.c:1963: independant ==> independent\nError: ./src/ifdhandler.c:2271: DATAS ==> DATA\nError: ./src/ifdhandler.c:2293: Caracter ==> Character", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9adad80c6fe2905e225399fefaf563d5a08f4b67", "commit_date": "2023-02-09T17:50:14Z", "commit_message": "codespell: ccid_usb.c\n\nError: ./src/ccid_usb.c:735: informations ==> information\nError: ./src/ccid_usb.c:1059: ressources ==> resources\nError: ./src/ccid_usb.c:1329: choosed ==> chose, chosen\nError: ./src/ccid_usb.c:1408: endianess ==> endianness\nError: ./src/ccid_usb.c:1906: Broacast ==> Broadcast", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9f6d0dc7471e9a6f39a688e3b30e8946cba2837e", "commit_date": "2023-02-09T17:48:44Z", "commit_message": "codespell: ccid_serial.c\n\nError: ./src/ccid_serial.c:883: anwser ==> answer\nError: ./src/ccid_serial.c:925: ressources ==> resources", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "01ea8ff52c94346c4500b7b696587f17670bb575", "commit_date": "2023-02-09T17:47:33Z", "commit_message": "codespell: defs.h\n\nError: ./src/defs.h:78: formating ==> formatting", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "aef91768608314ce696b557215a45283544f8c49", "commit_date": "2023-02-09T17:46:48Z", "commit_message": "codespell: Info.plist.src\n\nError: ./src/Info.plist.src:90: retreive ==> retrieve", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8a87e664b38b4fe037d55ca03e27755c0b01bf8", "commit_date": "2023-02-09T17:44:38Z", "commit_message": "codespell: README.md\n\nError: ./README.md:471: suport ==> support\nError: ./README.md:687: retreive ==> retrieve\nError: ./README.md:743: aplications ==> applications\nError: ./README.md:909: bu ==> by, be, but, bug, bun, bud, buy, bum\nError: ./README.md:910: bu ==> by, be, but, bug, bun, bud, buy, bum\nError: ./README.md:1352: negociation ==> negotiation\nError: ./README.md:1478: timout ==> timeout\nError: ./README.md:1511: swicth ==> switch", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c2a1e0b9d1a10e43d905617d1371adf550b46d1", "commit_date": "2023-02-09T17:42:02Z", "commit_message": "codespell: SCARDGETATTRIB.md\n\nError: ./SCARDGETATTRIB.md:70: unsing ==> using, unsigned", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c2b84e6ff3bc4e9ab39212abf5cd8c9799003da", "commit_date": "2023-02-09T17:41:08Z", "commit_message": "codespell: INSTALL\n\nError: ./INSTALL:35: explicitely ==> explicitly\nError: ./INSTALL:42: builing ==> building\nError: ./INSTALL:125: priviledges ==> privileges", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3184c40a7225a1fd69b739e2851e9d46a69f79e2", "commit_date": "2023-02-09T17:39:41Z", "commit_message": "codespell: configure.ac\n\nError: ./configure.ac:268: ressources ==> resources", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f9e58a35e51eb9af32468fe365d7bec6f9e9bb26", "commit_date": "2023-02-09T17:37:27Z", "commit_message": "github actions: add codespell check", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fe3d81ff03933dc98f6a08ad8fed3e2c1d493253", "commit_date": "2023-02-04T17:26:09Z", "commit_message": "Do not cancel the interrupt USB read more than once\n\nInterruptStop() is called by SCardDisconnect() to return to a normal\ntimeout.\n\nIf another SCardDisconnect() is called while a first one is running then\nwe may have troubles from the libusb library.\nSomething like a crash with:\npcscd: /var/tmp/portage/dev-libs/libusb-1.0.26/work/libusb-1.0.26/libusb/os/threads_posix.h:50: usbi_mutex_unlock: Assertion `pthread_mutex_unlock(mutex) == 0' failed.\n\nThe libusb transfer handle (.polling_transfer) is now reset when used.\n\nThanks to Christian Schaubschl\u00e4ger for the bug report.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dc3961f65321dae79c8d0df3c07dfb41efa90cb1", "commit_date": "2023-02-04T15:03:18Z", "commit_message": "IFDHPowerICC: fix a useless double power down\n\nThe patch in abb793b270704b0a33f8027253015fc82abbf72e (Nov 2021) was not\ncorrect. CmdPowerOff() was called twice.\n\nThe log was:\n00000006 [140455849096896] ifdhandler.c:1246:IFDHPowerICC() action: PowerDown, usb:058f/9540:libudev:0:/dev/bus/usb/003/002 (lun: 0)\n00000007 [140455849096896] -> 000000 63 00 00 00 00 00 10 00 00 00\n00041118 [140455849096896] <- 000000 81 00 00 00 00 00 10 01 00 01\n00000024 [140455849096896] -> 000000 63 00 00 00 00 00 11 00 00 00\n00041056 [140455849096896] <- 000000 81 00 00 00 00 00 11 01 00 01\n00000023 [140455849096896] eventhandler.c:482:EHStatusHandlerThread() powerState: POWER_STATE_UNPOWERED", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ef2100e6d5bfc6b29df46561147c03516e435b6d", "commit_date": "2023-02-03T15:28:07Z", "commit_message": "INSTALL: improve the \"Installation from source\"\n\nFixes: https://github.com/LudovicRousseau/CCID/issues/107", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}