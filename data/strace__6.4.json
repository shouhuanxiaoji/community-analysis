{"esyr/fixes-ng": [{"commit_oid": "8e549d1b575b58a48139e18ba33d34ff0db2356e", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "rtnl_link, nlattr: generalise update_ctx_str", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7440c47f27eaac1c5d559520cedcddcd98de9db7", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "macros: mention --enable-bundled=yes in CHECK_{TYPE,IOCTL}_SIZE assert messages\n\nThese macros are used to check that the types provided in the kernel\nheaders have the expected characteristics, and most of them (if not all)\nare bundled with strace itself, so it might have sense to provide a hint\nto people who are not interested in waiting for the upstream to accommodate\nfor the UAPI changes and just want to get strace built that may\nbe of some help and save some time and effort spent on finding the option\nthemselves.\n\n* src/macros.h (CHECK_TYPE_SIZE, CHECK_IOCTL_SIZE): mention\n--enable-bundled=yes configure option in the assertion failure message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "290d3eb81f3a69e97e983235f069451c759e02de", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "strace.spec: try to comply with the new Fedora package license policy\n\nNew Fedora policies[1][2] require the usage of the SPDX identifiers\nwith pretty specific syntax[3], and [4] requires refraining from any\n\"license analysis\" and listing all the licenses verbatim (which is especially\nfun with all the bundled sources), so here we are.  The %changelog entry\nmention is added per [5].\n\n[1] https://fedoraproject.org/wiki/Changes/SPDX_Licenses_Phase_2\n[2] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/\n[3] https://docs.fedoraproject.org/en-US/legal/license-field/#_conjunctive_and_licensing\n[4] https://docs.fedoraproject.org/en-US/legal/license-field/#_no_effective_license_analysis\n[5] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/#_changelog_entry\n\n* strace.spec.in [0%{?fedora} >= 35 || 0%{?centos} >= 9 || 0%{?rhel} >= 9]\n(License): Update the license expression and add an appropriate comment.\n(%changelog): Mention it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "439b3251f9b7f388f5bdee11137a1c9611d55e4b", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "print_utils: add missing license header", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1bf5cf91b7a0a8b5088cbb084af4d324f303c196", "commit_date": "2023-07-11T08:22:19Z", "commit_message": "syscall: keep the s_prev_ent if the current syscall is restart_syscall\n\nIt allows showing the original syscall in the cases where a syscall\ninterrupted repeatedly and avoid \"resuming interrupted restart_syscall\":\n\n    clock_nanosleep(CLOCK_REALTIME, 0, {tv_sec=0, tv_nsec=222222222}, {tv_sec=0, tv_nsec=211140476}) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted clock_nanosleep ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted restart_syscall ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    [...]\n\n* src/syscall.c (syscall_exiting_trace): store either tcp->s_prev_ent\nor tcp->s_ent as a new value for tcp->s_prev_ent depending on whether\nthe current sen is SEN_restart_syscall.\n* tests/restart_syscall.c: Make the interval timer trigger repeatedly,\ncheck for the absence of \"resuming interrupted restart_syscall\" output.\n\nReferences: https://bugzilla.redhat.com/2148516", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c163706715eb23b3609b1e02e1979fb9c8c435", "commit_date": "2023-06-30T08:00:00Z", "commit_message": "exec_or_die: install seccomp filter before setreuid\n\nWhile we strive to install the seccomp filter as late as possible before\nthe execve call, in --user mode this has an undesired side effect:\nthe setreuid call strips CAP_SYS_ADMIN, making PR_SET_NO_NEW_PRIVS call\na necessity, which results to the tracee less privileged than in the\ncase when --seccomp-bpf mode was not enabled.\n\nWorkaround this by moving the installation of the seccomp filter before\nthe setreuid call in --user mode.\n\n* src/strace.c (maybe_init_seccomp_filter): New function, a thin wrapper\naround init_seccomp_filter.\n(exec_or_die): Invoke maybe_init_seccomp_filter instead of\ninit_seccomp_filter before the execve call, limit the invocation\nto username == NULL case.\n(exec_or_die) <username != NULL>: Invoke maybe_init_seccomp_filter\nbefore the setreuid call.\n\nResolves: https://github.com/strace/strace/issues/126", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9df295d4b03df101b52598c6021074c0d9ff6fe3", "commit_date": "2023-06-29T08:00:00Z", "commit_message": "exec_or_die: remove incomprehensible setreuid invocation\n\nSince the very first commit setreuid is invoked in geteuid() != 0\ncase without any plausible explanation.  It makes little sense to\ninstall strace as a setuid-nonroot executable in the first place,\nand even in that case it is unclear why one would like to drop the\neffective nonzero uid before the execve.\n\n* src/strace.c (exec_or_die) <!username && geteuid() != 0>: Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59436f2e193107519282ea128ce23a7f6a8cb034", "commit_date": "2023-06-28T08:00:00Z", "commit_message": "exec_or_die: restore SIGCHLD handler earlier\n\nWhen --daemonize mode is not enabled, the disposition of SIGCHLD is not\nrelevant to the child process, so in that case sigaction can be called\nbefore the PTRACE_TRACEME call.\n\n* src/strace.c (exec_or_die) <!daemonized_tracer>: Restore SIGCHLD\nhandler before PTRACE_TRACEME.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "400086936db46299e4aca35ff739d0afa3dda506", "commit_date": "2023-06-27T08:00:00Z", "commit_message": "Post-release administrivia\n\n* NEWS: Add a header line for the next release.\n* debian/changelog.in: Add a changelog entry for 6.4-1.\n* strace.spec.in: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}], "esyr/6.5": [{"commit_oid": "0d39aaf645b691cdabff55f4b2ba9982050e585d", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "tests/sched_xetaffinity: do not assume that cpuset_size is big enough\n\nCommit v5.15~160 (\"tests/sched_xetaffinity: add a check\nfor a non-properly-sized CPU set\") added a check that implicitly assumed\nthat cpuset_size is at least 8, which is not the case on 32-bit userspace\nwith less than 33 CPUs, and that has led to skipping the test altogether\non such systems due to syscall returning EFAULT.  Fix it by allocating\na separate set of the expected size and perform the check on it.\n\n* tests/sched_xetaffinity.c (main): Add crop_size constant, set to 8;\nadd crop_cpuset variable;  use them instead of cpuset_size and cpuset,\nrespectively, in the non-properly-sized CPU set check.\n\nFixes: v5.15~160 \"tests/sched_xetaffinity: add a check for a non-properly-sized CPU set\"\nReported-by: Sven Schnelle <svens@linux.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9474c474a04576971067a32507fb5a0251b5b762", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "ptp: provide additional information about max_phase_adj\n\nSince we know that it is in nanosecond, we can provide a comment to make\nit more human-readable.\n\n* src/ptp.c (ptp_ioctl): Use PRINT_FIELD_TICKS_D instead\nof PRINT_FIELD_D for max_phase_adj field printing.\n* tests/ioctl_ptp.c: Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0985c2978efb2c40b4c78807678cba8c9a31d3c", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "util: add print_ticks_d and PRINT_FIELD_TICKS{,_D}\n\nprint_ticks_d is similar to print_ticks, but handles signed numbers.\n\n* src/defs.h (print_ticks_d): New declaration.\n* src/util.c (print_ticks_d): New function.\n* src/print_fields.h (PRINT_FIELD_TICKS, PRINT_FIELD_TICKS_D): New\nmacros, wrappers for print_ticks and print_ticks_d, respectivaly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b997b824a97900026222c19683cc1eb2f8cc499", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "strace.spec: try to comply with the new Fedora package license policy\n\nNew Fedora policies[1][2] require the usage of the SPDX identifiers\nwith pretty specific syntax[3], and [4] requires refraining from any\n\"license analysis\" and listing all the licenses verbatim (which is especially\nfun with all the bundled sources), so here we are.  The %changelog entry\nmention is added per [5].\n\n[1] https://fedoraproject.org/wiki/Changes/SPDX_Licenses_Phase_2\n[2] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/\n[3] https://docs.fedoraproject.org/en-US/legal/license-field/#_conjunctive_and_licensing\n[4] https://docs.fedoraproject.org/en-US/legal/license-field/#_no_effective_license_analysis\n[5] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/#_changelog_entry\n\n* strace.spec.in [0%{?fedora} >= 35 || 0%{?centos} >= 9 || 0%{?rhel} >= 9]\n(License): Update the license expression and add an appropriate comment.\n(%changelog): Mention it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "472296f81513976c29a280825d7ca57bda18c862", "commit_date": "2023-08-10T08:00:00Z", "commit_message": "strace.spec.in: configure using --enable-bundled=yes\n\n* strace.spec.in (%build): Pass --enable-bundled=yes to %configure\nso that package builds wouldn't break unexpectedly when unreleased\nkernel headers are installed into the build environment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "299f77b2ff7d9e95e79ce86ebf22ad0b8957a1c1", "commit_date": "2023-08-09T08:00:00Z", "commit_message": "xlat: remove BPF_F_PATH_FD from bpf_map_flags\n\nBPF_F_PATH_FD is applicable to BPF_OBJ_PIN and BPF_OBJ_GET commands\nonly, and therefore should be listed in bpf_file_flags only.\n\nThis reverts commit c16832d01c09e8c249082a7fb04fc9f06fc9d00d.\n\n* src/xlat/bpf_map_flags.in (BPF_F_PATH_FD): Remove.\n* tests/bpf.c: Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a8effeb1bf6ac1ec4b14dd381e6e9d28000b46a", "commit_date": "2023-08-08T08:00:00Z", "commit_message": "bpf: update decoding of BPF_OBJ_PIN and BPF_OBJ_GET commands\n\n* src/print_fields.h (PRINT_FIELD_DIRFD): New macro.\n* src/xlat/bpf_file_flags.in: New file.\n* src/bpf_attr.h (BPF_OBJ_PIN_struct): Add path_fd field introduced\nby Linux commit v6.5-rc1~163^2~215^2~9.\n(BPF_OBJ_PIN_struct_size, expected_BPF_OBJ_PIN_struct_size): Update.\n* src/bpf.c: Include \"xlat/bpf_file_flags.h\".\n(BEGIN_BPF_CMD_DECODER(BPF_OBJ_PIN)): Decode path_fd.\n* tests/bpf.c: Include \"xmalloc.h\".\n(at_fdcwd_str): New variable.\n(main): Initialize it.\n(init_BPF_OBJ_PIN_str): New function.\n(BPF_OBJ_PIN_checks): Check path_fd decoding.\n* tests/bpf-success-long-y.c (YFLAG): Define.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c86e6ef1f3bbd8ef20a700a3f7d34d35bd8fe6a", "commit_date": "2023-08-07T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_PROG_BIND_MAP command\n\n* src/bpf_attr.h (BPF_PROG_BIND_MAP_struct): New structure introduced\nby Linux commit v5.10-rc1~107^2~169^2~20^2~3.\n(BPF_PROG_BIND_MAP_struct_size, expected_BPF_PROG_BIND_MAP_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_PROG_BIND_MAP)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_PROG_BIND_MAP).\n(BPF_PROG_BIND_MAP_checks): New checks array.\n(main) <checks>: Add CHK(BPF_PROG_BIND_MAP).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43dff64a2268c744dab511aeb81d1377b93a4569", "commit_date": "2023-08-06T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_LINK_DETACH command\n\n* src/bpf_attr.h (BPF_LINK_DETACH_struct): New structure introduced\nby Linux commit v5.9-rc1~133^2~23^2~6^2~4.\n(BPF_LINK_DETACH_struct_size, expected_BPF_LINK_DETACH_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_LINK_DETACH)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_LINK_DETACH).\n(BPF_LINK_DETACH_checks): New checks array.\n(main) <checks>: Add CHK(BPF_LINK_DETACH).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "081bb9d3e2f04fcd1e1e059e5354457b8f08baa8", "commit_date": "2023-08-03T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_ITER_CREATE command\n\n* src/bpf_attr.h (BPF_ITER_CREATE_struct): New structure introduced\nby Linux commit v5.8-rc1~165^2~185^2~16^2~15.\n(BPF_ITER_CREATE_struct_size, expected_BPF_ITER_CREATE_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_ITER_CREATE)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_ITER_CREATE).\n(BPF_ITER_CREATE_checks): New checks array.\n(main) <checks>: Add CHK(BPF_ITER_CREATE).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "685d0f22fb3e1b8d42b1b1e892caafe6ba4c8ef8", "commit_date": "2023-08-02T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_ENABLE_STATS command\n\n* src/xlat/bpf_stats_type.in: New file.\n* src/bpf_attr.h (BPF_ENABLE_STATS_struct): New structure introduced\nby Linux commit v5.8-rc1~165^2~343^2~3^2~2.\n(BPF_ENABLE_STATS_struct_size, expected_BPF_ENABLE_STATS_struct_size):\nNew macros.\n* src/bpf.c: Include \"xlat/bpf_stats_type.h\".\n(BEGIN_BPF_CMD_DECODER(BPF_ENABLE_STATS)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_ENABLE_STATS).\n(BPF_ENABLE_STATS_checks): New checks array.\n(main) <checks>: Add CHK(BPF_ENABLE_STATS).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "433c742a854b15adc47deb28fa4d9ada95806833", "commit_date": "2023-08-01T08:00:00Z", "commit_message": "Implement decoding of fchmodat2 syscall\n\nThis new syscall is expected to be introduced in Linux kernel v6.6-rc1.\n\n* src/xlat/fchmodat_flags.in: New file.\n* src/chmod.c: Include <linux/fcntl.h> and \"xlat/fchmodat_flags.h\".\n(decode_fchmodat): New function.\n(SYS_FUNC(fchmodat)): Use it.\n(SYS_FUNC(fchmodat2)): New function.\n* src/pathtrace.c (pathtrace_match_set): Handle SEN_fchmodat2.\n* src/linux/generic/syscallent-common.h [BASE_NR + 452]: Wire up\nfchmodat2.\n* tests/fchmodat2.c: New file.\n* tests/pure_executables.list: Add fchmodat2.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (fchmodat2, fchmodat2--secontext,\nfchmodat2--secontext_full, fchmodat2--secontext_full_mismatch,\nfchmodat2--secontext_mismatch): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c3127cf6d0e19ec1d2c8519dc11f71549080e5b7", "commit_date": "2023-07-31T08:00:00Z", "commit_message": "tests/times: use libc times instead of raw syscall on s390\n\nThe libc implementation of times(2) has additional handling\nfor error codes compared to the raw syscall. Therefore\nuse the libc implementation on s390 like it is already done\nfor MIPS.\n\nSigned-off-by: Sven Schnelle <svens@linux.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "207baad9c5b913b5cfb685711d353e0d39ea8d42", "commit_date": "2023-07-31T08:00:00Z", "commit_message": "Implement decoding of cachestat syscall\n\nThis new syscall was introduced by Linux kernel commit\nv6.5-rc1~176^2~364.\n\n* src/cachestat.c: New file.\n* src/cachestat.h: Likewise.\n* src/Makefile.am (libstrace_a_SOURCES): Add cachestat.c and\ncachestat.h.\n* src/linux/generic/syscallent-common.h [BASE_NR + 451]: Wire up\ncachestat.\n* tests/cachestat.c: New file.\n* tests/cachestat-P.c: Likewise.\n* tests/cachestat-fd.c: Likewise.\n* tests/cachestat-success.c: Likewise.\n* tests/pure_executables.list: Add cachestat, cachestat-P, cachestat-fd,\nand cachestat-success.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (cachestat, cachestat-P, cachestat-fd,\ncachestat-success): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b074f77088ece7360fc7cec62a641955a40cb539", "commit_date": "2023-07-30T08:00:00Z", "commit_message": "xlat: update V4L2_* constants\n\n* src/xlat/v4l2_control_ids.in (V4L2_CID_MPEG_VIDEO_AV1_PROFILE,\nV4L2_CID_MPEG_VIDEO_AV1_LEVEL): New constants introduced by Linux kernel\ncommit v6.5-rc1~48^2~27.\n* src/xlat/v4l2_control_types.in (V4L2_CTRL_TYPE_AV1_SEQUENCE,\nV4L2_CTRL_TYPE_AV1_TILE_GROUP_ENTRY, V4L2_CTRL_TYPE_AV1_FRAME,\nV4L2_CTRL_TYPE_AV1_FILM_GRAIN): Likewise.\n* src/xlat/v4l2_pix_fmts.in (V4L2_PIX_FMT_AV1_FRAME): Likewise.\n(V4L2_PIX_FMT_NV15_4L4): New constant introduced by Linux kernel commit\nv6.5-rc1~48^2~23.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb9cd896533b049cd51c6e83da94cc81180268fd", "commit_date": "2023-07-29T08:00:00Z", "commit_message": "xlat: update PR_* constants\n\n* src/xlat/prctl_options.in (PR_RISCV_V_SET_CONTROL,\nPR_RISCV_V_GET_CONTROL): New constants introduced by Linux kernel\ncommit v6.5-rc1~120^2~17^2~6.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee6e2d4ad7d719358f0bbef062c91e7d1797a92f", "commit_date": "2023-07-28T08:00:00Z", "commit_message": "xlat: update NFT_MSG_* constants\n\n* src/xlat/nf_nftables_msg_types.in (NFT_MSG_GETSETELEM_RESET):\nNew constant introduced by Linux kernel commit v6.5-rc1~163^2~9^2~1.\n* src/netlink.c (decode_nlmsg_flags_netfilter): Handle it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e18ab1472ab4aa10e7cd3fad322ec4250bf1dc24", "commit_date": "2023-07-27T08:00:00Z", "commit_message": "xlat: update MOVE_MOUNT_* constants\n\n* src/xlat/move_mount_flags.in (MOVE_MOUNT_BENEATH): New constant\nintroduced by Linux kernel commit v6.5-rc1~243^2.\n* tests/move_mount.c: Add checks, update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcb9f3867d26fe22790137c7993333fd00c85f40", "commit_date": "2023-07-26T08:00:00Z", "commit_message": "xlat: update KVM_* constants\n\n* src/xlat/kvm_cap.in (KVM_CAP_ARM_EAGER_SPLIT_CHUNK_SIZE,\nKVM_CAP_ARM_SUPPORTED_BLOCK_SIZES): New constants introduced\nby Linux kernel commit v6.5-rc1~71^2~7^2~7^2~8.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cd69544d82687c83bff489e77ae5ffa9de3243c", "commit_date": "2023-07-25T08:00:00Z", "commit_message": "xlat: update IORING_SETUP_* constants\n\n* src/xlat/uring_setup_flags.in (IORING_SETUP_SINGLE_ISSUER):\nNew constant introduced by Linux kernel commit v6.0-rc1~181^2~92.\n(IORING_SETUP_DEFER_TASKRUN): New constant introduced by Linux kernel\ncommit  v6.1-rc1~135^2~51.\n(IORING_SETUP_NO_MMAP): New constant introduced by Linux kernel\ncommit v6.5-rc1~235^2~32.\n(IORING_SETUP_REGISTERED_FD_ONLY): New constant introduced\nby Linux kernel commit v6.5-rc1~235^2~31.\n* tests/io_uring_setup.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7521abf40a854d7f9cdcef02d1d4a9bab4a7c1b", "commit_date": "2023-07-24T08:00:00Z", "commit_message": "xlat: update AT_* constants\n\n* src/xlat/name_to_handle_at_flags.in (AT_HANDLE_FID): New constant\nintroduced by Linux kernel v6.5-rc1~146^2~3.\n* tests/file_handle.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "902370de2f771d9af23210be2f10ed7cf613798f", "commit_date": "2023-07-23T08:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_PPC_DEXCR): New constant\nintroduced by Linux kernel commit v6.5-rc1~121^2~37.\n(NT_PPC_HASHKEYR): New constant introduced by Linux kernel commit\nv6.5-rc1~121^2~36.\n(NT_RISCV_VECTOR): New constant introduced by Linux kernel commit\nv6.5-rc1~120^2~17^2~15.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c16832d01c09e8c249082a7fb04fc9f06fc9d00d", "commit_date": "2023-07-22T08:00:00Z", "commit_message": "xlat: update BPF_* constants\n\n* src/xlat/bpf_map_flags.in (BPF_F_PATH_FD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~215^2~9.\n* tests/bpf.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2543bc6b03bffe658b6358350aa5b2bbecbd4b87", "commit_date": "2023-07-21T08:00:00Z", "commit_message": "tests: explicitly check decoding of SCM_CREDENTIALS control messages\n\n* tests/scm_credentials.c: New file.\n* tests/pure_executables.list: Add scm_credentials.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (scm_credentials): New test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "329f107567a44ed74c7d2da003d96ae1714235ad", "commit_date": "2023-07-20T08:00:00Z", "commit_message": "net: implement decoding of SCM_PIDFD control messages\n\n* src/xlat/scmvals.in (SCM_PIDFD): New constant introduced by Linux\nkernel commit v6.5-rc1~163^2~115^2~3.\n* src/msghdr.c (print_scm_pidfd): New function.\n(cmsg_socket_printers) <SCM_PIDFD>: Use it.\n* tests/scm_pidfd.c: New file.\n* tests/scm_pidfd-success.c: Likewise.\n* tests/pure_executables.list: Add scm_pidfd and scm_pidfd-success.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (scm_pidfd, scm_pidfd-succes): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76ec0783c51339eb895026344f9f49c71528b3cb", "commit_date": "2023-07-19T08:00:00Z", "commit_message": "net: implement decoding of SO_PEERPIDFD socket option\n\n* src/xlat/sock_options.in (SO_PEERPIDFD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~115^2~2.\n* src/net.c (print_get_fd): New function.\n(print_getsockopt) <SO_PEERPIDFD>: Use it to print SO_PEERPIDFD.\n* tests/sockopt-sol_socket.c (main): Update unknown socket option.\n* tests/so_peerpidfd.c: New file.\n* tests/pure_executables.list: Add so_peerpidfd.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (so_peerpidfd): New test.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45717b56eba7c346e75a84e18c8c38918b1653bf", "commit_date": "2023-07-18T08:00:00Z", "commit_message": "net: implement decoding of SO_PASSPIDFD socket option\n\n* src/xlat/sock_options.in (SO_PASSPIDFD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~115^2~3.\n* src/net.c (print_getsockopt, print_setsockopt) <SO_PASSPIDFD>: Print it.\n* tests/sockopt-sol_socket.c (main): Test it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abc5101fcfc83125461d17a03b02128452449a6c", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "print_utils: add missing license header", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2aff05d6484719b5ef9895da59ba1e92c427b2ad", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "macros: mention --enable-bundled=yes in CHECK_{TYPE,IOCTL}_SIZE assert messages\n\nThese macros are used to check that the types provided in the kernel\nheaders have the expected characteristics, and most of them (if not all)\nare bundled with strace itself, so it might have sense to provide a hint\nto people who are not interested in waiting for the upstream to accommodate\nfor the UAPI changes and just want to get strace built that may\nbe of some help and save some time and effort spent on finding the option\nthemselves.\n\n* src/macros.h (CHECK_TYPE_SIZE, CHECK_IOCTL_SIZE): Mention\n--enable-bundled=yes configure option in the assertion failure message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f497c83a8164dfa2b5009f4306595df69e182c1", "commit_date": "2023-07-11T08:22:19Z", "commit_message": "syscall: keep the s_prev_ent if the current syscall is restart_syscall\n\nIt allows showing the original syscall in the cases where a syscall\ninterrupted repeatedly and avoid \"resuming interrupted restart_syscall\":\n\n    clock_nanosleep(CLOCK_REALTIME, 0, {tv_sec=0, tv_nsec=222222222}, {tv_sec=0, tv_nsec=211140476}) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted clock_nanosleep ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted restart_syscall ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    [...]\n\n* src/syscall.c (syscall_exiting_trace): store either tcp->s_prev_ent\nor tcp->s_ent as a new value for tcp->s_prev_ent depending on whether\nthe current sen is SEN_restart_syscall.\n* tests/restart_syscall.c: Make the interval timer trigger repeatedly,\ncheck for the absence of \"resuming interrupted restart_syscall\" output.\n\nReferences: https://bugzilla.redhat.com/2148516", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65e091a8cfe990b7f93e390444bb4d88b1b92b34", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "bundled: update linux UAPI headers to v6.5-rc1\n\n* bundled/linux/include/uapi/linux/counter.h: Update to\nheaders_install'ed Linux kernel v6.5-rc1.\n* bundled/linux/include/uapi/linux/fcntl.h: Likewise.\n* bundled/linux/include/uapi/linux/if_link.h: Likewise.\n* bundled/linux/include/uapi/linux/io_uring.h: Likewise.\n* bundled/linux/include/uapi/linux/mount.h: Likewise.\n* bundled/linux/include/uapi/linux/mptcp.h: Likewise.\n* bundled/linux/include/uapi/linux/netfilter/nf_tables.h: Likewise.\n* bundled/linux/include/uapi/linux/pkt_sched.h: Likewise.\n* bundled/linux/include/uapi/linux/prctl.h: Likewise.\n* bundled/linux/include/uapi/linux/types.h: Likewise.\n* bundled/linux/include/uapi/linux/v4l2-controls.h: Likewise.\n* bundled/linux/include/uapi/linux/version.h: Likewise.\n* bundled/linux/include/uapi/linux/videodev2.h: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8cec18845220cc82e45014ffdcab449ad664584", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "ptp: add max_phase_adj field and update rsv field of struct ptp_clock_caps\n\n* bundled/linux/include/uapi/linux/ptp_clock.h (struct ptp_clock_caps):\nAdd max_phase_adj field and update rsv field following the change\nintroduced by Linux kernel commit v6.5-rc1~163^2~65^2~4.\n* src/ptp.c (ptp_ioctl): Likewise.\n* tests/ioctl_ptp.c (test_no_device): Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0da3633669fcb829dd8d902d15443a755bd10fb", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "io_uring: rename resv2 fields of io_[cs]qring_offsets to user_addr\n\n* bundled/linux/include/uapi/linux/io_uring.h (struct io_sqring_offsets,\nstruct io_cqring_offsets): Rename resv2 to user_addr following\nthe change introduced by Linux kernel commit v6.5-rc1~235^2~32.\n* src/io_uring.c (print_io_sqring_offsets, print_io_cqring_offsets):\nLikewise.\n* tests/io_uring_setup.c (main): Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c163706715eb23b3609b1e02e1979fb9c8c435", "commit_date": "2023-06-30T08:00:00Z", "commit_message": "exec_or_die: install seccomp filter before setreuid\n\nWhile we strive to install the seccomp filter as late as possible before\nthe execve call, in --user mode this has an undesired side effect:\nthe setreuid call strips CAP_SYS_ADMIN, making PR_SET_NO_NEW_PRIVS call\na necessity, which results to the tracee less privileged than in the\ncase when --seccomp-bpf mode was not enabled.\n\nWorkaround this by moving the installation of the seccomp filter before\nthe setreuid call in --user mode.\n\n* src/strace.c (maybe_init_seccomp_filter): New function, a thin wrapper\naround init_seccomp_filter.\n(exec_or_die): Invoke maybe_init_seccomp_filter instead of\ninit_seccomp_filter before the execve call, limit the invocation\nto username == NULL case.\n(exec_or_die) <username != NULL>: Invoke maybe_init_seccomp_filter\nbefore the setreuid call.\n\nResolves: https://github.com/strace/strace/issues/126", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9df295d4b03df101b52598c6021074c0d9ff6fe3", "commit_date": "2023-06-29T08:00:00Z", "commit_message": "exec_or_die: remove incomprehensible setreuid invocation\n\nSince the very first commit setreuid is invoked in geteuid() != 0\ncase without any plausible explanation.  It makes little sense to\ninstall strace as a setuid-nonroot executable in the first place,\nand even in that case it is unclear why one would like to drop the\neffective nonzero uid before the execve.\n\n* src/strace.c (exec_or_die) <!username && geteuid() != 0>: Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59436f2e193107519282ea128ce23a7f6a8cb034", "commit_date": "2023-06-28T08:00:00Z", "commit_message": "exec_or_die: restore SIGCHLD handler earlier\n\nWhen --daemonize mode is not enabled, the disposition of SIGCHLD is not\nrelevant to the child process, so in that case sigaction can be called\nbefore the PTRACE_TRACEME call.\n\n* src/strace.c (exec_or_die) <!daemonized_tracer>: Restore SIGCHLD\nhandler before PTRACE_TRACEME.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "400086936db46299e4aca35ff739d0afa3dda506", "commit_date": "2023-06-27T08:00:00Z", "commit_message": "Post-release administrivia\n\n* NEWS: Add a header line for the next release.\n* debian/changelog.in: Add a changelog entry for 6.4-1.\n* strace.spec.in: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}], "ldv/next": [{"commit_oid": "c638896a14b0d4085ba3a08510d6ed405aa1c07e", "commit_date": "2023-10-17T08:00:00Z", "commit_message": "tests: extend -u coverage\n\n* tests/options-syntax.test: Use fakeroot to extend -u coverage.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28fe634a3beecde1cabf1732b87e345cd55bc058", "commit_date": "2023-10-16T13:00:00Z", "commit_message": "Update ioctl entries from linux v6.6\n\n* src/linux/32/ioctls_inc_align16.h: Update from linux v6.6-rc6 using\nioctls_gen.sh.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd8685f33799035c3cb0baff756c9b6305a64da9", "commit_date": "2023-10-16T08:00:00Z", "commit_message": "tests: enhance termsig test\n\n* tests/termsig.test: Check -D mode as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "563f2f35f84019ac5c36c87445fe551a6a510267", "commit_date": "2023-10-16T08:00:00Z", "commit_message": "tests: cleanup termsig test\n\n* tests/termsig.test: Fold two identical blocks into a loop.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c41ff4e2dfcf21265caf77f4e63e0ec25f97867", "commit_date": "2023-10-15T08:00:00Z", "commit_message": "tests: check how strace handles attempts to trace itself\n\n* tests/strace-self.test: New file.\n* tests/Makefile.am (MISC_TESTS): Add strace-self.test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44cf51a38cce1e90bb6c22208fa45f95cdcc8f5d", "commit_date": "2023-10-14T08:00:00Z", "commit_message": "tests: fix so_peerpidfd test\n\n* tests/so_peerpidfd.c (print_pidfd): Fix expected output.\n\nFixes: v6.5~38 \"net: implement decoding of SO_PEERPIDFD socket option\"\nResolves: https://bugzilla.redhat.com/show_bug.cgi?id=2243631", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba9bef083db001107cbbd91d633a969cba6e47d7", "commit_date": "2023-10-13T08:00:00Z", "commit_message": "Set PTRACE_O_EXITKILL option along with PTRACE_O_TRACESECCOMP\n\nWhen --seccomp-bpf is enabled and -p/--attach option is not used,\na seccomp filter is being assigned to all tracees.  In that case also set\nPTRACE_O_EXITKILL option for all tracee processes and do not detach them\non cleanup so they will not be left running after the tracer exit.\n\n* doc/strace.1.in: Document this.\n* src/strace.c (init) <seccomp_filtering>: Add PTRACE_O_EXITKILL\nto ptrace_setoptions when all conditions are met.\n* tests/filter_seccomp-exitkill.test: New test.\n* tests/Makefile.am (MISC_TESTS): Add filter_seccomp-exitkill.test.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0e007f6d2b45b1c0544efcc0aa290da8f6c6f52", "commit_date": "2023-10-12T08:00:00Z", "commit_message": "Introduce --kill-on-exit option\n\nThis new option instructs the tracer to set PTRACE_O_EXITKILL option for\nall tracees and not to detach them on cleanup so they will not be left\nrunning after the tracer exit.\n\n* src/exitkill.c: New file.\n* src/exitkill.h: Likewise.\n* src/Makefile.am (libstrace_a_SOURCES): Add exitkill.c and exitkill.h.\n* src/strace.c: Include \"exitkill.h\".\n(init): Handle --kill-on-exit option.\n(cleanup): Do not detach tracees if PTRACE_O_EXITKILL is added\nto ptrace_setoptions.\n(usage): Document --kill-on-exit option.\n* doc/strace.1.in: Likewise.\n* tests/bexecve.test: Check that --kill-on-exit option works\nwith -b execve.\n* tests/kill-on-exit.sh: New file.\n* tests/kill-on-exit.test: New test.\n* tests/options-syntax.test: Check invalid use of --kill-on-exit option.\n* tests/Makefile.am (MISC_TESTS): Add kill-on-exit.test.\n(EXTRA_DIST): Add kill-on-exit.sh.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42688d0010930b51e15d597ec0dfb17217fe4b1c", "commit_date": "2023-10-12T08:00:00Z", "commit_message": "Print a debug message containing the pid of the daemonized tracer process\n\n* src/strace.c (startup_attach) <daemonized_tracer>: Print a debug\nmessage containing the tracer pid.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f8501a75dd2f45ddacdfb7a7ac5ca152b6405a7", "commit_date": "2023-10-11T08:00:00Z", "commit_message": "Disable seccomp filtering when all tracees are attached using -p option\n\n* src/strace.c (init): Optimize disabling of seccomp filtering\nwhen it is not going to be used anyway.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6432ad76c0111463b1189917e23ac2a317e16c06", "commit_date": "2023-10-11T08:00:00Z", "commit_message": "Reorder --seccomp-bpf incompatibility diagnostic messages\n\n* src/strace.c (init): Reorder --seccomp-bpf incompatibility diagnostic\nmessages.\n* tests/bexecve.test: Update.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8762f29148136f7781f29b2993b0731688896973", "commit_date": "2023-10-10T08:00:00Z", "commit_message": "Unexport ptrace_setoptions variable\n\n* src/strace.c (ptrace_setoptions): Add static qualifier.\n* src/defs.h (ptrace_setoptions): Remove declaration.\n\nComplements: v4.10~73 \"Remove support for systems without PTRACE_SETOPTIONS\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "973c970b296d65f9b076b6815404cb63fcfca3b1", "commit_date": "2023-10-09T08:00:00Z", "commit_message": "tests: extend UFFDIO_* ioctl coverage\n\n* tests/ioctl_uffdio.c: Check UFFDIO_* ioctl decoding even when\nthe kernel does not provide userfaultfd support.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0892d9fcbe3e3c9430559d84a5c2bff380195d9", "commit_date": "2023-10-08T08:00:00Z", "commit_message": "userfaultfd: implement decoding of UFFDIO_POISON ioctl\n\n* src/linux/32/ioctls_inc_align16.h (UFFDIO_POISON): New\nconstant introduced by Linux kernel commit v6.6-rc1~53^2~425.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* src/xlat/uffd_poison_mode_flags.in: New file.\n* src/userfaultfd.c: Include \"xlat/uffd_poison_mode_flags.h\".\n(uffdio_ioctl): Decode UFFDIO_POISON command.\n* tests/ioctl_uffdio.c (main): Check it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a1331c99a3866ae66b4955649b53da736920097e", "commit_date": "2023-10-05T08:00:00Z", "commit_message": "userfaultfd: implement decoding of UFFDIO_CONTINUE ioctl\n\n* src/xlat/uffd_continue_mode_flags.in: New file.\n* src/userfaultfd.c: Include \"xlat/uffd_continue_mode_flags.h\".\n(uffdio_ioctl): Decode UFFDIO_CONTINUE command introduced\nby Linux kernel commit v5.13-rc1~39^2~86.\n* tests/ioctl_uffdio.c (main): Check it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6dcf2b01116d1e3a13c3ca8f2fc5c51e1added6", "commit_date": "2023-10-04T08:00:00Z", "commit_message": "userfaultfd: implement decoding of UFFDIO_WRITEPROTECT ioctl\n\n* src/xlat/uffd_writeprotect_mode_flags.in: New file.\n* src/userfaultfd.c: Include \"xlat/uffd_writeprotect_mode_flags.h\".\n(uffdio_ioctl): Decode UFFDIO_WRITEPROTECT command introduced\nby Linux kernel commit v5.7-rc1~58^2~113.\n* tests/ioctl_uffdio.c (main): Check it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "318705f080a568a129e483587e33cdb62b8c6914", "commit_date": "2023-10-03T08:00:00Z", "commit_message": "xlat: update V4L2_* constants\n\n* src/xlat/v4l2_pix_fmts.in (V4L2_PIX_FMT_MT2110T): New constant\nintroduced by Linux kernel commit v6.6-rc1~97^2~156.\n(V4L2_PIX_FMT_MT2110R): New constant introduced by Linux kernel\ncommit v6.6-rc1~97^2~155.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b45ed94f6926c9a7aae6bfb54f9a47ea313c0646", "commit_date": "2023-10-02T08:00:00Z", "commit_message": "Update copyright year number range\n\n* COPYING: Update copyright year number range.\n* tests/COPYING: Likewise.\n* debian/copyright: Likewise.\n\nResolves: https://github.com/strace/strace/issues/267", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "51aaf9146e8c8f00c5946764c472c75d511cf899", "commit_date": "2023-10-01T08:00:00Z", "commit_message": "xlat: update UFFD_* constants\n\n* src/xlat/uffd_api_features.in (UFFD_FEATURE_POISON): New constant\nintroduced by Linux kernel commit v6.6-rc1~53^2~422.\n* src/xlat/uffd_register_ioctl_flags.in (1<<_UFFDIO_POISON): Likewise.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1424beea941d9371e5e8be0d41a4aefd750b4846", "commit_date": "2023-09-28T08:00:00Z", "commit_message": "Implement decoding of SECCOMP_IOCTL_NOTIF_SET_FLAGS ioctl\n\n* src/linux/32/ioctls_inc_align16.h (SECCOMP_IOCTL_NOTIF_SET_FLAGS): New\nconstant introduced by Linux kernel commit v6.6-rc1~205^2~6.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* src/xlat/seccomp_ioctl_notif_flags.in: New file.\n* src/seccomp_ioctl.c: Include \"xlat/seccomp_ioctl_notif_flags.h\"\n(seccomp_ioctl): Decode SECCOMP_IOCTL_NOTIF_SET_FLAGS command.\n* tests/ioctl_seccomp.c (main): Check it.\n* tests/gen_tests.in (ioctl_seccomp-y-success--pidns-translation-Xraw,\nioctl_seccomp-y-success-Xraw): Update the argument for -a option.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55f69b45456f4b734a1bd9b211ce48bafaa88d3f", "commit_date": "2023-09-27T08:00:00Z", "commit_message": "xlat: update QFMT_* constants\n\n* src/xlat/quota_formats.in (QFMT_SHMEM): New constant introduced\nby Linux kernel commit v6.6-rc1~219^2~16.\n* tests/quotactl.c (print_dqfmt): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9699659102028b90eef41e31f074f395ea3c49b", "commit_date": "2023-09-26T08:00:00Z", "commit_message": "Implement decoding of FSCONFIG_CMD_CREATE_EXCL fsconfig command\n\n* src/xlat/fsconfig_cmds.in (FSCONFIG_CMD_CREATE_EXCL): New constant\nintroduced by Linux kernel commit v6.6-rc1~221^2.\n* src/fsconfig.c (SYS_FUNC(fsconfig)): Handle it.\n* tests/fsconfig.c (main): Check it.\n(test_fsconfig_unknown): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd75427e45cebc897d06a0e5d2ea06194985ff1d", "commit_date": "2023-09-25T08:00:00Z", "commit_message": "xlat: update KEXEC_* constants\n\n* src/xlat/kexec_load_flags.in (KEXEC_UPDATE_ELFCOREHDR):\nNew constant introduced by Linux kernel commit v6.6-rc1~155^2~4.\n* tests/kexec_load.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5fd69fbd45c2ebe6f57283e5170f948678acd94", "commit_date": "2023-09-24T08:00:00Z", "commit_message": "xlat: update DEVCONF_* constants\n\n* src/xlat/inet6_devconf_indices.in (DEVCONF_ACCEPT_RA_MIN_LFT):\nNew constant introduced by Linux kernel commit v6.6-rc1~162^2~302.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1deac3d2526e73af2786aa298b3cb9818365b208", "commit_date": "2023-09-23T08:00:00Z", "commit_message": "xlat: update IORING_SETUP_* constants\n\n* src/xlat/uring_setup_flags.in (IORING_SETUP_NO_SQARRAY):\nNew constant introduced by Linux kernel commit v6.6-rc1~152^2~5.\n* tests/io_uring_setup.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a49c2a5a867df39abda009957ce77f173e80c7fe", "commit_date": "2023-09-22T08:00:00Z", "commit_message": "xlat: update XDP_* constants\n\n* src/xlat/xdp_sockaddr_flags.in (XDP_USE_SG): New constant introduced\nby Linux kernel commit v6.6-rc1~162^2~371^2~3^2~22.\n* tests/sockaddr_xlat.c (check_xdp): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2316f61f6c0ba807afb09497dc30de9fded2ba01", "commit_date": "2023-09-21T08:00:00Z", "commit_message": "Implement decoding of IFLA_BRPORT_BACKUP_NHID netlink attribute\n\n* src/xlat/rtnl_ifla_brport_attrs.in (IFLA_BRPORT_BACKUP_NHID):\nNew constant introduced by Linux kernel commit v6.6-rc1~162^2~377^2~1.\n* src/rtnl_link.c (ifla_brport_nla_decoders): Add it.\n* tests/nlattr_ifla_brport.c (main): Update expected output.\n* tests/nlattr_ifla_linkinfo.c (main): Likewise.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b084b8e91d520825e11966245162a6999485469", "commit_date": "2023-09-20T08:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_X86_SHSTK): New constant\nintroduced by Linux kernel commit v6.6-rc1~117^2~7.\n(NT_RISCV_CSR, NT_RISCV_VECTOR): New constants introduced\nby Linux kernel commit v6.6-rc1~10^2~6^2.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7aa9040bf6f9dfb89bf3336973126ffb422d2cb", "commit_date": "2023-09-19T08:00:00Z", "commit_message": "xlat: update BPF_* constants\n\n* src/xlat/bpf_attach_flags.in( BPF_F_BEFORE, BPF_F_AFTER, BPF_F_ID,\nBPF_F_LINK): New constants introduced by Linux kernel commit\nv6.6-rc1~162^2~371^2~2^2~7.\n* src/xlat/bpf_attach_type.in (BPF_TCX_INGRESS, BPF_TCX_EGRESS): New\nconstants introduced by Linux kernel commit v6.6-rc1~162^2~371^2~2^2~6.\n(BPF_TRACE_UPROBE_MULTI): New constant introduced by Linux kernel\ncommit v6.6-rc1~10^2~4^2~16^2~25.\n* src/xlat/ebpf_mode.in (BPF_MEMSX): New constant introduced\nby Linux kernel commit v6.6-rc1~162^2~233^2~17^2~16.\n* tests/bpf.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc6eea3bd43e0991f1874bf89d13fa9466e83117", "commit_date": "2023-09-18T08:00:00Z", "commit_message": "xlat: update SEGV_* constants\n\n* src/xlat/sigsegv_codes.in (SEGV_CPERR): New constant\nintroduced by Linux kernel commit v6.6-rc1~117^2~20.\n* tests/ptrace.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b81d6795cee32fda740c729f511cb13742fdb41", "commit_date": "2023-09-17T21:40:24Z", "commit_message": "bundled: update linux UAPI headers to v6.6-rc2\n\n* bundled/linux/include/uapi/linux/blkzoned.h: Update to\nheaders_install'ed Linux kernel v6.6-rc2.\n* bundled/linux/include/uapi/linux/btrfs_tree.h: Likewise.\n* bundled/linux/include/uapi/linux/if_link.h: Likewise.\n* bundled/linux/include/uapi/linux/if_xdp.h: Likewise.\n* bundled/linux/include/uapi/linux/io_uring.h: Likewise.\n* bundled/linux/include/uapi/linux/kexec.h: Likewise.\n* bundled/linux/include/uapi/linux/mount.h: Likewise.\n* bundled/linux/include/uapi/linux/netfilter/nf_tables.h: Likewise.\n* bundled/linux/include/uapi/linux/perf_event.h: Likewise.\n* bundled/linux/include/uapi/linux/pkt_sched.h: Likewise.\n* bundled/linux/include/uapi/linux/quota.h: Likewise.\n* bundled/linux/include/uapi/linux/seccomp.h: Likewise.\n* bundled/linux/include/uapi/linux/userfaultfd.h: Likewise.\n* bundled/linux/include/uapi/linux/version.h: Likewise.\n* bundled/linux/include/uapi/linux/videodev2.h: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e891cc9ddc90bc16a31df24815ae024f888fbaf2", "commit_date": "2023-09-15T08:00:00Z", "commit_message": ".github: switch x32 runners from ubuntu-latest to ubuntu-20.04\n\nApparently, ubuntu-22.04 runners no longer support x32 executables,\nso downgrade these runners to ubuntu-20.04.  As ubuntu-20.04 does not\nprovide gcc12, remove gcc12-x32-* runners.\n\n* .github/workflows/ci.yml (gcc13-x32-kheaders, gcc13-x32-nostacktrace,\ngcc11-x32-kheaders, gcc11-x32-nostacktrace): Replace ubuntu-latest with\nubuntu-20.04.\n(gcc12-x32-kheaders, gcc12-x32-nostacktrace): Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eda6d7b61f46d81f7f87afa6fa802dcbe136ca1", "commit_date": "2023-09-14T08:00:00Z", "commit_message": "xlat: add fallback definition for BTRFS_EXTENT_REF_V0_KEY\n\n* src/xlat/btrfs_key_types.in (#unconditional): Remove.\n(BTRFS_EXTENT_REF_V0_KEY): Provide fallback definition for the constant\nthat was introduced by Linux kernel commit v2.6.31-rc1~315^2~22 and\nlater removed by Linux kernel commit v6.6-rc1~207^2~16.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3d53788879452213353b2cbe318bd2314e7c0403", "commit_date": "2023-09-13T08:00:00Z", "commit_message": "tests: introduce RVAL_E2BIG macro\n\n* tests/tests.h (RVAL_E2BIG): New macro.\n* tests/ioctl_kvm_run_common.c: Use it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b20a68f95b8b9a5c567c4bb713b851140c02fac", "commit_date": "2023-09-12T08:00:00Z", "commit_message": "tests: introduce RVAL_EOVERFLOW macro\n\n* tests/tests.h (RVAL_EOVERFLOW): New macro.\n* tests/btrfs.c: Use it.\n* tests/file_handle.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6d10ed783fc29c4172e99b54cef52c962f0cfb7", "commit_date": "2023-09-11T08:00:00Z", "commit_message": "tests: introduce RVAL_ENOSYS macro\n\n* tests/tests.h (RVAL_ENOSYS): New macro.\n* tests/futex.c: Use it.\n* tests/pause.c: Likewise.\n* tests/setresugid.c: Likewise.\n* tests/setreugid.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40f42d51addd2111e2991eaac43b3dcc4177e45e", "commit_date": "2023-09-10T08:00:00Z", "commit_message": "tests: introduce RVAL_EAGAIN macro\n\n* tests/tests.h (RVAL_EAGAIN): New macro.\n* tests/rt_sigtimedwait.c: Use it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a32bc81a9d62bc16ca39a0b0fdee628bc9fd919", "commit_date": "2023-09-09T08:00:00Z", "commit_message": "tests: introduce RVAL_ENOENT macro\n\n* tests/tests.h (RVAL_ENOENT): New macro.\n* tests/attach-f-p.c: Use it.\n* tests/fork-f.c: Likewise.\n* tests/readlink.c: Likewise.\n* tests/readlinkat.c: Likewise.\n* tests/tests.h: Likewise.\n* tests/umovestr2.c: Likewise.\n* tests/vfork-f.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "520f58cfaadab454458f50ef53491249377442f5", "commit_date": "2023-09-08T08:00:00Z", "commit_message": "tests: introduce RVAL_EFAULT macro\n\n* tests/tests.h (RVAL_EFAULT): New macro.\n* tests/clock_nanosleep.c: Use it.\n* tests/getresugid.c: Likewise.\n* tests/ioctl_kvm_run_common.c: Likewise.\n* tests/ipc.c: Likewise.\n* tests/poll.c: Likewise.\n* tests/pread64-pwrite64.c: Likewise.\n* tests/read-write.c: Likewise.\n* tests/rt_sigpending.c: Likewise.\n* tests/rt_sigprocmask.c: Likewise.\n* tests/seccomp-filter-v.c: Likewise.\n* tests/sendfile.c: Likewise.\n* tests/sendfile64.c: Likewise.\n* tests/sigaction.c: Likewise.\n* tests/sigpending.c: Likewise.\n* tests/sysinfo.c: Likewise.\n* tests/times-fail.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c78448d9e5b1bb009c14ea4d0a3dc1188385a10", "commit_date": "2023-09-07T08:00:00Z", "commit_message": "tests: introduce RVAL_EINVAL macro\n\n* tests/tests.h (RVAL_EINVAL): New macro.\n* tests/clock_nanosleep.c: Use it.\n* tests/file_handle.c: Likewise.\n* tests/getrandom.c: Likewise.\n* tests/pread64-pwrite64.c: Likewise.\n* tests/preadv.c: Likewise.\n* tests/rt_sigpending.c: Likewise.\n* tests/rt_sigprocmask.c: Likewise.\n* tests/rt_sigsuspend.c: Likewise.\n* tests/rt_sigtimedwait.c: Likewise.\n* tests/seccomp-filter-v.c: Likewise.\n* tests/sendfile.c: Likewise.\n* tests/sendfile64.c: Likewise.\n* tests/sigaction.c: Likewise.\n* tests/timer_xettime.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f4d61805029e1acc824d447309f9c11febae556", "commit_date": "2023-09-06T08:00:00Z", "commit_message": "tests: use RVAL_EBADF macro more consistently\n\n* tests/ioctl_nbd.c (RVAL_EBADF): Move macro ...\n* tests/tests.h: ... here.\n* tests/btrfs.c: Use it.\n* tests/ioctl.c: Likewise.\n* tests/ioctl_block.c: Likewise.\n* tests/ioctl_dm.c: Likewise.\n* tests/ioctl_evdev.c: Likewise.\n* tests/ioctl_inotify.c: Likewise.\n* tests/ioctl_kd.c: Likewise.\n* tests/ioctl_loop.c: Likewise.\n* tests/ioctl_nsfs.c: Likewise.\n* tests/ioctl_perf.c: Likewise.\n* tests/ioctl_scsi.c: Likewise.\n* tests/ioctl_seccomp.c: Likewise.\n* tests/ioctl_sg_io_v3.c: Likewise.\n* tests/ioctl_sg_io_v4.c: Likewise.\n* tests/ioctl_v4l2.c: Likewise.\n* tests/mmap.c: Likewise.\n* tests/net-sockaddr.c: Likewise.\n* tests/sendfile.c: Likewise.\n* tests/sendfile64.c: Likewise.\n* tests/ioctl_random.c (RVAL_EBADF): Remove.\n* tests/ioctl_tee.c: Likewise.\n* tests/ioctl_watchdog.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bbc479ee1ace7c152a6b931fc2bde15eb749c0e", "commit_date": "2023-09-05T08:00:00Z", "commit_message": "tests: cleanup use of errno2name()\n\n* tests/acct.c: Use sprintrc() instead of errno2name() and %m.\n* tests/copy_file_range.c: Likewise.\n* tests/epoll_create.c: Likewise.\n* tests/epoll_pwait.c: Likewise.\n* tests/epoll_wait.c: Likewise.\n* tests/execveat.c: Likewise.\n* tests/fchdir.c: Likewise.\n* tests/fdatasync.c: Likewise.\n* tests/file_handle.c: Likewise.\n* tests/flock.c: Likewise.\n* tests/fsync.c: Likewise.\n* tests/ftruncate.c: Likewise.\n* tests/ftruncate64.c: Likewise.\n* tests/get_mempolicy.c: Likewise.\n* tests/ioctl_uffdio.c: Likewise.\n* tests/ioperm.c: Likewise.\n* tests/iopl.c: Likewise.\n* tests/ipc.c: Likewise.\n* tests/kill.c: Likewise.\n* tests/link.c: Likewise.\n* tests/linkat.c: Likewise.\n* tests/llseek.c: Likewise.\n* tests/lseek.c: Likewise.\n* tests/migrate_pages.c: Likewise.\n* tests/mincore.c: Likewise.\n* tests/mknodat.c: Likewise.\n* tests/mlock2.c: Likewise.\n* tests/mmsg_name.c: Likewise.\n* tests/msg_control.c: Likewise.\n* tests/msg_name.c: Likewise.\n* tests/prctl-seccomp-strict.c: Likewise.\n* tests/preadv-pwritev.c: Likewise.\n* tests/preadv2-pwritev2.c: Likewise.\n* tests/pwritev.c: Likewise.\n* tests/readv.c: Likewise.\n* tests/rename.c: Likewise.\n* tests/renameat.c: Likewise.\n* tests/renameat2.c: Likewise.\n* tests/rmdir.c: Likewise.\n* tests/sched_xetparam.c: Likewise.\n* tests/seccomp-filter.c: Likewise.\n* tests/setdomainname.c: Likewise.\n* tests/shmxt.c: Likewise.\n* tests/shutdown.c: Likewise.\n* tests/socketcall.c: Likewise.\n* tests/splice.c: Likewise.\n* tests/swap.c: Likewise.\n* tests/symlinkat.c: Likewise.\n* tests/sync_file_range.c: Likewise.\n* tests/sync_file_range2.c: Likewise.\n* tests/tee.c: Likewise.\n* tests/timer_create.c: Likewise.\n* tests/truncate.c: Likewise.\n* tests/truncate64.c: Likewise.\n* tests/umode_t.c: Likewise.\n* tests/umount.c: Likewise.\n* tests/umovestr3.c: Likewise.\n* tests/unlink.c: Likewise.\n* tests/unlinkat.c: Likewise.\n* tests/waitpid.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d144e0ee6a7d91cf88fd0d2b80942deb1a3d1508", "commit_date": "2023-09-04T08:00:00Z", "commit_message": "msghdr: print cmsg_data for unknown cmsg_type\n\n* src/msghdr.c (print_cmsg_type_data): Make sure cmsg_data is always\nprinted when cmsg_data length is non-zero.  If cmsg_type is unknown or\nthere is no specific printer for the given cmsg_type and cmsg_data\nlength, print the raw data.\n* tests/msg_control.c (print_fds, test_unknown_type,\ntest_unknown_level): Check it.\n\nResolves: https://github.com/strace/strace/issues/261", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96a04e87a45eba98c5735d25c2026a3314bb8149", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: use proper quoting of AC_LANG_PROGRAM arguments\n\nAC_LANG_PROGRAM arguments that should be treated as literals\nmust be quoted twice.\n\n* configure.ac: Use double quoting of AC_LANG_PROGRAM arguments\nin the check whether to use bundled linux kernel headers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae52f03fb41babc747d122cb07a062ee7386b1a", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: use AC_LANG_PROGRAM instead of AC_LANG_SOURCE\n\nConsistently use AC_LANG_PROGRAM for arguments passed to\nAC_COMPILE_IFELSE.\n\n* configure.ac: Replace AC_LANG_SOURCE with AC_LANG_PROGRAM.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3a50c9106aef560613fd73a39705ea80951b8e0", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: stop using AC_TRY_COMPILE\n\n* configure.ac (AC_TRY_COMPILE): Replace with AC_COMPILE_IFELSE\nas suggested by autoupdate.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7dba982c36a07d128aa4a7fbf8184fd1eefb445a", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: stop using AC_PROG_CC_STDC\n\nThis macro became obsolete with GNU Autoconf 2.70.\n\n* configure.ac (AC_PROG_CC_STDC): Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24093ca84733db0ce80deb717b067c52518cd1f8", "commit_date": "2023-09-02T08:00:00Z", "commit_message": "Post-release administrivia\n\n* NEWS: Add a header line for the next release.\n* debian/changelog.in: Add a changelog entry for 6.5-1.\n* strace.spec.in: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b271519228028f77da64d958b9419cef0762e24b", "commit_date": "2023-09-01T08:00:00Z", "commit_message": "Prepare for 6.5 release\n\n* NEWS: Update for 6.5 release.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14417680675d0210f10df972e4995d2b5a73556f", "commit_date": "2023-09-01T08:00:00Z", "commit_message": "Update copyright headers\n\nHeaders updated automatically using maint/update_copyright_years.sh\nscript.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0abd3a6e1c64504cc8805e12ce59c582ff3b2ecf", "commit_date": "2023-09-01T08:00:00Z", "commit_message": "Fix preprocessor indentation\n\nIndent the C preprocessor directives to reflect their nesting\nusing the following script:\n\n$ cppi -l $(git grep -El '^[[:space:]]*#[[:space:]]*(if|ifdef|ifndef|elif|else|endif|define|pragma)[[:space:]]' src tests |grep -Ev '\\.(sh|test)$') |while read f; do\n\tcppi < \"$f\" > \"$f\".cppi; mv \"$f\".cppi \"$f\"\ndone", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7178658ead8ccfe196694dc5434f0f37db8746b4", "commit_date": "2023-08-31T08:00:00Z", "commit_message": "tests: avoid libc definition for time_t in direct syscalls\n\nFollowing up the commit that stopped using of struct timespec and struct\ntimeval as arguments of syscalls, avoid using time_t in initializations\nof kernel_old_timespec_t and kernel_old_timeval_t structures.\n\n* tests/aio.c (main): Do not use time_t in the initialization of tv_sec.\n* tests/aio_pgetevents.c (main): Likewise.\n* tests/clock_nanosleep.c (main): Likewise.\n* tests/futex.c (main): Likewise.\n* tests/futimesat.c (main): Likewise.\n* tests/nanosleep.c (main): Likewise.\n* tests/ppoll.c (main): Likewise.\n* tests/rt_sigtimedwait.c (main): Likewise.\n* tests/timer_xettime.c (main): Likewise.\n* tests/timerfd_xettime.c (main): Likewise.\n* tests/utimensat.c (main): Likewise.\n* tests/xettimeofday.c (main): Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9625f0953ef89477993931815834803b135760f", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests: do not use struct timespec in clock_nanosleep syscall\n\n* tests/mq_sendrecv.c (do_send, do_recv, main): Replace struct timespec\nwith kernel_old_timespec_t in direct invocations of clock_nanosleep\nsyscall.\n* tests/threads-execve.c (thread, main): Likewise.\n\nComplements: v6.4-41-g51cb6c52e394 \"tests: do not use libc definitions\nfor timespec/timeval in direct syscalls\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf0c67b453c83523a022d1b0c1f7f9c33e5de6e6", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests: do not use struct timeval in gettimeofday syscall arguments\n\n* tests/delay.c: Include \"kernel_timeval.h\".\n(usecs_from_tv, check_delay, run): Replace struct timeval with\nkernel_old_timeval_t in direct invocations of gettimeofday syscall.\n\nComplements: v6.4-41-g51cb6c52e394 \"tests: do not use libc definitions\nfor timespec/timeval in direct syscalls\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "80ae02f0fbc2a6525797260e22e2885d5c443a6b", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "Use the proper type for decoding the time syscall\n\nDo not use time_t type provided by libc to decode the time syscall as\nthe latter uses kernel_long_t which does not necessarily match the type\nprovided by libc.\n\n* src/print_time.c (kernel_time_t): New type, defined to kernel_ulong_t.\nUse it instead of time_t.\n* tests/time.c (kernel_time_t): Likewise.\n(k_time): New function.\n(main): Use it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f50e4280239e896215f9ff5adb0b551ce6d3b94f", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests/clock_nanosleep.c: avoid use of CLOCK_ABSTIME on systems with 32 bit time_t.\n\nThis does break (syscall returning -EINVAL) if system date is set to post-2038.\n\nResolves: https://github.com/strace/strace/pull/265", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f78e0b03679d61183c2362c5a763401a40617b9d", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests/time.c: print syscall return values as unsigned decimal\n\nstrace prints them that way, and so the test has to follow,\neven if the actual time_t is signed.\n\nResolves: https://github.com/strace/strace/pull/264", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff827d63360f07811320803f26201936557e5b28", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests: do not use libc definitions for timespec/timeval in direct syscalls\n\nlibc does not guarantee that they match syscall structures,\nand indeed, they don't if components are built against glibc\nwith -D_TIME_BITS=64 on 32 bit platforms (to avoid collapse\nin 2038).\n\n* tests/tests.h: Include \"kernel_old_timespec.h\".\n(struct timespec): Remove forward declaration.\n(recv_mmsg): Replace struct timespec with kernel_old_timespec_t.\n* tests/aio.c (main): Replace struct timespec with kernel_old_timespec_t.\n* tests/aio_pgetevents.c (main): Likewise.\n* tests/clock_nanosleep.c (main): Likewise.\n* tests/futex.c (main): Likewise.\n* tests/libmmsg.c (recv_mmsg): Likewise.\n* tests/mmsg-silent.c (main): Likewise.\n* tests/ppoll.c (main): Likewise.\n* tests/recvmmsg-timeout.c (main): Likewise.\n* tests/rt_sigtimedwait.c (k_sigtimedwait, iterate, main): Likewise.\n* tests/sched_rr_get_interval.c (main): Likewise.\n* tests/utimensat.c (print_ts): Likewise.\n* tests/futimesat.c: Include \"kernel_timeval.h\".\n(print_tv, main): Replace struct timeval with kernel_old_timeval_t.\n* tests/utimes.c: Include \"kernel_timeval.h\".\n(TEST_STRUCT): Replace struct timeval with kernel_old_timeval_t.\n* tests/xettimeofday.c: Include \"kernel_timeval.h\".\n(main): Replace struct timeval with kernel_old_timeval_t.\n* tests/xselect.c: Likewise.\n\nResolves: https://github.com/strace/strace/issues/250\nResolves: https://github.com/strace/strace/pull/263", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "691678fcf0cf2d3ce23dd5fe6998be1673c00381", "commit_date": "2023-08-29T14:00:00Z", "commit_message": "Update ioctl entries from linux v6.5\n\n* src/linux/32/ioctls_inc_align16.h: Update from linux v6.5 using\nioctls_gen.sh.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* src/linux/s390/ioctls_arch0.h: Likewise.\n* src/linux/s390x/ioctls_arch0.h: Likewise.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b355a82ff63f713b8b294a2707a4ab6f4cca7ab", "commit_date": "2023-08-29T14:00:00Z", "commit_message": "maint: Add support for *_IOCTL wrappers, such as ARMADA_IOCTL and UVIO_IOCTL\n\n* maint/ioctls_sym.sh (r_io): Add ([A-Z]+)?_S?IOCTL.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c6e395a3033c2d20bc58b2d5aed46be4b0b32f1", "commit_date": "2023-08-29T14:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_RISCV_VECTOR): Remove constant\nintroduced by Linux kernel commit v6.5-rc1~120^2~17^2~15 and removed\nby Linux kernel commit commit v6.5~8^2~1^2~1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d39aaf645b691cdabff55f4b2ba9982050e585d", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "tests/sched_xetaffinity: do not assume that cpuset_size is big enough\n\nCommit v5.15~160 (\"tests/sched_xetaffinity: add a check\nfor a non-properly-sized CPU set\") added a check that implicitly assumed\nthat cpuset_size is at least 8, which is not the case on 32-bit userspace\nwith less than 33 CPUs, and that has led to skipping the test altogether\non such systems due to syscall returning EFAULT.  Fix it by allocating\na separate set of the expected size and perform the check on it.\n\n* tests/sched_xetaffinity.c (main): Add crop_size constant, set to 8;\nadd crop_cpuset variable;  use them instead of cpuset_size and cpuset,\nrespectively, in the non-properly-sized CPU set check.\n\nFixes: v5.15~160 \"tests/sched_xetaffinity: add a check for a non-properly-sized CPU set\"\nReported-by: Sven Schnelle <svens@linux.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9474c474a04576971067a32507fb5a0251b5b762", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "ptp: provide additional information about max_phase_adj\n\nSince we know that it is in nanosecond, we can provide a comment to make\nit more human-readable.\n\n* src/ptp.c (ptp_ioctl): Use PRINT_FIELD_TICKS_D instead\nof PRINT_FIELD_D for max_phase_adj field printing.\n* tests/ioctl_ptp.c: Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0985c2978efb2c40b4c78807678cba8c9a31d3c", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "util: add print_ticks_d and PRINT_FIELD_TICKS{,_D}\n\nprint_ticks_d is similar to print_ticks, but handles signed numbers.\n\n* src/defs.h (print_ticks_d): New declaration.\n* src/util.c (print_ticks_d): New function.\n* src/print_fields.h (PRINT_FIELD_TICKS, PRINT_FIELD_TICKS_D): New\nmacros, wrappers for print_ticks and print_ticks_d, respectivaly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b997b824a97900026222c19683cc1eb2f8cc499", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "strace.spec: try to comply with the new Fedora package license policy\n\nNew Fedora policies[1][2] require the usage of the SPDX identifiers\nwith pretty specific syntax[3], and [4] requires refraining from any\n\"license analysis\" and listing all the licenses verbatim (which is especially\nfun with all the bundled sources), so here we are.  The %changelog entry\nmention is added per [5].\n\n[1] https://fedoraproject.org/wiki/Changes/SPDX_Licenses_Phase_2\n[2] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/\n[3] https://docs.fedoraproject.org/en-US/legal/license-field/#_conjunctive_and_licensing\n[4] https://docs.fedoraproject.org/en-US/legal/license-field/#_no_effective_license_analysis\n[5] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/#_changelog_entry\n\n* strace.spec.in [0%{?fedora} >= 35 || 0%{?centos} >= 9 || 0%{?rhel} >= 9]\n(License): Update the license expression and add an appropriate comment.\n(%changelog): Mention it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "472296f81513976c29a280825d7ca57bda18c862", "commit_date": "2023-08-10T08:00:00Z", "commit_message": "strace.spec.in: configure using --enable-bundled=yes\n\n* strace.spec.in (%build): Pass --enable-bundled=yes to %configure\nso that package builds wouldn't break unexpectedly when unreleased\nkernel headers are installed into the build environment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "299f77b2ff7d9e95e79ce86ebf22ad0b8957a1c1", "commit_date": "2023-08-09T08:00:00Z", "commit_message": "xlat: remove BPF_F_PATH_FD from bpf_map_flags\n\nBPF_F_PATH_FD is applicable to BPF_OBJ_PIN and BPF_OBJ_GET commands\nonly, and therefore should be listed in bpf_file_flags only.\n\nThis reverts commit c16832d01c09e8c249082a7fb04fc9f06fc9d00d.\n\n* src/xlat/bpf_map_flags.in (BPF_F_PATH_FD): Remove.\n* tests/bpf.c: Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a8effeb1bf6ac1ec4b14dd381e6e9d28000b46a", "commit_date": "2023-08-08T08:00:00Z", "commit_message": "bpf: update decoding of BPF_OBJ_PIN and BPF_OBJ_GET commands\n\n* src/print_fields.h (PRINT_FIELD_DIRFD): New macro.\n* src/xlat/bpf_file_flags.in: New file.\n* src/bpf_attr.h (BPF_OBJ_PIN_struct): Add path_fd field introduced\nby Linux commit v6.5-rc1~163^2~215^2~9.\n(BPF_OBJ_PIN_struct_size, expected_BPF_OBJ_PIN_struct_size): Update.\n* src/bpf.c: Include \"xlat/bpf_file_flags.h\".\n(BEGIN_BPF_CMD_DECODER(BPF_OBJ_PIN)): Decode path_fd.\n* tests/bpf.c: Include \"xmalloc.h\".\n(at_fdcwd_str): New variable.\n(main): Initialize it.\n(init_BPF_OBJ_PIN_str): New function.\n(BPF_OBJ_PIN_checks): Check path_fd decoding.\n* tests/bpf-success-long-y.c (YFLAG): Define.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c86e6ef1f3bbd8ef20a700a3f7d34d35bd8fe6a", "commit_date": "2023-08-07T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_PROG_BIND_MAP command\n\n* src/bpf_attr.h (BPF_PROG_BIND_MAP_struct): New structure introduced\nby Linux commit v5.10-rc1~107^2~169^2~20^2~3.\n(BPF_PROG_BIND_MAP_struct_size, expected_BPF_PROG_BIND_MAP_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_PROG_BIND_MAP)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_PROG_BIND_MAP).\n(BPF_PROG_BIND_MAP_checks): New checks array.\n(main) <checks>: Add CHK(BPF_PROG_BIND_MAP).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43dff64a2268c744dab511aeb81d1377b93a4569", "commit_date": "2023-08-06T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_LINK_DETACH command\n\n* src/bpf_attr.h (BPF_LINK_DETACH_struct): New structure introduced\nby Linux commit v5.9-rc1~133^2~23^2~6^2~4.\n(BPF_LINK_DETACH_struct_size, expected_BPF_LINK_DETACH_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_LINK_DETACH)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_LINK_DETACH).\n(BPF_LINK_DETACH_checks): New checks array.\n(main) <checks>: Add CHK(BPF_LINK_DETACH).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "081bb9d3e2f04fcd1e1e059e5354457b8f08baa8", "commit_date": "2023-08-03T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_ITER_CREATE command\n\n* src/bpf_attr.h (BPF_ITER_CREATE_struct): New structure introduced\nby Linux commit v5.8-rc1~165^2~185^2~16^2~15.\n(BPF_ITER_CREATE_struct_size, expected_BPF_ITER_CREATE_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_ITER_CREATE)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_ITER_CREATE).\n(BPF_ITER_CREATE_checks): New checks array.\n(main) <checks>: Add CHK(BPF_ITER_CREATE).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "685d0f22fb3e1b8d42b1b1e892caafe6ba4c8ef8", "commit_date": "2023-08-02T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_ENABLE_STATS command\n\n* src/xlat/bpf_stats_type.in: New file.\n* src/bpf_attr.h (BPF_ENABLE_STATS_struct): New structure introduced\nby Linux commit v5.8-rc1~165^2~343^2~3^2~2.\n(BPF_ENABLE_STATS_struct_size, expected_BPF_ENABLE_STATS_struct_size):\nNew macros.\n* src/bpf.c: Include \"xlat/bpf_stats_type.h\".\n(BEGIN_BPF_CMD_DECODER(BPF_ENABLE_STATS)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_ENABLE_STATS).\n(BPF_ENABLE_STATS_checks): New checks array.\n(main) <checks>: Add CHK(BPF_ENABLE_STATS).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "433c742a854b15adc47deb28fa4d9ada95806833", "commit_date": "2023-08-01T08:00:00Z", "commit_message": "Implement decoding of fchmodat2 syscall\n\nThis new syscall is expected to be introduced in Linux kernel v6.6-rc1.\n\n* src/xlat/fchmodat_flags.in: New file.\n* src/chmod.c: Include <linux/fcntl.h> and \"xlat/fchmodat_flags.h\".\n(decode_fchmodat): New function.\n(SYS_FUNC(fchmodat)): Use it.\n(SYS_FUNC(fchmodat2)): New function.\n* src/pathtrace.c (pathtrace_match_set): Handle SEN_fchmodat2.\n* src/linux/generic/syscallent-common.h [BASE_NR + 452]: Wire up\nfchmodat2.\n* tests/fchmodat2.c: New file.\n* tests/pure_executables.list: Add fchmodat2.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (fchmodat2, fchmodat2--secontext,\nfchmodat2--secontext_full, fchmodat2--secontext_full_mismatch,\nfchmodat2--secontext_mismatch): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c3127cf6d0e19ec1d2c8519dc11f71549080e5b7", "commit_date": "2023-07-31T08:00:00Z", "commit_message": "tests/times: use libc times instead of raw syscall on s390\n\nThe libc implementation of times(2) has additional handling\nfor error codes compared to the raw syscall. Therefore\nuse the libc implementation on s390 like it is already done\nfor MIPS.\n\nSigned-off-by: Sven Schnelle <svens@linux.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "207baad9c5b913b5cfb685711d353e0d39ea8d42", "commit_date": "2023-07-31T08:00:00Z", "commit_message": "Implement decoding of cachestat syscall\n\nThis new syscall was introduced by Linux kernel commit\nv6.5-rc1~176^2~364.\n\n* src/cachestat.c: New file.\n* src/cachestat.h: Likewise.\n* src/Makefile.am (libstrace_a_SOURCES): Add cachestat.c and\ncachestat.h.\n* src/linux/generic/syscallent-common.h [BASE_NR + 451]: Wire up\ncachestat.\n* tests/cachestat.c: New file.\n* tests/cachestat-P.c: Likewise.\n* tests/cachestat-fd.c: Likewise.\n* tests/cachestat-success.c: Likewise.\n* tests/pure_executables.list: Add cachestat, cachestat-P, cachestat-fd,\nand cachestat-success.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (cachestat, cachestat-P, cachestat-fd,\ncachestat-success): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b074f77088ece7360fc7cec62a641955a40cb539", "commit_date": "2023-07-30T08:00:00Z", "commit_message": "xlat: update V4L2_* constants\n\n* src/xlat/v4l2_control_ids.in (V4L2_CID_MPEG_VIDEO_AV1_PROFILE,\nV4L2_CID_MPEG_VIDEO_AV1_LEVEL): New constants introduced by Linux kernel\ncommit v6.5-rc1~48^2~27.\n* src/xlat/v4l2_control_types.in (V4L2_CTRL_TYPE_AV1_SEQUENCE,\nV4L2_CTRL_TYPE_AV1_TILE_GROUP_ENTRY, V4L2_CTRL_TYPE_AV1_FRAME,\nV4L2_CTRL_TYPE_AV1_FILM_GRAIN): Likewise.\n* src/xlat/v4l2_pix_fmts.in (V4L2_PIX_FMT_AV1_FRAME): Likewise.\n(V4L2_PIX_FMT_NV15_4L4): New constant introduced by Linux kernel commit\nv6.5-rc1~48^2~23.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb9cd896533b049cd51c6e83da94cc81180268fd", "commit_date": "2023-07-29T08:00:00Z", "commit_message": "xlat: update PR_* constants\n\n* src/xlat/prctl_options.in (PR_RISCV_V_SET_CONTROL,\nPR_RISCV_V_GET_CONTROL): New constants introduced by Linux kernel\ncommit v6.5-rc1~120^2~17^2~6.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee6e2d4ad7d719358f0bbef062c91e7d1797a92f", "commit_date": "2023-07-28T08:00:00Z", "commit_message": "xlat: update NFT_MSG_* constants\n\n* src/xlat/nf_nftables_msg_types.in (NFT_MSG_GETSETELEM_RESET):\nNew constant introduced by Linux kernel commit v6.5-rc1~163^2~9^2~1.\n* src/netlink.c (decode_nlmsg_flags_netfilter): Handle it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e18ab1472ab4aa10e7cd3fad322ec4250bf1dc24", "commit_date": "2023-07-27T08:00:00Z", "commit_message": "xlat: update MOVE_MOUNT_* constants\n\n* src/xlat/move_mount_flags.in (MOVE_MOUNT_BENEATH): New constant\nintroduced by Linux kernel commit v6.5-rc1~243^2.\n* tests/move_mount.c: Add checks, update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcb9f3867d26fe22790137c7993333fd00c85f40", "commit_date": "2023-07-26T08:00:00Z", "commit_message": "xlat: update KVM_* constants\n\n* src/xlat/kvm_cap.in (KVM_CAP_ARM_EAGER_SPLIT_CHUNK_SIZE,\nKVM_CAP_ARM_SUPPORTED_BLOCK_SIZES): New constants introduced\nby Linux kernel commit v6.5-rc1~71^2~7^2~7^2~8.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cd69544d82687c83bff489e77ae5ffa9de3243c", "commit_date": "2023-07-25T08:00:00Z", "commit_message": "xlat: update IORING_SETUP_* constants\n\n* src/xlat/uring_setup_flags.in (IORING_SETUP_SINGLE_ISSUER):\nNew constant introduced by Linux kernel commit v6.0-rc1~181^2~92.\n(IORING_SETUP_DEFER_TASKRUN): New constant introduced by Linux kernel\ncommit  v6.1-rc1~135^2~51.\n(IORING_SETUP_NO_MMAP): New constant introduced by Linux kernel\ncommit v6.5-rc1~235^2~32.\n(IORING_SETUP_REGISTERED_FD_ONLY): New constant introduced\nby Linux kernel commit v6.5-rc1~235^2~31.\n* tests/io_uring_setup.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7521abf40a854d7f9cdcef02d1d4a9bab4a7c1b", "commit_date": "2023-07-24T08:00:00Z", "commit_message": "xlat: update AT_* constants\n\n* src/xlat/name_to_handle_at_flags.in (AT_HANDLE_FID): New constant\nintroduced by Linux kernel v6.5-rc1~146^2~3.\n* tests/file_handle.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "902370de2f771d9af23210be2f10ed7cf613798f", "commit_date": "2023-07-23T08:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_PPC_DEXCR): New constant\nintroduced by Linux kernel commit v6.5-rc1~121^2~37.\n(NT_PPC_HASHKEYR): New constant introduced by Linux kernel commit\nv6.5-rc1~121^2~36.\n(NT_RISCV_VECTOR): New constant introduced by Linux kernel commit\nv6.5-rc1~120^2~17^2~15.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c16832d01c09e8c249082a7fb04fc9f06fc9d00d", "commit_date": "2023-07-22T08:00:00Z", "commit_message": "xlat: update BPF_* constants\n\n* src/xlat/bpf_map_flags.in (BPF_F_PATH_FD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~215^2~9.\n* tests/bpf.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2543bc6b03bffe658b6358350aa5b2bbecbd4b87", "commit_date": "2023-07-21T08:00:00Z", "commit_message": "tests: explicitly check decoding of SCM_CREDENTIALS control messages\n\n* tests/scm_credentials.c: New file.\n* tests/pure_executables.list: Add scm_credentials.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (scm_credentials): New test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "329f107567a44ed74c7d2da003d96ae1714235ad", "commit_date": "2023-07-20T08:00:00Z", "commit_message": "net: implement decoding of SCM_PIDFD control messages\n\n* src/xlat/scmvals.in (SCM_PIDFD): New constant introduced by Linux\nkernel commit v6.5-rc1~163^2~115^2~3.\n* src/msghdr.c (print_scm_pidfd): New function.\n(cmsg_socket_printers) <SCM_PIDFD>: Use it.\n* tests/scm_pidfd.c: New file.\n* tests/scm_pidfd-success.c: Likewise.\n* tests/pure_executables.list: Add scm_pidfd and scm_pidfd-success.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (scm_pidfd, scm_pidfd-succes): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76ec0783c51339eb895026344f9f49c71528b3cb", "commit_date": "2023-07-19T08:00:00Z", "commit_message": "net: implement decoding of SO_PEERPIDFD socket option\n\n* src/xlat/sock_options.in (SO_PEERPIDFD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~115^2~2.\n* src/net.c (print_get_fd): New function.\n(print_getsockopt) <SO_PEERPIDFD>: Use it to print SO_PEERPIDFD.\n* tests/sockopt-sol_socket.c (main): Update unknown socket option.\n* tests/so_peerpidfd.c: New file.\n* tests/pure_executables.list: Add so_peerpidfd.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (so_peerpidfd): New test.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45717b56eba7c346e75a84e18c8c38918b1653bf", "commit_date": "2023-07-18T08:00:00Z", "commit_message": "net: implement decoding of SO_PASSPIDFD socket option\n\n* src/xlat/sock_options.in (SO_PASSPIDFD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~115^2~3.\n* src/net.c (print_getsockopt, print_setsockopt) <SO_PASSPIDFD>: Print it.\n* tests/sockopt-sol_socket.c (main): Test it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abc5101fcfc83125461d17a03b02128452449a6c", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "print_utils: add missing license header", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2aff05d6484719b5ef9895da59ba1e92c427b2ad", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "macros: mention --enable-bundled=yes in CHECK_{TYPE,IOCTL}_SIZE assert messages\n\nThese macros are used to check that the types provided in the kernel\nheaders have the expected characteristics, and most of them (if not all)\nare bundled with strace itself, so it might have sense to provide a hint\nto people who are not interested in waiting for the upstream to accommodate\nfor the UAPI changes and just want to get strace built that may\nbe of some help and save some time and effort spent on finding the option\nthemselves.\n\n* src/macros.h (CHECK_TYPE_SIZE, CHECK_IOCTL_SIZE): Mention\n--enable-bundled=yes configure option in the assertion failure message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f497c83a8164dfa2b5009f4306595df69e182c1", "commit_date": "2023-07-11T08:22:19Z", "commit_message": "syscall: keep the s_prev_ent if the current syscall is restart_syscall\n\nIt allows showing the original syscall in the cases where a syscall\ninterrupted repeatedly and avoid \"resuming interrupted restart_syscall\":\n\n    clock_nanosleep(CLOCK_REALTIME, 0, {tv_sec=0, tv_nsec=222222222}, {tv_sec=0, tv_nsec=211140476}) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted clock_nanosleep ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted restart_syscall ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    [...]\n\n* src/syscall.c (syscall_exiting_trace): store either tcp->s_prev_ent\nor tcp->s_ent as a new value for tcp->s_prev_ent depending on whether\nthe current sen is SEN_restart_syscall.\n* tests/restart_syscall.c: Make the interval timer trigger repeatedly,\ncheck for the absence of \"resuming interrupted restart_syscall\" output.\n\nReferences: https://bugzilla.redhat.com/2148516", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65e091a8cfe990b7f93e390444bb4d88b1b92b34", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "bundled: update linux UAPI headers to v6.5-rc1\n\n* bundled/linux/include/uapi/linux/counter.h: Update to\nheaders_install'ed Linux kernel v6.5-rc1.\n* bundled/linux/include/uapi/linux/fcntl.h: Likewise.\n* bundled/linux/include/uapi/linux/if_link.h: Likewise.\n* bundled/linux/include/uapi/linux/io_uring.h: Likewise.\n* bundled/linux/include/uapi/linux/mount.h: Likewise.\n* bundled/linux/include/uapi/linux/mptcp.h: Likewise.\n* bundled/linux/include/uapi/linux/netfilter/nf_tables.h: Likewise.\n* bundled/linux/include/uapi/linux/pkt_sched.h: Likewise.\n* bundled/linux/include/uapi/linux/prctl.h: Likewise.\n* bundled/linux/include/uapi/linux/types.h: Likewise.\n* bundled/linux/include/uapi/linux/v4l2-controls.h: Likewise.\n* bundled/linux/include/uapi/linux/version.h: Likewise.\n* bundled/linux/include/uapi/linux/videodev2.h: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8cec18845220cc82e45014ffdcab449ad664584", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "ptp: add max_phase_adj field and update rsv field of struct ptp_clock_caps\n\n* bundled/linux/include/uapi/linux/ptp_clock.h (struct ptp_clock_caps):\nAdd max_phase_adj field and update rsv field following the change\nintroduced by Linux kernel commit v6.5-rc1~163^2~65^2~4.\n* src/ptp.c (ptp_ioctl): Likewise.\n* tests/ioctl_ptp.c (test_no_device): Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0da3633669fcb829dd8d902d15443a755bd10fb", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "io_uring: rename resv2 fields of io_[cs]qring_offsets to user_addr\n\n* bundled/linux/include/uapi/linux/io_uring.h (struct io_sqring_offsets,\nstruct io_cqring_offsets): Rename resv2 to user_addr following\nthe change introduced by Linux kernel commit v6.5-rc1~235^2~32.\n* src/io_uring.c (print_io_sqring_offsets, print_io_cqring_offsets):\nLikewise.\n* tests/io_uring_setup.c (main): Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c163706715eb23b3609b1e02e1979fb9c8c435", "commit_date": "2023-06-30T08:00:00Z", "commit_message": "exec_or_die: install seccomp filter before setreuid\n\nWhile we strive to install the seccomp filter as late as possible before\nthe execve call, in --user mode this has an undesired side effect:\nthe setreuid call strips CAP_SYS_ADMIN, making PR_SET_NO_NEW_PRIVS call\na necessity, which results to the tracee less privileged than in the\ncase when --seccomp-bpf mode was not enabled.\n\nWorkaround this by moving the installation of the seccomp filter before\nthe setreuid call in --user mode.\n\n* src/strace.c (maybe_init_seccomp_filter): New function, a thin wrapper\naround init_seccomp_filter.\n(exec_or_die): Invoke maybe_init_seccomp_filter instead of\ninit_seccomp_filter before the execve call, limit the invocation\nto username == NULL case.\n(exec_or_die) <username != NULL>: Invoke maybe_init_seccomp_filter\nbefore the setreuid call.\n\nResolves: https://github.com/strace/strace/issues/126", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9df295d4b03df101b52598c6021074c0d9ff6fe3", "commit_date": "2023-06-29T08:00:00Z", "commit_message": "exec_or_die: remove incomprehensible setreuid invocation\n\nSince the very first commit setreuid is invoked in geteuid() != 0\ncase without any plausible explanation.  It makes little sense to\ninstall strace as a setuid-nonroot executable in the first place,\nand even in that case it is unclear why one would like to drop the\neffective nonzero uid before the execve.\n\n* src/strace.c (exec_or_die) <!username && geteuid() != 0>: Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59436f2e193107519282ea128ce23a7f6a8cb034", "commit_date": "2023-06-28T08:00:00Z", "commit_message": "exec_or_die: restore SIGCHLD handler earlier\n\nWhen --daemonize mode is not enabled, the disposition of SIGCHLD is not\nrelevant to the child process, so in that case sigaction can be called\nbefore the PTRACE_TRACEME call.\n\n* src/strace.c (exec_or_die) <!daemonized_tracer>: Restore SIGCHLD\nhandler before PTRACE_TRACEME.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "400086936db46299e4aca35ff739d0afa3dda506", "commit_date": "2023-06-27T08:00:00Z", "commit_message": "Post-release administrivia\n\n* NEWS: Add a header line for the next release.\n* debian/changelog.in: Add a changelog entry for 6.4-1.\n* strace.spec.in: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}], "master": [{"commit_oid": "c638896a14b0d4085ba3a08510d6ed405aa1c07e", "commit_date": "2023-10-17T08:00:00Z", "commit_message": "tests: extend -u coverage\n\n* tests/options-syntax.test: Use fakeroot to extend -u coverage.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "28fe634a3beecde1cabf1732b87e345cd55bc058", "commit_date": "2023-10-16T13:00:00Z", "commit_message": "Update ioctl entries from linux v6.6\n\n* src/linux/32/ioctls_inc_align16.h: Update from linux v6.6-rc6 using\nioctls_gen.sh.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd8685f33799035c3cb0baff756c9b6305a64da9", "commit_date": "2023-10-16T08:00:00Z", "commit_message": "tests: enhance termsig test\n\n* tests/termsig.test: Check -D mode as well.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "563f2f35f84019ac5c36c87445fe551a6a510267", "commit_date": "2023-10-16T08:00:00Z", "commit_message": "tests: cleanup termsig test\n\n* tests/termsig.test: Fold two identical blocks into a loop.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7c41ff4e2dfcf21265caf77f4e63e0ec25f97867", "commit_date": "2023-10-15T08:00:00Z", "commit_message": "tests: check how strace handles attempts to trace itself\n\n* tests/strace-self.test: New file.\n* tests/Makefile.am (MISC_TESTS): Add strace-self.test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "44cf51a38cce1e90bb6c22208fa45f95cdcc8f5d", "commit_date": "2023-10-14T08:00:00Z", "commit_message": "tests: fix so_peerpidfd test\n\n* tests/so_peerpidfd.c (print_pidfd): Fix expected output.\n\nFixes: v6.5~38 \"net: implement decoding of SO_PEERPIDFD socket option\"\nResolves: https://bugzilla.redhat.com/show_bug.cgi?id=2243631", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba9bef083db001107cbbd91d633a969cba6e47d7", "commit_date": "2023-10-13T08:00:00Z", "commit_message": "Set PTRACE_O_EXITKILL option along with PTRACE_O_TRACESECCOMP\n\nWhen --seccomp-bpf is enabled and -p/--attach option is not used,\na seccomp filter is being assigned to all tracees.  In that case also set\nPTRACE_O_EXITKILL option for all tracee processes and do not detach them\non cleanup so they will not be left running after the tracer exit.\n\n* doc/strace.1.in: Document this.\n* src/strace.c (init) <seccomp_filtering>: Add PTRACE_O_EXITKILL\nto ptrace_setoptions when all conditions are met.\n* tests/filter_seccomp-exitkill.test: New test.\n* tests/Makefile.am (MISC_TESTS): Add filter_seccomp-exitkill.test.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0e007f6d2b45b1c0544efcc0aa290da8f6c6f52", "commit_date": "2023-10-12T08:00:00Z", "commit_message": "Introduce --kill-on-exit option\n\nThis new option instructs the tracer to set PTRACE_O_EXITKILL option for\nall tracees and not to detach them on cleanup so they will not be left\nrunning after the tracer exit.\n\n* src/exitkill.c: New file.\n* src/exitkill.h: Likewise.\n* src/Makefile.am (libstrace_a_SOURCES): Add exitkill.c and exitkill.h.\n* src/strace.c: Include \"exitkill.h\".\n(init): Handle --kill-on-exit option.\n(cleanup): Do not detach tracees if PTRACE_O_EXITKILL is added\nto ptrace_setoptions.\n(usage): Document --kill-on-exit option.\n* doc/strace.1.in: Likewise.\n* tests/bexecve.test: Check that --kill-on-exit option works\nwith -b execve.\n* tests/kill-on-exit.sh: New file.\n* tests/kill-on-exit.test: New test.\n* tests/options-syntax.test: Check invalid use of --kill-on-exit option.\n* tests/Makefile.am (MISC_TESTS): Add kill-on-exit.test.\n(EXTRA_DIST): Add kill-on-exit.sh.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "42688d0010930b51e15d597ec0dfb17217fe4b1c", "commit_date": "2023-10-12T08:00:00Z", "commit_message": "Print a debug message containing the pid of the daemonized tracer process\n\n* src/strace.c (startup_attach) <daemonized_tracer>: Print a debug\nmessage containing the tracer pid.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f8501a75dd2f45ddacdfb7a7ac5ca152b6405a7", "commit_date": "2023-10-11T08:00:00Z", "commit_message": "Disable seccomp filtering when all tracees are attached using -p option\n\n* src/strace.c (init): Optimize disabling of seccomp filtering\nwhen it is not going to be used anyway.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6432ad76c0111463b1189917e23ac2a317e16c06", "commit_date": "2023-10-11T08:00:00Z", "commit_message": "Reorder --seccomp-bpf incompatibility diagnostic messages\n\n* src/strace.c (init): Reorder --seccomp-bpf incompatibility diagnostic\nmessages.\n* tests/bexecve.test: Update.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8762f29148136f7781f29b2993b0731688896973", "commit_date": "2023-10-10T08:00:00Z", "commit_message": "Unexport ptrace_setoptions variable\n\n* src/strace.c (ptrace_setoptions): Add static qualifier.\n* src/defs.h (ptrace_setoptions): Remove declaration.\n\nComplements: v4.10~73 \"Remove support for systems without PTRACE_SETOPTIONS\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "973c970b296d65f9b076b6815404cb63fcfca3b1", "commit_date": "2023-10-09T08:00:00Z", "commit_message": "tests: extend UFFDIO_* ioctl coverage\n\n* tests/ioctl_uffdio.c: Check UFFDIO_* ioctl decoding even when\nthe kernel does not provide userfaultfd support.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c0892d9fcbe3e3c9430559d84a5c2bff380195d9", "commit_date": "2023-10-08T08:00:00Z", "commit_message": "userfaultfd: implement decoding of UFFDIO_POISON ioctl\n\n* src/linux/32/ioctls_inc_align16.h (UFFDIO_POISON): New\nconstant introduced by Linux kernel commit v6.6-rc1~53^2~425.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* src/xlat/uffd_poison_mode_flags.in: New file.\n* src/userfaultfd.c: Include \"xlat/uffd_poison_mode_flags.h\".\n(uffdio_ioctl): Decode UFFDIO_POISON command.\n* tests/ioctl_uffdio.c (main): Check it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a1331c99a3866ae66b4955649b53da736920097e", "commit_date": "2023-10-05T08:00:00Z", "commit_message": "userfaultfd: implement decoding of UFFDIO_CONTINUE ioctl\n\n* src/xlat/uffd_continue_mode_flags.in: New file.\n* src/userfaultfd.c: Include \"xlat/uffd_continue_mode_flags.h\".\n(uffdio_ioctl): Decode UFFDIO_CONTINUE command introduced\nby Linux kernel commit v5.13-rc1~39^2~86.\n* tests/ioctl_uffdio.c (main): Check it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c6dcf2b01116d1e3a13c3ca8f2fc5c51e1added6", "commit_date": "2023-10-04T08:00:00Z", "commit_message": "userfaultfd: implement decoding of UFFDIO_WRITEPROTECT ioctl\n\n* src/xlat/uffd_writeprotect_mode_flags.in: New file.\n* src/userfaultfd.c: Include \"xlat/uffd_writeprotect_mode_flags.h\".\n(uffdio_ioctl): Decode UFFDIO_WRITEPROTECT command introduced\nby Linux kernel commit v5.7-rc1~58^2~113.\n* tests/ioctl_uffdio.c (main): Check it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "318705f080a568a129e483587e33cdb62b8c6914", "commit_date": "2023-10-03T08:00:00Z", "commit_message": "xlat: update V4L2_* constants\n\n* src/xlat/v4l2_pix_fmts.in (V4L2_PIX_FMT_MT2110T): New constant\nintroduced by Linux kernel commit v6.6-rc1~97^2~156.\n(V4L2_PIX_FMT_MT2110R): New constant introduced by Linux kernel\ncommit v6.6-rc1~97^2~155.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b45ed94f6926c9a7aae6bfb54f9a47ea313c0646", "commit_date": "2023-10-02T08:00:00Z", "commit_message": "Update copyright year number range\n\n* COPYING: Update copyright year number range.\n* tests/COPYING: Likewise.\n* debian/copyright: Likewise.\n\nResolves: https://github.com/strace/strace/issues/267", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "51aaf9146e8c8f00c5946764c472c75d511cf899", "commit_date": "2023-10-01T08:00:00Z", "commit_message": "xlat: update UFFD_* constants\n\n* src/xlat/uffd_api_features.in (UFFD_FEATURE_POISON): New constant\nintroduced by Linux kernel commit v6.6-rc1~53^2~422.\n* src/xlat/uffd_register_ioctl_flags.in (1<<_UFFDIO_POISON): Likewise.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1424beea941d9371e5e8be0d41a4aefd750b4846", "commit_date": "2023-09-28T08:00:00Z", "commit_message": "Implement decoding of SECCOMP_IOCTL_NOTIF_SET_FLAGS ioctl\n\n* src/linux/32/ioctls_inc_align16.h (SECCOMP_IOCTL_NOTIF_SET_FLAGS): New\nconstant introduced by Linux kernel commit v6.6-rc1~205^2~6.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* src/xlat/seccomp_ioctl_notif_flags.in: New file.\n* src/seccomp_ioctl.c: Include \"xlat/seccomp_ioctl_notif_flags.h\"\n(seccomp_ioctl): Decode SECCOMP_IOCTL_NOTIF_SET_FLAGS command.\n* tests/ioctl_seccomp.c (main): Check it.\n* tests/gen_tests.in (ioctl_seccomp-y-success--pidns-translation-Xraw,\nioctl_seccomp-y-success-Xraw): Update the argument for -a option.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55f69b45456f4b734a1bd9b211ce48bafaa88d3f", "commit_date": "2023-09-27T08:00:00Z", "commit_message": "xlat: update QFMT_* constants\n\n* src/xlat/quota_formats.in (QFMT_SHMEM): New constant introduced\nby Linux kernel commit v6.6-rc1~219^2~16.\n* tests/quotactl.c (print_dqfmt): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9699659102028b90eef41e31f074f395ea3c49b", "commit_date": "2023-09-26T08:00:00Z", "commit_message": "Implement decoding of FSCONFIG_CMD_CREATE_EXCL fsconfig command\n\n* src/xlat/fsconfig_cmds.in (FSCONFIG_CMD_CREATE_EXCL): New constant\nintroduced by Linux kernel commit v6.6-rc1~221^2.\n* src/fsconfig.c (SYS_FUNC(fsconfig)): Handle it.\n* tests/fsconfig.c (main): Check it.\n(test_fsconfig_unknown): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd75427e45cebc897d06a0e5d2ea06194985ff1d", "commit_date": "2023-09-25T08:00:00Z", "commit_message": "xlat: update KEXEC_* constants\n\n* src/xlat/kexec_load_flags.in (KEXEC_UPDATE_ELFCOREHDR):\nNew constant introduced by Linux kernel commit v6.6-rc1~155^2~4.\n* tests/kexec_load.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d5fd69fbd45c2ebe6f57283e5170f948678acd94", "commit_date": "2023-09-24T08:00:00Z", "commit_message": "xlat: update DEVCONF_* constants\n\n* src/xlat/inet6_devconf_indices.in (DEVCONF_ACCEPT_RA_MIN_LFT):\nNew constant introduced by Linux kernel commit v6.6-rc1~162^2~302.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1deac3d2526e73af2786aa298b3cb9818365b208", "commit_date": "2023-09-23T08:00:00Z", "commit_message": "xlat: update IORING_SETUP_* constants\n\n* src/xlat/uring_setup_flags.in (IORING_SETUP_NO_SQARRAY):\nNew constant introduced by Linux kernel commit v6.6-rc1~152^2~5.\n* tests/io_uring_setup.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a49c2a5a867df39abda009957ce77f173e80c7fe", "commit_date": "2023-09-22T08:00:00Z", "commit_message": "xlat: update XDP_* constants\n\n* src/xlat/xdp_sockaddr_flags.in (XDP_USE_SG): New constant introduced\nby Linux kernel commit v6.6-rc1~162^2~371^2~3^2~22.\n* tests/sockaddr_xlat.c (check_xdp): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2316f61f6c0ba807afb09497dc30de9fded2ba01", "commit_date": "2023-09-21T08:00:00Z", "commit_message": "Implement decoding of IFLA_BRPORT_BACKUP_NHID netlink attribute\n\n* src/xlat/rtnl_ifla_brport_attrs.in (IFLA_BRPORT_BACKUP_NHID):\nNew constant introduced by Linux kernel commit v6.6-rc1~162^2~377^2~1.\n* src/rtnl_link.c (ifla_brport_nla_decoders): Add it.\n* tests/nlattr_ifla_brport.c (main): Update expected output.\n* tests/nlattr_ifla_linkinfo.c (main): Likewise.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b084b8e91d520825e11966245162a6999485469", "commit_date": "2023-09-20T08:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_X86_SHSTK): New constant\nintroduced by Linux kernel commit v6.6-rc1~117^2~7.\n(NT_RISCV_CSR, NT_RISCV_VECTOR): New constants introduced\nby Linux kernel commit v6.6-rc1~10^2~6^2.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7aa9040bf6f9dfb89bf3336973126ffb422d2cb", "commit_date": "2023-09-19T08:00:00Z", "commit_message": "xlat: update BPF_* constants\n\n* src/xlat/bpf_attach_flags.in( BPF_F_BEFORE, BPF_F_AFTER, BPF_F_ID,\nBPF_F_LINK): New constants introduced by Linux kernel commit\nv6.6-rc1~162^2~371^2~2^2~7.\n* src/xlat/bpf_attach_type.in (BPF_TCX_INGRESS, BPF_TCX_EGRESS): New\nconstants introduced by Linux kernel commit v6.6-rc1~162^2~371^2~2^2~6.\n(BPF_TRACE_UPROBE_MULTI): New constant introduced by Linux kernel\ncommit v6.6-rc1~10^2~4^2~16^2~25.\n* src/xlat/ebpf_mode.in (BPF_MEMSX): New constant introduced\nby Linux kernel commit v6.6-rc1~162^2~233^2~17^2~16.\n* tests/bpf.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc6eea3bd43e0991f1874bf89d13fa9466e83117", "commit_date": "2023-09-18T08:00:00Z", "commit_message": "xlat: update SEGV_* constants\n\n* src/xlat/sigsegv_codes.in (SEGV_CPERR): New constant\nintroduced by Linux kernel commit v6.6-rc1~117^2~20.\n* tests/ptrace.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b81d6795cee32fda740c729f511cb13742fdb41", "commit_date": "2023-09-17T21:40:24Z", "commit_message": "bundled: update linux UAPI headers to v6.6-rc2\n\n* bundled/linux/include/uapi/linux/blkzoned.h: Update to\nheaders_install'ed Linux kernel v6.6-rc2.\n* bundled/linux/include/uapi/linux/btrfs_tree.h: Likewise.\n* bundled/linux/include/uapi/linux/if_link.h: Likewise.\n* bundled/linux/include/uapi/linux/if_xdp.h: Likewise.\n* bundled/linux/include/uapi/linux/io_uring.h: Likewise.\n* bundled/linux/include/uapi/linux/kexec.h: Likewise.\n* bundled/linux/include/uapi/linux/mount.h: Likewise.\n* bundled/linux/include/uapi/linux/netfilter/nf_tables.h: Likewise.\n* bundled/linux/include/uapi/linux/perf_event.h: Likewise.\n* bundled/linux/include/uapi/linux/pkt_sched.h: Likewise.\n* bundled/linux/include/uapi/linux/quota.h: Likewise.\n* bundled/linux/include/uapi/linux/seccomp.h: Likewise.\n* bundled/linux/include/uapi/linux/userfaultfd.h: Likewise.\n* bundled/linux/include/uapi/linux/version.h: Likewise.\n* bundled/linux/include/uapi/linux/videodev2.h: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e891cc9ddc90bc16a31df24815ae024f888fbaf2", "commit_date": "2023-09-15T08:00:00Z", "commit_message": ".github: switch x32 runners from ubuntu-latest to ubuntu-20.04\n\nApparently, ubuntu-22.04 runners no longer support x32 executables,\nso downgrade these runners to ubuntu-20.04.  As ubuntu-20.04 does not\nprovide gcc12, remove gcc12-x32-* runners.\n\n* .github/workflows/ci.yml (gcc13-x32-kheaders, gcc13-x32-nostacktrace,\ngcc11-x32-kheaders, gcc11-x32-nostacktrace): Replace ubuntu-latest with\nubuntu-20.04.\n(gcc12-x32-kheaders, gcc12-x32-nostacktrace): Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4eda6d7b61f46d81f7f87afa6fa802dcbe136ca1", "commit_date": "2023-09-14T08:00:00Z", "commit_message": "xlat: add fallback definition for BTRFS_EXTENT_REF_V0_KEY\n\n* src/xlat/btrfs_key_types.in (#unconditional): Remove.\n(BTRFS_EXTENT_REF_V0_KEY): Provide fallback definition for the constant\nthat was introduced by Linux kernel commit v2.6.31-rc1~315^2~22 and\nlater removed by Linux kernel commit v6.6-rc1~207^2~16.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3d53788879452213353b2cbe318bd2314e7c0403", "commit_date": "2023-09-13T08:00:00Z", "commit_message": "tests: introduce RVAL_E2BIG macro\n\n* tests/tests.h (RVAL_E2BIG): New macro.\n* tests/ioctl_kvm_run_common.c: Use it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b20a68f95b8b9a5c567c4bb713b851140c02fac", "commit_date": "2023-09-12T08:00:00Z", "commit_message": "tests: introduce RVAL_EOVERFLOW macro\n\n* tests/tests.h (RVAL_EOVERFLOW): New macro.\n* tests/btrfs.c: Use it.\n* tests/file_handle.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a6d10ed783fc29c4172e99b54cef52c962f0cfb7", "commit_date": "2023-09-11T08:00:00Z", "commit_message": "tests: introduce RVAL_ENOSYS macro\n\n* tests/tests.h (RVAL_ENOSYS): New macro.\n* tests/futex.c: Use it.\n* tests/pause.c: Likewise.\n* tests/setresugid.c: Likewise.\n* tests/setreugid.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40f42d51addd2111e2991eaac43b3dcc4177e45e", "commit_date": "2023-09-10T08:00:00Z", "commit_message": "tests: introduce RVAL_EAGAIN macro\n\n* tests/tests.h (RVAL_EAGAIN): New macro.\n* tests/rt_sigtimedwait.c: Use it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a32bc81a9d62bc16ca39a0b0fdee628bc9fd919", "commit_date": "2023-09-09T08:00:00Z", "commit_message": "tests: introduce RVAL_ENOENT macro\n\n* tests/tests.h (RVAL_ENOENT): New macro.\n* tests/attach-f-p.c: Use it.\n* tests/fork-f.c: Likewise.\n* tests/readlink.c: Likewise.\n* tests/readlinkat.c: Likewise.\n* tests/tests.h: Likewise.\n* tests/umovestr2.c: Likewise.\n* tests/vfork-f.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "520f58cfaadab454458f50ef53491249377442f5", "commit_date": "2023-09-08T08:00:00Z", "commit_message": "tests: introduce RVAL_EFAULT macro\n\n* tests/tests.h (RVAL_EFAULT): New macro.\n* tests/clock_nanosleep.c: Use it.\n* tests/getresugid.c: Likewise.\n* tests/ioctl_kvm_run_common.c: Likewise.\n* tests/ipc.c: Likewise.\n* tests/poll.c: Likewise.\n* tests/pread64-pwrite64.c: Likewise.\n* tests/read-write.c: Likewise.\n* tests/rt_sigpending.c: Likewise.\n* tests/rt_sigprocmask.c: Likewise.\n* tests/seccomp-filter-v.c: Likewise.\n* tests/sendfile.c: Likewise.\n* tests/sendfile64.c: Likewise.\n* tests/sigaction.c: Likewise.\n* tests/sigpending.c: Likewise.\n* tests/sysinfo.c: Likewise.\n* tests/times-fail.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c78448d9e5b1bb009c14ea4d0a3dc1188385a10", "commit_date": "2023-09-07T08:00:00Z", "commit_message": "tests: introduce RVAL_EINVAL macro\n\n* tests/tests.h (RVAL_EINVAL): New macro.\n* tests/clock_nanosleep.c: Use it.\n* tests/file_handle.c: Likewise.\n* tests/getrandom.c: Likewise.\n* tests/pread64-pwrite64.c: Likewise.\n* tests/preadv.c: Likewise.\n* tests/rt_sigpending.c: Likewise.\n* tests/rt_sigprocmask.c: Likewise.\n* tests/rt_sigsuspend.c: Likewise.\n* tests/rt_sigtimedwait.c: Likewise.\n* tests/seccomp-filter-v.c: Likewise.\n* tests/sendfile.c: Likewise.\n* tests/sendfile64.c: Likewise.\n* tests/sigaction.c: Likewise.\n* tests/timer_xettime.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2f4d61805029e1acc824d447309f9c11febae556", "commit_date": "2023-09-06T08:00:00Z", "commit_message": "tests: use RVAL_EBADF macro more consistently\n\n* tests/ioctl_nbd.c (RVAL_EBADF): Move macro ...\n* tests/tests.h: ... here.\n* tests/btrfs.c: Use it.\n* tests/ioctl.c: Likewise.\n* tests/ioctl_block.c: Likewise.\n* tests/ioctl_dm.c: Likewise.\n* tests/ioctl_evdev.c: Likewise.\n* tests/ioctl_inotify.c: Likewise.\n* tests/ioctl_kd.c: Likewise.\n* tests/ioctl_loop.c: Likewise.\n* tests/ioctl_nsfs.c: Likewise.\n* tests/ioctl_perf.c: Likewise.\n* tests/ioctl_scsi.c: Likewise.\n* tests/ioctl_seccomp.c: Likewise.\n* tests/ioctl_sg_io_v3.c: Likewise.\n* tests/ioctl_sg_io_v4.c: Likewise.\n* tests/ioctl_v4l2.c: Likewise.\n* tests/mmap.c: Likewise.\n* tests/net-sockaddr.c: Likewise.\n* tests/sendfile.c: Likewise.\n* tests/sendfile64.c: Likewise.\n* tests/ioctl_random.c (RVAL_EBADF): Remove.\n* tests/ioctl_tee.c: Likewise.\n* tests/ioctl_watchdog.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8bbc479ee1ace7c152a6b931fc2bde15eb749c0e", "commit_date": "2023-09-05T08:00:00Z", "commit_message": "tests: cleanup use of errno2name()\n\n* tests/acct.c: Use sprintrc() instead of errno2name() and %m.\n* tests/copy_file_range.c: Likewise.\n* tests/epoll_create.c: Likewise.\n* tests/epoll_pwait.c: Likewise.\n* tests/epoll_wait.c: Likewise.\n* tests/execveat.c: Likewise.\n* tests/fchdir.c: Likewise.\n* tests/fdatasync.c: Likewise.\n* tests/file_handle.c: Likewise.\n* tests/flock.c: Likewise.\n* tests/fsync.c: Likewise.\n* tests/ftruncate.c: Likewise.\n* tests/ftruncate64.c: Likewise.\n* tests/get_mempolicy.c: Likewise.\n* tests/ioctl_uffdio.c: Likewise.\n* tests/ioperm.c: Likewise.\n* tests/iopl.c: Likewise.\n* tests/ipc.c: Likewise.\n* tests/kill.c: Likewise.\n* tests/link.c: Likewise.\n* tests/linkat.c: Likewise.\n* tests/llseek.c: Likewise.\n* tests/lseek.c: Likewise.\n* tests/migrate_pages.c: Likewise.\n* tests/mincore.c: Likewise.\n* tests/mknodat.c: Likewise.\n* tests/mlock2.c: Likewise.\n* tests/mmsg_name.c: Likewise.\n* tests/msg_control.c: Likewise.\n* tests/msg_name.c: Likewise.\n* tests/prctl-seccomp-strict.c: Likewise.\n* tests/preadv-pwritev.c: Likewise.\n* tests/preadv2-pwritev2.c: Likewise.\n* tests/pwritev.c: Likewise.\n* tests/readv.c: Likewise.\n* tests/rename.c: Likewise.\n* tests/renameat.c: Likewise.\n* tests/renameat2.c: Likewise.\n* tests/rmdir.c: Likewise.\n* tests/sched_xetparam.c: Likewise.\n* tests/seccomp-filter.c: Likewise.\n* tests/setdomainname.c: Likewise.\n* tests/shmxt.c: Likewise.\n* tests/shutdown.c: Likewise.\n* tests/socketcall.c: Likewise.\n* tests/splice.c: Likewise.\n* tests/swap.c: Likewise.\n* tests/symlinkat.c: Likewise.\n* tests/sync_file_range.c: Likewise.\n* tests/sync_file_range2.c: Likewise.\n* tests/tee.c: Likewise.\n* tests/timer_create.c: Likewise.\n* tests/truncate.c: Likewise.\n* tests/truncate64.c: Likewise.\n* tests/umode_t.c: Likewise.\n* tests/umount.c: Likewise.\n* tests/umovestr3.c: Likewise.\n* tests/unlink.c: Likewise.\n* tests/unlinkat.c: Likewise.\n* tests/waitpid.c: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d144e0ee6a7d91cf88fd0d2b80942deb1a3d1508", "commit_date": "2023-09-04T08:00:00Z", "commit_message": "msghdr: print cmsg_data for unknown cmsg_type\n\n* src/msghdr.c (print_cmsg_type_data): Make sure cmsg_data is always\nprinted when cmsg_data length is non-zero.  If cmsg_type is unknown or\nthere is no specific printer for the given cmsg_type and cmsg_data\nlength, print the raw data.\n* tests/msg_control.c (print_fds, test_unknown_type,\ntest_unknown_level): Check it.\n\nResolves: https://github.com/strace/strace/issues/261", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "96a04e87a45eba98c5735d25c2026a3314bb8149", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: use proper quoting of AC_LANG_PROGRAM arguments\n\nAC_LANG_PROGRAM arguments that should be treated as literals\nmust be quoted twice.\n\n* configure.ac: Use double quoting of AC_LANG_PROGRAM arguments\nin the check whether to use bundled linux kernel headers.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2ae52f03fb41babc747d122cb07a062ee7386b1a", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: use AC_LANG_PROGRAM instead of AC_LANG_SOURCE\n\nConsistently use AC_LANG_PROGRAM for arguments passed to\nAC_COMPILE_IFELSE.\n\n* configure.ac: Replace AC_LANG_SOURCE with AC_LANG_PROGRAM.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3a50c9106aef560613fd73a39705ea80951b8e0", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: stop using AC_TRY_COMPILE\n\n* configure.ac (AC_TRY_COMPILE): Replace with AC_COMPILE_IFELSE\nas suggested by autoupdate.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7dba982c36a07d128aa4a7fbf8184fd1eefb445a", "commit_date": "2023-09-03T08:00:00Z", "commit_message": "configure: stop using AC_PROG_CC_STDC\n\nThis macro became obsolete with GNU Autoconf 2.70.\n\n* configure.ac (AC_PROG_CC_STDC): Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "24093ca84733db0ce80deb717b067c52518cd1f8", "commit_date": "2023-09-02T08:00:00Z", "commit_message": "Post-release administrivia\n\n* NEWS: Add a header line for the next release.\n* debian/changelog.in: Add a changelog entry for 6.5-1.\n* strace.spec.in: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b271519228028f77da64d958b9419cef0762e24b", "commit_date": "2023-09-01T08:00:00Z", "commit_message": "Prepare for 6.5 release\n\n* NEWS: Update for 6.5 release.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14417680675d0210f10df972e4995d2b5a73556f", "commit_date": "2023-09-01T08:00:00Z", "commit_message": "Update copyright headers\n\nHeaders updated automatically using maint/update_copyright_years.sh\nscript.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0abd3a6e1c64504cc8805e12ce59c582ff3b2ecf", "commit_date": "2023-09-01T08:00:00Z", "commit_message": "Fix preprocessor indentation\n\nIndent the C preprocessor directives to reflect their nesting\nusing the following script:\n\n$ cppi -l $(git grep -El '^[[:space:]]*#[[:space:]]*(if|ifdef|ifndef|elif|else|endif|define|pragma)[[:space:]]' src tests |grep -Ev '\\.(sh|test)$') |while read f; do\n\tcppi < \"$f\" > \"$f\".cppi; mv \"$f\".cppi \"$f\"\ndone", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7178658ead8ccfe196694dc5434f0f37db8746b4", "commit_date": "2023-08-31T08:00:00Z", "commit_message": "tests: avoid libc definition for time_t in direct syscalls\n\nFollowing up the commit that stopped using of struct timespec and struct\ntimeval as arguments of syscalls, avoid using time_t in initializations\nof kernel_old_timespec_t and kernel_old_timeval_t structures.\n\n* tests/aio.c (main): Do not use time_t in the initialization of tv_sec.\n* tests/aio_pgetevents.c (main): Likewise.\n* tests/clock_nanosleep.c (main): Likewise.\n* tests/futex.c (main): Likewise.\n* tests/futimesat.c (main): Likewise.\n* tests/nanosleep.c (main): Likewise.\n* tests/ppoll.c (main): Likewise.\n* tests/rt_sigtimedwait.c (main): Likewise.\n* tests/timer_xettime.c (main): Likewise.\n* tests/timerfd_xettime.c (main): Likewise.\n* tests/utimensat.c (main): Likewise.\n* tests/xettimeofday.c (main): Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9625f0953ef89477993931815834803b135760f", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests: do not use struct timespec in clock_nanosleep syscall\n\n* tests/mq_sendrecv.c (do_send, do_recv, main): Replace struct timespec\nwith kernel_old_timespec_t in direct invocations of clock_nanosleep\nsyscall.\n* tests/threads-execve.c (thread, main): Likewise.\n\nComplements: v6.4-41-g51cb6c52e394 \"tests: do not use libc definitions\nfor timespec/timeval in direct syscalls\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cf0c67b453c83523a022d1b0c1f7f9c33e5de6e6", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests: do not use struct timeval in gettimeofday syscall arguments\n\n* tests/delay.c: Include \"kernel_timeval.h\".\n(usecs_from_tv, check_delay, run): Replace struct timeval with\nkernel_old_timeval_t in direct invocations of gettimeofday syscall.\n\nComplements: v6.4-41-g51cb6c52e394 \"tests: do not use libc definitions\nfor timespec/timeval in direct syscalls\"", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "80ae02f0fbc2a6525797260e22e2885d5c443a6b", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "Use the proper type for decoding the time syscall\n\nDo not use time_t type provided by libc to decode the time syscall as\nthe latter uses kernel_long_t which does not necessarily match the type\nprovided by libc.\n\n* src/print_time.c (kernel_time_t): New type, defined to kernel_ulong_t.\nUse it instead of time_t.\n* tests/time.c (kernel_time_t): Likewise.\n(k_time): New function.\n(main): Use it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f50e4280239e896215f9ff5adb0b551ce6d3b94f", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests/clock_nanosleep.c: avoid use of CLOCK_ABSTIME on systems with 32 bit time_t.\n\nThis does break (syscall returning -EINVAL) if system date is set to post-2038.\n\nResolves: https://github.com/strace/strace/pull/265", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f78e0b03679d61183c2362c5a763401a40617b9d", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests/time.c: print syscall return values as unsigned decimal\n\nstrace prints them that way, and so the test has to follow,\neven if the actual time_t is signed.\n\nResolves: https://github.com/strace/strace/pull/264", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ff827d63360f07811320803f26201936557e5b28", "commit_date": "2023-08-30T08:00:00Z", "commit_message": "tests: do not use libc definitions for timespec/timeval in direct syscalls\n\nlibc does not guarantee that they match syscall structures,\nand indeed, they don't if components are built against glibc\nwith -D_TIME_BITS=64 on 32 bit platforms (to avoid collapse\nin 2038).\n\n* tests/tests.h: Include \"kernel_old_timespec.h\".\n(struct timespec): Remove forward declaration.\n(recv_mmsg): Replace struct timespec with kernel_old_timespec_t.\n* tests/aio.c (main): Replace struct timespec with kernel_old_timespec_t.\n* tests/aio_pgetevents.c (main): Likewise.\n* tests/clock_nanosleep.c (main): Likewise.\n* tests/futex.c (main): Likewise.\n* tests/libmmsg.c (recv_mmsg): Likewise.\n* tests/mmsg-silent.c (main): Likewise.\n* tests/ppoll.c (main): Likewise.\n* tests/recvmmsg-timeout.c (main): Likewise.\n* tests/rt_sigtimedwait.c (k_sigtimedwait, iterate, main): Likewise.\n* tests/sched_rr_get_interval.c (main): Likewise.\n* tests/utimensat.c (print_ts): Likewise.\n* tests/futimesat.c: Include \"kernel_timeval.h\".\n(print_tv, main): Replace struct timeval with kernel_old_timeval_t.\n* tests/utimes.c: Include \"kernel_timeval.h\".\n(TEST_STRUCT): Replace struct timeval with kernel_old_timeval_t.\n* tests/xettimeofday.c: Include \"kernel_timeval.h\".\n(main): Replace struct timeval with kernel_old_timeval_t.\n* tests/xselect.c: Likewise.\n\nResolves: https://github.com/strace/strace/issues/250\nResolves: https://github.com/strace/strace/pull/263", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "691678fcf0cf2d3ce23dd5fe6998be1673c00381", "commit_date": "2023-08-29T14:00:00Z", "commit_message": "Update ioctl entries from linux v6.5\n\n* src/linux/32/ioctls_inc_align16.h: Update from linux v6.5 using\nioctls_gen.sh.\n* src/linux/32/ioctls_inc_align32.h: Likewise.\n* src/linux/32/ioctls_inc_align64.h: Likewise.\n* src/linux/64/ioctls_inc.h: Likewise.\n* src/linux/x32/ioctls_inc0.h: Likewise.\n* src/linux/s390/ioctls_arch0.h: Likewise.\n* src/linux/s390x/ioctls_arch0.h: Likewise.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b355a82ff63f713b8b294a2707a4ab6f4cca7ab", "commit_date": "2023-08-29T14:00:00Z", "commit_message": "maint: Add support for *_IOCTL wrappers, such as ARMADA_IOCTL and UVIO_IOCTL\n\n* maint/ioctls_sym.sh (r_io): Add ([A-Z]+)?_S?IOCTL.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8c6e395a3033c2d20bc58b2d5aed46be4b0b32f1", "commit_date": "2023-08-29T14:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_RISCV_VECTOR): Remove constant\nintroduced by Linux kernel commit v6.5-rc1~120^2~17^2~15 and removed\nby Linux kernel commit commit v6.5~8^2~1^2~1.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d39aaf645b691cdabff55f4b2ba9982050e585d", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "tests/sched_xetaffinity: do not assume that cpuset_size is big enough\n\nCommit v5.15~160 (\"tests/sched_xetaffinity: add a check\nfor a non-properly-sized CPU set\") added a check that implicitly assumed\nthat cpuset_size is at least 8, which is not the case on 32-bit userspace\nwith less than 33 CPUs, and that has led to skipping the test altogether\non such systems due to syscall returning EFAULT.  Fix it by allocating\na separate set of the expected size and perform the check on it.\n\n* tests/sched_xetaffinity.c (main): Add crop_size constant, set to 8;\nadd crop_cpuset variable;  use them instead of cpuset_size and cpuset,\nrespectively, in the non-properly-sized CPU set check.\n\nFixes: v5.15~160 \"tests/sched_xetaffinity: add a check for a non-properly-sized CPU set\"\nReported-by: Sven Schnelle <svens@linux.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9474c474a04576971067a32507fb5a0251b5b762", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "ptp: provide additional information about max_phase_adj\n\nSince we know that it is in nanosecond, we can provide a comment to make\nit more human-readable.\n\n* src/ptp.c (ptp_ioctl): Use PRINT_FIELD_TICKS_D instead\nof PRINT_FIELD_D for max_phase_adj field printing.\n* tests/ioctl_ptp.c: Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0985c2978efb2c40b4c78807678cba8c9a31d3c", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "util: add print_ticks_d and PRINT_FIELD_TICKS{,_D}\n\nprint_ticks_d is similar to print_ticks, but handles signed numbers.\n\n* src/defs.h (print_ticks_d): New declaration.\n* src/util.c (print_ticks_d): New function.\n* src/print_fields.h (PRINT_FIELD_TICKS, PRINT_FIELD_TICKS_D): New\nmacros, wrappers for print_ticks and print_ticks_d, respectivaly.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b997b824a97900026222c19683cc1eb2f8cc499", "commit_date": "2023-08-29T13:40:56Z", "commit_message": "strace.spec: try to comply with the new Fedora package license policy\n\nNew Fedora policies[1][2] require the usage of the SPDX identifiers\nwith pretty specific syntax[3], and [4] requires refraining from any\n\"license analysis\" and listing all the licenses verbatim (which is especially\nfun with all the bundled sources), so here we are.  The %changelog entry\nmention is added per [5].\n\n[1] https://fedoraproject.org/wiki/Changes/SPDX_Licenses_Phase_2\n[2] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/\n[3] https://docs.fedoraproject.org/en-US/legal/license-field/#_conjunctive_and_licensing\n[4] https://docs.fedoraproject.org/en-US/legal/license-field/#_no_effective_license_analysis\n[5] https://docs.fedoraproject.org/en-US/legal/update-existing-packages/#_changelog_entry\n\n* strace.spec.in [0%{?fedora} >= 35 || 0%{?centos} >= 9 || 0%{?rhel} >= 9]\n(License): Update the license expression and add an appropriate comment.\n(%changelog): Mention it.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "472296f81513976c29a280825d7ca57bda18c862", "commit_date": "2023-08-10T08:00:00Z", "commit_message": "strace.spec.in: configure using --enable-bundled=yes\n\n* strace.spec.in (%build): Pass --enable-bundled=yes to %configure\nso that package builds wouldn't break unexpectedly when unreleased\nkernel headers are installed into the build environment.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "299f77b2ff7d9e95e79ce86ebf22ad0b8957a1c1", "commit_date": "2023-08-09T08:00:00Z", "commit_message": "xlat: remove BPF_F_PATH_FD from bpf_map_flags\n\nBPF_F_PATH_FD is applicable to BPF_OBJ_PIN and BPF_OBJ_GET commands\nonly, and therefore should be listed in bpf_file_flags only.\n\nThis reverts commit c16832d01c09e8c249082a7fb04fc9f06fc9d00d.\n\n* src/xlat/bpf_map_flags.in (BPF_F_PATH_FD): Remove.\n* tests/bpf.c: Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a8effeb1bf6ac1ec4b14dd381e6e9d28000b46a", "commit_date": "2023-08-08T08:00:00Z", "commit_message": "bpf: update decoding of BPF_OBJ_PIN and BPF_OBJ_GET commands\n\n* src/print_fields.h (PRINT_FIELD_DIRFD): New macro.\n* src/xlat/bpf_file_flags.in: New file.\n* src/bpf_attr.h (BPF_OBJ_PIN_struct): Add path_fd field introduced\nby Linux commit v6.5-rc1~163^2~215^2~9.\n(BPF_OBJ_PIN_struct_size, expected_BPF_OBJ_PIN_struct_size): Update.\n* src/bpf.c: Include \"xlat/bpf_file_flags.h\".\n(BEGIN_BPF_CMD_DECODER(BPF_OBJ_PIN)): Decode path_fd.\n* tests/bpf.c: Include \"xmalloc.h\".\n(at_fdcwd_str): New variable.\n(main): Initialize it.\n(init_BPF_OBJ_PIN_str): New function.\n(BPF_OBJ_PIN_checks): Check path_fd decoding.\n* tests/bpf-success-long-y.c (YFLAG): Define.\n* NEWS: Mention this.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6c86e6ef1f3bbd8ef20a700a3f7d34d35bd8fe6a", "commit_date": "2023-08-07T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_PROG_BIND_MAP command\n\n* src/bpf_attr.h (BPF_PROG_BIND_MAP_struct): New structure introduced\nby Linux commit v5.10-rc1~107^2~169^2~20^2~3.\n(BPF_PROG_BIND_MAP_struct_size, expected_BPF_PROG_BIND_MAP_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_PROG_BIND_MAP)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_PROG_BIND_MAP).\n(BPF_PROG_BIND_MAP_checks): New checks array.\n(main) <checks>: Add CHK(BPF_PROG_BIND_MAP).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "43dff64a2268c744dab511aeb81d1377b93a4569", "commit_date": "2023-08-06T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_LINK_DETACH command\n\n* src/bpf_attr.h (BPF_LINK_DETACH_struct): New structure introduced\nby Linux commit v5.9-rc1~133^2~23^2~6^2~4.\n(BPF_LINK_DETACH_struct_size, expected_BPF_LINK_DETACH_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_LINK_DETACH)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_LINK_DETACH).\n(BPF_LINK_DETACH_checks): New checks array.\n(main) <checks>: Add CHK(BPF_LINK_DETACH).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "081bb9d3e2f04fcd1e1e059e5354457b8f08baa8", "commit_date": "2023-08-03T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_ITER_CREATE command\n\n* src/bpf_attr.h (BPF_ITER_CREATE_struct): New structure introduced\nby Linux commit v5.8-rc1~165^2~185^2~16^2~15.\n(BPF_ITER_CREATE_struct_size, expected_BPF_ITER_CREATE_struct_size):\nNew macros.\n* src/bpf.c (BEGIN_BPF_CMD_DECODER(BPF_ITER_CREATE)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_ITER_CREATE).\n(BPF_ITER_CREATE_checks): New checks array.\n(main) <checks>: Add CHK(BPF_ITER_CREATE).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "685d0f22fb3e1b8d42b1b1e892caafe6ba4c8ef8", "commit_date": "2023-08-02T08:00:00Z", "commit_message": "bpf: implement decoding of BPF_ENABLE_STATS command\n\n* src/xlat/bpf_stats_type.in: New file.\n* src/bpf_attr.h (BPF_ENABLE_STATS_struct): New structure introduced\nby Linux commit v5.8-rc1~165^2~343^2~3^2~2.\n(BPF_ENABLE_STATS_struct_size, expected_BPF_ENABLE_STATS_struct_size):\nNew macros.\n* src/bpf.c: Include \"xlat/bpf_stats_type.h\".\n(BEGIN_BPF_CMD_DECODER(BPF_ENABLE_STATS)): New function.\n(SYS_FUNC(bpf)) <bpf_cmd_decoders[]>: Use it.\n* NEWS: Mention this.\n* tests/bpf.c (union bpf_attr_data): Add\nBPF_ATTR_DATA_FIELD(BPF_ENABLE_STATS).\n(BPF_ENABLE_STATS_checks): New checks array.\n(main) <checks>: Add CHK(BPF_ENABLE_STATS).", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "433c742a854b15adc47deb28fa4d9ada95806833", "commit_date": "2023-08-01T08:00:00Z", "commit_message": "Implement decoding of fchmodat2 syscall\n\nThis new syscall is expected to be introduced in Linux kernel v6.6-rc1.\n\n* src/xlat/fchmodat_flags.in: New file.\n* src/chmod.c: Include <linux/fcntl.h> and \"xlat/fchmodat_flags.h\".\n(decode_fchmodat): New function.\n(SYS_FUNC(fchmodat)): Use it.\n(SYS_FUNC(fchmodat2)): New function.\n* src/pathtrace.c (pathtrace_match_set): Handle SEN_fchmodat2.\n* src/linux/generic/syscallent-common.h [BASE_NR + 452]: Wire up\nfchmodat2.\n* tests/fchmodat2.c: New file.\n* tests/pure_executables.list: Add fchmodat2.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (fchmodat2, fchmodat2--secontext,\nfchmodat2--secontext_full, fchmodat2--secontext_full_mismatch,\nfchmodat2--secontext_mismatch): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c3127cf6d0e19ec1d2c8519dc11f71549080e5b7", "commit_date": "2023-07-31T08:00:00Z", "commit_message": "tests/times: use libc times instead of raw syscall on s390\n\nThe libc implementation of times(2) has additional handling\nfor error codes compared to the raw syscall. Therefore\nuse the libc implementation on s390 like it is already done\nfor MIPS.\n\nSigned-off-by: Sven Schnelle <svens@linux.ibm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "207baad9c5b913b5cfb685711d353e0d39ea8d42", "commit_date": "2023-07-31T08:00:00Z", "commit_message": "Implement decoding of cachestat syscall\n\nThis new syscall was introduced by Linux kernel commit\nv6.5-rc1~176^2~364.\n\n* src/cachestat.c: New file.\n* src/cachestat.h: Likewise.\n* src/Makefile.am (libstrace_a_SOURCES): Add cachestat.c and\ncachestat.h.\n* src/linux/generic/syscallent-common.h [BASE_NR + 451]: Wire up\ncachestat.\n* tests/cachestat.c: New file.\n* tests/cachestat-P.c: Likewise.\n* tests/cachestat-fd.c: Likewise.\n* tests/cachestat-success.c: Likewise.\n* tests/pure_executables.list: Add cachestat, cachestat-P, cachestat-fd,\nand cachestat-success.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (cachestat, cachestat-P, cachestat-fd,\ncachestat-success): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b074f77088ece7360fc7cec62a641955a40cb539", "commit_date": "2023-07-30T08:00:00Z", "commit_message": "xlat: update V4L2_* constants\n\n* src/xlat/v4l2_control_ids.in (V4L2_CID_MPEG_VIDEO_AV1_PROFILE,\nV4L2_CID_MPEG_VIDEO_AV1_LEVEL): New constants introduced by Linux kernel\ncommit v6.5-rc1~48^2~27.\n* src/xlat/v4l2_control_types.in (V4L2_CTRL_TYPE_AV1_SEQUENCE,\nV4L2_CTRL_TYPE_AV1_TILE_GROUP_ENTRY, V4L2_CTRL_TYPE_AV1_FRAME,\nV4L2_CTRL_TYPE_AV1_FILM_GRAIN): Likewise.\n* src/xlat/v4l2_pix_fmts.in (V4L2_PIX_FMT_AV1_FRAME): Likewise.\n(V4L2_PIX_FMT_NV15_4L4): New constant introduced by Linux kernel commit\nv6.5-rc1~48^2~23.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eb9cd896533b049cd51c6e83da94cc81180268fd", "commit_date": "2023-07-29T08:00:00Z", "commit_message": "xlat: update PR_* constants\n\n* src/xlat/prctl_options.in (PR_RISCV_V_SET_CONTROL,\nPR_RISCV_V_GET_CONTROL): New constants introduced by Linux kernel\ncommit v6.5-rc1~120^2~17^2~6.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ee6e2d4ad7d719358f0bbef062c91e7d1797a92f", "commit_date": "2023-07-28T08:00:00Z", "commit_message": "xlat: update NFT_MSG_* constants\n\n* src/xlat/nf_nftables_msg_types.in (NFT_MSG_GETSETELEM_RESET):\nNew constant introduced by Linux kernel commit v6.5-rc1~163^2~9^2~1.\n* src/netlink.c (decode_nlmsg_flags_netfilter): Handle it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e18ab1472ab4aa10e7cd3fad322ec4250bf1dc24", "commit_date": "2023-07-27T08:00:00Z", "commit_message": "xlat: update MOVE_MOUNT_* constants\n\n* src/xlat/move_mount_flags.in (MOVE_MOUNT_BENEATH): New constant\nintroduced by Linux kernel commit v6.5-rc1~243^2.\n* tests/move_mount.c: Add checks, update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dcb9f3867d26fe22790137c7993333fd00c85f40", "commit_date": "2023-07-26T08:00:00Z", "commit_message": "xlat: update KVM_* constants\n\n* src/xlat/kvm_cap.in (KVM_CAP_ARM_EAGER_SPLIT_CHUNK_SIZE,\nKVM_CAP_ARM_SUPPORTED_BLOCK_SIZES): New constants introduced\nby Linux kernel commit v6.5-rc1~71^2~7^2~7^2~8.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5cd69544d82687c83bff489e77ae5ffa9de3243c", "commit_date": "2023-07-25T08:00:00Z", "commit_message": "xlat: update IORING_SETUP_* constants\n\n* src/xlat/uring_setup_flags.in (IORING_SETUP_SINGLE_ISSUER):\nNew constant introduced by Linux kernel commit v6.0-rc1~181^2~92.\n(IORING_SETUP_DEFER_TASKRUN): New constant introduced by Linux kernel\ncommit  v6.1-rc1~135^2~51.\n(IORING_SETUP_NO_MMAP): New constant introduced by Linux kernel\ncommit v6.5-rc1~235^2~32.\n(IORING_SETUP_REGISTERED_FD_ONLY): New constant introduced\nby Linux kernel commit v6.5-rc1~235^2~31.\n* tests/io_uring_setup.c (main): Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7521abf40a854d7f9cdcef02d1d4a9bab4a7c1b", "commit_date": "2023-07-24T08:00:00Z", "commit_message": "xlat: update AT_* constants\n\n* src/xlat/name_to_handle_at_flags.in (AT_HANDLE_FID): New constant\nintroduced by Linux kernel v6.5-rc1~146^2~3.\n* tests/file_handle.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "902370de2f771d9af23210be2f10ed7cf613798f", "commit_date": "2023-07-23T08:00:00Z", "commit_message": "xlat: update NT_* constants\n\n* src/xlat/nt_descriptor_types.in (NT_PPC_DEXCR): New constant\nintroduced by Linux kernel commit v6.5-rc1~121^2~37.\n(NT_PPC_HASHKEYR): New constant introduced by Linux kernel commit\nv6.5-rc1~121^2~36.\n(NT_RISCV_VECTOR): New constant introduced by Linux kernel commit\nv6.5-rc1~120^2~17^2~15.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c16832d01c09e8c249082a7fb04fc9f06fc9d00d", "commit_date": "2023-07-22T08:00:00Z", "commit_message": "xlat: update BPF_* constants\n\n* src/xlat/bpf_map_flags.in (BPF_F_PATH_FD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~215^2~9.\n* tests/bpf.c: Update expected output.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2543bc6b03bffe658b6358350aa5b2bbecbd4b87", "commit_date": "2023-07-21T08:00:00Z", "commit_message": "tests: explicitly check decoding of SCM_CREDENTIALS control messages\n\n* tests/scm_credentials.c: New file.\n* tests/pure_executables.list: Add scm_credentials.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (scm_credentials): New test.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "329f107567a44ed74c7d2da003d96ae1714235ad", "commit_date": "2023-07-20T08:00:00Z", "commit_message": "net: implement decoding of SCM_PIDFD control messages\n\n* src/xlat/scmvals.in (SCM_PIDFD): New constant introduced by Linux\nkernel commit v6.5-rc1~163^2~115^2~3.\n* src/msghdr.c (print_scm_pidfd): New function.\n(cmsg_socket_printers) <SCM_PIDFD>: Use it.\n* tests/scm_pidfd.c: New file.\n* tests/scm_pidfd-success.c: Likewise.\n* tests/pure_executables.list: Add scm_pidfd and scm_pidfd-success.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (scm_pidfd, scm_pidfd-succes): New tests.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "76ec0783c51339eb895026344f9f49c71528b3cb", "commit_date": "2023-07-19T08:00:00Z", "commit_message": "net: implement decoding of SO_PEERPIDFD socket option\n\n* src/xlat/sock_options.in (SO_PEERPIDFD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~115^2~2.\n* src/net.c (print_get_fd): New function.\n(print_getsockopt) <SO_PEERPIDFD>: Use it to print SO_PEERPIDFD.\n* tests/sockopt-sol_socket.c (main): Update unknown socket option.\n* tests/so_peerpidfd.c: New file.\n* tests/pure_executables.list: Add so_peerpidfd.\n* tests/.gitignore: Likewise.\n* tests/gen_tests.in (so_peerpidfd): New test.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45717b56eba7c346e75a84e18c8c38918b1653bf", "commit_date": "2023-07-18T08:00:00Z", "commit_message": "net: implement decoding of SO_PASSPIDFD socket option\n\n* src/xlat/sock_options.in (SO_PASSPIDFD): New constant introduced\nby Linux kernel commit v6.5-rc1~163^2~115^2~3.\n* src/net.c (print_getsockopt, print_setsockopt) <SO_PASSPIDFD>: Print it.\n* tests/sockopt-sol_socket.c (main): Test it.\n* NEWS: Mention this change.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "abc5101fcfc83125461d17a03b02128452449a6c", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "print_utils: add missing license header", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2aff05d6484719b5ef9895da59ba1e92c427b2ad", "commit_date": "2023-07-17T15:43:44Z", "commit_message": "macros: mention --enable-bundled=yes in CHECK_{TYPE,IOCTL}_SIZE assert messages\n\nThese macros are used to check that the types provided in the kernel\nheaders have the expected characteristics, and most of them (if not all)\nare bundled with strace itself, so it might have sense to provide a hint\nto people who are not interested in waiting for the upstream to accommodate\nfor the UAPI changes and just want to get strace built that may\nbe of some help and save some time and effort spent on finding the option\nthemselves.\n\n* src/macros.h (CHECK_TYPE_SIZE, CHECK_IOCTL_SIZE): Mention\n--enable-bundled=yes configure option in the assertion failure message.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8f497c83a8164dfa2b5009f4306595df69e182c1", "commit_date": "2023-07-11T08:22:19Z", "commit_message": "syscall: keep the s_prev_ent if the current syscall is restart_syscall\n\nIt allows showing the original syscall in the cases where a syscall\ninterrupted repeatedly and avoid \"resuming interrupted restart_syscall\":\n\n    clock_nanosleep(CLOCK_REALTIME, 0, {tv_sec=0, tv_nsec=222222222}, {tv_sec=0, tv_nsec=211140476}) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted clock_nanosleep ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    --- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n    restart_syscall(<... resuming interrupted restart_syscall ...>) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n    [...]\n\n* src/syscall.c (syscall_exiting_trace): store either tcp->s_prev_ent\nor tcp->s_ent as a new value for tcp->s_prev_ent depending on whether\nthe current sen is SEN_restart_syscall.\n* tests/restart_syscall.c: Make the interval timer trigger repeatedly,\ncheck for the absence of \"resuming interrupted restart_syscall\" output.\n\nReferences: https://bugzilla.redhat.com/2148516", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "65e091a8cfe990b7f93e390444bb4d88b1b92b34", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "bundled: update linux UAPI headers to v6.5-rc1\n\n* bundled/linux/include/uapi/linux/counter.h: Update to\nheaders_install'ed Linux kernel v6.5-rc1.\n* bundled/linux/include/uapi/linux/fcntl.h: Likewise.\n* bundled/linux/include/uapi/linux/if_link.h: Likewise.\n* bundled/linux/include/uapi/linux/io_uring.h: Likewise.\n* bundled/linux/include/uapi/linux/mount.h: Likewise.\n* bundled/linux/include/uapi/linux/mptcp.h: Likewise.\n* bundled/linux/include/uapi/linux/netfilter/nf_tables.h: Likewise.\n* bundled/linux/include/uapi/linux/pkt_sched.h: Likewise.\n* bundled/linux/include/uapi/linux/prctl.h: Likewise.\n* bundled/linux/include/uapi/linux/types.h: Likewise.\n* bundled/linux/include/uapi/linux/v4l2-controls.h: Likewise.\n* bundled/linux/include/uapi/linux/version.h: Likewise.\n* bundled/linux/include/uapi/linux/videodev2.h: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a8cec18845220cc82e45014ffdcab449ad664584", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "ptp: add max_phase_adj field and update rsv field of struct ptp_clock_caps\n\n* bundled/linux/include/uapi/linux/ptp_clock.h (struct ptp_clock_caps):\nAdd max_phase_adj field and update rsv field following the change\nintroduced by Linux kernel commit v6.5-rc1~163^2~65^2~4.\n* src/ptp.c (ptp_ioctl): Likewise.\n* tests/ioctl_ptp.c (test_no_device): Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e0da3633669fcb829dd8d902d15443a755bd10fb", "commit_date": "2023-07-09T20:53:13Z", "commit_message": "io_uring: rename resv2 fields of io_[cs]qring_offsets to user_addr\n\n* bundled/linux/include/uapi/linux/io_uring.h (struct io_sqring_offsets,\nstruct io_cqring_offsets): Rename resv2 to user_addr following\nthe change introduced by Linux kernel commit v6.5-rc1~235^2~32.\n* src/io_uring.c (print_io_sqring_offsets, print_io_cqring_offsets):\nLikewise.\n* tests/io_uring_setup.c (main): Update expected output.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "74c163706715eb23b3609b1e02e1979fb9c8c435", "commit_date": "2023-06-30T08:00:00Z", "commit_message": "exec_or_die: install seccomp filter before setreuid\n\nWhile we strive to install the seccomp filter as late as possible before\nthe execve call, in --user mode this has an undesired side effect:\nthe setreuid call strips CAP_SYS_ADMIN, making PR_SET_NO_NEW_PRIVS call\na necessity, which results to the tracee less privileged than in the\ncase when --seccomp-bpf mode was not enabled.\n\nWorkaround this by moving the installation of the seccomp filter before\nthe setreuid call in --user mode.\n\n* src/strace.c (maybe_init_seccomp_filter): New function, a thin wrapper\naround init_seccomp_filter.\n(exec_or_die): Invoke maybe_init_seccomp_filter instead of\ninit_seccomp_filter before the execve call, limit the invocation\nto username == NULL case.\n(exec_or_die) <username != NULL>: Invoke maybe_init_seccomp_filter\nbefore the setreuid call.\n\nResolves: https://github.com/strace/strace/issues/126", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9df295d4b03df101b52598c6021074c0d9ff6fe3", "commit_date": "2023-06-29T08:00:00Z", "commit_message": "exec_or_die: remove incomprehensible setreuid invocation\n\nSince the very first commit setreuid is invoked in geteuid() != 0\ncase without any plausible explanation.  It makes little sense to\ninstall strace as a setuid-nonroot executable in the first place,\nand even in that case it is unclear why one would like to drop the\neffective nonzero uid before the execve.\n\n* src/strace.c (exec_or_die) <!username && geteuid() != 0>: Remove.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "59436f2e193107519282ea128ce23a7f6a8cb034", "commit_date": "2023-06-28T08:00:00Z", "commit_message": "exec_or_die: restore SIGCHLD handler earlier\n\nWhen --daemonize mode is not enabled, the disposition of SIGCHLD is not\nrelevant to the child process, so in that case sigaction can be called\nbefore the PTRACE_TRACEME call.\n\n* src/strace.c (exec_or_die) <!daemonized_tracer>: Restore SIGCHLD\nhandler before PTRACE_TRACEME.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "400086936db46299e4aca35ff739d0afa3dda506", "commit_date": "2023-06-27T08:00:00Z", "commit_message": "Post-release administrivia\n\n* NEWS: Add a header line for the next release.\n* debian/changelog.in: Add a changelog entry for 6.4-1.\n* strace.spec.in: Likewise.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}