{"master": [{"commit_oid": "996ac91f54844e63ef43092472fc1f7610567b67", "commit_date": "2023-09-26T13:00:13Z", "commit_message": "t/zbd: set mq-deadline scheduler to device-mapper destination devices\n\nWhen write workloads run on zoned block devices, mq-deadline scheduler is\nrequired to ensure write operations are sequential. To fulfill this\nrequirement, the test script t/zbd/test-zbd-support sets mq-deadline to\nthe sysfs attribute \"queue/scheduler\". However, this preparation does\nnot work when the write target device is a bio based device-mapper\ndevice. The device is bio based then I/O scheduler does not work.\nSetting mq-deadline to the sysfs attribute has no effect. On top of\nthat, the sysfs attribute \"queue/scheduler\" is no longer available for\nbio based device-mapper devices since Linux kernel version v6.5.\n\nTo ensure mq-deadline scheduler for bio based device-mapper devices,\nimprove the helper function set_io_scheduler. If the sysfs attribute\n\"queue/scheduler\" is available, use it. Otherwise, check if the test\ndevice is a zoned device-mapper (linear, flakey or crypt). If so, set\nmq-deadline scheduler to destination devices of the device-mapper\ndevice. To implement these, add some helper functions.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230913015249.2226799-1-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a142e0df6c1483a76d92ff7f9d8c07242af9910e", "commit_date": "2023-09-20T11:41:17Z", "commit_message": "Merge branch 'fio_client_server_doc_fix' of https://github.com/pcpartpicker/fio\n\n* 'fio_client_server_doc_fix' of https://github.com/pcpartpicker/fio:\n  Update docs to clarify how to pass job options in client mode", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "702e3f34787c027daf03af22cd71459feb344432", "commit_date": "2023-09-19T23:20:19Z", "commit_message": "Update docs to clarify how to pass job options in client mode\n\nWhen run in client mode, fio does not pass any job options specified on\nthe command line to the fio server. When run in client mode, all job\noptions must be specified via local or remote job files. Update the docs\nto indicate this to avoid end-user confusion.\n\nFixes #1629\n\nSigned-off-by: Nick Neumann nick@pcpartpicker.com", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e2c5f17e3559cc7c96706cd75c2609f12675c60b", "commit_date": "2023-09-14T22:54:25Z", "commit_message": "verify: open state file in binary mode on Windows\n\nMake sure we open the verify state file in binary mode to avoid any\npossible conversion of NL to CR+NL. This is the same fix we did for\n1fb215e991d260a128e35d761f6850e8d9e4c333.\n\nFixes: https://github.com/axboe/fio/issues/1631\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4a9812dee084b058eca6ebde9634a3d573a0079", "commit_date": "2023-09-11T16:55:56Z", "commit_message": "engines:nvme: fill command fields as per pi check bits\n\nFill the application and reference tag field for read and write\ncommand only when pi_chk has the relevant bit set.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ba342e585aa512edbd37cf736850fcb3cb5ca76d", "commit_date": "2023-09-11T16:55:56Z", "commit_message": "engines:io_uring_cmd: disallow verify for e2e pi with extended blocks\n\nFor extended logical block sizes we cannot use verify when end to end\ndata protection checks are enabled. The CRC field in PI section of\ndata buffer creates conflict during verify phase.\nThe verify check is also redundant as end to end data protection already\nensures data integrity. So disallow use of verify for this case.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca9d8caba8c6c447aae0d3dc4a7f5270c1275782", "commit_date": "2023-09-11T15:31:27Z", "commit_message": "Merge branch 'pcpp_epoch_fixing_2' of https://github.com/PCPartPicker/fio\n\n* 'pcpp_epoch_fixing_2' of https://github.com/PCPartPicker/fio:\n  Make log_unix_epoch an official alias of log_alternate_epoch\n  Record job start time to fix time pain points", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d252275b59feb8ca92078ca8f61bab691e539186", "commit_date": "2023-09-08T20:34:09Z", "commit_message": "Make log_unix_epoch an official alias of log_alternate_epoch\n\nlog_alternate_epoch was introduced along with\nlog_alternate_epoch_clock_id, and generalized the idea of\nlog_unix_epoch. Both options had the same effect. So we make\nlog_unix_epoch an official alias of log_alternate_epoch, instead of\nmaintaining both redundant options.\n\nSigned-off-by: Nick Neumann nick@pcpartpicker.com", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "12d325cac3a05f2eb1fb0f4026346129d38c023b", "commit_date": "2023-09-08T20:21:04Z", "commit_message": "Record job start time to fix time pain points\n\nAdd a new key in the json per-job output, job_start, that records the\njob start time obtained via a call to clock_gettime using the clock_id\nspecified by the new job_start_clock_id option. This allows times of fio\njobs and log entries to be compared/ordered against each other and\nagainst other system events recorded against the same clock_id.\n\nAdd a note to the documentation for group_reporting about how there are\nseveral per-job values for which only the first job's value is recorded\nin the json output format when group_reporting is enabled.\n\nFixes #1544\n\nSigned-off-by: Nick Neumann nick@pcpartpicker.com", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "904ee91c2831615a054a8dea9b164e96ae00abb3", "commit_date": "2023-09-02T13:35:49Z", "commit_message": "Merge branch 'pcpp_parse_nr_fix' of https://github.com/PCPartPicker/fio\n\n* 'pcpp_parse_nr_fix' of https://github.com/PCPartPicker/fio:\n  Add basic error checking to parsing nr from rw=randrw:<nr>, etc", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2e0a52594ed11e738d2402a3e22d05ec5597535a", "commit_date": "2023-09-01T22:01:05Z", "commit_message": "Add basic error checking to parsing nr from rw=randrw:<nr>, etc\n\nPreviously this was parsed by just doing atoi(). This returns 0 or has\nundefined behavior in error cases.\n\nSilently getting a 0 for nr is not great. In fact, 0 (or less) should\nlikely not be allowed for nr; while the code handles it, the effective\nresult is that the randomness is gone - all I/O becomes sequential. It\nmakes sense to prohibit 0 as an nr value in the random case.\n\nWe leverage str_to_decimal to do our parsing instead of atoi. It isn't\nperfect, but it is a lot more resilient than atoi, and used in other\nsimilar places. We can then return an error when parsing fails, and also\nreturn an error when the parsed numeric value is outside of the ranges\nthat can be stored in the unsigned int used for nr, along with when nr\nis 0.\n\nFixes #1622\n\nSigned-off-by: Nick Neumann nick@pcpartpicker.com", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a0c766c69ddfe5231d65f2676e97333ba89ab2b", "commit_date": "2023-08-23T14:21:39Z", "commit_message": "Merge branch 'master' of https://github.com/michalbiesek/fio\n\n* 'master' of https://github.com/michalbiesek/fio:\n  Add RISC-V 64 support", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "21540653a3189fb49b2e11d53fefa262756f79ef", "commit_date": "2023-08-23T00:02:45Z", "commit_message": "Add RISC-V 64 support\n\nSigned-off-by: Michal Biesek <michalbiesek@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b311162c37a2867873e1222ce6b5f38c88be4d80", "commit_date": "2023-08-16T13:34:46Z", "commit_message": "examples: add example and fiograph for protection information options\n\nAdd missing io_uring_cmd ioengine options to fiograph config.\nAdd two example job files for the protection information options.\nThese include one for DIF i.e. extended LBA data size, and the other\nfor DIX i.e. separate metadata buffer case.\nAdd the corresponding fiograph diagram for these.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230816094616.132240-1-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6795954bde09c8697e0accb865b4f438d62c601f", "commit_date": "2023-08-15T01:59:20Z", "commit_message": "engines/io_uring: fix leak of 'ld' in error path\n\nNot really important as we're exiting anyway, but this silences some\nof the static checkers that like to complain about this sort of\nthing.\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d0f7d9fef46666a3b5f0a166d9d402bec302af78", "commit_date": "2023-08-14T14:43:45Z", "commit_message": "t/nvmept_pi: test script for protection information\n\nCarry out tests of the code supporting end-to-end data protection via\nthe io_uring_cmd ioengine's nvme command type.\n\nThe test script detects the available protection information formats\nsupported by the target device. Then for each of these configurations,\nthe script formats the device and runs a series of tests.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "140a30e36eeb87b2e6cd037e622e119886db34d0", "commit_date": "2023-08-14T14:43:45Z", "commit_message": "t/fiotestlib: use config variable to skip test at runtime\n\nCheck a test config variable to skip a test at runtime. This will be\nused to skip a test when the test runner determines that it should not\nbe run.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "08371767da0ad33b7901f93682356ac46158c0f9", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:io_uring: generate and verify pi for 64b guard\n\nGenerate and verify protection information for 64 bit guard format, for\nthe nvme backend of io_uring_cmd ioengine. The support is there for\nboth the cases where metadata is transferred in separate buffer, or\ntransferred at the end of logical block creating an extended logical\nblock.\nThis support also takes into consideration when protection information\nresides in last or first 16 bytes of metadata.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-11-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ca59c41c6526dc718a897a27c7b9255a55aec3b2", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:nvme: pull required 48 bit accessors from linux kernel\n\nPull the 48 bit helpers, required for supporting 48 bit reference tags.\nAdd GPL 2.0 license to nvme.c and nvme.h files.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-10-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "377f62d827068fd44a788cb1d027c808730fcd94", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "crc: pull required crc64 nvme apis from linux kernel\n\nPull the required nvme crc64 apis and table from the linux kernel. This\nis required to generate and verify 64 bit guard tag for nvme backend\nof io_uring_cmd ioengine.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-9-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5163f35e362419c6f2ea23dcb9c48a8044608171", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:io_uring: generate and verify pi for 16b guard\n\nGenerate and verify protection information for 16 bit guard format, for\nthe nvme backend of io_uring_cmd ioengine. The support is there for\nboth the cases where metadata is transferred in separate buffer, or\ntransferred at the end of logical block creating an extended logical\nblock.\nThis support also takes into consideration when protection information\nresides in last or first 8 bytes of metadata.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-8-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ea13c4a7ec39ae1c4b9227af61fcb8cc45d93841", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "crc: pull required crc16-t10 files from linux kernel\n\nPull the required crc16 t10 files from the linux kernel. This is\nrequired to generate and verify guard tag for nvme backend of\nio_uring_cmd ioengine.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-7-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "519fb6dadc6f7a4145d572ce0f6e41d7b1e59008", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "io_u: move engine data out of union\n\nio_uring_cmd ioengine requires engine data to store nvme protection\ninformation data.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-6-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3ee8311a30dcea86c5709b2523b9cd5cf7ba2423", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:io_uring: uring_cmd add support for protection info\n\nThis patch enables support for protection information to nvme command\nbackend of io_uring_cmd ioengine. The patch only supports protection\ninformation action bit set to 1, for read and write operation.\n\nThis adds 4 new ioengine specific options\n * pi_act - Protection information action. Default: 1\n * pi_chk - Can be set to GUARD, APPTAG or REFTAG\n * apptag - Sets apptag field of command dword 15\n * apptag_mask - Sets apptag_mask field of command dword 15\n\nFor the sake of consistency these options are the same as the ones used\nby SPDK's external ioengine.\n\nFor pi_act=1, if namespace is formatted with metadata size equal to\nprotection information size, the nvme controller inserts and removes\nprotection information for write and read command respectively.\nAdded a check so that fio doesn't send metadata for such cases.\n\nStorage tag support is not present, so return an error for that.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-5-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2d6451c97582baef27e4ca28892b033b8061faaa", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:io_uring: enable support for separate metadata buffer\n\nThis patch enables support for separate metadata buffer with\nio_uring_cmd ioengine. As we are unaware of metadata size during buffer\nallocation, we provide an option md_per_io_size. This option must be\nused to specify metadata buffer size for single IO, if namespace is\nformatted with a separate metadata buffer.\n\nFor the sake of consistency this is the same option as used by SPDK's\nexternal ioengine.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-4-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e7e5023b98214b6b610e6858aff6839e591536ca", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:io_uring: update arguments to fetch nvme data\n\nThis is a prep patch to keep number of arguments for fio_nvme_get_info\nin check. The follow up patches will enable metadata, protection info.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-3-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a904d1829b058506bdb9cf6c223f45260a30e723", "commit_date": "2023-08-14T14:27:33Z", "commit_message": "engines:io_uring: add missing error during open file\n\nThis change ensures the error is propogated to upper layers to make fio\nexit with a non-zero return code.\nAdd filename for errors when block size is not a multiple of logical\nblocks.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nLink: https://lore.kernel.org/r/20230814145747.114725-2-ankit.kumar@samsung.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62f35562722f0c903567096d0f10a836d1ae2f60", "commit_date": "2023-08-03T15:49:08Z", "commit_message": "eta: calculate aggregate bw statistics even when eta is disabled\n\nThe --bandwidth-log command-line option instructs fio to generate\naggregate bandwidth log files. These measurements are recorded by the\ncode generating the eta status line. When eta is disabled the aggregate\nbandwidth log measurements are not calculated. Change the eta code to\nrecord the measurements even when eta is not needed.\n\neta is disabled under these conditions\n- explicitly with --eta=never\n- STDOUT is not a TTY (shell redirection, nohup, etc)\n- output format excludes normal output\n\nFixes: https://github.com/axboe/fio/issues/1599\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b57011427a8204bd63671b08dde56cd9e879d68", "commit_date": "2023-08-02T16:58:16Z", "commit_message": "t/fiotestlib: make recorded command prettier\n\nInstead of recording fio test commands as a single very long line, put\neach option on its own line to make the command easier for humans to\ndigest.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df50839f20a95d6b576b76b034041c6a12015ee0", "commit_date": "2023-08-02T16:58:16Z", "commit_message": "t/nvmept: fix typo\n\nMake the filenames for the nvmept artifacts start with nvmept instead\nof readonly.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1660df6601e24a17dda9e12cbc901337fd5fd925", "commit_date": "2023-07-31T21:03:37Z", "commit_message": "Merge branch 'master' of https://github.com/min22/fio\n\n* 'master' of https://github.com/min22/fio:\n  iolog.c: fix inaccurate clat when replay trace", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79c77d043578272d9be95096bdb6daebb70c7817", "commit_date": "2023-07-31T21:03:03Z", "commit_message": "Merge branch 'improment/constness' of https://github.com/dpronin/fio\n\n* 'improment/constness' of https://github.com/dpronin/fio:\n  use 'const' where it is required", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "febae487985a8b63185fe8ac4c1623dd2ad3cf58", "commit_date": "2023-07-30T22:29:49Z", "commit_message": "use 'const' where it is required\n\nprotect variables and parameters from programmer's point of view with\n'constness'\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "824912be19542f94264e485a25d37b55a9f68f0e", "commit_date": "2023-07-28T17:32:22Z", "commit_message": "Revert \"correctly free thread_data options at the topmost parent process\"\n\nThis reverts commit 913028e97ceedcf2cf1ec6ec32228b3c50e7337c.\n\nThis commit is causing the static analyzers to freak out, and also\ncrashes on Windows. Revert it for now.\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "696abd97e2b15d96374b866e577f0afaa4f6f62c", "commit_date": "2023-07-28T15:11:15Z", "commit_message": "Merge branch 'td-eo-double-free-fix' of https://github.com/dpronin/fio\n\n* 'td-eo-double-free-fix' of https://github.com/dpronin/fio:\n  correctly free thread_data options at the topmost parent process", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f12affacf164b6e6997ee97d6ed66c35633414df", "commit_date": "2023-07-28T15:11:01Z", "commit_message": "Merge branch 'master' of https://github.com/dpronin/fio\n\n* 'master' of https://github.com/dpronin/fio:\n  fix missing headers in multiple files", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8aae2073e18775ab09f0b9d00f5c067d2358d79", "commit_date": "2023-07-28T15:10:44Z", "commit_message": "Merge branch 'io_uring' of https://github.com/dpronin/fio\n\n* 'io_uring' of https://github.com/dpronin/fio:\n  io_uring engine: 'atomic_load_relaxed' instead of 'atomic_load_acquire'", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c15a9111487734e448dc10359ec63c56a302938", "commit_date": "2023-07-28T14:25:06Z", "commit_message": "io_uring engine: 'atomic_load_relaxed' instead of 'atomic_load_acquire'\n\nmotivation here is that we do not have here any explicit READ dependency\n on atomic load because actually we just need in these places only\n operation to perform atomically without any explicit barriers given by\n memory model\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "913028e97ceedcf2cf1ec6ec32228b3c50e7337c", "commit_date": "2023-07-28T09:40:06Z", "commit_message": "correctly free thread_data options at the topmost parent process\n\nfor non-threaded mode: since thread_data::eo is a pointer within shared\nmemory between the topmost fio parent process and its children let the\nfio parent process set the pointer to NULL as just it frees its copy of\n'eo' as memory previously allocated by means of 'malloc' meaning that\neach child and the parent process itself must free it\n\nfor threaded mode we leave it as it has always been\n\nalso we do not need to check td->io_ops for being able to free td->eo in\n fio_options_free()\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "13229219c961d4b61d16b67d007a4c34de00c49b", "commit_date": "2023-07-28T09:39:58Z", "commit_message": "fix missing headers in multiple files\n\nsome files require to have some missing headers included\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45eb1cf5ce883ae3b170f102db38204616c8e4b1", "commit_date": "2023-07-27T19:48:26Z", "commit_message": "Merge branch 'helper_thread-fix-missing-stdbool-header' of https://github.com/dpronin/fio\n\n* 'helper_thread-fix-missing-stdbool-header' of https://github.com/dpronin/fio:\n  helper_thread.h: forwardly declare structures fio_sem and sk_out\n  helper_thread.h: include missing stdbool.h because 'bool' type is used", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bf944a011984675f31e591272eda8efb2092d78", "commit_date": "2023-07-27T19:23:24Z", "commit_message": "helper_thread.h: forwardly declare structures fio_sem and sk_out\n\nhelper_thread_create() function requires two structures to be declared\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b29033254cbae585f319857e2a7acef176f046f2", "commit_date": "2023-07-27T19:23:24Z", "commit_message": "helper_thread.h: include missing stdbool.h because 'bool' type is used\n\nmissing headers should be included at the places where they are\ncertainly used\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "29ba26059190bf337024b3aa0d95a12b2525cbf2", "commit_date": "2023-07-27T19:11:01Z", "commit_message": "Merge branch 'diskutil-fix-missing-headers' of https://github.com/dpronin/fio\n\n* 'diskutil-fix-missing-headers' of https://github.com/dpronin/fio:\n  diskutil.h: fix missing headers wanted by the header", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b49eb7153784dd287280fc7959506575e743bce8", "commit_date": "2023-07-27T18:57:48Z", "commit_message": "diskutil.h: fix missing headers wanted by the header\n\ndiskutil.h requires 3 more headers to fulfill several types therein \nwithout having to rely on headers hopefully included before this one\n\nSigned-off-by: Denis Pronin <dannftk@yandex.ru>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b85c01f7e9dfc468eb78faf86692433e6105178d", "commit_date": "2023-07-27T02:33:37Z", "commit_message": "iolog.c: fix inaccurate clat when replay trace\n\nWhen do timestamp replay with high qd it will only reap the\ncompleted commands when the qd reach the max iodepth, the commands\nprobably are finished long ago before command completion handling.\n\nFix is to use io_u_queued_complete instead of just usec_sleep in\niolog_delay\n\nSigned-off-by: Kookoo Gu <Zhimin.Gu@solidigm.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b47b2cf3dab1d26d72f52ed8c19f782a8277d3a", "commit_date": "2023-07-21T21:23:40Z", "commit_message": "Merge branch 'prio-hints'\n\n* prio-hints:\n  stats: Add hint information to per priority level stats\n  cmdprio: Add support for per I/O priority hint\n  options: add priohint option\n  os-linux: add initial support for IO priority hints\n  cmdprio: Introduce generic option definitions\n  os-linux: Cleanup IO priority class and value macros", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "219a868280716e4e221b57269ee3b8a39ea9c29b", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "stats: Add hint information to per priority level stats\n\nModify the json and standard per-priority output stats to display the\nhint value together with the priority class and level.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-7-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79012fece0a0ecb02ad6a3322913980efdb1d726", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "cmdprio: Add support for per I/O priority hint\n\nIntroduce the new option cmdprio_hint to allow specifying I/O priority\nhints per IO with the io_uring and libaio IO engines. A third acceptable\nformat for the cmdprio_bssplit option is also introduced to allow\nspecifying an I/O hint in addition to a priority class and level.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-6-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "860462dad312ef121766f5d17b1df7b05d1f47ee", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "options: add priohint option\n\nIntroduce the new option priohint to allow users to specify an I/O\npriority hint applying to all IOs issued by a job. This increases fio\nserver version (FIO_SERVER_VER) to 101.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-5-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3048c1b564fc793ee11004a17b2a4de5a82be27", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "os-linux: add initial support for IO priority hints\n\nAdd initial support for Linux to allow specifying a hint for any\npriority value. With this change, a priority value becomes the\ncombination of a priority class, a priority level and a hint.\nThe generic os.h ioprio manipulation macros, as well as the\nos-dragonfly.h ioprio manipulation macros are modified to ignore this\nhint.\n\nFor all other OSes that do not support priority classes, priotity hints\nare ignored and always equal to 0.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-4-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2838f77aa80605c13cd18ce5e941005a42cec4a4", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "cmdprio: Introduce generic option definitions\n\nThe definition of the per-I/O priority options for the io_uring and\nlibaio I/O engines are almost identical, differing only by the option\ngroup and option data structure used.\n\nIntroduce the CMDPRIO_OPTIONS macro in engines/cmdprio.h to generically\ndefine these options in the io_uring and libaio engines to simplify the\ncode.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-3-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4d503a557d4a664ff3fd7a811966df038d06634", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "os-linux: Cleanup IO priority class and value macros\n\nIn os/os-linux.h, define the ioprio() macro using the already defined\nIOPRIO_MAX_PRIO macro instead of hard coding the maximum priority value\nagain. Also move the definitions of the ioprio_class() and ioprio()\nmacros before the ioprio_value() function and use ioprio_class() inside\nioprio_value_is_class_rt() instead of re-coding the iopriority class\nextraction again in that function.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-2-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc37e3dedee9026a4e745c7ab03ed293cb04eb60", "commit_date": "2023-07-21T14:02:55Z", "commit_message": "backend: clear IO_U_F_FLIGHT flag in zero byte read path\n\nWhen read io_u completes with zero byte read, it sets EIO as the error\nand put the io_u. However, it does not clear the IO_U_F_FLIGHT flag.\nWhen fio runs with --ignore_error=EIO option, the io_u with the flag is\nreused for next I/O and causes an assertion failure:\n\n  fio: ioengines.c:335: td_io_queue: Assertion `(io_u->flags & IO_U_F_FLIGHT) == 0' failed.\n\nThe failure is observed with blktests test case block/011 which runs fio\nwith the --ignore_error=EIO option [1].\n\n  [1] https://github.com/osandov/blktests/issues/29\n\nFix this by calling clear_io_u() instead of put_io_u() in the zero byte\nread path. clear_io_u() clears the IO_U_F_FLIGHT flag then calls\nput_io_u().\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230721044444.749537-1-shinichiro.kawasaki@wdc.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "caf7ac7ef000097765b1c56404adb5e68b227977", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add max_active configs to run-tests-against-nullb\n\nIntroduce several new test device configurations to cover the cases with\nmax_active_zones is not being zero, i.e. limited. Two group of new\nconfigurations are added, one with max_active_zones == max_open_zones\nand the other with max_active_zones > max_open_zones.\n\nSigned-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-14-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709706209b50ae9697b25057e491ea5527178320", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: fix null_blk configuration in run-tests-against-nullb\n\nCorrectly set max_open in null_blk configfs.\nFix displayed number of conventional zones in section config banner.\n\nSigned-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-13-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f9333c944fa19c83f198daab62ae50a6416b99e", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add missing prep_write for test cases with write workloads\n\nThe test cases from 54 to 57 do writes but miss prep_write() call which\nresets zones of the test target device with max_active_zones limit. This\nresults in failures due to open zones out of I/O ranges and\nmax_active_zones limit error. Add the missing prep_write() call to avoid\nthe failures.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-12-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c99637ecee9bcbd96b4e91f2b627b276a905118", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: fix fio failure check and SG node failure in test case 31\n\nThe test case 31 runs fio twice but the failure of the first fio run was\nnot checked. This allowed the test case pass even with wrong\nmax_open_zones value. To fix this, check exit code of the fio run.\n\nAlso, the first fio run fails when the test target devices are SG nodes,\nsince libzbc I/O engine is not used. To fix this, call the ioengine()\nhelper function which adjusts I/O engine for each device.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-11-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af26c9bf6992e47f5da18955e1edb2d318325db3", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: get max_open_zones from sysfs\n\nThe helper bash function gets max_open_zones limit of the test target\ndevice using sg_inq and libzbc tools. This works for SAS/SATA devices\nbut does not work for ZNS or null_blk devices. This results is running\nthe test case 31 with wrong max_open_zones value. Fix this by referring\nmax_open_zones sysfs attribute.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-10-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "25868b05c9d388055441a2cf4133534ea51cebc1", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add test case to check max_active_zones limit error message\n\nThe recent fio change introduced a new error message to indicate\nmax_active_zones limit error of zoned block devices. Add a test case to\ncheck the error message is reported.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-9-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3be0f00a4bda09588798500659cab0d1668177d", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add test case to check zones in closed condition\n\nWhen the zoned block device has max_active_zones limit, the zones in\nopen or closed condition consume resource on the device. If the number\nof zones in open or closed condition gets larger than the\nmax_active_zones limit, the device reports an error. Until the recent\nfix (\"zbd: write to closed zones on the devices with max_active_zones\nlimit\"), fio handled only zones in open condition as write target then\nfio was not able to avoid the error.\n\nAdd a test which confirms that the fix avoids the error by handling\nzones in closed condition as write target. This test case requires the\ndevice has max_active_zones limit. Prepare zones in closed condition as\nmany as the max_active_zones limit. Do random write and check no error.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-8-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a5411cd73840b40737f629ec703b082aed08067", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add max_active_zone variable\n\nTo test fio behavior on zoned block devices with max_active_zones limit,\nadd a global variable which holds the limit value. Also add helper\nfunctions to check max_active_zones limit of the test target devices and\nmax_active_zones requirement of test cases.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-7-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00080a1eb135a91e46ff17ea630512d142124708", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add close_zone helper function\n\nAdd a helper function which sets the specified zone in closed condition.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-6-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23a846b389235e5aa0058042319922b7ef7c01fa", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "docs: modify max_open_zones option description\n\nA recent commit modified the max_open_zones option to improve handling\nof zoned block devices with max_active_zones limit. Modify description\nof the option to meet the change.\n\nFor that purpose, explain the relation between the max_open_zones option\nand the device side limits max_active_zones and max_open_zones. Also\nmention about three zone conditions 'implicit open', 'explict open' and\n'closed'. And replace the word 'zone state' with 'zone condition'.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-5-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b403508bfe3ea815d522d813b66e86b43e3fa82", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "zbd: print max_active_zones limit error message\n\nWhen zoned block devices have max_active_zones limit and when write\noperations exceed that limit, Linux block sub-system reports EOVERFLOW.\nHowever, the strerror() string for EOVERFLOW does not mention about\nmax_active_zones then it confuses users.\n\nTo avoid the confusion, print additional error message to indicate the\nmax_active_zones limit. For this purpose, add a hook function\nzbd_log_err() and call it from __io_u_log_error().\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-4-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bab838f806eb139b1ffece82454df77d9b6be233", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "zbd: write to closed zones on the devices with max_active_zones limit\n\nCurrent fio implementation does not handle zones in closed condition as\nwrite target zones. When the device has max_active_zones limit, the\nwrite to other zones may cause errors by exceeding the limit, since the\nzones in closed condition consume the device resource for the\nmax_active_zones limit.\n\nTo avoid the error, handle the zones in closed condition as write target\nin same manner as the zones in open condition when the device has the\nmax_active_zones limit. At the job start, check each condition of the\nzones in the IO ranges and if it has closed condition, pass the zone\nto zbd_write_zones_get() in same manner as the zones in open condition.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-3-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e523ef81a086f813481fab39ccf5b94e8f6dd81", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "zbd: get max_active_zones limit value from zoned devices\n\nAs a preparation to improve open zones accounting for devices with the\nmax_active_zones limit, get the limit from the devices. In same manner\nas max_open_zones, call get_max_active_zones callback if the I/O engine\nsupports it. Add the new call back to the I/O engine API and bump up\nFIO_IOOPS_VERSION. It is expected that io_uring and xnvme engines to\nsupport the callback later. When the callback is not available, refer\nmax_active_zones sysfs attribute for block devices. When the limit value\nis not available, use zero value which means no limit. Keep the obtained\nlimit value in the struct zoned_block_device_info.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-2-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04361e9a23d6e0448fd6fbbd4e14ecdfff60e314", "commit_date": "2023-07-15T15:57:43Z", "commit_message": "Merge branch 'patch-3' of https://github.com/yangjueji/fio\n\n* 'patch-3' of https://github.com/yangjueji/fio:\n  fix: io_uring sqpoll issue_time empty when kernel not yet read sq", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14adf6e31487aa2bc8e47cd037428036089a3834", "commit_date": "2023-07-14T18:03:34Z", "commit_message": "thinktime: Avoid calculating a negative time left to wait\n\nWhen the thinktime_spin option specifies a value that is within\na few milliseconds of the thinktime value, in handle_thinktime()\nit's possible in a VM environment for the duration of usec_spin()\nto exceed the thinktime value. While doing usec_spin(), the vCPU\ncould get de-scheduled or the hypervisor could steal CPU time\nfrom the vCPU. When the guest vCPU runs after being scheduled\nagain, it may read the clock and find that more time has elapsed\nthan intended. In such a case, the time left to wait could be\ncalculated as a negative value. Subsequent calculations then go\nawry because the time left is cast as unsigned.\n\nFix this by detecting when the time left would go negative and\njust set it to zero.\n\nFixes: 1a9bf8146 (\"Add option to ignore thinktime for rated IO\")\nFixes: https://github.com/axboe/fio/issues/1588\nLink: https://lore.kernel.org/fio/1689354334-131024-1-git-send-email-mikelley@microsoft.com/T/#u\nSigned-off-by: Michael Kelley <mikelley@microsoft.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb08a260413e54465f370523ae26a1bebb42308c", "commit_date": "2023-07-14T17:53:46Z", "commit_message": "stat: add diskutil aggregated sectors to normal output\n\nSince we are now collecting sectors in the disk utilization data we\nshould include them in the aggregated data as well.\n\nI tested this with an LVM mirror. I also tested this on an mdadm mirror\nbut all the aggregated and slave data was zero.\n\nFixes: 75cbc26d500fc5f7e36f6203c9b8e08b9c6f007c (\"diskutil: Report how\nmany sectors have been read and written\")\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc2501310842cc2cd11168074e8f69cf39699263", "commit_date": "2023-07-14T17:53:46Z", "commit_message": "stat: add new diskutil sectors to json output\n\nA recent commit added sectors read/written to the disk utilization data.\nAllow these counts to also appear in the JSON output.\n\nFixes: 75cbc26d500fc5f7e36f6203c9b8e08b9c6f007c (\"diskutil: Report how\nmany sectors have been read and written\")\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "270316dd2566346a12cfdf3cbe9996a88307f87d", "commit_date": "2023-07-13T21:28:20Z", "commit_message": "Merge branch 'master' of https://github.com/bvanassche/fio\n\n* 'master' of https://github.com/bvanassche/fio:\n  diskutil: Report how many sectors have been read and written\n  diskutil: Fix a debug statement in get_io_ticks()\n  diskutil: Simplify get_io_ticks()\n  diskutil: Remove casts from get_io_ticks()\n  diskutil: Improve disk utilization data structure documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75cbc26d500fc5f7e36f6203c9b8e08b9c6f007c", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Report how many sectors have been read and written\n\nIt is useful to know how much data has been read and/or written. Report\nthis information.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "843b07e1be99dc86ba02c81461a2d498ea1ab9e1", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Fix a debug statement in get_io_ticks()\n\nReport correctly whether or not reading statistics succeeded.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e08d9f694d972f02e143902124f953df6c3aadfa", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Simplify get_io_ticks()\n\nRemove the sectors[] array. Remove the set-but-not-used in_flight variable.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a4c41dd9ed5b10b611b4581c3ac9f4a529ce984", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Remove casts from get_io_ticks()\n\nThis patch does not change the behavior of the code.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9d83cff1cecb493948525d9a27d2f885ab30e89", "commit_date": "2023-07-13T19:51:20Z", "commit_message": "diskutil: Improve disk utilization data structure documentation\n\nDocument the meaning of the members of struct disk_util_stats.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "228d65ea716cf6f71328694ad36622a8f0ed844c", "commit_date": "2023-07-13T16:38:33Z", "commit_message": "options: add code for FDP pli selection use in client/server mode\n\nFor every new option, we need to convert it from the host's storage\nformat to the on-wire protocol and back in order to be able to use it in\nclient/server mode.\n\nFixes: d3e310c531059fb606f04819c362b4d46c518b84 (\"fdp: support random placement id selection\")\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5f3b613876d6fd026ccf532f89fd21b841ab99d", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "engines/xnvme: add support for fdp\n\nAdd FDP support to xnvme I/O engine. This support can be used only with\nnvme-ns generic character device (/dev/ngXnY). The available backends are\n--xnvme_async=io_uring_cmd and --xnvme_sync=nvme.\nAdd a xnvme-fdp config example file.\n\nUpdate the minimum required xnvme version to 0.7.0\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3e310c531059fb606f04819c362b4d46c518b84", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "fdp: support random placement id selection\n\nAllow user to either roundrobin or select random placement ID from\nthe available placement IDs.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "154d27e6b6d51461db4869d80a7e5b9f8fb1d93f", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "fdp: fix placement id check\n\nNumber of reclaim unit handle descriptors are 1 based, whereas the\ninput placement id index / indices are 0 based. Add the correct check\nfor that.\n\nFixes: a7e8aae0 (\"fio: add fdp support ..\")\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98cd3c0e705c91628c87bf27f03d42b4f34353c1", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "fdp: use macros\n\nuse macros for directive type and max ruhs.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10bad6b9a15f56a4eefb1a12a0ebb7f43c9d4a42", "commit_date": "2023-07-06T12:07:28Z", "commit_message": "fix: io_uring sqpoll issue_time empty when kernel not yet read sq\n\nIn io_uring sqpoll mode, when kernel side thread has not yet read \r\nthe sqring before second fio_ioring_commit() called, the \r\nsq_ring.head will remain the same. The second \r\nfio_ioring_commit() will initialize the wrong io_u's issue_time. \r\nThe old(in head) io_u\u2018s issue_time will to be initialized twice and \r\nnew(in tail - 1) io_u's issue_time will not to be initialized.\r\nThis problem will cause clat is weird, sometimes larger than lat.\r\n\r\nSigned-off-by: Jueji Yang <jueji.yang@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e2b81b854286f32eae7951a434dddebd968f9d5", "commit_date": "2023-07-05T21:48:11Z", "commit_message": "zbd: Support finishing zones on Android\n\nBLKFINISHZONE is missing from older versions of the Android NDK header\nfiles. Hence, define BLKFINISHZONE if it has not been defined and detect\nat runtime whether or not the kernel supports finishing zones.\n\nCc: Damien Le Moal <dlemoal@kernel.org>\nCc: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>\nLink: https://lore.kernel.org/r/20230705212915.3373438-1-bvanassche@acm.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d47132c6a6be57bb5033c57db5e86cfba179c12f", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "t/nvmept: add trim test with ioengine options enabled\n\nAdd a test for a trim workload with ioengine options enabled like the\nones we have for read and write. fixedbufs cannot be enabled for a\ntrim-only workload because fio does not allocate data buffers for these\nworkloads.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8604be055293f38300980da5fc508615f94b58eb", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "t/nvmept: add check for iodepth\n\nMake sure that we achieve the iodepth specified in the job options.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f57e30f54078b36667afefdf6ea5794b6142b27", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "engines/io_uring: remove dead code related to trim\n\nNow that we are no longer using an NVMe IOCTL to send io_uring_cmd trim\ncommands we can just use the existing pathway to carry out synchronous\ntrim commands for zoned devices. So we no longer need this code.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4885a6eba420ce216e4102df3e42229e167d1b7b", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "engines/io_uring_cmd: make trims async\n\nInstead of using a synchronous IOCTL to send a trim/deallocate request, just\nuse the io_uring pass-through interface to send the dataset management\ncommand with the deallocate request just like we already do for read and\nwrite commands.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dea8bb336a6435d9c21bd0fe976f3b0f09e8386", "commit_date": "2023-07-05T14:55:30Z", "commit_message": "Merge branch 'makefile-hardening-cpp-flags' of https://github.com/proact-de/fio\n\n* 'makefile-hardening-cpp-flags' of https://github.com/proact-de/fio:\n  Keep C pre processor hardening build flags.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2810cf2863a4b63dab7c434f2fbf3263cc69e4a9", "commit_date": "2023-07-04T12:47:21Z", "commit_message": "Keep C pre processor hardening build flags.\n\nThis allows for distributions like Debian to apply hardening flags\nwithout patching the makefile.\n\nSigned-off-by: Martin Steigerwald <martin.steigerwald@proact.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41508de67c06661ff1d473d108a8a01912ade114", "commit_date": "2023-07-03T15:16:45Z", "commit_message": "fio/server: fix confusing sk_out check\n\nThe previous assert check we had here just checked for sk_out->sk being\n-1, but if sk_out itself was set.\n\nFixes: 83276370ce4d (\"fixed compiler warnings if NDEBUG enabled in core code\")\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2091760e59615146d7cce41afc8d38e6d74eda97", "commit_date": "2023-07-03T14:20:01Z", "commit_message": "Merge branch 'improvement/fix-warnings-if-NDEBUG-enabled' of https://github.com/dpronin/fio\n\n* 'improvement/fix-warnings-if-NDEBUG-enabled' of https://github.com/dpronin/fio:\n  fixed compiler warnings if NDEBUG enabled in test code\n  fixed compiler warnings if NDEBUG enabled in core code", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "38708e211baacbf2e56ae346bc1139202c7243c4", "commit_date": "2023-07-03T14:19:07Z", "commit_message": "Merge branch 'libaio/actual_min_algo_update' of https://github.com/dpronin/fio\n\n* 'libaio/actual_min_algo_update' of https://github.com/dpronin/fio:\n  use 'min' macro to find out next value of actual_min in libaio", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5087502fb05b2b4d756045c594a2e09c2ffc97dc", "commit_date": "2023-06-20T18:11:36Z", "commit_message": "init: don't adjust time units again for subjobs\n\nWe adjust max_latency and latency_target values to be nsec internally.\nMake sure we do this only once for the parent job and don't do it a\nsecond time for a subjob.\n\nFixes: https://github.com/axboe/fio/issues/1582\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ce9c4003aeaafa91c3278c1c7de4a32fadc5ea0", "commit_date": "2023-06-16T14:41:25Z", "commit_message": "docs: clarify opendir description\n\nMake explicit how opendir deals with colons in the path.\n\nFixes: https://github.com/axboe/fio/issues/1573\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62ac66490f5077e5fca1bd5b49165147cafc5a0d", "commit_date": "2023-06-10T00:04:45Z", "commit_message": "zbd: avoid Coverity defect report\n\nCoverity reported a defect related to the local variable \"in_flight\":\n\n    Using an unreliable value of \"in_flight\" inside the second locked\n    section. If the data that \"in_flight\" depends on was changed by\n    another thread, this use might be incorrect.\n\nThe variable \"in_flight\" is thread local and other threads can not\nchange its value. Then the report should be false-positive. Just to\nsuppress the report, change reference timing of the valuable.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230609235914.1376567-1-shinichiro.kawasaki@wdc.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "edaee5b96fd87c3c5fe7f64ec917a175cd9237fc", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/zbd: test write zone accounting of trim workload\n\nRecent commit fixed the bug of the write zone accounting of trim\nworkload. Add a test case which confirms the fix.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2495bcd841f16ea1dfbb019f2fe9a307cddf15f7", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/zbd: test write zone accounting of almost full zones\n\nRecent commit fixed the bug of the write zone accounting for almost full\nzones. Add a test case which confirms the fix.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b4c9c4efa00527806625273ebf0769d4e3bbe8e", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/zbd: reset zones before tests with max_open_zones option\n\nAfter the recent fix, fio no longer resets zones when it finds more\nzones in open condition than the max_open_zones option. This results in\nfailure of test cases 12, 13, 29, 32, 48 and 51. To avoid the failures,\nreset zones at the beginning of the test cases.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67282020ce1b9427f296af1a449ea0d6895530bc", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: fix write zone accounting of trim workload\n\nThe commit e3be810bf0fd (\"zbd: Support zone reset by trim\") supported\ntrim for zonemode=zbd by introducing the function zbd_do_io_u_trim(),\nwhich calls zbd_reset_zone(). However, it did not call\nzbd_write_zone_put() to the trim target zone, then trim operation\nresulted in wrong accounting of write zones.\n\nTo fix the issue, call zbd_write_zone_put() from zbd_reset_zone(). To\ncover the case to reset zones without a zbd_write_zone_put() call,\nprepare another function __zbd_reset_zone(). While at it, simplify\nzbd_reset_zones() by calling the modified zbd_reset_zone().\n\nOf note is that the constifier of the argument td of do_io_u_trim() is\nremoved since zbd_write_zone_put() requires changes in that argument.\n\nFixes: e3be810bf0fd (\"zbd: Support zone reset by trim\")\nSuggested-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f539b98c87990c0694df666119087e44993fbac6", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: fix write zone accounting of almost full zones\n\nFor zonemode=zbd, fio checks condition of each zone and account it as\nwrite target zone if it has open condition. However, when such a zone in\nopen condition is almost full and its remainder area for write is\nsmaller than the block size, fio does not handle it as a write target\nzone. This causes difference between open zones accounting on the device\nand write target zones accounting by fio. It results in unexpected\nmax_open_zones limit failure.\n\nAvoid the zone accounting difference by handling the almost full zones\nas write target zones at fio start. Introduce the helper function\n__zbd_write_zone_get() which does same operation as zbd_write_zone_get()\nexcept the check for the almost full zones. At fio start, call\n__zbd_write_zone_get() so that almost full zones are added to write\ntarget zones. During fio workload run, call zbd_write_zone_get() so that\nthe almost full zones are not chosen for write target.\n\nSuggested-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ac768899d63baca5259b21823b76f42aaaa509b", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: do not reset extra zones in open conditions\n\nThe commit 954217b90191 (\"zbd: Initialize open zones list referring zone\nstatus at fio start\") introduced zone resets for zones in open condition\nwhich exceeds the limit of max_open_zones. However, this zone reset may\nbreak data in the zones even when fio does no write to them. Avoid the\nzone reset and report it as an error.\n\nFixes: 954217b90191 (\"zbd: Initialize open zones list referring zone status at fio start\")\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a48070461ed561ce040e15d98702d335179581fa", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: rename 'open zones' to 'write zones'\n\nCurrent fio code for zonemode=zbd uses the word 'open zone' to mean the\nzones that fio jobs write to. Before fio starts writing to a zone, it\ncalls zbd_open_zone(). When fio completes writing to a zone, it calls\nzbd_close_zone(). This wording is good for zoned block devices with\nmax_open_zones limit, such as ZBC and ZAC devices. The devices use same\nword 'open' to express the zone condition that the devices assign\nresources for data write to zones. However, the word 'open' gets\nconfusing to support zoned block devices which has max_active_zones\nlimit, such as ZNS devices. These devices have both 'open' and 'active'\nkeywords to mean two different kinds of resources on the device. This\n'active' status does not fit with the 'open zone' wording in the fio\ncode. Also, the word 'open' zone in fio code does not always match with\nthe 'open' condition of zones on the device (e.g. when\n--ignore_zone_limits option is specified).\n\nTo avoid the confusion, stop using the word 'open zone' in the fio code.\nInstead, use the word 'write zone' to mean that the zone is the write\ntarget. When fio starts a write to a zone, it adds the zone to\nwrite_zones array. When fio completes writing to a zone, it removes the\nzone from the write_zones array. For this purpose, rename struct fields,\nfunctions and a macro:\n\n  ZBD_MAX_OPEN_ZONES -> ZBD_MAX_WRITE_ZONES\n  struct fio_zone_info\n    open -> write\n  struct thread_data\n    num_open_zones -> num_write_zones\n  struct zoned_block_device_info:\n    max_open_zones -> max_write_zones\n    num_open_zones -> num_write_zones\n    open_zones[] -> write_zones[]\n  zbd_open_zone() -> zbd_write_zone_get()\n  zbd_close_zone() -> zbd_write_zone_put()\n  zbd_convert_to_open_zone() -> zbd_convert_to_write_zone()\n\nTo match up these changes, rename local variables and goto labels. Also\nrephrase code comments.\n\nOf note is that this rename is only for the fio code. The fio options\nmax_open_zones and job_max_open_zones are not renamed to not confuse\nusers.\n\nSuggested-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03317fbb1548fef308decf29b4ce3c8bb31d01cb", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/strided: increase minumum recommended size to 64MiB\n\nTest 8 has offset=32M. So it fails with a 32MiB file. Increase the\nminimum recommended test file/device size to 64MiB.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a36d0e473f41e3dac7556ae7bbcf66614f79b85", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/strided: adapt to use fiotestlib\n\nUse the FioJobCmdTest class and the run_fio_test runner to execute the\ntests.\n\nAlso update run-fio-tests.py to accommodate the new way of specifying\nthe path to the fio executable.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "885e170af6501530f884e3be40fe413095d39fb1", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: add ability to ingest iops logs\n\nEnhance the FioJobCmdTest class with the ability to read in an IOPS log\nif one was generated during the course of the test run.\n\nThis reads in only the first IOPS log written as a result of\n--write_iops_log.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cebaf30e072440c271b70468f45911c8405cdb2f", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/nvmept: adapt to use fiotestlib\n\nUse the FioJobCmdTest class and the test runner from fiotestlib.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fef0c6fd2ad91debdd4b9fa1d64314b8bb90e9da", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/readonly: adapt to use fiotestlib\n\nUse the test runner and testclass provided in fiotestlib.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cab6c7d1745e4f437f833ed5fc4030f007a64afe", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/random_seed: fixes from pylint\n\n- Use % formatting for logging.debug\n- Eliminate f-string without interpolated values\n- Iterate with items() instead of just over keys\n- Remove unused subprocess import\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1017a7d3548aa1b277fee1cf2cb481707536714e", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/random_seed: use methods provided in fiotestlib to run tests\n\nAdapt random_seed.py to use the new FioJobCmdTest class.  Also use the\ntest runner from fiotestlib. This reduces code duplication.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "86131edc93f6739bb6a4e85c18d6e60b731d3d80", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/random_seed: use logging module for debug prints\n\nInstead of having 'if self.debug:' lines all over the place, use the\nlogging module for debug messages.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dc5c6f6af9674dd9547093a59d6fbd77bd9d9f8", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: add class for command-line fio job\n\nAdd a separate class for running a fio job with all of the options\nprovided on the command line (instead of in a job file).\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8cb1dbbea2a79edfc55597fb36cb910876ddb4a3", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: record test command in more useful format\n\nInstead of recording the test command as a Python object, record it as a\nstring with spaces delimiting each of the paramters. This way we can use\nit to directly issue the command in a shell.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "111fa98ea91a8cfbd9e143f9dd7df3857bcbe00d", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: rearrange constructor and setup steps\n\nMake the constructor and setup steps more sensible. The constructor now\nsets variables that should be fixed throughout the execution of the\ntest. Some of the setup steps may depend on values set by the\nconstructor. So keeps those separate.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6544f1ae3ec012d1ec68e1e19d46b2cc27e87f80", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: use f-string for formatting\n\nTake advantage of running on modern Python versions and use an f-string\nfor formatting.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cf0ba9d3ca7918e54860e01d13f1899a02ce758", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: use 'with' for opening files\n\nUse with when opening files to relieve us of the need to explicitly\nclose the files.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68b3a741b1ba68fd37afd5ad3e75352fc4901e2f", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: use dictionaries for filenames and paths\n\nInstead of separate variables for all the different filenames and paths,\nuse dictionaries for the filenames and paths.\n\nThis involves changing the function signature for the constructor and\nsetup() functions so that parameters are passed to setup() instead of\nthe constructor. This is because the base class defines the filenames\ndictionary but FioJobFileTest needs to put an entry into the dictionary\nbefore calling the base class constructor.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecd6d30fcea14e42d933f1895b2f910cbe84506b", "commit_date": "2023-06-08T18:38:56Z", "commit_message": "t/run-fio-tests: move get_file outside of FioJobFileTest\n\nThere's no reason for this helper function to be part of a class. Just\nmake it an independent helper.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0dc6e911832fca2c5cf9a5ac2663b468ef2c4341", "commit_date": "2023-06-08T18:38:42Z", "commit_message": "t/run-fio-tests: rename FioJobTest to FioJobFileTest\n\nWe have two different types of tests based on fio jobs. The ones\nreferred to by FioJobFileTest consist of running a fio job file. It's\nalso possible to run a fio job test with options specified on the\ncommand line. Such a class will be defined later.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb551941e7b74e484ccdee863cde84ea1ef4bcbe", "commit_date": "2023-06-08T16:42:39Z", "commit_message": "t/run-fio-tests: split source file\n\nThis is the first step in creating a test library that can be used by\nother python test scripts to reduce code duplication.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b4ba547cf45377fffc7a1e60728369997cc7a9b", "commit_date": "2023-06-01T18:12:41Z", "commit_message": "t/run-fio-tests: address issues identified by pylint\n\n- use f strings\n- use Python3 syntax for parent classes\n- other small cleanups\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2128f93aacb41fe5990027133162579d39da7ec4", "commit_date": "2023-06-01T18:12:07Z", "commit_message": "t/run-fio-tests: integrate t/nvmept.py\n\nRunning t/nvmept.py requires that the test runner provide an NVMe\ncharacter device test target. t/nvmept.py will be skipped unless an NVMe\ncharacter device test target is provided.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b03ed937838505c4202d298e7daefda3b93963c7", "commit_date": "2023-06-01T18:11:33Z", "commit_message": "t/nvmept.py: test script for io_uring_cmd NVMe pass through\n\nTest basic functionality of the io_uring_cmd ioengine with NVMe\npass-through commands.\n\nThis script starts with basic sequential and random read, write, trim,\nreadwrite, and trimwrite workloads. It also runs sequential and random\nwrite workloads with verification. Finally it runs random read and write\nworkloads with almost all of the ioengine options enabled. The only\nioengine option not exercised is hipri because the NVMe driver must be\nloaded with poll_queues set for this to work.\n\nSince this is a destructive test the target device must be specified on\nthe command line.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4820d46cef75f806d8c95afaa77f86ded4e3603e", "commit_date": "2023-05-27T00:09:53Z", "commit_message": "ci: disable tls for msys2 builds\n\nThe same tls issue that occurred with AppVeyor msys2 builds has appeared\nin GitHub Actions msys2 builds. Disable thread local storage for GitHub\nActions msys2 builds as well.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "954b86f71b0718943796192be1a89ffb0da5a97c", "commit_date": "2023-05-24T13:58:11Z", "commit_message": "ci: upload tagged GitHub Actions Windows installers as releases\n\nSince we are no long using AppVeyor for Windows tests, we can use the\ninstallers built by GitHub Actions for Windows releases.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bde0576127046f16bd50d591dfcc5cb79ce8a76", "commit_date": "2023-05-24T13:58:02Z", "commit_message": "ci: stop using AppVeyor for Windows builds\n\nStop running Windows tests using AppVeyor since it only runs tests\nserially. GitHub Actions Windows tests have been running for a few weeks\nand seem to be working ok.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "prio-hints": [{"commit_oid": "219a868280716e4e221b57269ee3b8a39ea9c29b", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "stats: Add hint information to per priority level stats\n\nModify the json and standard per-priority output stats to display the\nhint value together with the priority class and level.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-7-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "79012fece0a0ecb02ad6a3322913980efdb1d726", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "cmdprio: Add support for per I/O priority hint\n\nIntroduce the new option cmdprio_hint to allow specifying I/O priority\nhints per IO with the io_uring and libaio IO engines. A third acceptable\nformat for the cmdprio_bssplit option is also introduced to allow\nspecifying an I/O hint in addition to a priority class and level.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-6-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "860462dad312ef121766f5d17b1df7b05d1f47ee", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "options: add priohint option\n\nIntroduce the new option priohint to allow users to specify an I/O\npriority hint applying to all IOs issued by a job. This increases fio\nserver version (FIO_SERVER_VER) to 101.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-5-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3048c1b564fc793ee11004a17b2a4de5a82be27", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "os-linux: add initial support for IO priority hints\n\nAdd initial support for Linux to allow specifying a hint for any\npriority value. With this change, a priority value becomes the\ncombination of a priority class, a priority level and a hint.\nThe generic os.h ioprio manipulation macros, as well as the\nos-dragonfly.h ioprio manipulation macros are modified to ignore this\nhint.\n\nFor all other OSes that do not support priority classes, priotity hints\nare ignored and always equal to 0.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-4-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2838f77aa80605c13cd18ce5e941005a42cec4a4", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "cmdprio: Introduce generic option definitions\n\nThe definition of the per-I/O priority options for the io_uring and\nlibaio I/O engines are almost identical, differing only by the option\ngroup and option data structure used.\n\nIntroduce the CMDPRIO_OPTIONS macro in engines/cmdprio.h to generically\ndefine these options in the io_uring and libaio engines to simplify the\ncode.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-3-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d4d503a557d4a664ff3fd7a811966df038d06634", "commit_date": "2023-07-21T20:07:28Z", "commit_message": "os-linux: Cleanup IO priority class and value macros\n\nIn os/os-linux.h, define the ioprio() macro using the already defined\nIOPRIO_MAX_PRIO macro instead of hard coding the maximum priority value\nagain. Also move the definitions of the ioprio_class() and ioprio()\nmacros before the ioprio_value() function and use ioprio_class() inside\nioprio_value_is_class_rt() instead of re-coding the iopriority class\nextraction again in that function.\n\nSigned-off-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230721110510.44772-2-dlemoal@kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc37e3dedee9026a4e745c7ab03ed293cb04eb60", "commit_date": "2023-07-21T14:02:55Z", "commit_message": "backend: clear IO_U_F_FLIGHT flag in zero byte read path\n\nWhen read io_u completes with zero byte read, it sets EIO as the error\nand put the io_u. However, it does not clear the IO_U_F_FLIGHT flag.\nWhen fio runs with --ignore_error=EIO option, the io_u with the flag is\nreused for next I/O and causes an assertion failure:\n\n  fio: ioengines.c:335: td_io_queue: Assertion `(io_u->flags & IO_U_F_FLIGHT) == 0' failed.\n\nThe failure is observed with blktests test case block/011 which runs fio\nwith the --ignore_error=EIO option [1].\n\n  [1] https://github.com/osandov/blktests/issues/29\n\nFix this by calling clear_io_u() instead of put_io_u() in the zero byte\nread path. clear_io_u() clears the IO_U_F_FLIGHT flag then calls\nput_io_u().\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230721044444.749537-1-shinichiro.kawasaki@wdc.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "caf7ac7ef000097765b1c56404adb5e68b227977", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add max_active configs to run-tests-against-nullb\n\nIntroduce several new test device configurations to cover the cases with\nmax_active_zones is not being zero, i.e. limited. Two group of new\nconfigurations are added, one with max_active_zones == max_open_zones\nand the other with max_active_zones > max_open_zones.\n\nSigned-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-14-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "709706209b50ae9697b25057e491ea5527178320", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: fix null_blk configuration in run-tests-against-nullb\n\nCorrectly set max_open in null_blk configfs.\nFix displayed number of conventional zones in section config banner.\n\nSigned-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-13-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4f9333c944fa19c83f198daab62ae50a6416b99e", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add missing prep_write for test cases with write workloads\n\nThe test cases from 54 to 57 do writes but miss prep_write() call which\nresets zones of the test target device with max_active_zones limit. This\nresults in failures due to open zones out of I/O ranges and\nmax_active_zones limit error. Add the missing prep_write() call to avoid\nthe failures.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-12-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c99637ecee9bcbd96b4e91f2b627b276a905118", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: fix fio failure check and SG node failure in test case 31\n\nThe test case 31 runs fio twice but the failure of the first fio run was\nnot checked. This allowed the test case pass even with wrong\nmax_open_zones value. To fix this, check exit code of the fio run.\n\nAlso, the first fio run fails when the test target devices are SG nodes,\nsince libzbc I/O engine is not used. To fix this, call the ioengine()\nhelper function which adjusts I/O engine for each device.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-11-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "af26c9bf6992e47f5da18955e1edb2d318325db3", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: get max_open_zones from sysfs\n\nThe helper bash function gets max_open_zones limit of the test target\ndevice using sg_inq and libzbc tools. This works for SAS/SATA devices\nbut does not work for ZNS or null_blk devices. This results is running\nthe test case 31 with wrong max_open_zones value. Fix this by referring\nmax_open_zones sysfs attribute.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-10-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "25868b05c9d388055441a2cf4133534ea51cebc1", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add test case to check max_active_zones limit error message\n\nThe recent fio change introduced a new error message to indicate\nmax_active_zones limit error of zoned block devices. Add a test case to\ncheck the error message is reported.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-9-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3be0f00a4bda09588798500659cab0d1668177d", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add test case to check zones in closed condition\n\nWhen the zoned block device has max_active_zones limit, the zones in\nopen or closed condition consume resource on the device. If the number\nof zones in open or closed condition gets larger than the\nmax_active_zones limit, the device reports an error. Until the recent\nfix (\"zbd: write to closed zones on the devices with max_active_zones\nlimit\"), fio handled only zones in open condition as write target then\nfio was not able to avoid the error.\n\nAdd a test which confirms that the fix avoids the error by handling\nzones in closed condition as write target. This test case requires the\ndevice has max_active_zones limit. Prepare zones in closed condition as\nmany as the max_active_zones limit. Do random write and check no error.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-8-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a5411cd73840b40737f629ec703b082aed08067", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add max_active_zone variable\n\nTo test fio behavior on zoned block devices with max_active_zones limit,\nadd a global variable which holds the limit value. Also add helper\nfunctions to check max_active_zones limit of the test target devices and\nmax_active_zones requirement of test cases.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-7-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00080a1eb135a91e46ff17ea630512d142124708", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "t/zbd: add close_zone helper function\n\nAdd a helper function which sets the specified zone in closed condition.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-6-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "23a846b389235e5aa0058042319922b7ef7c01fa", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "docs: modify max_open_zones option description\n\nA recent commit modified the max_open_zones option to improve handling\nof zoned block devices with max_active_zones limit. Modify description\nof the option to meet the change.\n\nFor that purpose, explain the relation between the max_open_zones option\nand the device side limits max_active_zones and max_open_zones. Also\nmention about three zone conditions 'implicit open', 'explict open' and\n'closed'. And replace the word 'zone state' with 'zone condition'.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-5-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b403508bfe3ea815d522d813b66e86b43e3fa82", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "zbd: print max_active_zones limit error message\n\nWhen zoned block devices have max_active_zones limit and when write\noperations exceed that limit, Linux block sub-system reports EOVERFLOW.\nHowever, the strerror() string for EOVERFLOW does not mention about\nmax_active_zones then it confuses users.\n\nTo avoid the confusion, print additional error message to indicate the\nmax_active_zones limit. For this purpose, add a hook function\nzbd_log_err() and call it from __io_u_log_error().\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-4-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bab838f806eb139b1ffece82454df77d9b6be233", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "zbd: write to closed zones on the devices with max_active_zones limit\n\nCurrent fio implementation does not handle zones in closed condition as\nwrite target zones. When the device has max_active_zones limit, the\nwrite to other zones may cause errors by exceeding the limit, since the\nzones in closed condition consume the device resource for the\nmax_active_zones limit.\n\nTo avoid the error, handle the zones in closed condition as write target\nin same manner as the zones in open condition when the device has the\nmax_active_zones limit. At the job start, check each condition of the\nzones in the IO ranges and if it has closed condition, pass the zone\nto zbd_write_zones_get() in same manner as the zones in open condition.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-3-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9e523ef81a086f813481fab39ccf5b94e8f6dd81", "commit_date": "2023-07-20T13:52:37Z", "commit_message": "zbd: get max_active_zones limit value from zoned devices\n\nAs a preparation to improve open zones accounting for devices with the\nmax_active_zones limit, get the limit from the devices. In same manner\nas max_open_zones, call get_max_active_zones callback if the I/O engine\nsupports it. Add the new call back to the I/O engine API and bump up\nFIO_IOOPS_VERSION. It is expected that io_uring and xnvme engines to\nsupport the callback later. When the callback is not available, refer\nmax_active_zones sysfs attribute for block devices. When the limit value\nis not available, use zero value which means no limit. Keep the obtained\nlimit value in the struct zoned_block_device_info.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nLink: https://lore.kernel.org/r/20230719105756.553146-2-shinichiro.kawasaki@wdc.com\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04361e9a23d6e0448fd6fbbd4e14ecdfff60e314", "commit_date": "2023-07-15T15:57:43Z", "commit_message": "Merge branch 'patch-3' of https://github.com/yangjueji/fio\n\n* 'patch-3' of https://github.com/yangjueji/fio:\n  fix: io_uring sqpoll issue_time empty when kernel not yet read sq", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14adf6e31487aa2bc8e47cd037428036089a3834", "commit_date": "2023-07-14T18:03:34Z", "commit_message": "thinktime: Avoid calculating a negative time left to wait\n\nWhen the thinktime_spin option specifies a value that is within\na few milliseconds of the thinktime value, in handle_thinktime()\nit's possible in a VM environment for the duration of usec_spin()\nto exceed the thinktime value. While doing usec_spin(), the vCPU\ncould get de-scheduled or the hypervisor could steal CPU time\nfrom the vCPU. When the guest vCPU runs after being scheduled\nagain, it may read the clock and find that more time has elapsed\nthan intended. In such a case, the time left to wait could be\ncalculated as a negative value. Subsequent calculations then go\nawry because the time left is cast as unsigned.\n\nFix this by detecting when the time left would go negative and\njust set it to zero.\n\nFixes: 1a9bf8146 (\"Add option to ignore thinktime for rated IO\")\nFixes: https://github.com/axboe/fio/issues/1588\nLink: https://lore.kernel.org/fio/1689354334-131024-1-git-send-email-mikelley@microsoft.com/T/#u\nSigned-off-by: Michael Kelley <mikelley@microsoft.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "bb08a260413e54465f370523ae26a1bebb42308c", "commit_date": "2023-07-14T17:53:46Z", "commit_message": "stat: add diskutil aggregated sectors to normal output\n\nSince we are now collecting sectors in the disk utilization data we\nshould include them in the aggregated data as well.\n\nI tested this with an LVM mirror. I also tested this on an mdadm mirror\nbut all the aggregated and slave data was zero.\n\nFixes: 75cbc26d500fc5f7e36f6203c9b8e08b9c6f007c (\"diskutil: Report how\nmany sectors have been read and written\")\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fc2501310842cc2cd11168074e8f69cf39699263", "commit_date": "2023-07-14T17:53:46Z", "commit_message": "stat: add new diskutil sectors to json output\n\nA recent commit added sectors read/written to the disk utilization data.\nAllow these counts to also appear in the JSON output.\n\nFixes: 75cbc26d500fc5f7e36f6203c9b8e08b9c6f007c (\"diskutil: Report how\nmany sectors have been read and written\")\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "270316dd2566346a12cfdf3cbe9996a88307f87d", "commit_date": "2023-07-13T21:28:20Z", "commit_message": "Merge branch 'master' of https://github.com/bvanassche/fio\n\n* 'master' of https://github.com/bvanassche/fio:\n  diskutil: Report how many sectors have been read and written\n  diskutil: Fix a debug statement in get_io_ticks()\n  diskutil: Simplify get_io_ticks()\n  diskutil: Remove casts from get_io_ticks()\n  diskutil: Improve disk utilization data structure documentation", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "75cbc26d500fc5f7e36f6203c9b8e08b9c6f007c", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Report how many sectors have been read and written\n\nIt is useful to know how much data has been read and/or written. Report\nthis information.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "843b07e1be99dc86ba02c81461a2d498ea1ab9e1", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Fix a debug statement in get_io_ticks()\n\nReport correctly whether or not reading statistics succeeded.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e08d9f694d972f02e143902124f953df6c3aadfa", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Simplify get_io_ticks()\n\nRemove the sectors[] array. Remove the set-but-not-used in_flight variable.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8a4c41dd9ed5b10b611b4581c3ac9f4a529ce984", "commit_date": "2023-07-13T19:51:27Z", "commit_message": "diskutil: Remove casts from get_io_ticks()\n\nThis patch does not change the behavior of the code.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a9d83cff1cecb493948525d9a27d2f885ab30e89", "commit_date": "2023-07-13T19:51:20Z", "commit_message": "diskutil: Improve disk utilization data structure documentation\n\nDocument the meaning of the members of struct disk_util_stats.\n\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "228d65ea716cf6f71328694ad36622a8f0ed844c", "commit_date": "2023-07-13T16:38:33Z", "commit_message": "options: add code for FDP pli selection use in client/server mode\n\nFor every new option, we need to convert it from the host's storage\nformat to the on-wire protocol and back in order to be able to use it in\nclient/server mode.\n\nFixes: d3e310c531059fb606f04819c362b4d46c518b84 (\"fdp: support random placement id selection\")\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e5f3b613876d6fd026ccf532f89fd21b841ab99d", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "engines/xnvme: add support for fdp\n\nAdd FDP support to xnvme I/O engine. This support can be used only with\nnvme-ns generic character device (/dev/ngXnY). The available backends are\n--xnvme_async=io_uring_cmd and --xnvme_sync=nvme.\nAdd a xnvme-fdp config example file.\n\nUpdate the minimum required xnvme version to 0.7.0\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3e310c531059fb606f04819c362b4d46c518b84", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "fdp: support random placement id selection\n\nAllow user to either roundrobin or select random placement ID from\nthe available placement IDs.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "154d27e6b6d51461db4869d80a7e5b9f8fb1d93f", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "fdp: fix placement id check\n\nNumber of reclaim unit handle descriptors are 1 based, whereas the\ninput placement id index / indices are 0 based. Add the correct check\nfor that.\n\nFixes: a7e8aae0 (\"fio: add fdp support ..\")\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "98cd3c0e705c91628c87bf27f03d42b4f34353c1", "commit_date": "2023-07-13T16:38:14Z", "commit_message": "fdp: use macros\n\nuse macros for directive type and max ruhs.\n\nSigned-off-by: Ankit Kumar <ankit.kumar@samsung.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "10bad6b9a15f56a4eefb1a12a0ebb7f43c9d4a42", "commit_date": "2023-07-06T12:07:28Z", "commit_message": "fix: io_uring sqpoll issue_time empty when kernel not yet read sq\n\nIn io_uring sqpoll mode, when kernel side thread has not yet read \r\nthe sqring before second fio_ioring_commit() called, the \r\nsq_ring.head will remain the same. The second \r\nfio_ioring_commit() will initialize the wrong io_u's issue_time. \r\nThe old(in head) io_u\u2018s issue_time will to be initialized twice and \r\nnew(in tail - 1) io_u's issue_time will not to be initialized.\r\nThis problem will cause clat is weird, sometimes larger than lat.\r\n\r\nSigned-off-by: Jueji Yang <jueji.yang@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e2b81b854286f32eae7951a434dddebd968f9d5", "commit_date": "2023-07-05T21:48:11Z", "commit_message": "zbd: Support finishing zones on Android\n\nBLKFINISHZONE is missing from older versions of the Android NDK header\nfiles. Hence, define BLKFINISHZONE if it has not been defined and detect\nat runtime whether or not the kernel supports finishing zones.\n\nCc: Damien Le Moal <dlemoal@kernel.org>\nCc: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>\nLink: https://lore.kernel.org/r/20230705212915.3373438-1-bvanassche@acm.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d47132c6a6be57bb5033c57db5e86cfba179c12f", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "t/nvmept: add trim test with ioengine options enabled\n\nAdd a test for a trim workload with ioengine options enabled like the\nones we have for read and write. fixedbufs cannot be enabled for a\ntrim-only workload because fio does not allocate data buffers for these\nworkloads.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8604be055293f38300980da5fc508615f94b58eb", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "t/nvmept: add check for iodepth\n\nMake sure that we achieve the iodepth specified in the job options.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7f57e30f54078b36667afefdf6ea5794b6142b27", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "engines/io_uring: remove dead code related to trim\n\nNow that we are no longer using an NVMe IOCTL to send io_uring_cmd trim\ncommands we can just use the existing pathway to carry out synchronous\ntrim commands for zoned devices. So we no longer need this code.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4885a6eba420ce216e4102df3e42229e167d1b7b", "commit_date": "2023-07-05T19:51:09Z", "commit_message": "engines/io_uring_cmd: make trims async\n\nInstead of using a synchronous IOCTL to send a trim/deallocate request, just\nuse the io_uring pass-through interface to send the dataset management\ncommand with the deallocate request just like we already do for read and\nwrite commands.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dea8bb336a6435d9c21bd0fe976f3b0f09e8386", "commit_date": "2023-07-05T14:55:30Z", "commit_message": "Merge branch 'makefile-hardening-cpp-flags' of https://github.com/proact-de/fio\n\n* 'makefile-hardening-cpp-flags' of https://github.com/proact-de/fio:\n  Keep C pre processor hardening build flags.", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2810cf2863a4b63dab7c434f2fbf3263cc69e4a9", "commit_date": "2023-07-04T12:47:21Z", "commit_message": "Keep C pre processor hardening build flags.\n\nThis allows for distributions like Debian to apply hardening flags\nwithout patching the makefile.\n\nSigned-off-by: Martin Steigerwald <martin.steigerwald@proact.de>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "41508de67c06661ff1d473d108a8a01912ade114", "commit_date": "2023-07-03T15:16:45Z", "commit_message": "fio/server: fix confusing sk_out check\n\nThe previous assert check we had here just checked for sk_out->sk being\n-1, but if sk_out itself was set.\n\nFixes: 83276370ce4d (\"fixed compiler warnings if NDEBUG enabled in core code\")\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2091760e59615146d7cce41afc8d38e6d74eda97", "commit_date": "2023-07-03T14:20:01Z", "commit_message": "Merge branch 'improvement/fix-warnings-if-NDEBUG-enabled' of https://github.com/dpronin/fio\n\n* 'improvement/fix-warnings-if-NDEBUG-enabled' of https://github.com/dpronin/fio:\n  fixed compiler warnings if NDEBUG enabled in test code\n  fixed compiler warnings if NDEBUG enabled in core code", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "38708e211baacbf2e56ae346bc1139202c7243c4", "commit_date": "2023-07-03T14:19:07Z", "commit_message": "Merge branch 'libaio/actual_min_algo_update' of https://github.com/dpronin/fio\n\n* 'libaio/actual_min_algo_update' of https://github.com/dpronin/fio:\n  use 'min' macro to find out next value of actual_min in libaio", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5087502fb05b2b4d756045c594a2e09c2ffc97dc", "commit_date": "2023-06-20T18:11:36Z", "commit_message": "init: don't adjust time units again for subjobs\n\nWe adjust max_latency and latency_target values to be nsec internally.\nMake sure we do this only once for the parent job and don't do it a\nsecond time for a subjob.\n\nFixes: https://github.com/axboe/fio/issues/1582\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ce9c4003aeaafa91c3278c1c7de4a32fadc5ea0", "commit_date": "2023-06-16T14:41:25Z", "commit_message": "docs: clarify opendir description\n\nMake explicit how opendir deals with colons in the path.\n\nFixes: https://github.com/axboe/fio/issues/1573\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "62ac66490f5077e5fca1bd5b49165147cafc5a0d", "commit_date": "2023-06-10T00:04:45Z", "commit_message": "zbd: avoid Coverity defect report\n\nCoverity reported a defect related to the local variable \"in_flight\":\n\n    Using an unreliable value of \"in_flight\" inside the second locked\n    section. If the data that \"in_flight\" depends on was changed by\n    another thread, this use might be incorrect.\n\nThe variable \"in_flight\" is thread local and other threads can not\nchange its value. Then the report should be false-positive. Just to\nsuppress the report, change reference timing of the valuable.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nLink: https://lore.kernel.org/r/20230609235914.1376567-1-shinichiro.kawasaki@wdc.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "edaee5b96fd87c3c5fe7f64ec917a175cd9237fc", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/zbd: test write zone accounting of trim workload\n\nRecent commit fixed the bug of the write zone accounting of trim\nworkload. Add a test case which confirms the fix.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2495bcd841f16ea1dfbb019f2fe9a307cddf15f7", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/zbd: test write zone accounting of almost full zones\n\nRecent commit fixed the bug of the write zone accounting for almost full\nzones. Add a test case which confirms the fix.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b4c9c4efa00527806625273ebf0769d4e3bbe8e", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/zbd: reset zones before tests with max_open_zones option\n\nAfter the recent fix, fio no longer resets zones when it finds more\nzones in open condition than the max_open_zones option. This results in\nfailure of test cases 12, 13, 29, 32, 48 and 51. To avoid the failures,\nreset zones at the beginning of the test cases.\n\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "67282020ce1b9427f296af1a449ea0d6895530bc", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: fix write zone accounting of trim workload\n\nThe commit e3be810bf0fd (\"zbd: Support zone reset by trim\") supported\ntrim for zonemode=zbd by introducing the function zbd_do_io_u_trim(),\nwhich calls zbd_reset_zone(). However, it did not call\nzbd_write_zone_put() to the trim target zone, then trim operation\nresulted in wrong accounting of write zones.\n\nTo fix the issue, call zbd_write_zone_put() from zbd_reset_zone(). To\ncover the case to reset zones without a zbd_write_zone_put() call,\nprepare another function __zbd_reset_zone(). While at it, simplify\nzbd_reset_zones() by calling the modified zbd_reset_zone().\n\nOf note is that the constifier of the argument td of do_io_u_trim() is\nremoved since zbd_write_zone_put() requires changes in that argument.\n\nFixes: e3be810bf0fd (\"zbd: Support zone reset by trim\")\nSuggested-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f539b98c87990c0694df666119087e44993fbac6", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: fix write zone accounting of almost full zones\n\nFor zonemode=zbd, fio checks condition of each zone and account it as\nwrite target zone if it has open condition. However, when such a zone in\nopen condition is almost full and its remainder area for write is\nsmaller than the block size, fio does not handle it as a write target\nzone. This causes difference between open zones accounting on the device\nand write target zones accounting by fio. It results in unexpected\nmax_open_zones limit failure.\n\nAvoid the zone accounting difference by handling the almost full zones\nas write target zones at fio start. Introduce the helper function\n__zbd_write_zone_get() which does same operation as zbd_write_zone_get()\nexcept the check for the almost full zones. At fio start, call\n__zbd_write_zone_get() so that almost full zones are added to write\ntarget zones. During fio workload run, call zbd_write_zone_get() so that\nthe almost full zones are not chosen for write target.\n\nSuggested-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8ac768899d63baca5259b21823b76f42aaaa509b", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: do not reset extra zones in open conditions\n\nThe commit 954217b90191 (\"zbd: Initialize open zones list referring zone\nstatus at fio start\") introduced zone resets for zones in open condition\nwhich exceeds the limit of max_open_zones. However, this zone reset may\nbreak data in the zones even when fio does no write to them. Avoid the\nzone reset and report it as an error.\n\nFixes: 954217b90191 (\"zbd: Initialize open zones list referring zone status at fio start\")\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a48070461ed561ce040e15d98702d335179581fa", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "zbd: rename 'open zones' to 'write zones'\n\nCurrent fio code for zonemode=zbd uses the word 'open zone' to mean the\nzones that fio jobs write to. Before fio starts writing to a zone, it\ncalls zbd_open_zone(). When fio completes writing to a zone, it calls\nzbd_close_zone(). This wording is good for zoned block devices with\nmax_open_zones limit, such as ZBC and ZAC devices. The devices use same\nword 'open' to express the zone condition that the devices assign\nresources for data write to zones. However, the word 'open' gets\nconfusing to support zoned block devices which has max_active_zones\nlimit, such as ZNS devices. These devices have both 'open' and 'active'\nkeywords to mean two different kinds of resources on the device. This\n'active' status does not fit with the 'open zone' wording in the fio\ncode. Also, the word 'open' zone in fio code does not always match with\nthe 'open' condition of zones on the device (e.g. when\n--ignore_zone_limits option is specified).\n\nTo avoid the confusion, stop using the word 'open zone' in the fio code.\nInstead, use the word 'write zone' to mean that the zone is the write\ntarget. When fio starts a write to a zone, it adds the zone to\nwrite_zones array. When fio completes writing to a zone, it removes the\nzone from the write_zones array. For this purpose, rename struct fields,\nfunctions and a macro:\n\n  ZBD_MAX_OPEN_ZONES -> ZBD_MAX_WRITE_ZONES\n  struct fio_zone_info\n    open -> write\n  struct thread_data\n    num_open_zones -> num_write_zones\n  struct zoned_block_device_info:\n    max_open_zones -> max_write_zones\n    num_open_zones -> num_write_zones\n    open_zones[] -> write_zones[]\n  zbd_open_zone() -> zbd_write_zone_get()\n  zbd_close_zone() -> zbd_write_zone_put()\n  zbd_convert_to_open_zone() -> zbd_convert_to_write_zone()\n\nTo match up these changes, rename local variables and goto labels. Also\nrephrase code comments.\n\nOf note is that this rename is only for the fio code. The fio options\nmax_open_zones and job_max_open_zones are not renamed to not confuse\nusers.\n\nSuggested-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>\nReviewed-by: Niklas Cassel <niklas.cassel@wdc.com>\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "03317fbb1548fef308decf29b4ce3c8bb31d01cb", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/strided: increase minumum recommended size to 64MiB\n\nTest 8 has offset=32M. So it fails with a 32MiB file. Increase the\nminimum recommended test file/device size to 64MiB.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5a36d0e473f41e3dac7556ae7bbcf66614f79b85", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/strided: adapt to use fiotestlib\n\nUse the FioJobCmdTest class and the run_fio_test runner to execute the\ntests.\n\nAlso update run-fio-tests.py to accommodate the new way of specifying\nthe path to the fio executable.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "885e170af6501530f884e3be40fe413095d39fb1", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: add ability to ingest iops logs\n\nEnhance the FioJobCmdTest class with the ability to read in an IOPS log\nif one was generated during the course of the test run.\n\nThis reads in only the first IOPS log written as a result of\n--write_iops_log.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cebaf30e072440c271b70468f45911c8405cdb2f", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/nvmept: adapt to use fiotestlib\n\nUse the FioJobCmdTest class and the test runner from fiotestlib.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fef0c6fd2ad91debdd4b9fa1d64314b8bb90e9da", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/readonly: adapt to use fiotestlib\n\nUse the test runner and testclass provided in fiotestlib.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cab6c7d1745e4f437f833ed5fc4030f007a64afe", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/random_seed: fixes from pylint\n\n- Use % formatting for logging.debug\n- Eliminate f-string without interpolated values\n- Iterate with items() instead of just over keys\n- Remove unused subprocess import\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1017a7d3548aa1b277fee1cf2cb481707536714e", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/random_seed: use methods provided in fiotestlib to run tests\n\nAdapt random_seed.py to use the new FioJobCmdTest class.  Also use the\ntest runner from fiotestlib. This reduces code duplication.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "86131edc93f6739bb6a4e85c18d6e60b731d3d80", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/random_seed: use logging module for debug prints\n\nInstead of having 'if self.debug:' lines all over the place, use the\nlogging module for debug messages.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5dc5c6f6af9674dd9547093a59d6fbd77bd9d9f8", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: add class for command-line fio job\n\nAdd a separate class for running a fio job with all of the options\nprovided on the command line (instead of in a job file).\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8cb1dbbea2a79edfc55597fb36cb910876ddb4a3", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: record test command in more useful format\n\nInstead of recording the test command as a Python object, record it as a\nstring with spaces delimiting each of the paramters. This way we can use\nit to directly issue the command in a shell.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "111fa98ea91a8cfbd9e143f9dd7df3857bcbe00d", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: rearrange constructor and setup steps\n\nMake the constructor and setup steps more sensible. The constructor now\nsets variables that should be fixed throughout the execution of the\ntest. Some of the setup steps may depend on values set by the\nconstructor. So keeps those separate.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6544f1ae3ec012d1ec68e1e19d46b2cc27e87f80", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: use f-string for formatting\n\nTake advantage of running on modern Python versions and use an f-string\nfor formatting.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1cf0ba9d3ca7918e54860e01d13f1899a02ce758", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: use 'with' for opening files\n\nUse with when opening files to relieve us of the need to explicitly\nclose the files.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "68b3a741b1ba68fd37afd5ad3e75352fc4901e2f", "commit_date": "2023-06-08T18:39:07Z", "commit_message": "t/fiotestlib: use dictionaries for filenames and paths\n\nInstead of separate variables for all the different filenames and paths,\nuse dictionaries for the filenames and paths.\n\nThis involves changing the function signature for the constructor and\nsetup() functions so that parameters are passed to setup() instead of\nthe constructor. This is because the base class defines the filenames\ndictionary but FioJobFileTest needs to put an entry into the dictionary\nbefore calling the base class constructor.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ecd6d30fcea14e42d933f1895b2f910cbe84506b", "commit_date": "2023-06-08T18:38:56Z", "commit_message": "t/run-fio-tests: move get_file outside of FioJobFileTest\n\nThere's no reason for this helper function to be part of a class. Just\nmake it an independent helper.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0dc6e911832fca2c5cf9a5ac2663b468ef2c4341", "commit_date": "2023-06-08T18:38:42Z", "commit_message": "t/run-fio-tests: rename FioJobTest to FioJobFileTest\n\nWe have two different types of tests based on fio jobs. The ones\nreferred to by FioJobFileTest consist of running a fio job file. It's\nalso possible to run a fio job test with options specified on the\ncommand line. Such a class will be defined later.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb551941e7b74e484ccdee863cde84ea1ef4bcbe", "commit_date": "2023-06-08T16:42:39Z", "commit_message": "t/run-fio-tests: split source file\n\nThis is the first step in creating a test library that can be used by\nother python test scripts to reduce code duplication.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1b4ba547cf45377fffc7a1e60728369997cc7a9b", "commit_date": "2023-06-01T18:12:41Z", "commit_message": "t/run-fio-tests: address issues identified by pylint\n\n- use f strings\n- use Python3 syntax for parent classes\n- other small cleanups\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2128f93aacb41fe5990027133162579d39da7ec4", "commit_date": "2023-06-01T18:12:07Z", "commit_message": "t/run-fio-tests: integrate t/nvmept.py\n\nRunning t/nvmept.py requires that the test runner provide an NVMe\ncharacter device test target. t/nvmept.py will be skipped unless an NVMe\ncharacter device test target is provided.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b03ed937838505c4202d298e7daefda3b93963c7", "commit_date": "2023-06-01T18:11:33Z", "commit_message": "t/nvmept.py: test script for io_uring_cmd NVMe pass through\n\nTest basic functionality of the io_uring_cmd ioengine with NVMe\npass-through commands.\n\nThis script starts with basic sequential and random read, write, trim,\nreadwrite, and trimwrite workloads. It also runs sequential and random\nwrite workloads with verification. Finally it runs random read and write\nworkloads with almost all of the ioengine options enabled. The only\nioengine option not exercised is hipri because the NVMe driver must be\nloaded with poll_queues set for this to work.\n\nSince this is a destructive test the target device must be specified on\nthe command line.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4820d46cef75f806d8c95afaa77f86ded4e3603e", "commit_date": "2023-05-27T00:09:53Z", "commit_message": "ci: disable tls for msys2 builds\n\nThe same tls issue that occurred with AppVeyor msys2 builds has appeared\nin GitHub Actions msys2 builds. Disable thread local storage for GitHub\nActions msys2 builds as well.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "954b86f71b0718943796192be1a89ffb0da5a97c", "commit_date": "2023-05-24T13:58:11Z", "commit_message": "ci: upload tagged GitHub Actions Windows installers as releases\n\nSince we are no long using AppVeyor for Windows tests, we can use the\ninstallers built by GitHub Actions for Windows releases.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5bde0576127046f16bd50d591dfcc5cb79ce8a76", "commit_date": "2023-05-24T13:58:02Z", "commit_message": "ci: stop using AppVeyor for Windows builds\n\nStop running Windows tests using AppVeyor since it only runs tests\nserially. GitHub Actions Windows tests have been running for a few weeks\nand seem to be working ok.\n\nSigned-off-by: Vincent Fu <vincent.fu@samsung.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}