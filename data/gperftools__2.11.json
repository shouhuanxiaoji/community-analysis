{"master": [{"commit_oid": "d48bf6b3adad65756ed79b843b85409aa34459f8", "commit_date": "2023-09-28T02:04:31Z", "commit_message": "force inline do_mmap_with_hooks\n\nOtherwise mmap calling to do_mmap_with_hooks might tail-call (instead\nof inlining), which will then break GetCallerStackTrace\nfacility (since only mmap is placed into special malloc_hook section).\n\nThis unbreaks heap checker on gcc 5, but is in general right thing to\ndo.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9a123db7b441072a1892e0bab6a101763743aa1c", "commit_date": "2023-09-28T02:04:31Z", "commit_message": "work around tuple construction miscompilation on gcc 5\n\nThis fixes github issue #1432", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d152d76cd14c9e439aa3d9c8a720b7601a66df97", "commit_date": "2023-09-25T11:23:10Z", "commit_message": "generic_fp stacktrace: check frame size threshold for initial frame", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "64d64bee40811ae19cb119414bdd5e078094d8a7", "commit_date": "2023-09-22T17:00:25Z", "commit_message": "Fix C++ aligned allocation detected in the CMake build", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "589d416977977f32fde82cd623a7a876ab1d397c", "commit_date": "2023-09-19T06:53:16Z", "commit_message": "Add a more performant SpinLockDelay implementation for Windows based on WaitOnAddress and friends", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd0fabe1831be3a3344048436f0a4ec89bf96466", "commit_date": "2023-09-19T06:47:46Z", "commit_message": "Fix Windows CMake build by linking page_heap_test and mmap_hook_test to the entire library", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17f23e8d1ef3832663c019e2420307c7068a5543", "commit_date": "2023-09-18T20:02:07Z", "commit_message": "Add the ability to disable TCMalloc replacement on Windows via environment variable TCMALLOC_DISABLE_REPLACEMENT=1", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df006e880e1ca6fa3a3ccc3a44a65a9e8bec298c", "commit_date": "2023-09-16T23:59:40Z", "commit_message": "Also expose SetMemoryReleaseRate and GetMemoryReleaseRate as C shims", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d3602c0672daebe2edd533fda968a1f36233d706", "commit_date": "2023-09-16T23:49:38Z", "commit_message": "Account for Windows while performing implicit TLS detection in CMakeLists.txt", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "dffb4a2f284700b814e2c3aa1f9263fd14e836f8", "commit_date": "2023-09-11T20:23:40Z", "commit_message": "bump version to 2.13", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ec8c9dbb25e2844f98f7acc848aa3b190349d70", "commit_date": "2023-09-11T02:18:51Z", "commit_message": "reduce set of nallocx size testing points\n\nTesting every 7th size is a bit slow on slower machines. No need to be\nas thorough. We now bump by about 1/128th each step which is still\nmore steps than size classes we have.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e4e7ba93a03e469e1d11153bf724e422509ebab7", "commit_date": "2023-09-11T01:07:28Z", "commit_message": "unbreak unnecessary dependency on 64-bit atomics\n\nThis unbreaks builds on 32-bit arms and mipsen.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "523b72f754246d4c3736c82ba7fa0576b672497e", "commit_date": "2023-09-10T22:14:57Z", "commit_message": "make sampling_debug_test actually test debug malloc\n\nWe do shell wrapper for actual test run, so we can inspect output of\npprof. But when we set up sampling_debug_test.sh we simply copied\nregular sampling_test.sh, which ran same non-debug test binary. Now we\nsed-replace contents of shell program when copying, so we test right\nbinary.\n\nAnother thing we fix here is our (still hardcoded) test output path is\nnow different between sampling{,_debug}_test.sh. So this fixes main\ncause of flakiness of our unit tests.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2748dd56803d61b8aee8fbb8bbdf9bc6d2913529", "commit_date": "2023-09-10T21:24:32Z", "commit_message": "unbreak address access \"probing\" for generic_fp backtracing\n\nWe used msync to verify that address is readable. But msync gives\nfalse positives for PROT_NONE mappings. And we recently got bug report\nfrom user hitting this exact condition.\n\nFor correct access check, we steal idea from Abseil and do sigprocmask\nwith address used as new signal mask and with invalid HOW\nargument. This works in today's Linux kernels and is among fastest\nmethods available. But is brittle w.r.t. possible kernel changes. So\nwe supply fallback method that does 2 syscalls.\n\nFor non-Linux systems we implement usual \"write to pipe\" trick. Which\nalso has decent performance, but requires occasional pipe draining and\nuses fds which could occasionally be damaged by some forking codes.\n\nWe also finally cover all new code with unit test.\n\nFixes github issue #1426", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7ad1dc7693b7b04199681df474122248634a9808", "commit_date": "2023-09-08T18:38:21Z", "commit_message": "fix: cmake config.h defines declaration", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f7172839a1a3ca99309ab322d8ea085967ecaf4d", "commit_date": "2023-09-08T18:22:46Z", "commit_message": "turn tcmalloc::TrivialOnce into POD\n\nAs we see in github issue #1428, msvc arranges full \"init on first\nuse\" initialization for local static usage of TrivialOnce even if that\ninitialization is completely empty. Fair game, even if stupid.\n\nPOD with no initialization should be safely zero-initialized with no\ngames or tricks from the compilers.\n\nWe could have and perhaps at some point should do constexpr for\nTrivialOnce and SpinLock (abseil has been liberated from\nLinkerInitialized for perphaps well over decade now, including their\nfork of SpinLock, of course). But C++ legalese rules are complex\nenough and bugs happened in past, so I don't want to be in the tough\nbusiness of interpreting standard. So at least for now we keep\nthings simple.", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "539ed9ca40f4d3806e7a2b79b5aa02b9a45083d3", "commit_date": "2023-08-24T19:03:47Z", "commit_message": "bump version 2.12", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8d634c1f56d282b55ad414a0d8b3bba5cad9bb93", "commit_date": "2023-08-24T18:06:25Z", "commit_message": "don't build mmap_hook when --enable-minimal is given to configure\n\nRefers to github issue #1418", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b4ad04982d4710f7dccae6c4d348df224cc94dad", "commit_date": "2023-08-22T22:09:33Z", "commit_message": "Set Description field in generated pkg-config files (instead of Summary)\n\nFixes #1416", "commit_author": "", "message_analysis": {"glm6b_2": [], "llama2_7b_chat": [], "manual": [], "noob_engine": []}}]}