{"main": [{"commit_oid": "e60939110598e1a143998daf80b8e9161c156586", "commit_date": "2023-08-16T17:34:20Z", "commit_message": "checkpolicy: Remove support for role dominance rules\n\nRole dominance has been deprecated for a very, very long time (since\nat least August 2008) and has never been used in any widely deployed\npolicy.\n\nRemove support for compiling role dominance rules.\n\nSupport will remain, for now, in libsepol for backwards compatibility.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "17c2247f20f2c2ad19ea065cf2afbc6d1148d16a", "commit_date": "2023-08-16T17:34:18Z", "commit_message": "secilc/docs: Add deny rule to CIL documentation\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cc02a5f53f9db6aef2d1ec12e7191410553a5193", "commit_date": "2023-08-16T17:34:16Z", "commit_message": "secilc/test: Add deny rule tests\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "409b4d3bd4cd32604f23c8af9765935853380861", "commit_date": "2023-08-16T17:34:14Z", "commit_message": "secilc/secil2tree: Add option to write CIL AST after post processing\n\nThis will show the resulting CIL AST after deny rules have been\nprocessed.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5d5a871cb1e66d2c2584d79ee72dca7acc342273", "commit_date": "2023-08-16T17:34:11Z", "commit_message": "libsepol: Export the cil_write_post_ast function\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2fe8a495662e24fd3c17f8ed09ba7de1d0f6c80b", "commit_date": "2023-08-16T17:34:09Z", "commit_message": "libsepol/cil: Add cil_write_post_ast function\n\nThe function cil_write_post_ast() will write the CIL AST after\npost processing is done. Most post processing does not change the\nCIL AST, this is where deny rules are processed (because to process\nthem, type attributes have to have been evaluated.)\n\nWhen processed, deny rules may add new rules and attributes and the\ndeny rule itself will be removed from the AST, so using this new\nfunction will show the results of the deny rule processing.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b0ed365ed7a943b9a3c0cbf8fc68d29572c931b6", "commit_date": "2023-08-16T17:34:07Z", "commit_message": "libsepol/cil: Process deny rules\n\nA deny rule is like a neverallow rule, except that permissions are\nremoved rather than an error reported.\n\n(allow S1 T1 P1)\n(deny  S2 T2 P2)\n\nFirst, write the allow rule with all of the permissions not in the deny rule\nP3 = P1 and not P2\n(allow S1 T1 P3)\n\nObviously, the rule is only written if P3 is not an empty list. This goes\nfor the rest of the rules as well--they are only written if the source and\ntarget exist.\n\nThe remaining rules will only involve the common permissions\nP4 = P1 and P2\n\nNext, write the allow rule for any types in S1 that are not in S2\nS3 = S1 and not S2\n(allow S3 T1 P4)\n\nFinally, write the allow rules needed to cover the types in T1 that are\nnot in T2. Since, T1 and T2 might be \"self\", \"notself\", or \"other\", this\nrequires more complicated handling. Any rule with \"self\" will not match\na rule with either \"notself\" or \"other\".\n\nif (T1 is self and T2 is self) or (T1 is notself and T2 is notself) then\n  Nothing more needs to be done.\n\nThe rest of the rules will depend on the intersection of S1 and S2\nwhich cannot be the empty set since the allow and deny rules match.\nS4 = S1 and S2\n\nif T1 is notself or T1 is other or T2 is notself or T2 is other then\n  if T1 is notself then\n    if T2 is other then\n      T = ALL and not S2\n      (allow S4 T P4)\n    else [T2 is not self, notself, or other]\n      S5 = S4 and not T2\n      S6 = S4 and T2\n      TA = ALL and not T2\n      TB = TA and not S4\n      (allow S6 TA P4)\n      (allow S5 TB P4)\n      if cardinality(S5) > 1 then\n        (allow S5 other P4)\n  else if T1 is other then\n    (allow S3 S4 P4)\n    if T2 is notself then\n      [Nothing else is needed]\n    else if T2 is other then\n      (allow S4 S3 P4)\n    else [T2 is not self, notself, or other]\n      S5 = S4 and not T2\n      S6 = S4 and T2\n      TC = S1 and not T2\n      TD = S3 and not T2\n      (allow S6 TC P4)\n      (allow S5 TD P4)\n      if cardinality(S5) > 1 then\n        (allow S5 other P4)\n  else [T1 is not self, notself, or other]\n    S8 = S4 and T1\n    (allow S8 self P4)\n    if T2 is notself then\n      [Nothing else is needed]\n    else [T2 is other]\n      T = T1 and not S2\n      (allow S4 T P4)\nelse [Neither T1 nor T2 are notself or other]\n  if T1 is self and T2 is not self then\n    S5 = S4 and not T2\n    (allow S5 self P4)\n  else if T1 is not self and T2 is self then\n    S7 = S4 and not T1\n    S8 = S4 and T1\n    T8 = T1 and not S4\n    (allow S7 T1 P4)\n    (allow S8 T8 P4)\n    if cardinality(S8) > 1 then\n      (allow S8 other P4)\n  else [Neither T1 nor T2 is self]\n    T3 = T1 and not T2\n    (allow S4 T3 P4)\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "9d5ca92be19018be97134c3e3755a3cb780d8400", "commit_date": "2023-08-16T17:34:05Z", "commit_message": "libsepol/cil: Add cil_tree_node_remove function\n\nAdd the function cil_tree_node_remove() which takes a node pointer\nas an input, finds the parent, walks the list of nodes to the node\nprior to the given node, updates that node's next pointer to remove\nthe given node from the tree, and then destroys the node.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "085e3300620806a7d9eed8a01cf5ff17a8ec85e4", "commit_date": "2023-08-16T17:34:03Z", "commit_message": "libsepol/cil: Add cil_list_is_empty macro\n\nAdd a macro, called cil_list_is_empty, that returns true if the\nlist pointer or list head is NULL.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "347254695f27e5164f9a9b454e82dacfbaffffab", "commit_date": "2023-08-16T17:34:01Z", "commit_message": "libsepol/cil: Parse and add deny rule to AST, but do not process\n\nAdds the ability to parse a deny rule, add it to the AST, and\nwrite it out when writing the AST, but the deny rule is otherwise\nignored and does nothing.\n\nWhen it is fully supported, the deny rule will work like a neverallow\nexcept that it will remove permissions rather than give an error.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nReviewed-by: Daniel Burgener <dburgener@linux.microsoft.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e88ee26fb3f70d93b10cc518c48b0785df2eabe", "commit_date": "2023-08-16T17:34:00Z", "commit_message": "secilc/test: Add notself and other tests\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ed8f4a9508225f4e2ce3c7e98f960ecfdd16de87", "commit_date": "2023-08-16T17:33:58Z", "commit_message": "secilc/docs: Add notself and other keywords to CIL documentation\n\nAlso reorganize the access vector rules section to minimize duplication\nexplanation of the parts of access vector rules.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1936a23a0ea4765cb8fc998477c7e1aacedaaafc", "commit_date": "2023-08-16T17:33:56Z", "commit_message": "libsepol: Use ERR() instead of log_err()\n\nSince log_err() has been removed, use ERR() instead of log_err() in\nmodule_to_cil.c.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "902f0f94a1808a2d6dab1a2e129d51e9bba67387", "commit_date": "2023-08-16T17:33:55Z", "commit_message": "libsepol: update CIL generation for trivial not-self rules\n\nConvert trivial not-self neverallow rules to CIL, e.g.\n\n    neverallow TYPE1 ~self:CLASS1 PERM1;\n\ninto\n\n    (neverallow TYPE1 notself (CLASS1 (PERM1)))\n\nMore complex targets are not yet supported in CIL and will fail to\nconvert, e.g.:\n\n    neverallow TYPE1 ~{ self ATTR1 } : CLASS1 PERM1;\n    neverallow TYPE2 { ATTR2 -self } : CLASS2 PERM2;\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e55621c0325a00dee2e7af3313b76361bf86aeba", "commit_date": "2023-08-16T17:33:52Z", "commit_message": "libsepol/cil: Add notself and other support to CIL\n\nLike \"self\", both of these reserved words can be used as a target\nin an access vector rule. \"notself\" means all types other than\nthe source type. \"other\" is meant to be used with an attribute and\nits use results in the rule being expanded with each type of the\nattribute being used as the source type with each of the other types\nbeing used as the target type. Using \"other\" with just a type will\nresult in no rule.\n\nExample 1\n  (allow TYPE1 notself (CLASS (PERM)))\n\nThis rule is expanded to a number of rules with TYPE1 as the source\nand every type except for TYPE1 as the target.\n\nExample 2\n  (allow ATTR1 notself (CLASS (PERM)))\n\nLike Example 1, this rule will be expanded to each type in ATTR1\nbeing the source with every type except for the type used as the\nsource being the target.\n\nExample 3\n  (allow TYPE1 other (CLASS (PERM)))\n\nThis expands to no rule.\n\nExample 4\n  (allow ATTR1 other (CLASS (PERM)))\n\nLike Example 2, but the target types will be limited to the types\nin the attribute ATTR1 instead of all types. So if ATTR1 has the\ntype t1, t2, and t3, then this rule expands to the following rules.\n  (allow t1 t2 (CLASS (PERM)))\n  (allow t1 t3 (CLASS (PERM)))\n  (allow t2 t1 (CLASS (PERM)))\n  (allow t2 t3 (CLASS (PERM)))\n  (allow t3 t1 (CLASS (PERM)))\n  (allow t3 t2 (CLASS (PERM)))\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b3dd2c77db9ead593ae811bac49dbd6c80fe419", "commit_date": "2023-08-16T17:33:50Z", "commit_message": "libsepol/cil: Do not call ebitmap_init twice for an ebitmap\n\nWhile it does no harm to call ebitmap_init() twice for an ebitmap,\nsince it is just memsetting the ebitmap to 0, it is poor practice.\n\nIn the function cil_type_matches() in cil_find.c, either ebitmap_and()\nor ebitmap_set_bit() will be called. The function ebitmap_and() will\ncall ebitmap_init() on the destination ebitmap, but ebitmap_set_bit()\ndoes not.\n\nInstead of calling ebitmap_init() before the call to cil_type_matches(),\nlet cil_type_matches() make the call if it is going to call\nebitmap_set_bit(). It can also call ebitmap_destroy() on an error.\n\nSince we are removing the call to ebitmap_init() in cil_self_match_any(),\ncleanup some other things in the function (like using the FLAVOR()\nmacro and using ebitmap_is_empty()).\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cd575089dbd43cda0cba24ea340dbae0cbab555b", "commit_date": "2023-08-16T17:33:48Z", "commit_message": "libsepol: Changes to ebitmap.h to fix compiler warnings\n\nWhen compiling with the \"-Wnull-dereference\" flag, the compiler is\nnot smart enough to realize that anytime the ebitmap_t node field is\nNULL, the highbit field will equal 0. This causes false positive\nwarnings to be generated.\n\nChange the ebitmap_is_empty() and ebitmap_length() macros to check\nfor the node being NULL instead of just relying on the value of\nhighbit to eliminate these false warnings.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "14f35fde50cd080650ac3b0136234464a3ea6fbe", "commit_date": "2023-08-16T17:33:47Z", "commit_message": "Do not automatically install Russian translations\n\nSince they are being removed, there will be nothing to install.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5149c39a4ed20ab170f4c4ae1893ff68cf7b7b21", "commit_date": "2023-08-16T17:33:45Z", "commit_message": "semodule-utils: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b2148f23853891eda00a4758cef2370880eb90c", "commit_date": "2023-08-16T17:33:44Z", "commit_message": "sandbox: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7021ccd4fbecb8092e2a127944444a8eeb179357", "commit_date": "2023-08-16T17:33:42Z", "commit_message": "restorecond: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cb0b5f3aebbee84924413f8530d4f2c0e2609791", "commit_date": "2023-08-16T17:33:40Z", "commit_message": "python: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them. This removes the translations from sepolicy.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fda3a45903a66cb1e56e06a79e8a0ca91056726e", "commit_date": "2023-08-16T17:33:39Z", "commit_message": "python: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them. Because of the size, this patch just removes\nthe translations from audit2allow, chcat, and semanage.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c3312e0afb552dd87458dd396007ead6bd08fbe", "commit_date": "2023-08-16T17:33:30Z", "commit_message": "policycoreutils: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fd7eba9313f2e77e333d89c836f9f6a23e053fbe", "commit_date": "2023-08-16T17:33:27Z", "commit_message": "mcstrans: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c3d13010734899a3afd9ae2d622ecab56cc74a69", "commit_date": "2023-08-16T17:33:25Z", "commit_message": "libsepol: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1303a6af486eeef1138a99513214700f543c0ef7", "commit_date": "2023-08-16T17:33:22Z", "commit_message": "libsemanage: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "84c195e18ccd9735c4eb947b1268d6d2b982cb5a", "commit_date": "2023-08-16T17:33:20Z", "commit_message": "libselinux: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them. This removes the man8 translations and the\nru directory.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e6e044352408098a508ee47a9fb2e61d9f6a590", "commit_date": "2023-08-16T17:33:19Z", "commit_message": "libselinux: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them. Because of the size, this just removes the\nman5 translations.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "fb58fa97359c9206bccdb1088f92245d6fa0095e", "commit_date": "2023-08-16T17:33:17Z", "commit_message": "gui: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7e39e509b4fd3427adfd4c11e610609fa4f0911", "commit_date": "2023-08-16T17:33:14Z", "commit_message": "checkpolicy: Remove the Russian translations\n\nThe Russian translations have not been maintained and are out of\ndate, so remove them.\n\nSuggested-by: Petr Lautrbach <plautrba@redhat.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8e3a532880b2745c4662f1cc86fa64bf01b0784e", "commit_date": "2023-08-16T17:33:12Z", "commit_message": "libsemanage/tests: use strict prototypes\n\n    utilities.c:39:22: error: a function declaration without a prototype is deprecated in all versions of C [-Werror,-Wstrict-prototypes]\n    int create_test_store() {\n                         ^\n                          void\n    utilities.c:171:23: error: a function declaration without a prototype is deprecated in all versions of C [-Werror,-Wstrict-prototypes]\n    int destroy_test_store() {\n                          ^\n                           void\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8b0acb05351eab10631af9a6627382436851312e", "commit_date": "2023-08-16T17:33:11Z", "commit_message": "libsepol: ebitmap: avoid branches for iteration\n\nOtherwise Linus might think we don't understand pointers.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f6dc6acfa00707ce25c6357169111937f12512dd", "commit_date": "2023-08-08T11:00:12Z", "commit_message": "python: Use isinstance() instead of type()\n\nCI testing fails while running flake8 on python scripts with the\nmessage \"./python/semanage/seobject.py:250:16: E721 do not compare\ntypes, for exact checks use `is` / `is not`, for instance checks use\n`isinstance()`\"\n\nUse \"isinstance(args, str)\" instead of \"type(args) == str\"\n\nSigned-off-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1c19dc4f6408884d9a1256bd9496a1f1c4f288e9", "commit_date": "2023-08-07T13:44:50Z", "commit_message": "libsepol: expand: check for memory allocation failure\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ace9ec17ffaa1ad0be165cd8ad77998cb368ca2c", "commit_date": "2023-08-07T13:44:45Z", "commit_message": "libsepol: expand: use identical type to avoid implicit conversion\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0d1445067c67d38e7d5c14155999afb10cc2e1a9", "commit_date": "2023-08-07T13:44:42Z", "commit_message": "hashtab: update\n\nAvoid overflowing number of elements in hashtab_insert().\n\nUse identical type for hashed values to avoid implicit conversions.\n\nDeclare tag parameter of hashtab_hash_eval() const since it is only\nprinted.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "511f43478f4f4006107254ce19d569044e6df23b", "commit_date": "2023-08-07T13:42:17Z", "commit_message": "libsepol: validate: use fixed sized integers\n\nAvoid issues on architectures where unsigned int and uint32_t are not of\nthe same size.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8963492b5db701e5312b541abea3aced8cedf2d5", "commit_date": "2023-08-04T17:57:01Z", "commit_message": "checkpolicy,libselinux,libsepol,policycoreutils,semodule-utils: update my email\n\nUpdate my email address.\n\nSigned-off-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f189e8afc844cac59a9a78b369661f5f744f47ae", "commit_date": "2023-08-04T17:56:44Z", "commit_message": "libselinux,policycoreutils,python,semodule-utils: de-brand SELinux\n\nChange \"NSA SELinux\" to just \"SELinux\" and remove NSA from the\nSELinux manual pages.\n\nSigned-off-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec35d1d802765c8836feffba624db62001d27e8c", "commit_date": "2023-08-04T17:55:55Z", "commit_message": "libselinux/utils: introduce getpolicyload\n\nIntroduce a helper binary to print the number of policy reloads on the\nrunning system.\nPrint only a single number to ease the usage by scripts.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "04613f6875f690d2d559caa7a9616c84d7d5b0b1", "commit_date": "2023-08-04T17:52:55Z", "commit_message": "secilc: add check for malloc in secilc\n\nCheck the return value of malloc() to avoid null pointer reference.\n\nSigned-off-by: Huaxin Lu <luhuaxin1@huawei.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "8730e0762e36ae214932e2a2a84aedd573462357", "commit_date": "2023-08-04T17:52:40Z", "commit_message": "restorecond: add check for strdup in strings_list_add\n\nCheck the return value of strdup() to avoid null pointer reference.\n\nSigned-off-by: Huaxin Lu <luhuaxin1@huawei.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a7e975285c9ecec8683d1841e4ee953d61fad732", "commit_date": "2023-08-04T17:51:56Z", "commit_message": "semodule_unpackage: update\n\nDrop unnecessary declarations.\nCheck closing file for incomplete write.\nRework resource cleanup, so that all files and allocated memory are\nreleased in all branches, useful to minimize reports while debugging\nlibsepol under valgrind(8) or sanitizers.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f40d4f3ddab04cbe6caae083d1915e042fd11aa6", "commit_date": "2023-08-04T17:51:51Z", "commit_message": "semodule_package: update\n\nDrop unnecessary declarations.\nAdd missing error messages.\nMore strict command line argument parsing.\nCheck closing file for incomplete write.\nRework resource cleanup, so that all files and allocated memory are\nreleased in all branches, useful to minimize reports while debugging\nlibsepol under valgrind(8) or sanitizers.\nSet close-on-exec flag in case of any sibling thread.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "63e798a2034a52656f27993cf523f6661ff61309", "commit_date": "2023-08-04T17:51:50Z", "commit_message": "semodule_link: update\n\nDrop unnecessary declarations.\nMore verbose error messages and add missing trailing newline.\nMore strict argument count checking.\nCheck closing file for incomplete write.\nRework resource cleanup, so that all files and allocated memory are\nreleased in all branches, useful to minimize reports while debugging\nlibsepol under valgrind(8) or sanitizers.\nAdd help argument option -h.\nSet close-on-exec flag in case of any sibling thread.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2b89a35fcca2bcfd8f956d1e5dd3d0f1771037f1", "commit_date": "2023-08-04T17:51:47Z", "commit_message": "semodule_expand: update\n\nDrop unnecessary declarations.\nReduce scope of file global variable.\nMention -v argument in help usage message.\nMore strict integer conversion.\nMore strict argument count checking.\nCheck closing file for incomplete write.\nRework resource cleanup, so that all files and allocated memory are\nreleased in all branches, useful to minimize reports while debugging\nlibsepol under valgrind(8) or sanitizers.\nAdd help argument option -h.\nSet close-on-exec flag in case of any sibling threads.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c558186499f7a434194cf0e5ceaf764db1efb385", "commit_date": "2023-08-04T17:51:07Z", "commit_message": "setsebool: drop unnecessary linking against libsepol\n\nsetsebool does not directly use any symbols from libsepol.  Any\ntransitional ones, via libsemanage, are available by linking against\nlibsemanage.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c6a339eee37e826dbaec05eb6d90b3df6cb3776", "commit_date": "2023-08-04T17:50:03Z", "commit_message": "setsebool: improve bash-completion script\n\nSupport the usage format of multiple booleans to change, e.g.:\n\n    setsebool bool1=on bool2=off\n\nSupport the options -N and -V.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e81c466bca9a06e2ada7d783fe31dd44c9e04432", "commit_date": "2023-08-04T17:48:49Z", "commit_message": "libsepol/cil: Fix class permission verification in CIL\n\nBefore the CIL post processing phase (where expressions are evaluated,\nvarious ebitmaps are set, etc) there is a pre-verification where\nchecks are made to find self references or loops in bounds, attribute\nsets, and class permissions. The class permission checking is faulty\nin two ways.\n\nFirst, it does not check for the use of \"all\" in a permission expression\nfor a class that has no permissions. An error will still be generated\nlater and secilc will exit cleanly, but without an error message that\nexplains the problem.\n\nSecond, it does not properly handle lists in permission expressions.\nFor example, \"(C ((P)))\" is a legitimate class permission. The\npermissions expression contains one item that is a list containing\none permission. This permission expression will be properly evaluated.\nUnfortunately, the class permission verification assumes that each\nitem in the permission expression is either an operator or a\npermission datum and a segmenation fault will occur.\n\nRefactor the class permission checking to give a proper error when\n\"all\" is used in a permission expression for a class that has no\npermissions and so that it can handle lists in permission\nexpressions. Also, check for the actual flavor of each item in\nthe permission expression and return an error if an unexpected\nflavor is found.\n\nThe failure to properly handle lists in permission expressions was\nfound by oss-fuzz (#58085).\n\nTested-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nSigned-off-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "40674f48ad6676d88efd17bfb54b5d8f28aa52fb", "commit_date": "2023-08-04T17:47:47Z", "commit_message": "Revert \"checkpolicy,libsepol: move transition to separate structure in avtab\"\n\nThis reverts commit de708edf527be7e5142e5a9ae09879d58d65f50b.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6776946d66b83a2b517bf53aa0911d234145862f", "commit_date": "2023-08-04T17:47:42Z", "commit_message": "Revert \"checkpolicy,libsepol: move filename transitions to avtab\"\n\nThis reverts commit e169fe26530ef2c6b3dd126788cc81676359a3b3.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e6444a0e5ed142bd850158cbfaa25f05b770bf9", "commit_date": "2023-08-04T17:47:39Z", "commit_message": "Revert \"checkpolicy,libsepol: move filename transition rules to avrule\"\n\nThis reverts commit 565d87489bc00cab2e624aae1a40872d2a2232ba.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97450c623bd20aa9e8cf5f02dd534ab24e958577", "commit_date": "2023-08-04T17:47:37Z", "commit_message": "Revert \"libsepol: implement new kernel binary format for avtab\"\n\nThis reverts commit 7b77edd91946d8a415cddc596765d8c2e8bd6f63.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e3388c76439864c90043ec6f53afd75e865bd79a", "commit_date": "2023-08-04T17:47:34Z", "commit_message": "Revert \"libsepol: implement new module binary format of avrule\"\n\nThis reverts commit 11013986ac484586e50ce318f4f10c1edf39e746.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "748614b73cadd3e9da94de7fc466598eca6667aa", "commit_date": "2023-08-04T17:47:32Z", "commit_message": "Revert \"checkpolicy,libsepol: add prefix/suffix support to kernel policy\"\n\nThis reverts commit 1174483d2924dc700673363b240fca2b9fe45786.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "311dc446d61ebb840e316f3e305fd15e7db7a9c3", "commit_date": "2023-08-04T17:47:30Z", "commit_message": "Revert \"checkpolicy,libsepol: add prefix/suffix support to module policy\"\n\nThis reverts commit c39ebd07acd030a59a432797ed4da7733266a305.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a77a8b2d384feb0151051a7b6404f6bb3967fa83", "commit_date": "2023-08-04T17:47:28Z", "commit_message": "Revert \"libsepol/cil: add support for prefix/suffix filename transtions to CIL\"\n\nThis reverts commit 0c50de03cd38ef80dc6c5df9acef027f4b5c9526.\nSigned-off-by: James Carter <jwcart2@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1d2073557d7199a5cc3ecce9c0cba6cb45a3e726", "commit_date": "2023-07-12T17:01:15Z", "commit_message": "libsepol/fuzz: more strict fuzzing of binary policies\n\nValidate policy after optimizing.\n\nRun policy assertion check, ignoring any assertions.\n\nAbort on failures writing the parsed policy, as writing should not fail on\nvalidated policies.\n\nSet close-on-exec flag in case of any sibling thread.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df666f70534ef225b97899f997b4077aeb285972", "commit_date": "2023-07-12T17:00:07Z", "commit_message": "libsepol: check for overflow in put_entry()\n\nput_entry() is used during writing binary policies.  Avoid short writes\ndue to an overflow.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0e2a78d5b2a5fd35e0e88bb49706e22d8d9389f9", "commit_date": "2023-07-12T16:59:27Z", "commit_message": "libsepol: free initial sid names\n\nCommit 55b75a2c (\"libsepol: stop translating deprecated intial SIDs to\nstrings\") dropped several names of obsolete initial sids ans replaced\nthem with NULL.  This leads to their printable string being dynamically\nallocated but not free'd.\nInstead of keeping track of which name was allocated dynamically and\nwhich not, allocate all on the heap, which simplifies the later cleanup.\n\nWhile on it also free the name in case of a strs_add_at_index() failure.\n\nReported-by: oss-fuzz (issue 60271)\nFixes: 55b75a2c (\"libsepol: stop translating deprecated intial SIDs to strings\")\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0c50de03cd38ef80dc6c5df9acef027f4b5c9526", "commit_date": "2023-07-12T16:58:28Z", "commit_message": "libsepol/cil: add support for prefix/suffix filename transtions to CIL\n\nThis patch implements the support for prefix/suffix filename transitions\nin the CIL structures as well as in the CIL policy parser.\n\nSyntax of the new prefix/suffix filename transition rule:\n\n    (typetransition source_type_id target_type_id class_id object_name match_type default_type_id)\n\nwhere match_type is either the keyword \"prefix\" or \"suffix\".\n\nExamples:\n\n    (typetransition ta tb CLASS01 \"file01\" prefix td)\n    (typetransition td te CLASS01 \"file02\" suffix tf)\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c39ebd07acd030a59a432797ed4da7733266a305", "commit_date": "2023-07-12T16:58:25Z", "commit_message": "checkpolicy,libsepol: add prefix/suffix support to module policy\n\nThis patch extends the structures for module and base policy (avrule_t)\nto support prefix/suffix transitions. In addition to this, it implements\nthe necessary changes to functions for reading and writing the binary\npolicy, as well as parsing the policy conf.\n\nSyntax of the new prefix/suffix filename transition rule:\n\n    type_transition source_type target_type : class default_type object_name match_type;\n\nwhere match_type is either keyword \"prefix\" or \"suffix\"\n\nExamples:\n\n    type_transition ta tb:CLASS01 tc \"file01\" prefix;\n    type_transition td te:CLASS01 tf \"file02\" suffix;\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1174483d2924dc700673363b240fca2b9fe45786", "commit_date": "2023-07-12T16:58:24Z", "commit_message": "checkpolicy,libsepol: add prefix/suffix support to kernel policy\n\nCurrently, filename type transitions support only exact name matching.\nHowever, in practice, the names contain variable parts. This leads to\nmany duplicated rules in the policy that differ only in the part of the\nname, or it is even impossible to cover all possible combinations.\n\nThis patch extends the filename type transitions structures to include\nnew types of filename transitions - prefix and suffix filename\ntransitions. It also implements the reading and writing of those rules\nin the kernel binary policy format together with increasing its version.\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "11013986ac484586e50ce318f4f10c1edf39e746", "commit_date": "2023-07-12T16:58:22Z", "commit_message": "libsepol: implement new module binary format of avrule\n\nImplement a new module policy format that closely matches the new\ninternal representation of avrule introduced in the previous patch.\n\nThis patch bumps the maximum module policy version and implements\nreading/writing functions such that the module binary policy structure\nmatches its internal representation, namely, the object name attribute\nused for the filename transition rules.\n\nThese changes have no significant effect on the size of the module\npolicy file (tested with Fedora policy).\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "7b77edd91946d8a415cddc596765d8c2e8bd6f63", "commit_date": "2023-07-12T16:58:21Z", "commit_message": "libsepol: implement new kernel binary format for avtab\n\nImplement a new binary policy format that closely matches the new\ninternal representation introduced in the previous patch.\n\nThis patch bumps the maximum kernel policy version and implements\nreading/writing functions such that kernel binary policy structure\nmatches internal representation.\n\nThese changes can cause the binary policy to grow in size due to\neffectively undoing the benefits of the commit 8206b8cb (\"libsepol:\nimplement POLICYDB_VERSION_COMP_FTRANS \"), but this will be mitigated by\nadding the prefix/suffix support as described in the previous patch.\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "565d87489bc00cab2e624aae1a40872d2a2232ba", "commit_date": "2023-07-12T16:58:19Z", "commit_message": "checkpolicy,libsepol: move filename transition rules to avrule\n\nSimilarly to the previous patch, filename transition rules are stored\nand parsed separately from other type enforcement rules. Moving them to\navrule makes it consistent with the filename transitions in avtab and\nmakes future improvements easier to implement.\n\nThis patch adds an optional object name attribute to the avrule\nstructure and uses this new attribute to move filename transition rules\nto avrule. It also updates functions for parsing type enforcement rules\nto accept rules with a filename as their last argument (filename\ntransition rules), separate functions for parsing filename transitions\nare therefore no longer needed.\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e169fe26530ef2c6b3dd126788cc81676359a3b3", "commit_date": "2023-07-12T16:58:17Z", "commit_message": "checkpolicy,libsepol: move filename transitions to avtab\n\nCurrently, filename transitions are stored separately from other type\nenforcement rules. This leads to possibly sub-optimal performance and\nmakes further improvements cumbersome.\n\nThis patch adds a symbol table with filename transitions to the\ntransition structure added to avtab in the previous patch. It also\nimplements functions required for reading and writing filename\ntransitions (either binary or source formats) and updates the code for\nexpanding attributes. Last but not least, it updates the conflict check\nin the conditional avtab to account for empty transitions in the\nnon-conditional avtab.\n\nThese changes are expected to cause higher memory usage, as now there\nneeds to be a filename transition structure for every stype. This patch\neffectively undoes most of the commit 42ae834a (\"libsepol,checkpolicy:\noptimize storage of filename transitions\"), but this will be mitigated\nby providing support for matching prefix/suffix of the filename for\nfilename transitions in future patches which will reduce to need to have\nso many of them.\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "de708edf527be7e5142e5a9ae09879d58d65f50b", "commit_date": "2023-07-12T16:58:15Z", "commit_message": "checkpolicy,libsepol: move transition to separate structure in avtab\n\nTo move filename transitions to be part of avtab, we need to create\nspace for it in the avtab_datum structure which holds the rule for\na certain combination of stype, ttype and tclass.\n\nAs only type transitions have a special variant that uses a filename, it\nwould be suboptimal to add a (mostly empty) pointer to some structure to\nall avtab rules.\n\nTherefore, this patch adds a new structure to the avtab_datum and moves\nthe otype of the transition to this structure. In the next patch, this\nstructure will also hold filename transitions for the combination of\nstype, ttype and tclass.\n\nReviewed-by: Ondrej Mosnacek <omosnace@redhat.com>\nSigned-off-by: Juraj Marcin <juraj@jurajmarcin.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b8d3f6e41c14532227cf24bbef9a2f55bcfd8556", "commit_date": "2023-07-12T16:57:42Z", "commit_message": "python: update python.pot\n\nSigned-off-by: Petr Lautrbach <lautrbach@redhat.com>\nReviewed-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5ad545180e23c7b8ca758e902a488f7dc22584cc", "commit_date": "2023-07-12T16:57:40Z", "commit_message": "semanage: Drop unnecessary import from seobject\n\nsepolgen.module is not used for permissive domains\n\nSigned-off-by: Petr Lautrbach <lautrbach@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "181ae592766ba782b465b7aefa161abbc4a9cc09", "commit_date": "2023-07-12T16:57:36Z", "commit_message": "python: Drop hard formating from localized strings\n\nIt confuses translators and new lines are dropped by parser module anyway.\n\nSigned-off-by: Petr Lautrbach <lautrbach@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b945bf050aa1056902774aaa4f779c8189aa5e43", "commit_date": "2023-07-12T16:57:31Z", "commit_message": "python: improve format strings for proper localization\n\nIf a string contains more than one unnamed argument it's hard for\ntranslators to proper localize as they don't know which value is\nrepresented by a unnamed argument. It also blocks them to use a\ndifferent order of arguments which would make better sense in other\nlanguages.\n\nFixes:\n\n    $ xgettext --default-domain=python -L Python --keyword=_ --keyword=N_ ../audit2allow/audit2allow ../chcat/chcat ../semanage/semanage ../semanage/seobject.py ../sepolgen/src/sepolgen/interfaces.py ../sepolicy/sepolicy/generate.py ../sepolicy/sepolicy/gui.py ../sepolicy/sepolicy/__init__.py ../sepolicy/sepolicy/interface.py ../sepolicy/sepolicy.py\n    ../chcat/chcat:220: warning: 'msgid' format string with unnamed arguments cannot be properly localized:\n                                 The translator cannot reorder the arguments.\n                                 Please consider using a format string with named arguments,\n                                 and a mapping instead of a tuple for the arguments.\n    ../semanage/seobject.py:1178: warning: 'msgid' format string with unnamed arguments cannot be properly localized:\n                                           The translator cannot reorder the arguments.\n                                           Please consider using a format string with named arguments,\n                                           and a mapping instead of a tuple for the arguments.\n    ...\n\nSigned-off-by: Petr Lautrbach <lautrbach@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "1a29c28afbb96b1e47001dc3dde38c4b6bd9da22", "commit_date": "2023-06-30T12:27:34Z", "commit_message": "python/sepolicy: Fix get_os_version except clause\n\nThis adds more exceptions to be handled by the except clause in\n`get_os_version()`:\n\n* If the `distro` package is not installed, then `import distro` raises\n  a `ModuleNotFoundError` exception.\n\n* The distro documentation[1] lists `OSError` and `UnicodeError` as\n  exceptions that can be raised.\n\n* Older versions of distro (<= 1.6.0) may also raise\n  `subprocessCalledProcessError`[2].\n\n[1]: https://github.com/python-distro/distro/blob/v1.8.0/src/distro/distro.py#L749-L753\n[2]: https://github.com/python-distro/distro/blob/v1.6.0/distro.py#L726-L728\n\nSigned-off-by: Jeffery To <jeffery.to@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d8edd363be3184c5738438fde937fd5ebc2d4923", "commit_date": "2023-06-30T12:26:56Z", "commit_message": "libselinux: add check for calloc in check_booleans\n\nCheck the return value of calloc() to avoid null pointer reference.\n\nSigned-off-by: Huaxin Lu <luhuaxin1@huawei.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b3788b9ce901d8558d31669cf5b72a250b6f3f32", "commit_date": "2023-06-30T12:21:22Z", "commit_message": "dismod, dispol: reduce the messages in batch mode\n\nA change in v2:\n* pass `verbose' to sepol_module_package_read().\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6e077ba7267d4ae8473af7e9b10a32f5cd991e46", "commit_date": "2023-06-30T12:21:22Z", "commit_message": "dismod: print the policy version only in interactive mode\n\nInstead, a new action, 'v' for printing the policy (and/or\nmodule) version in batch mode is added.\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4c069224ff36e091e3f04ec3b6009c1e6753b2a3", "commit_date": "2023-06-30T09:54:06Z", "commit_message": "checkpolicy/dismod: misc improvements\n\n* fix minus self formatting in neverallow rules, avoiding `~ - self`\n\n* show neverallow and neverallowxperm rules\n\n* whitespace improvements in output\n  - avoid duplicate whitespaces before permission list, since\n    sepol_av_to_string() already adds a trailing one\n  - avoid duplicate whitespace after wildcard type\n  - unify indentation for xperm rules\n\n* drop unused global variables\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b87724cbddcb0019b695aca238ca0546dda4c9b4", "commit_date": "2023-06-30T09:53:44Z", "commit_message": "checkpolicy: add option to skip checking neverallow rules\n\nAdd the command line argument `-N/--disable-neverallow`, similar to\nsecilc(8), to checkpolicy(8) and checkmodule(8) to skip the check of\nneverallow rule violations.\n\nThis is mainly useful in development, e.g. to quickly add rules to a\npolicy without fulfilling all neverallow rules or build policies with\nknown violations.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "02e471f17ee7f1d009e2f9fe8232f5375fd82b26", "commit_date": "2023-06-30T08:29:06Z", "commit_message": "libsepol: add support for the new \"init\" initial SID\n\nResurrect the naming of the \"init\" initial SID, as it has been\nreintroduced in the kernel. Also add the new \"userspace_initial_context\"\npolicy capability that is used to enable the new semantics for this\ninitial SID.\n\nSigned-off-by: Ondrej Mosnacek <omosnace@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "55b75a2c7ddaabfd70febe68a550541e6384c2f6", "commit_date": "2023-06-30T08:29:06Z", "commit_message": "libsepol: stop translating deprecated intial SIDs to strings\n\nMany of the initial SIDs are no longer used by the kernel, so\ntranslating them to the legacy names doesn't bring much value. Clear the\nlegacy names from the table and let the code translate them to the\nfallback \"unknown\" names instead.\n\nNote that this only affects the generated text output when converting\npolicies from binary to text form. The text policy languages let the\npolicy define its own names for the initial SIDs based on the order in\nwhich they are declared, so the table is never used to convert from name\nto SID. Thus this is just a cosmetic change and has no functional\nimpact.\n\nSigned-off-by: Ondrej Mosnacek <omosnace@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "48306c4ef34b4e13c91fd27b4a84ce03b9f9583b", "commit_date": "2023-06-27T14:01:26Z", "commit_message": "python/sepolicy: Add/remove user even when SELinux is disabled\n\nUse \"semanage user -a/-d\" in spec file generated by \"sepolicy generate\"\neven when SELinux is disabled. The command works properly when SELinux\nis disabled and with this change the user will be present once SELinux\nis re-enabled.\nAlso, do not execute the command when the package is updated, only when\nit is first installed.\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "391cf1260049b5f9e55406d8b7a981037c40e9b2", "commit_date": "2023-06-12T17:45:19Z", "commit_message": "python/sepolicy: Fix template for confined user policy modules\n\nThe following commit\nhttps://github.com/SELinuxProject/refpolicy/commit/330b0fc3331d3b836691464734c96f3da3044490\nchanged the userdom_base_user_template, which now requires a role\ncorresponding to the user being created to be defined outside of the\ntemplate.\nSimilar change was also done to fedora-selinux/selinux-policy\nhttps://github.com/fedora-selinux/selinux-policy/commit/e1e216b25df1bdb4eb7dbb8f73f32927ad6f3d1f\n\nAlthough I believe the template should define the role (just as it\ndefines the new user), that will require extensive changes to refpolicy.\nIn the meantime the role needs to be defined separately.\n\nFixes:\n    # sepolicy generate --term_user -n newuser\n    Created the following files:\n    /root/a/test/newuser.te # Type Enforcement file\n    /root/a/test/newuser.if # Interface file\n    /root/a/test/newuser.fc # File Contexts file\n    /root/a/test/newuser_selinux.spec # Spec file\n    /root/a/test/newuser.sh # Setup Script\n\n    # ./newuser.sh\n    Building and Loading Policy\n    + make -f /usr/share/selinux/devel/Makefile newuser.pp\n    Compiling targeted newuser module\n    Creating targeted newuser.pp policy package\n    rm tmp/newuser.mod tmp/newuser.mod.fc\n    + /usr/sbin/semodule -i newuser.pp\n    Failed to resolve roleattributeset statement at /var/lib/selinux/targeted/tmp/modules/400/newuser/cil:8\n    Failed to resolve AST\n    /usr/sbin/semodule:  Failed!\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "666a7dfdc8d4524d83c9ca176d001c9e1540b118", "commit_date": "2023-06-08T19:13:21Z", "commit_message": "dispol: add --actions option for non-interactive use\n\nExample session:\n\n    $ ./dispol --help\n    Usage:\n     ./dismod [OPTIONS] binary_pol_file\n\n    Options:\n     -h, --help              print this help message\n     -a, --actions ACTIONS   run non-interactively\n\n    Actions:\n      1    display unconditional AVTAB\n      2    display conditional AVTAB (entirely)\n      3    display conditional AVTAB (only ENABLED rules)\n      4    display conditional AVTAB (only DISABLED rules)\n      5    display conditional bools\n      6    display conditional expressions\n      8    display role transitions\n      c    display policy capabilities\n      b    display booleans\n      C    display classes\n      r    display roles\n      t    display types\n      a    display type attributes\n      p    display the list of permissive types\n      u    display unknown handling setting\n      F    display filename_trans rules\n\n    $ ./dispol --actions 1 /etc/selinux/targeted/policy/policy.33  | head\n    Reading policy...\n    libsepol.policydb_index_others: security:  8 users, 15 roles, 5408 types, 358 bools\n    libsepol.policydb_index_others: security: 1 sens, 1024 cats\n    libsepol.policydb_index_others: security:  134 classes, 86750 rules, 8818 cond rules\n    binary policy file loaded\n\n    allow abrt_dump_oops_t sssd_var_lib_t : sock_file { write getattr append open };\n    type_transition authconfig_t entropyd_initrc_exec_t : process initrc_t;\n    type_transition glusterd_t syslogd_initrc_exec_t : process initrc_t;xxxx\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f8a076f1cada747ea64fa392d4b952d690c003bb", "commit_date": "2023-06-08T19:13:19Z", "commit_message": "dispol: handle EOF in user interaction\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "eeb0a75119a7766ba659e932cc337a669b367fcd", "commit_date": "2023-06-08T19:13:17Z", "commit_message": "dispol: delete an unnecessary empty line\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f78eea5a34736a638d175c11c472edc1767af6ed", "commit_date": "2023-06-08T19:13:15Z", "commit_message": "dispol: add --help option\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6360af7a98cc5d365eed1c99d8eac0f878096f64", "commit_date": "2023-06-08T19:13:04Z", "commit_message": "sepolicy: clarify manual page of sepolicy interface\n\nExpand the description to make it more clear what \"interfaces\" mean\nhere. They're different from network interfaces used by SELinux\ncommand `semanage interface`.\n\nAdd a note that the information comes from on-disk file which has been\ninstalled and it doesn't necessarily match the policy loaded to the\nkernel.\n\nSigned-off-by: Topi Miettinen <toiwoton@gmail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d596efb4ea067644ad0e9b73d8ff5e24ccaa898c", "commit_date": "2023-06-08T19:10:11Z", "commit_message": "libselinux: Add examples to man pages\n\nAlso fix some typos and remove trailing whitespaces.\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "966de0c89e687cb48e6368de09087c7f43ca04b2", "commit_date": "2023-06-08T19:10:10Z", "commit_message": "checkpolicy: Add examples to man pages\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "535dc2479b1b41bbd17b3e1576989ea533832fc7", "commit_date": "2023-06-08T19:10:08Z", "commit_message": "sandbox: Add examples to man pages\n\nWhile at it, remove trailing whitespaces.\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "0b1cb09ad3e0fbe3931df09d0cf4b6b3a26ccc0f", "commit_date": "2023-06-08T19:10:06Z", "commit_message": "python/sepolicy: Improve man pages\n\n- Add missing options\n- Add examples\n- Emphasize keywords\n- Remove trailing whitespaces\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e867c95ba40c829c6f1e967db273714fd5883ad0", "commit_date": "2023-06-08T19:10:05Z", "commit_message": "policycoreutils: Add examples to man pages\n\nWhile at it, remove trailing whitespaces.\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "df0b1929a0d818fecbf73499b0bf294a0460af57", "commit_date": "2023-06-08T19:09:34Z", "commit_message": "dismod: add --actions option for non-interactive use\n\nExample session:\n\n    $ ./dismod --help\n    Usage:\n     ./dismod [OPTIONS] binary_pol_file\n\n    Options:\n     -h, --help              print this help message\n     -a, --actions ACTIONS   run non-interactively\n\n    Actions:\n      1    display unconditional AVTAB\n      2    display conditional AVTAB\n      3    display users\n      4    display bools\n      5    display roles\n      6    display types, attributes, and aliases\n      7    display role transitions\n      8    display role allows\n      9    Display policycon\n      0    Display initial SIDs\n      a    Display avrule requirements\n      b    Display avrule declarations\n      c    Display policy capabilities\n      u    Display the unknown handling setting\n      F    Display filename_trans rules\n\n    $ ./dismod --actions 16 input.mod\n    Reading policy...\n    libsepol.policydb_index_others: security:  0 users, 1 roles, 2 types, 0 bools\n    libsepol.policydb_index_others: security: 0 sens, 0 cats\n    libsepol.policydb_index_others: security:  1 classes, 0 rules, 0 cond rules\n    libsepol.policydb_index_others: security:  0 users, 1 roles, 2 types, 0 bools\n    libsepol.policydb_index_others: security: 0 sens, 0 cats\n    libsepol.policydb_index_others: security:  1 classes, 0 rules, 0 cond rules\n    Binary policy module file loaded.\n    Module name: input\n    Module version: 1.0.0\n    Policy version: 21\n\n    unconditional avtab:\n    --- begin avrule block ---\n    decl 1:\n      allow [httpd_t] [http_port_t] : [tcp_socket] { name_bind };\n\n     [http_port_t] [2]: type flags:0\n     [httpd_t] [1]: type flags:0\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d1a9cddfd2b0db4d9db491c5b4cf6edaf780a8b1", "commit_date": "2023-06-08T19:09:33Z", "commit_message": "dismod: handle EOF in user interaction\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5b1a2f1d1024a94c9a388f4dc3bdc49e210fccb7", "commit_date": "2023-06-08T19:09:31Z", "commit_message": "dismod: delete an unnecessary empty line\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5045368da367f0909f292890a1de2a7dca42802c", "commit_date": "2023-06-08T19:09:29Z", "commit_message": "dismod: add --help option\n\nSigned-off-by: Masatake YAMATO <yamato@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "30fe0f19629ba50c498dbd76491b5afa74ecbbab", "commit_date": "2023-06-05T19:20:31Z", "commit_message": "libsepol: replace log_err() by ERR()\n\nUse the libsepol internal wrapper ERR() with a NULL handler to emit\nerror messages.  ERR() will besides adding a prefix of \"libsepol\" also\nwrite to stderr.  One benefit is the option to suppress the messages via\nsepol_debug(), although marked deprecated, e.g. in fuzzers.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "5c35a7bed0fd20897178c154e6481e8931efc71a", "commit_date": "2023-06-05T19:20:30Z", "commit_message": "libsepol: replace sepol_log_err() by ERR()\n\nUse the libsepol internal wrapper ERR() with a NULL handler to emit\nerror messages.  ERR() will besides adding a prefix of \"libsepol\" also\nwrite to stderr.  One benefit is the option to suppress the messages via\nsepol_debug(), although marked deprecated, e.g. in fuzzers.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b041ecc6a5a6590f5effbe1b019b2604e70228e7", "commit_date": "2023-06-05T19:20:28Z", "commit_message": "libsepol: drop duplicate newline in sepol_log_err() calls\n\nsepol_log_err() will already append a newline unconditionally.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "808a43ab8821c6f9e6d4fbbc4040fe021b944f5a", "commit_date": "2023-06-05T19:20:26Z", "commit_message": "libsepol: drop message for uncommon error cases\n\nMatch surrounding code and the message were quite generic too.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "cae65d9a10623bb9063a2e3ca5357bb1602d55af", "commit_date": "2023-06-05T19:19:02Z", "commit_message": "libsepol: expand: skip invalid cat\n\nBail out on expanding levels with invalid low category.\n\nUBSAN report:\n\n    expand.c:952:21: runtime error: unsigned integer overflow: 0 - 1 cannot be represented in type 'uint32_t' (aka 'unsigned int')\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4ba8f7c38f6f3f33d6e20a411b71797521390e60", "commit_date": "2023-06-05T19:19:00Z", "commit_message": "libsepol: validate: reject XEN policy with xperm rules\n\nXEN policies with extended permissions are not supported, e.g. writing\nthem will fail (see write.c:avrule_write()).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ac015a3996e894754350ea8ae97e66644899a2c4", "commit_date": "2023-06-05T19:18:58Z", "commit_message": "libsepol: validate: check low category is not bigger than high\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4cf37608b563327ce433ce392931a9eb8bda9524", "commit_date": "2023-06-05T19:18:56Z", "commit_message": "libsepol: validate old style range trans classes\n\nFor old style range transition rules the class defaults to process.\nHowever the policy might not declare the process class leading to\nsetting a wrong bit later on via:\n\n    if (ebitmap_set_bit(&rtr->tclasses, rt->target_class - 1, 1))\n\nUBSAN report:\n\n    policydb.c:3684:56: runtime error: unsigned integer overflow: 0 - 1 cannot be represented in type 'uint32_t' (aka 'unsigned int')\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "45a4fc77e171ef3d34df755ddce5603ac0a1961f", "commit_date": "2023-06-05T19:18:53Z", "commit_message": "libsepol: validate some object contexts\n\nEnsure various object context entries have a name, since they are\nduplicated via strdup(3), and the order for ports and memory regions is\nvalid.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "f5d664ebeb09d837a0551f6df0c8f038937a1b67", "commit_date": "2023-06-05T19:17:03Z", "commit_message": "libsepol: dump non-mls validatetrans rules as such\n\nThe functions constraint_expr_to_str() prepare a string representation\nfor validatetrans and mlsvalidatetrans rules.  To decide what keyword to\nuse the type of expression is consulted.  Currently the extra target\ntype (CEXPR_XTARGET) is considered to be an MLS statement while its not,\ne.g.:\n\n    validatetrans CLASS1 t3 == ATTR1;\n\nActually check for MLS expression types only.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "00728e12d4a7c67a2cf578e0c2905287c579e75b", "commit_date": "2023-06-05T19:17:00Z", "commit_message": "checkpolicy: only set declared permission bits for wildcards\n\nWhen setting permission bits from a wildcard or complement only set the\nbits for permissions actually declared for the associated class.  This\nhelps optimizing the policy later, since only rules are dropped with a\ncomplete empty permission bitset.  Example policy:\n\n    class CLASS1\n    sid kernel\n    class CLASS1 { PERM1 }\n    type TYPE1;\n    bool BOOL1 true;\n    allow TYPE1 self : CLASS1 { PERM1 };\n    role ROLE1;\n    role ROLE1 types { TYPE1 };\n    if ! BOOL1 { allow TYPE1 self: CLASS1 *; }\n    user USER1 roles ROLE1;\n    sid kernel USER1:ROLE1:TYPE1\n\nAlso emit a warning if a rule will have an empty permission bitset due\nto an exhausting complement.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c646f3904db80a5dea109764b69b252f8df4bb86", "commit_date": "2023-06-05T19:16:59Z", "commit_message": "checkpolicy: reject condition with bool and tunable in expression\n\nIf tunables are not preserved (the mode unconditionally used by\ncheckpolicy) an expression must not consist of booleans and tunables,\nsince such expressions are not supported during expansion (see expand.c:\ndiscard_tunables()).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2d5f97b870cb09f868ddd58973276e4560413031", "commit_date": "2023-06-05T19:16:57Z", "commit_message": "checkpolicy: drop unused token CLONE\n\nThe token CLONE is never used in the grammar; drop it.\n\nAs side effect `clone` and `CLONE` become available as identifier names.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "2c7b71db56895626cf2395da5f8c1a4090c29b6a", "commit_date": "2023-06-05T19:15:23Z", "commit_message": "libselinux: performance optimization for duplicate detection\n\nWhen semodule -i some.pp to install a module package, duplicate items are\ndetected for the module. The detection function is nodups_specs in\nlibselinux/src/label_file.c. The algorithm complexity of implementing\nthis function is O(M*(N^2)). M is a symbol related to the length of a string.\nN indicates the number of data->nspec. In scenarios where N is very large, the\nefficiency is very low.\n\nTo solve this problem, I propose to use the hash table to detect duplicates.\nThe algorithm complexity of new implementing is O(M*N). The execution\nefficiency will be greatly improved.\n\nComparison between the execution time of the nodups_specs function.\n\nOld double-layer loop implementation O(M*(N^2)):\n\nsemodule -i myapp1.pp\nnodups_specs data->nspec: 5002\nnodups_specs start: 11785.242s\nnodups_specs end:   11785.588s\nnodups_specs consumes:  0.346s\n\nsemodule -i myapp2.pp\nnodups_specs data->nspec: 10002\nnodups_specs start: 11804.280s\nnodups_specs end:   11806.546s\nnodups_specs consumes:  2.266s\n\nsemodule -i myapp3.pp\nnodups_specs data->nspec: 20002\nnodups_specs start: 11819.106s\nnodups_specs end:   11830.892s\nnodups_specs consumes: 11.786s\n\nNew hash table implementation O(M*N):\n\nsemodule -i myapp1.pp\nnodups_specs data->nspec: 5002\nnodups_specs start: 11785.588s\nnodups_specs end:   11785.590s\nnodups_specs consumes:  0.002s\n\nsemodule -i myapp2.pp\nnodups_specs data->nspec: 10002\nnodups_specs start: 11806.546s\nnodups_specs end:   11806.552s\nnodups_specs consumes:  0.006s\n\nsemodule -i myapp3.pp\nnodups_specs data->nspec: 20002\nnodups_specs start: 11830.892s\nnodups_specs end:   11830.905s\nnodups_specs consumes:  0.013s\n\nSigned-off-by: wanghuizhao <wanghuizhao1@huawei.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a420508a98cc886a21449b56b9c4b00cd016beb", "commit_date": "2023-06-05T19:15:21Z", "commit_message": "libselinux: adapting hashtab to libselinux\n\nTo adapt to the scenarios of libselinux, this patch does three things:\n\n1. Add a new function hashtab_destroy_key. This function is used to\n   reclaim memory using the customized key destruction method.\n\n2. Changed the macro definition to _SELINUX_HASHTAB_H_.\n\n3. Add a function declaration to the header file.\n\nSigned-off-by: wanghuizhao <wanghuizhao1@huawei.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d95bc8b755398fa16c878a2c23cc9e809955eeee", "commit_date": "2023-06-05T19:15:19Z", "commit_message": "libselinux: migrating hashtab from policycoreutils\n\nTo use hashtab in libselinux, migrate the existing hashtab template\nfrom policycoreutils/newrole to libselinux.\n\nSigned-off-by: wanghuizhao <wanghuizhao1@huawei.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "820f019ed9e3b9a9e3e62ae378f99282990976a2", "commit_date": "2023-05-11T07:22:41Z", "commit_message": "python/audit2allow: Remove unused \"debug\" option\n\nThe option is not referenced anywhere in the code and I couldn't figure\nout its purpose from the description.\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97ec1f70eb1047d1b0a6b6d3e6b0eb1be3206343", "commit_date": "2023-05-11T07:22:40Z", "commit_message": "python/semanage: Improve man pages\n\n- Add missing options\n- Add more examples\n- Note special cases\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e563837a90215fedb54f0e4beca653fd6e864477", "commit_date": "2023-05-11T07:22:40Z", "commit_message": "python/audit2allow: Add missing options to man page\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18232cd4dbccfff87126ed533710fda9bd90e30a", "commit_date": "2023-05-11T07:22:39Z", "commit_message": "python/chcat: Improve man pages\n\n- Explain applying range/list of categories\n- \"-d\" removes all categories of given file/user\n- Add examples\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9b3cbb654ca1e834d47f52af9f170b9f38c857a", "commit_date": "2023-05-03T13:15:41Z", "commit_message": "libselinux: set CFLAGS for pip installation\n\nExplicitly set CFLAGS for the pip install command, similar to calling\nsetup.py, to ignore known compiler warnings treated as errors, e.g.:\n\n    selinuxswig_python_wrap.c:3593:19: error: 'sidget' is deprecated [-Werror,-Wdeprecated-declarations]\n                result = (int)sidget(arg1);\n                              ^\n    selinuxswig_python_wrap.c:15024:1: error: no previous prototype for function 'PyInit__selinux' [-Werror,-Wmissing-prototypes]\n            SWIG_init(void) {\n            ^\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7b32cf40b94d605ad7966f5f15f78ef4f0c82a3", "commit_date": "2023-05-03T13:15:37Z", "commit_message": "checkpolicy/dispol: add output functions\n\nAdd the ability to show booleans, classes, roles, types and type\nattributes of policies.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3be312e0cf2c45adbe694b136f848fb62cba877e", "commit_date": "2023-05-03T13:15:34Z", "commit_message": "libsemanage: fix memory leak in semanage_user_roles\n\nThe output parameter `role_arr` of semanage_user_get_roles() is an array\nof non-owned role names.  Since the array is never used again, as its\ncontents have been copied into the return value `roles`, free it.\n\nExample leak report from useradd(8):\n\n    Direct leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x5597624284a8 in __interceptor_calloc (./shadow/src/useradd+0xee4a8)\n    #1 0x7f53aefcbbf9 in sepol_user_get_roles src/user_record.c:270:21", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5dffcd9a17b949569b51708ccb4378c8b62f8d5", "commit_date": "2023-05-03T13:15:26Z", "commit_message": "libsemanage/tests: rename bool identifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae5a5d0ae4e9b0246c35fbd1357a4d34705da759", "commit_date": "2023-05-03T13:15:24Z", "commit_message": "libsepol: rename bool identifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d213d80f56b4058456410f379df0fbbdd3220315", "commit_date": "2023-05-03T13:15:22Z", "commit_message": "checkpolicy: rename bool identifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "893b50c6ce661f3ee339145e76a0bbfa199671c3", "commit_date": "2023-05-03T13:15:20Z", "commit_message": "libsepol/tests: rename bool indentifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "513fc1570c16924080740b23fa34343ef64a90c0", "commit_date": "2023-05-03T13:15:18Z", "commit_message": "checkpolicy: update cond_expr_t struct member name\n\nThe previous commit changed the member `bool` to `boolean` of the\nlibsepol type `cond_expr_t` for C23 compatibility.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61f213850047c23b0af7c7cafa9245da48120279", "commit_date": "2023-05-03T13:15:16Z", "commit_message": "libsepol: rename struct member\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSince the type `cond_expr_t` is part of the public API it will break\nclient applications.  A quick search of the code in Debian shows only\nusages in checkpolicy and setools.\n\nDefine a new macro signaling the renaming to simplify support of client\napplications for new and older versions of libsepol.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e9072e7d45f4559887d11b518099135cbe564163", "commit_date": "2023-03-30T19:08:58Z", "commit_message": "libsepol/tests: add tests for minus self neverallow rules\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a43831f8886575711fe824fba8a1483f1c3d631", "commit_date": "2023-03-30T19:08:49Z", "commit_message": "libsepol/tests: add tests for not self neverallow rules\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f7b0ee6c4ab067a2f7f8522647ec8e434c67c45", "commit_date": "2023-03-30T19:08:42Z", "commit_message": "checkpolicy: add not-self neverallow support\n\nAdd support for using negated or complemented self in the target type of\nneverallow rules.\n\nSome Refpolicy examples:\n\n    neverallow * ~self:{ capability cap_userns capability2 cap2_userns } *;\n    neverallow domain { domain -self -dockerc_t }:dir create;\n    # no violations\n\n    neverallow domain { domain -dockerc_t }:file ~{ append read_file_perms write };\n\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:file { create setattr relabelfrom relabelto unlink link rename };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow spc_t spc_t:file { create };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow container_t container_t:file { create };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow chromium_t chromium_t:file { create };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow spc_user_t spc_user_t:file { create };\n    libsepol.report_failure: neverallow on line 582 of policy/modules/kernel/kernel.te (or line 31355 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:dir { create };\n\n    neverallow domain { domain -self -dockerc_t }:file ~{ append read_file_perms write };\n\n    libsepol.report_failure: neverallow on line 583 of policy/modules/kernel/kernel.te (or line 31356 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:file { create setattr relabelfrom relabelto unlink link rename };\n    libsepol.report_failure: neverallow on line 582 of policy/modules/kernel/kernel.te (or line 31355 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:dir { create };\n\nUsing negated self in a complement, `~{ domain -self }`, is not\nsupported.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec78788c294490be9d72c89a0520789631a9dfda", "commit_date": "2023-03-30T19:08:37Z", "commit_message": "libsepol: Add not self support for neverallow rules\n\nAdd not self support for neverallow rules.\n\nExample 1\n  allow TYPE1 TYPE1 : CLASS1 PERM1; # Rule 1\n  allow TYPE1 TYPE2 : CLASS1 PERM1; # Rule 2\n  neverallow TYPE1 ~self : CLASS1 PERM1;\n\nRule 1 is not a violation of the neverallow. Rule 2 is.\n\nExample 2\n  allow TYPE1 TYPE1 : CLASS2 PERM2; # Rule 1\n  allow TYPE1 TYPE2 : CLASS2 PERM2; # Rule 2\n  allow TYPE1 TYPE3 : CLASS2 PERM2; # Rule 3\n  neverallow ATTR1 { ATTR2 -self } : CLASS2 PERM2;\n\nAssuming TYPE1 has attribute ATTR1 and TYPE1 and TYPE2 have\nattribute ATTR2, then rule 1 and 3 are not violations of the\nneverallow while rule 2 is. Rule 3 is not a violation because\nTYPE3 does not have attribute ATTR2.\n\nAdopted improvements from James Carter <jwcart2@gmail.com>\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "86b49aa7a319b465a3383b89743453708c45b96c", "commit_date": "2023-03-20T13:44:05Z", "commit_message": "scripts/ci: install rdma-core-devel for selinux-testsuite\n\nIt is required to build it as of commit 4b4922e115e2\n(\"tests/infiniband*: simplify test activation\").\n\nAcked-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nSigned-off-by: Ondrej Mosnacek <omosnace@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a171ba62bbba891a8dce2239327b1d905f695b82", "commit_date": "2023-03-20T09:44:08Z", "commit_message": "libsemanage: include more parameters in the module checksum\n\nThe check_ext_changes option currently assumes that as long as the\nmodule content is unchanged, it is safe to assume that the policy.linked\nfile doesn't need to be rebuilt. However, there are some additional\nparameters that can affect the content of this policy file, namely:\n* the disable_dontaudit and preserve_tunables flags\n* the target_platform and policyvers configuration values\n\nInclude these in the checksum so that the option works correctly when\nonly some of these input values are changed versus the current state.\n\nFixes: 286a679fadc4 (\"libsemanage: optionally rebuild policy when modules are changed externally\")\nAcked-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nSigned-off-by: Ondrej Mosnacek <omosnace@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}], "master": [{"commit_oid": "820f019ed9e3b9a9e3e62ae378f99282990976a2", "commit_date": "2023-05-11T07:22:41Z", "commit_message": "python/audit2allow: Remove unused \"debug\" option\n\nThe option is not referenced anywhere in the code and I couldn't figure\nout its purpose from the description.\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "97ec1f70eb1047d1b0a6b6d3e6b0eb1be3206343", "commit_date": "2023-05-11T07:22:40Z", "commit_message": "python/semanage: Improve man pages\n\n- Add missing options\n- Add more examples\n- Note special cases\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e563837a90215fedb54f0e4beca653fd6e864477", "commit_date": "2023-05-11T07:22:40Z", "commit_message": "python/audit2allow: Add missing options to man page\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "18232cd4dbccfff87126ed533710fda9bd90e30a", "commit_date": "2023-05-11T07:22:39Z", "commit_message": "python/chcat: Improve man pages\n\n- Explain applying range/list of categories\n- \"-d\" removes all categories of given file/user\n- Add examples\n\nSigned-off-by: Vit Mojzis <vmojzis@redhat.com>\nAcked-by: James Carter <jwcart2@gmail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "c9b3cbb654ca1e834d47f52af9f170b9f38c857a", "commit_date": "2023-05-03T13:15:41Z", "commit_message": "libselinux: set CFLAGS for pip installation\n\nExplicitly set CFLAGS for the pip install command, similar to calling\nsetup.py, to ignore known compiler warnings treated as errors, e.g.:\n\n    selinuxswig_python_wrap.c:3593:19: error: 'sidget' is deprecated [-Werror,-Wdeprecated-declarations]\n                result = (int)sidget(arg1);\n                              ^\n    selinuxswig_python_wrap.c:15024:1: error: no previous prototype for function 'PyInit__selinux' [-Werror,-Wmissing-prototypes]\n            SWIG_init(void) {\n            ^\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>\nAcked-by: Petr Lautrbach <lautrbach@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b7b32cf40b94d605ad7966f5f15f78ef4f0c82a3", "commit_date": "2023-05-03T13:15:37Z", "commit_message": "checkpolicy/dispol: add output functions\n\nAdd the ability to show booleans, classes, roles, types and type\nattributes of policies.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "3be312e0cf2c45adbe694b136f848fb62cba877e", "commit_date": "2023-05-03T13:15:34Z", "commit_message": "libsemanage: fix memory leak in semanage_user_roles\n\nThe output parameter `role_arr` of semanage_user_get_roles() is an array\nof non-owned role names.  Since the array is never used again, as its\ncontents have been copied into the return value `roles`, free it.\n\nExample leak report from useradd(8):\n\n    Direct leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x5597624284a8 in __interceptor_calloc (./shadow/src/useradd+0xee4a8)\n    #1 0x7f53aefcbbf9 in sepol_user_get_roles src/user_record.c:270:21", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "b5dffcd9a17b949569b51708ccb4378c8b62f8d5", "commit_date": "2023-05-03T13:15:26Z", "commit_message": "libsemanage/tests: rename bool identifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ae5a5d0ae4e9b0246c35fbd1357a4d34705da759", "commit_date": "2023-05-03T13:15:24Z", "commit_message": "libsepol: rename bool identifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "d213d80f56b4058456410f379df0fbbdd3220315", "commit_date": "2023-05-03T13:15:22Z", "commit_message": "checkpolicy: rename bool identifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "893b50c6ce661f3ee339145e76a0bbfa199671c3", "commit_date": "2023-05-03T13:15:20Z", "commit_message": "libsepol/tests: rename bool indentifiers\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "513fc1570c16924080740b23fa34343ef64a90c0", "commit_date": "2023-05-03T13:15:18Z", "commit_message": "checkpolicy: update cond_expr_t struct member name\n\nThe previous commit changed the member `bool` to `boolean` of the\nlibsepol type `cond_expr_t` for C23 compatibility.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "61f213850047c23b0af7c7cafa9245da48120279", "commit_date": "2023-05-03T13:15:16Z", "commit_message": "libsepol: rename struct member\n\nAvoid using the identifier `bool` to improve support with future C\nstandards.  C23 is about to make `bool` a predefined macro (see N2654).\n\nSince the type `cond_expr_t` is part of the public API it will break\nclient applications.  A quick search of the code in Debian shows only\nusages in checkpolicy and setools.\n\nDefine a new macro signaling the renaming to simplify support of client\napplications for new and older versions of libsepol.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "e9072e7d45f4559887d11b518099135cbe564163", "commit_date": "2023-03-30T19:08:58Z", "commit_message": "libsepol/tests: add tests for minus self neverallow rules\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "4a43831f8886575711fe824fba8a1483f1c3d631", "commit_date": "2023-03-30T19:08:49Z", "commit_message": "libsepol/tests: add tests for not self neverallow rules\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "6f7b0ee6c4ab067a2f7f8522647ec8e434c67c45", "commit_date": "2023-03-30T19:08:42Z", "commit_message": "checkpolicy: add not-self neverallow support\n\nAdd support for using negated or complemented self in the target type of\nneverallow rules.\n\nSome Refpolicy examples:\n\n    neverallow * ~self:{ capability cap_userns capability2 cap2_userns } *;\n    neverallow domain { domain -self -dockerc_t }:dir create;\n    # no violations\n\n    neverallow domain { domain -dockerc_t }:file ~{ append read_file_perms write };\n\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:file { create setattr relabelfrom relabelto unlink link rename };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow spc_t spc_t:file { create };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow container_t container_t:file { create };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow chromium_t chromium_t:file { create };\n    libsepol.report_failure: neverallow on line 584 of policy/modules/kernel/kernel.te (or line 31357 of policy.conf) violated by allow spc_user_t spc_user_t:file { create };\n    libsepol.report_failure: neverallow on line 582 of policy/modules/kernel/kernel.te (or line 31355 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:dir { create };\n\n    neverallow domain { domain -self -dockerc_t }:file ~{ append read_file_perms write };\n\n    libsepol.report_failure: neverallow on line 583 of policy/modules/kernel/kernel.te (or line 31356 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:file { create setattr relabelfrom relabelto unlink link rename };\n    libsepol.report_failure: neverallow on line 582 of policy/modules/kernel/kernel.te (or line 31355 of policy.conf) violated by allow sysadm_t httpd_bugzilla_script_t:dir { create };\n\nUsing negated self in a complement, `~{ domain -self }`, is not\nsupported.\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "ec78788c294490be9d72c89a0520789631a9dfda", "commit_date": "2023-03-30T19:08:37Z", "commit_message": "libsepol: Add not self support for neverallow rules\n\nAdd not self support for neverallow rules.\n\nExample 1\n  allow TYPE1 TYPE1 : CLASS1 PERM1; # Rule 1\n  allow TYPE1 TYPE2 : CLASS1 PERM1; # Rule 2\n  neverallow TYPE1 ~self : CLASS1 PERM1;\n\nRule 1 is not a violation of the neverallow. Rule 2 is.\n\nExample 2\n  allow TYPE1 TYPE1 : CLASS2 PERM2; # Rule 1\n  allow TYPE1 TYPE2 : CLASS2 PERM2; # Rule 2\n  allow TYPE1 TYPE3 : CLASS2 PERM2; # Rule 3\n  neverallow ATTR1 { ATTR2 -self } : CLASS2 PERM2;\n\nAssuming TYPE1 has attribute ATTR1 and TYPE1 and TYPE2 have\nattribute ATTR2, then rule 1 and 3 are not violations of the\nneverallow while rule 2 is. Rule 3 is not a violation because\nTYPE3 does not have attribute ATTR2.\n\nAdopted improvements from James Carter <jwcart2@gmail.com>\n\nSigned-off-by: Christian G\u00f6ttsche <cgzones@googlemail.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "86b49aa7a319b465a3383b89743453708c45b96c", "commit_date": "2023-03-20T13:44:05Z", "commit_message": "scripts/ci: install rdma-core-devel for selinux-testsuite\n\nIt is required to build it as of commit 4b4922e115e2\n(\"tests/infiniband*: simplify test activation\").\n\nAcked-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nSigned-off-by: Ondrej Mosnacek <omosnace@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}, {"commit_oid": "a171ba62bbba891a8dce2239327b1d905f695b82", "commit_date": "2023-03-20T09:44:08Z", "commit_message": "libsemanage: include more parameters in the module checksum\n\nThe check_ext_changes option currently assumes that as long as the\nmodule content is unchanged, it is safe to assume that the policy.linked\nfile doesn't need to be rebuilt. However, there are some additional\nparameters that can affect the content of this policy file, namely:\n* the disable_dontaudit and preserve_tunables flags\n* the target_platform and policyvers configuration values\n\nInclude these in the checksum so that the option works correctly when\nonly some of these input values are changed versus the current state.\n\nFixes: 286a679fadc4 (\"libsemanage: optionally rebuild policy when modules are changed externally\")\nAcked-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nSigned-off-by: Ondrej Mosnacek <omosnace@redhat.com>", "commit_author": "", "message_analysis": {"glm6b_2": [], "manual": [], "noob_engine": []}}]}